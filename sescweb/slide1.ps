%!PS-Adobe-2.0
%%Creator: dvips(k) 5.86e Copyright 2001 Radical Eye Software
%%Title: main.dvi
%%Pages: 23
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%DocumentFonts: Helvetica-Bold Times-Roman Helvetica Courier CMSY10
%%+ CMR12
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -o main.ps main.dvi
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 2002.03.26:0353
%%BeginProcSet: texc.pro
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro
%!
% PostScript prologue for pstricks.tex.
% Version 97 patch 3, 98/06/01
% For distribution, see pstricks.tex.
%
/tx@Dict 200 dict def tx@Dict begin
/ADict 25 dict def
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Atan { /atan load stopped { pop pop 0 } if } def
/Div { dup 0 eq { pop } { div } ifelse } def
/NET { neg exch neg exch T } def
/Pyth { dup mul exch dup mul add sqrt } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def }
def
/PathLength { flattenpath /z 0 def { /y1 ED /x1 ED /y2 y1 def /x2 x1 def
} { /y ED /x ED PathLength@ } {} { /y y2 def /x x2 def PathLength@ }
/pathforall load stopped { pop pop pop pop } if z } def
/STP { .996264 dup scale } def
/STV { SDict begin normalscale end STP  } def
/DashLine { dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def
PathLength } ifelse /b ED /x ED /y ED /z y x add def b a .5 sub 2 mul y
mul sub z Div round z mul a .5 sub 2 mul y mul add b exch Div dup y mul
/y ED x mul /x ED x 0 gt y 0 gt and { [ y x ] 1 a sub y mul } { [ 1 0 ]
0 } ifelse setdash stroke } def
/DotLine { /b PathLength def /a ED /z ED /y CLW def /z y z add def a 0 gt
{ /b b a div def } { a 0 eq { /b b y sub def } { a -3 eq { /b b y add
def } if } ifelse } ifelse [ 0 b b z Div round Div dup 0 le { pop 1 } if
] a 0 gt { 0 } { y 2 div a -2 gt { neg } if } ifelse setdash 1
setlinecap stroke } def
/LineFill { gsave abs CLW add /a ED a 0 dtransform round exch round exch
2 copy idtransform exch Atan rotate idtransform pop /a ED .25 .25
% DG/SR modification begin - Dec. 12, 1997 - Patch 2
%itransform translate pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
itransform pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
% DG/SR modification end
Div cvi /x1 ED /y2 y2 y1 sub def clip newpath 2 setlinecap systemdict
/setstrokeadjust known { true setstrokeadjust } if x2 x1 sub 1 add { x1
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore }
% def
a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore
pop pop } def
% DG/SR modification end
/BeginArrow { ADict begin /@mtrx CM def gsave 2 copy T 2 index sub neg
exch 3 index sub exch Atan rotate newpath } def
/EndArrow { @mtrx setmatrix CP grestore end } def
/Arrow { CLW mul add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1
scale } if w neg h moveto 0 0 L w h L w neg a neg rlineto gsave fill
grestore } def
/Tbar { CLW mul add /z ED z -2 div CLW 2 div moveto z 0 rlineto stroke 0
CLW moveto } def
/Bracket { CLW mul add dup CLW sub 2 div /x ED mul CLW add /y ED /z CLW 2
div def x neg y moveto x neg CLW 2 div L x CLW 2 div L x y L stroke 0
CLW moveto } def
/RoundBracket { CLW mul add dup 2 div /x ED mul /y ED /mtrx CM def 0 CLW
2 div T x y mul 0 ne { x y scale } if 1 1 moveto .85 .5 .35 0 0 0
curveto -.35 0 -.85 .5 -1 1 curveto mtrx setmatrix stroke 0 CLW moveto }
def
/SD { 0 360 arc fill } def
/EndDot { { /z DS def } { /z 0 def } ifelse /b ED 0 z DS SD b { 0 z DS
CLW sub SD } if 0 DS z add CLW 4 div sub moveto } def
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
/closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
load } if ] cvx newpath 3 1 roll T exec } def
/NArray { aload length 2 div dup dup cvi eq not { exch pop } if /n exch
cvi def } def
/NArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop } if
f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/Line { NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub
def n { Lineto } repeat CP 4 2 roll ArrowB L pop pop } if } def
/Arcto { /a [ 6 -2 roll ] cvx def a r /arcto load stopped { 5 } { 4 }
ifelse { pop } repeat a } def
/CheckClosed { dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
and { pop pop /n n 1 sub def } if } def
/Polygon { NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop }
repeat } { n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1
ED /x1 ED x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1
moveto /n n 2 sub def n { Lineto } repeat x1 y1 x0 y0 6 4 roll Lineto
Lineto pop pop closepath } ifelse } def
/Diamond { /mtrx CM def T rotate /h ED /w ED dup 0 eq { pop } { CLW mul
neg /d ED /a w h Atan def /h d a sin Div h add def /w d a cos Div w add
def } ifelse mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2
div /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
setmatrix } def
% DG modification begin - Jan. 15, 1997
%/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup 0 eq {
%pop } { CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
%div dup cos exch sin Div mul sub def } ifelse mark 0 d w neg d 0 h w d 0
%d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
%setmatrix } def
/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup
CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
div dup cos exch sin Div mul sub def mark 0 d w neg d 0 h w d 0
d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
setmatrix pop } def
% DG/SR modification end
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CC { /l0 l1 def /x1 x dx sub def /y1 y dy sub def /dx0 dx1 def /dy0 dy1
def CCA /dx dx0 l1 c exp mul dx1 l0 c exp mul add def /dy dy0 l1 c exp
mul dy1 l0 c exp mul add def /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos
abs b exp a mul dx dy Pyth Div 2 div def /x2 x l0 dx mul m mul sub def
/y2 y l0 dy mul m mul sub def /dx l1 dx mul m mul neg def /dy l1 dy mul
m mul neg def } def
/IC { /c c 1 add def c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if }
ifelse /a a 2 mul 3 div 45 cos b exp div def CCA /dx 0 def /dy 0 def }
def
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
/OpenCurve { NArray n 3 lt { n { pop pop } repeat } { BOC /n n 3 sub def
n { NC } repeat EOC } ifelse } def
/AltCurve { { false NArray n 2 mul 2 roll [ n 2 mul 3 sub 1 roll ] aload
/Points ED n 2 mul -2 roll } { false NArray } ifelse n 4 lt { n { pop
pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse } def
/ClosedCurve { NArray n 3 lt { n { pop pop } repeat } { n 3 gt {
CheckClosed } if 6 copy n 2 mul 6 add 6 roll IC CC x y moveto n { NC }
repeat closepath pop pop } ifelse } def
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore }
def
/FontDot { DS 2 mul dup matrix scale matrix concatmatrix exch matrix
rotate matrix concatmatrix exch findfont exch makefont setfont } def
/Rect { x1 y1 y2 add 2 div moveto x1 y2 lineto x2 y2 lineto x2 y1 lineto
x1 y1 lineto closepath } def
/OvalFrame { x1 x2 eq y1 y2 eq or { pop pop x1 y1 moveto x2 y2 L } { y1
y2 sub abs x1 x2 sub abs 2 copy gt { exch pop } { pop } ifelse 2 div
exch { dup 3 1 roll mul exch } if 2 copy lt { pop } { exch pop } ifelse
/b ED x1 y1 y2 add 2 div moveto x1 y2 x2 y2 b arcto x2 y2 x2 y1 b arcto
x2 y1 x1 y1 b arcto x1 y1 x1 y2 b arcto 16 { pop } repeat closepath }
ifelse } def
/Frame { CLW mul /a ED 3 -1 roll 2 copy gt { exch } if a sub /y2 ED a add
/y1 ED 2 copy gt { exch } if a sub /x2 ED a add /x1 ED 1 index 0 eq {
pop pop Rect } { OvalFrame } ifelse } def
/BezierNArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop
} if n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat f { ]
aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/OpenBezier { BezierNArray n 1 eq { pop pop } { ArrowA n 4 sub 3 idiv { 6
2 roll 4 2 roll curveto } repeat 6 2 roll 4 2 roll ArrowB curveto }
ifelse } def
/ClosedBezier { BezierNArray n 1 eq { pop pop } { moveto n 1 sub 3 idiv {
6 2 roll 4 2 roll curveto } repeat closepath } ifelse } def
/BezierShowPoints { gsave Points aload length 2 div cvi /n ED moveto n 1
sub { lineto } repeat CLW 2 div SLW [ 4 4 ] 0 setdash stroke grestore }
def
/Parab { /y0 exch def /x0 exch def /y1 exch def /x1 exch def /dx x0 x1
sub 3 div def /dy y0 y1 sub 3 div def x0 dx sub y0 dy add x1 y1 ArrowA
x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB curveto /Points [ x1 y1 x0
y0 x0 2 mul x1 sub y1 ] def } def
/Grid { newpath /a 4 string def /b ED /c ED /n ED cvi dup 1 lt { pop 1 }
if /s ED s div dup 0 eq { pop 1 } if /dy ED s div dup 0 eq { pop 1 } if
/dx ED dy div round dy mul /y0 ED dx div round dx mul /x0 ED dy div
round cvi /y2 ED dx div round cvi /x2 ED dy div round cvi /y1 ED dx div
round cvi /x1 ED /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def /w x2 x1 sub
0 gt { 1 } { -1 } ifelse def b 0 gt { /z1 b 4 div CLW 2 div add def
/Helvetica findfont b scalefont setfont /b b .95 mul CLW 2 div add def }
if systemdict /setstrokeadjust known { true setstrokeadjust /t { } def }
{ /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
exch itransform } bind def } ifelse gsave n 0 gt { 1 setlinecap [ 0 dy n
div ] dy n div 2 div setdash } { 2 setlinecap } ifelse /i x1 def /f y1
dy mul n 0 gt { dy n div 2 div h mul sub } if def /g y2 dy mul n 0 gt {
dy n div 2 div h mul add } if def x2 x1 sub w mul 1 add dup 1000 gt {
pop 1000 } if { i dx mul dup y0 moveto b 0 gt { gsave c i a cvs dup
stringwidth pop /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse h 0 gt {b neg}
{z1} ifelse rmoveto show grestore } if dup t f moveto g t L stroke /i i
w add def } repeat grestore gsave n 0 gt
% DG/SR modification begin - Nov. 7, 1997 - Patch 1
%{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
{ 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
% DG/SR modification end
{ 2 setlinecap } ifelse /i y1 def /f x1 dx mul
n 0 gt { dx n div 2 div w mul sub } if def /g x2 dx mul n 0 gt { dx n
div 2 div w mul add } if def y2 y1 sub h mul 1 add dup 1000 gt { pop
1000 } if { newpath i dy mul dup x0 exch moveto b 0 gt { gsave c i a cvs
dup stringwidth pop /z2 ED w 0 gt {z1 z2 add neg} {z1} ifelse h 0 gt
{z1} {b neg} ifelse rmoveto show grestore } if dup f exch t moveto g
exch t L stroke /i i h add def } repeat grestore } def
/ArcArrow { /d ED /b ED /a ED gsave newpath 0 -1000 moveto clip newpath 0
1 0 0 b grestore c mul /e ED pop pop pop r a e d PtoC y add exch x add
exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
mul neg d } def
/Ellipse { /mtrx CM def T scale 0 0 1 5 3 roll arc mtrx setmatrix } def
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
/RotBegin { tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 }
def } if /TMatrix [ TMatrix CM ] cvx def /a ED a Rot /RAngle [ RAngle
dup a add ] cvx def } def
/RotEnd { /TMatrix [ TMatrix setmatrix ] cvx def /RAngle [ RAngle pop ]
cvx def } def
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
/Uput { /a ED add 2 div /h ED 2 div /w ED /s a sin def /c a cos def /b s
abs c abs 2 copy gt dup /q ED { pop } { exch pop } ifelse def /w1 c b
div w mul def /h1 s b div h mul def q { w1 abs w sub dup c mul abs } {
h1 abs h sub dup s mul abs } ifelse } def
/UUput { /z ED abs /y ED /x ED q { x s div c mul abs y gt } { x c div s
mul abs y gt } ifelse { x x mul y y mul sub z z mul add sqrt z add } { q
{ x s div } { x c div } ifelse abs } ifelse a PtoC h1 add exch w1 add
exch } def
/BeginOL { dup (all) eq exch TheOL eq or { IfVisible not { Visible
/IfVisible true def } if } { IfVisible { Invisible /IfVisible false def
} if } ifelse } def
/InitOL { /OLUnit [ 3000 3000 matrix defaultmatrix dtransform ] cvx def
/Visible { CP OLUnit idtransform T moveto } def /Invisible { CP OLUnit
neg exch neg exch idtransform T moveto } def /BOL { BeginOL } def
/IfVisible true def } def
end
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro
%!PS-Adobe-2.0
%%Title: Dot Font for PSTricks 97 - Version 97, 93/05/07.
%%Creator: Timothy Van Zandt <tvz@Princeton.EDU>
%%Creation Date: May 7, 1993
10 dict dup begin
  /FontType 3 def
  /FontMatrix [ .001 0 0 .001 0 0 ] def
  /FontBBox [ 0 0 0 0 ] def
  /Encoding 256 array def
  0 1 255 { Encoding exch /.notdef put } for
  Encoding
    dup (b) 0 get /Bullet put
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    (P) 0 get /BoldPentagon put
  /Metrics 13 dict def
  Metrics begin
    /Bullet 1000 def
    /Circle 1000 def
    /BoldCircle 1000 def
    /SolidTriangle 1344 def
    /Triangle 1344 def
    /BoldTriangle 1344 def
    /SolidSquare 886 def
    /Square 886 def
    /BoldSquare 886 def
    /SolidPentagon 1093.2 def
    /Pentagon 1093.2 def
    /BoldPentagon 1093.2 def
    /.notdef 0 def
  end
  /BBoxes 13 dict def
  BBoxes begin
    /Circle { -550 -550 550 550 } def
    /BoldCircle /Circle load def
    /Bullet /Circle load def
    /Triangle { -571.5 -330 571.5 660 } def
    /BoldTriangle /Triangle load def
    /SolidTriangle /Triangle load def
    /Square { -450 -450 450 450 } def
    /BoldSquare /Square load def
    /SolidSquare /Square load def
    /Pentagon { -546.6 -465 546.6 574.7 } def
    /BoldPentagon /Pentagon load def
    /SolidPentagon /Pentagon load def
    /.notdef { 0 0 0 0 } def
  end
  /CharProcs 20 dict def
  CharProcs begin
    /Adjust {
      2 copy dtransform floor .5 add exch floor .5 add exch idtransform
      3 -1 roll div 3 1 roll exch div exch scale
    } def
    /CirclePath { 0 0 500 0 360 arc closepath } def
    /Bullet { 500 500 Adjust CirclePath fill } def
    /Circle { 500 500 Adjust CirclePath .9 .9 scale CirclePath eofill } def
    /BoldCircle { 500 500 Adjust CirclePath .8 .8 scale CirclePath eofill } def
    /BoldCircle { CirclePath .8 .8 scale CirclePath eofill } def
    /TrianglePath {
      0  660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath
    } def
    /SolidTriangle { TrianglePath fill } def
    /Triangle { TrianglePath .85 .85 scale TrianglePath eofill } def
    /BoldTriangle { TrianglePath .7 .7 scale TrianglePath eofill } def
    /SquarePath {
      -450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto
      closepath
    } def
    /SolidSquare { SquarePath fill } def
    /Square { SquarePath .89 .89 scale SquarePath eofill } def
    /BoldSquare { SquarePath .78 .78 scale SquarePath eofill } def
    /PentagonPath {
      -337.8 -465   moveto
       337.8 -465   lineto
       546.6  177.6 lineto
         0    574.7 lineto
      -546.6  177.6 lineto
      closepath
    } def
    /SolidPentagon { PentagonPath fill } def
    /Pentagon { PentagonPath .89 .89 scale PentagonPath eofill } def
    /BoldPentagon { PentagonPath .78 .78 scale PentagonPath eofill } def
    /.notdef { } def
  end
  /BuildGlyph {
    exch
    begin
      Metrics 1 index get exec 0
      BBoxes 3 index get exec
      setcachedevice
      CharProcs begin load exec end
    end
  } def
  /BuildChar {
    1 index /Encoding get exch get
    1 index /BuildGlyph get exec
  } bind def
end
/PSTricksDotFont exch definefont pop
% END pst-dots.pro

%%EndProcSet
%%BeginProcSet: pst-grad.pro
%!
% PostScript prologue for pst-grad.tex.
% Version 97, 93/05/12
% For distribution, see pstricks.tex.
%
% For the PSTricks gradient fillstyle.
%
% Based on some EPS files by leeweyr!bill@nuchat.sccsi.com (W. R. Lee).
%
% Syntax:
%   R0 G0 B0 R1 G1 B1 NumLines MidPoint Angle GradientFill

/tx@GradientDict 40 dict def
tx@GradientDict begin
/GradientFill {
  rotate
  /MidPoint ED
  /NumLines ED
  /LastBlue ED
  /LastGreen ED
  /LastRed ED
  /FirstBlue ED
  /FirstGreen ED
  /FirstRed ED
  % This avoids gaps due to rounding errors:
  clip
  pathbbox           %leave llx,lly,urx,ury on stack
  /y ED /x ED
  2 copy translate
  y sub neg /y ED
  x sub neg /x ED
  % This avoids gaps due to rounding errors:
  LastRed FirstRed add 2 div
  LastGreen FirstGreen add 2 div
  LastBlue FirstBlue add 2 div
  setrgbcolor
  fill
  /YSizePerLine y NumLines div def
  /CurrentY 0 def
  /MidLine NumLines 1 MidPoint sub mul abs cvi def
  MidLine NumLines 2 sub gt
  { /MidLine NumLines def }
  { MidLine 2 lt { /MidLine 0 def } if }
  ifelse
  MidLine 0 gt
  {
    /Red FirstRed def
    /Green FirstGreen def
    /Blue FirstBlue def
    /RedIncrement LastRed FirstRed sub MidLine 1 sub div def
    /GreenIncrement LastGreen FirstGreen sub MidLine 1 sub div def
    /BlueIncrement LastBlue FirstBlue sub MidLine 1 sub div def
    MidLine { GradientLoop } repeat
  } if
  MidLine NumLines lt
  {
    /Red LastRed def
    /Green LastGreen def
    /Blue LastBlue def
    /RedIncrement FirstRed LastRed sub NumLines MidLine sub 1 sub div def
    /GreenIncrement FirstGreen LastGreen sub NumLines MidLine sub 1 sub div def
    /BlueIncrement FirstBlue LastBlue sub NumLines MidLine sub 1 sub div def
    NumLines MidLine sub { GradientLoop } repeat
  } if
} def
/GradientLoop {
  0 CurrentY moveto
  x 0 rlineto
  0 YSizePerLine rlineto
  x neg 0 rlineto
  closepath
  Red Green Blue setrgbcolor fill
  /CurrentY CurrentY YSizePerLine add def
  /Blue Blue BlueIncrement add def
  /Green Green GreenIncrement add def
  /Red Red RedIncrement add def
} def

end
% END pst-grad.pro

%%EndProcSet
%%BeginProcSet: pst-node.pro
%!
% PostScript prologue for pst-node.tex.
% Version 97 patch 1, 97/05/09.
% For distribution, see pstricks.tex.
%
/tx@NodeDict 400 dict def tx@NodeDict begin
tx@Dict begin /T /translate load def end
/NewNode { gsave /next ED dict dup 3 1 roll def exch { dup 3 1 roll def }
if begin tx@Dict begin STV CP T exec end /NodeMtrx CM def next end
grestore } def
/InitPnode { /Y ED /X ED /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
/InitCnode { /r ED /Y ED /X ED /NodePos { NodeSep r add dup Cos mul exch
Sin mul } def } def
/GetRnodePos { Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def
} ifelse Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def }
ifelse dx Sin mul abs dy Cos mul abs gt { dy Cos mul Sin div dy } { dx
dup Sin mul Cos Div } ifelse } def
/InitRnode { /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub
/u ED /NodePos { GetRnodePos } def } def
/DiaNodePos { w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
Cos mul exch Sin mul } def
/TriNodePos { Sin s lt { d NodeSep sub dup Cos mul Sin Div exch } { w h
mul w Sin mul h Cos abs mul add Div NodeSep add dup Cos mul exch Sin mul
} ifelse } def
/InitTriNode { sub 2 div exch 2 div exch 2 copy T 2 copy 4 index index /d
ED pop pop pop pop -90 mul rotate /NodeMtrx CM def /X 0 def /Y 0 def d
sub abs neg /d ED d add /h ED 2 div h mul h d sub Div /w ED /s d w Atan
sin def /NodePos { TriNodePos } def } def
/OvalNodePos { /ww w NodeSep add def /hh h NodeSep add def Sin ww mul Cos
hh mul Atan dup cos ww mul exch sin hh mul } def
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
/XYPos { dup sin exch cos Do /Cos ED /Sin ED /Dist ED Cos 0 gt { Dist
Dist Sin mul Cos div } { Cos 0 lt { Dist neg Dist Sin mul Cos div neg }
{ 0 Dist Sin mul } ifelse } ifelse Do } def
/GetEdge { dup 0 eq { pop begin 1 0 NodeMtrx dtransform CM idtransform
exch atan sub dup sin /Sin ED cos /Cos ED /NodeSep ED NodePos NodeMtrx
dtransform CM idtransform end } { 1 eq {{exch}} {{}} ifelse /Do ED pop
XYPos } ifelse } def
/AddOffset { 1 index 0 eq { pop pop } { 2 copy 5 2 roll cos mul add 4 1
roll sin mul sub exch } ifelse } def
/GetEdgeA { NodeSepA AngleA NodeA NodeSepTypeA GetEdge OffsetA AngleA
AddOffset yA add /yA1 ED xA add /xA1 ED } def
/GetEdgeB { NodeSepB AngleB NodeB NodeSepTypeB GetEdge OffsetB AngleB
AddOffset yB add /yB1 ED xB add /xB1 ED } def
/GetArmA { ArmTypeA 0 eq { /xA2 ArmA AngleA cos mul xA1 add def /yA2 ArmA
AngleA sin mul yA1 add def } { ArmTypeA 1 eq {{exch}} {{}} ifelse /Do ED
ArmA AngleA XYPos OffsetA AngleA AddOffset yA add /yA2 ED xA add /xA2 ED
} ifelse } def
/GetArmB { ArmTypeB 0 eq { /xB2 ArmB AngleB cos mul xB1 add def /yB2 ArmB
AngleB sin mul yB1 add def } { ArmTypeB 1 eq {{exch}} {{}} ifelse /Do ED
ArmB AngleB XYPos OffsetB AngleB AddOffset yB add /yB2 ED xB add /xB2 ED
} ifelse } def
/InitNC { /b ED /a ED /NodeSepTypeB ED /NodeSepTypeA ED /NodeSepB ED
/NodeSepA ED /OffsetB ED /OffsetA ED tx@NodeDict a known tx@NodeDict b
known and dup { /NodeA a load def /NodeB b load def NodeA GetCenter /yA
ED /xA ED NodeB GetCenter /yB ED /xB ED } if } def
/LPutLine { 4 copy 3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 1 t sub
mul 3 1 roll 1 t sub mul 4 1 roll t mul add /Y ED t mul add /X ED } def
/LPutLines { mark LPutVar counttomark 2 div 1 sub /n ED t floor dup n gt
{ pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse cvi 2 mul { pop
} repeat LPutLine cleartomark } def
/BezierMidpoint { /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED
/t ED /cx x1 x0 sub 3 mul def /cy y1 y0 sub 3 mul def /bx x2 x1 sub 3
mul cx sub def /by y2 y1 sub 3 mul cy sub def /ax x3 x0 sub cx sub bx
sub def /ay y3 y0 sub cy sub by sub def ax t 3 exp mul bx t t mul mul
add cx t mul add x0 add ay t 3 exp mul by t t mul mul add cy t mul add
y0 add 3 ay t t mul mul mul 2 by t mul mul add cy add 3 ax t t mul mul
mul 2 bx t mul mul add cx add atan /NAngle ED /Y ED /X ED } def
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
/HPutLines { HPosBegin yB yA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { dup Y check { exit
} { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark HPosEnd 
} def
/VPosBegin { xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def } def
/NCCoor { /AngleA yB yA sub xB xA sub Atan def /AngleB AngleA 180 add def
GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def /LPutPos {
LPutVar LPutLine } def /HPutPos { LPutVar HPutLine } def /VPutPos {
LPutVar VPutLine } def LPutVar } def
/NCLine { NCCoor tx@Dict begin ArrowA CP 4 2 roll ArrowB lineto pop pop
end } def
/NCLines { false NArray n 0 eq { NCLine } { 2 copy yA sub exch xA sub
Atan /AngleA ED n 2 mul dup index exch index yB sub exch xB sub Atan
/AngleB ED GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1
yA1 ] cvx def mark LPutVar tx@Dict begin false Line end /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
ifelse } def
/NCCurve { GetEdgeA GetEdgeB xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
/NCAngles { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate
def xA2 yA2 mtrx transform pop xB2 yB2 mtrx transform exch pop mtrx
itransform /y0 ED /x0 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2 x0 y0 xA2
yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false Line end /LPutVar [ xB1
yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def /LPutPos { LPutLines } def
/HPutPos { HPutLines } def /VPutPos { VPutLines } def } def
/NCAngle { GetEdgeA GetEdgeB GetArmB /mtrx AngleA matrix rotate def xB2
yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
/y0 ED /x0 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2 x0 y0 xA1 yA1
tx@Dict begin false Line end /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ]
cvx def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
/NCBar { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate def
xA2 yA2 mtrx itransform pop xB2 yB2 mtrx itransform pop sub dup 0 mtrx
transform 3 -1 roll 0 gt { /yB2 exch yB2 add def /xB2 exch xB2 add def }
{ /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse mark ArmB
0 ne { xB1 yB1 } if xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict
begin false Line end /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx
def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
/NCDiag { GetEdgeA GetEdgeB GetArmA GetArmB mark ArmB 0 ne { xB1 yB1 } if
xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false Line end
/LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
def
/NCDiagg { GetEdgeA GetArmA yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
GetEdgeB mark xB1 yB1 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin
false Line end /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
def
/NCLoop { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate
def xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED /xB3 xB2 yB2
mtrx transform pop def xB3 yA3 mtrx itransform /yB3 ED /xB3 ED xA3 yA3
mtrx itransform /yA3 ED /xA3 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2
xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false
Line end /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ]
cvx def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
/NCCircle { NodeSepA 0 NodeA 0 GetEdge pop 2 div dup 2 exp r
r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
mul add dup 5 1 roll 90 sub PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
% DG/SR modification end
} def /HPutPos { LPutPos } def /VPutPos { LPutPos } def r AngleA 90 sub a add
AngleA 270 add a sub tx@Dict begin /angleB ED /angleA ED /r ED /c 57.2957 r
Div def /y ED /x ED } def
/NCBox { /d ED /h ED /AngleB yB yA sub xB xA sub Atan def /AngleA AngleB
180 add def GetEdgeA GetEdgeB /dx d AngleB sin mul def /dy d AngleB cos
mul neg def /hx h AngleB sin mul neg def /hy h AngleB cos mul def
/LPutVar [ xA1 hx add yA1 hy add xB1 hx add yB1 hy add xB1 dx add yB1 dy
add xA1 dx add yA1 dy add ] cvx def /LPutPos { LPutLines } def /HPutPos
{ xB yB xA yA LPutLine } def /VPutPos { HPutPos } def mark LPutVar
tx@Dict begin false Polygon end } def
/NCArcBox { /l ED neg /d ED /h ED /a ED /AngleA yB yA sub xB xA sub Atan
def /AngleB AngleA 180 add def /tA AngleA a sub 90 add def /tB tA a 2
mul add def /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
/x0 xA r tA cos mul add def /y0 yA r tA sin mul add def /c 57.2958 r div
def /AngleA AngleA a sub 180 add def /AngleB AngleB a add 180 add def
GetEdgeA GetEdgeB /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul
sub def /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def l 0
eq { x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn }
{ x0 y0 translate /tA AngleA l c mul add def /tB AngleB l c mul sub def
0 0 r h add tA tB arc r h add AngleB PtoC r d add AngleB PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r d add tB PtoC l arcto 4 { pop } repeat 0
0 r d add tB tA arcn r d add AngleA PtoC r h add AngleA PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r h add tA PtoC l arcto 4 { pop } repeat }
ifelse closepath /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def /LPutPos
{ LPutVar /d ED /h ED /AngleB ED /AngleA ED /r ED /y0 ED /x0 ED t 1 le {
r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC }
{ t 2 lt { /NAngle AngleB 180 add def r 2 t sub h mul t 1 sub d mul add
add AngleB PtoC } { t 3 lt { r d add AngleB 3 t sub mul AngleA 2 t sub
mul add dup 90 sub /NAngle ED PtoC } { /NAngle AngleA 180 add def r 4 t
sub d mul t 3 sub h mul add add AngleA PtoC } ifelse } ifelse } ifelse
y0 add /Y ED x0 add /X ED } def /HPutPos { LPutPos } def /VPutPos {
LPutPos } def } def
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
/LPutCoor { NAngle tx@Dict begin /NAngle ED end gsave CM STV CP Y sub neg
exch X sub neg exch moveto setmatrix CP grestore } def
/LPut { tx@NodeDict /LPutPos known { LPutPos } { CP /Y ED /X ED /NAngle 0
def } ifelse LPutCoor  } def
/HPutAdjust { Sin Cos mul 0 eq { 0 } { d Cos mul Sin div flag not { neg }
if h Cos mul Sin div flag { neg } if 2 copy gt { pop } { exch pop }
ifelse } ifelse s add flag { r add neg } { l add } ifelse X add /X ED }
def
/VPutAdjust { Sin Cos mul 0 eq { 0 } { l Sin mul Cos div flag { neg } if
r Sin mul Cos div flag not { neg } if 2 copy gt { pop } { exch pop }
ifelse } ifelse s add flag { d add } { h add neg } ifelse Y add /Y ED }
def
end
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: pst-text.pro
%!
% PostScript header file pst-text.pro
% Version 97, 94/04/20
% For distribution, see pstricks.tex.

/tx@TextPathDict 40 dict def
tx@TextPathDict begin

% Syntax:  <dist> PathPosition -
% Function: Searches for position of currentpath distance <dist> from
%           beginning. Sets (X,Y)=position, and Angle=tangent.
/PathPosition
{ /targetdist exch def
  /pathdist 0 def
  /continue true def
  /X { newx } def /Y { newy } def /Angle 0 def
  gsave
    flattenpath
    { movetoproc }  { linetoproc } { } { firstx firsty linetoproc }
    /pathforall load stopped { pop pop pop pop /X 0 def /Y 0 def } if
  grestore
} def

/movetoproc { continue { @movetoproc } { pop pop } ifelse } def

/@movetoproc
{ /newy exch def /newx exch def
  /firstx newx def /firsty newy def
} def

/linetoproc { continue { @linetoproc } { pop pop } ifelse } def

/@linetoproc
{
  /oldx newx def /oldy newy def
  /newy exch def /newx exch def
  /dx newx oldx sub def
  /dy newy oldy sub def
  /dist dx dup mul dy dup mul add sqrt def
  /pathdist pathdist dist add def
  pathdist targetdist ge
  { pathdist targetdist sub dist div dup
    dy mul neg newy add /Y exch def
    dx mul neg newx add /X exch def
    /Angle dy dx atan def
    /continue false def
  } if
} def

/TextPathShow
{ /String exch def
  /CharCount 0 def
  String length
  { String CharCount 1 getinterval ShowChar
    /CharCount CharCount 1 add def
  } repeat
} def

% Syntax: <pathlength> <position> InitTextPath -
/InitTextPath
{ gsave
    currentpoint /Y exch def /X exch def
    exch X Hoffset sub sub mul
    Voffset Hoffset sub add
    neg X add /Hoffset exch def
    /Voffset Y def
  grestore
} def

/Transform
{ PathPosition
  dup
  Angle cos mul Y add exch
  Angle sin mul neg X add exch
  translate
  Angle rotate
} def

/ShowChar
{ /Char exch def
  gsave
    Char end stringwidth
    tx@TextPathDict begin
    2 div /Sy exch def 2 div /Sx exch def
    currentpoint
    Voffset sub Sy add exch
    Hoffset sub Sx add
    Transform
    Sx neg Sy neg moveto
    Char end tx@TextPathSavedShow
    tx@TextPathDict begin
  grestore
  Sx 2 mul Sy 2 mul rmoveto
} def

end
% END pst-text.pro

%%EndProcSet
%%BeginProcSet: 8r.enc
% @@psencodingfile@{
%   author = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry",
%   version = "0.6",
%   date = "22 June 1996",
%   filename = "8r.enc",
%   email = "kb@@mail.tug.org",
%   address = "135 Center Hill Rd. // Plymouth, MA 02360",
%   codetable = "ISO/ASCII",
%   checksum = "119     662    4424",
%   docstring = "Encoding for TrueType or Type 1 fonts to be used with TeX."
% @}
% 
% Idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard Encoding + ISO Latin 1 + extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% 
% (4) Remaining positions left undefined are for use in (hopefully)
% upward-compatible revisions, if someday more characters are generally
% available.
% 
% (5) hyphen appears twice for compatibility with both ASCII and Windows.
% 
/TeXBase1Encoding [
% 0x00 (encoded characters from Adobe Standard not in Windows 3.1)
  /.notdef /dotaccent /fi /fl
  /fraction /hungarumlaut /Lslash /lslash
  /ogonek /ring /.notdef
  /breve /minus /.notdef 
% These are the only two remaining unencoded characters, so may as
% well include them.
  /Zcaron /zcaron 
% 0x10
 /caron /dotlessi 
% (unusual TeX characters available in, e.g., Lucida Bright)
 /dotlessj /ff /ffi /ffl 
 /.notdef /.notdef /.notdef /.notdef
 /.notdef /.notdef /.notdef /.notdef
 % very contentious; it's so painful not having quoteleft and quoteright
 % at 96 and 145 that we move the things normally found there down to here.
 /grave /quotesingle 
% 0x20 (ASCII begins)
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three /four /five /six /seven
 /eight /nine /colon /semicolon /less /equal /greater /question
% 0x40
 /at /A /B /C /D /E /F /G /H /I /J /K /L /M /N /O
% 0x50
 /P /Q /R /S /T /U /V /W
 /X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o
% 0x70
 /p /q /r /s /t /u /v /w
 /x /y /z /braceleft /bar /braceright /asciitilde
 /.notdef % rubout; ASCII ends
% 0x80
 /.notdef /.notdef /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /.notdef /.notdef /.notdef
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /.notdef /.notdef /Ydieresis
% 0xA0
 /.notdef % nobreakspace
 /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot
 /hyphen % Y&Y (also at 45); Windows' softhyphen
 /registered
 /macron
% 0xD0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def

%%EndProcSet
%%BeginProcSet: texps.pro
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]/Metrics
exch def dict begin Encoding{exch dup type/integertype ne{pop pop 1 sub
dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get div def}
ifelse}forall Metrics/Metrics currentdict end def[2 index currentdict
end definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{
dup sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1
roll mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def
dup[exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}
if}forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}
def end

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/copypage{}N/p 3 def @MacSetUp}N/doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N/endTexFig{end psf$SavedState restore}N/@beginspecial{SDict
begin/SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count/ocount X/dcount countdictstack N}N/@setspecial{
CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if/showpage{}N/erasepage{}N/copypage{}N newpath}N
/@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{end}
repeat grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
TeXDict begin @defspecial

 /DvipsToPDF { 72.27 mul Resolution div } def /PDFToDvips { 72.27 div
Resolution mul } def /HyperBorder { 1 PDFToDvips } def /H.V {pdf@hoff
pdf@voff null} def /H.B {/Rect[pdf@llx pdf@lly pdf@urx pdf@ury]} def
/H.S { currentpoint HyperBorder add /pdf@lly exch def dup DvipsToPDF
/pdf@hoff exch def HyperBorder sub /pdf@llx exch def } def /H.L { 2
sub dup /HyperBasePt exch def PDFToDvips /HyperBaseDvips exch def currentpoint
HyperBaseDvips sub /pdf@ury exch def /pdf@urx exch def } def /H.A {
H.L currentpoint exch pop vsize 72 sub exch DvipsToPDF HyperBasePt
sub sub /pdf@voff exch def } def /H.R { currentpoint HyperBorder sub
/pdf@ury exch def HyperBorder add /pdf@urx exch def currentpoint exch
pop vsize 72 sub exch DvipsToPDF sub /pdf@voff exch def } def systemdict
/pdfmark known not {userdict /pdfmark systemdict /cleartomark get put}
if
 
@fedspecial end
%%BeginFont: CMR12
%!PS-AdobeFont-1.1: CMR12 1.0
%%CreationDate: 1991 Aug 20 16:38:05

% Copyright (C) 1997 American Mathematical Society.  All Rights Reserved.

11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR12 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 37 /percent put
dup 48 /zero put
dup 50 /two put
dup 52 /four put
readonly def
/FontBBox{-34 -251 988 750}readonly def
/UniqueXX 5000794 def
currentdict end
currentfile eexec
9b9c1569015f2c1d2bf560f4c0d52257bacdd6500abda5ed9835f6a016cfc8f0
0b6c052ed76a87856b50f4d80dfaeb508c97f8281f3f88b17e4d3b90c0f65ec3
79791aacdc162a66cbbc5be2f53aad8de72dd113b55a022fbfee658cb95f5bb3
2ba0357b5e050fddf264a07470bef1c52119b6fbd5c77ebed964ac5a2bbec9d8
b3e48ae5bb003a63d545774b922b9d5ff6b0066ece43645a131879b032137d6d
823385fe55f3402d557fd3b4486858b2a4b5a0cc2e1bf4e2a4a0e748483c3bcf
5de47cc5260a3a967cac70a7a35b88b54315191d0423b4065c7a432987938c6b
edad3b72ad63c2918b6e5a2017457e0d4ebc204a520640fd7c4d05e35ea5486f
a43d0e970787203855daccb1ed0b16325828b13b7c767a1a58c87902f0546ea5
404440fa6526975783c2d7a9572b8e5d5176bac598b8960609f49016aebf3763
89c1adfe6a1ffc0c53b3acd9d168ec3a278fd4f1d9b085dc2df701346c9d0887
3d230a161692b42a45bb5da343b4edd839dd60685a59aaa49fc65cd8e2ad2a9c
5cab953495172a1a9f40d5f38e922443a519dd96f667201a408bd1d89e35f4ab
98e2f68c3366efc14b5afe1018d9c845d808d4f8e07ea8168518a171ab4d6e21
70eeac099eb7ef46eb9781384da1fac3b3133bb718bc80082eaea88759745188
f266b31d0c7e791d633f16ed94e05517a32163e74cbd96dc5db066f2a5313d6d
7f09465608cb404613e0f058073af000e5bdfafbbf9da0c0d5c02a3447f2cdc1
f56481901e34265c26d331ac3f85bdcbc7c51ef9eddf2b9c189c5253f8e74282
d6f053d7d183ae17ea175e5ebc401e67d21a9fea139cbbf3bb1358c713a75843
b39a69aa2b1a7b975f53ff22d1dc3bdf7acd17afa1da21568310c68241b31d3d
03bf404bd30baf9cc19c75b958bce7155f03cb0cfe2cae0327aad4b603284a51
7c26de75b8c6f6aaa9debe4aec08ca4b646d787a9dfac85b2c01760e9c6c6162
fbbc67dbd0796831e00c477d8e23c375ffab46d289be9d2328aec2b7534ae4cd
d782ec2453e7787f6e6b4537b46c01545cba6f90b8e9a1bccac1937bceeaa5e7
8e9f368ce067a0a31da98bfbb545be555a7270f0031fadd4f9b186629e5d2c5f
d264f8f24cd5a1c0f68399ff4b29fd77c4a54d8296523414ea514f1297f53afc
9c26dd0b6ab6ab1c5d66702ad9282755dd94506cb01d563badf2b8ec9055955e
b52ea49f6b8706eb83de4a42fbd7f8d697b4b8a48e6f42a190a1d1b3fb571cb9
7b625e9fbbaee04f66249f64871e2bf7e129113e32eec0f184d4c659dbb76862
77cb07c1e1b82acfd2bd71544b6fb52c2d9f6651b335c595901ffed102267d2f
601ee9057fd7ceff8b27c4ec0c97f4e5d165993be2022ecdb0d9efc0083d5a48
f333b352bb851061e870006450f1ddc5fbc5cb1e3984ab0092def3097659b101
0a6e42f9169f17f852b2063da9880c984cceaf51f1e97d09e8de3d6ab63d0d6f
43802fc7a28e21b5f4c0ae73e881bd6a9843fc7aecdd29f8e4483d9f45da849f
ec2f1c9cfd5aa014cbe62ce3283c1d6eaa93be40de5fa6071056a43ffbc9bcfd
70b0e7f0da0dabc5dcec8bee6d7b13605ab64c0dbc9eebd1561051d30ed6fd63
f2e856a933a0eccfe98001d1c2ccad187643db5610e1d41c8fe353a3b4390cf1
5dc5ecca2726358f66baaf94c22699033c0acd6eb3f70c694b039a7a9bfac494
2c1e7a59f9c7ab58060135859faf7ea79e38b49c1feb792e7635db74cbde7e00
b96be31d7ff967db6fe18a32bae581c6aa4afcaf842816a7234d792b9614f81d
31780572406c22ec709993deed6a3b1d3b9e79869ffff48623a15cc0072447e5
0c870dec3f8dd66ea3fe5237f6430a0b46e66652bf1e40994b2ae3454987db6e
4f8d485a54a003dd551b4c212344ba7545f3737a230fd4d46fdb033e5357ae4e
3d92df1d756ae7359164b5271bf32980a859378626c2be4a106aaf711b3c9666
5ed0e4700b3fe7284e51e0af17ec7cb09ba7e9bb80703e14c72084aa912d6b9b
5c63be237942222ca596c3a49cd9c767d2b7cd35fc85100a2be01cc1e043f840
51b452541fcce9426cf34eacfb3f9e2f176f476ee1a578ae9f3442bbae5e2f8b
90a55c80fceb8c4b6656ba87d1208f3eecd0aff47b66318230d42a48e693b6e8
cb7c94d06dfd924a0712f5031aedd577dd922d6a181c305ba813d85d2db54bed
ad522878129815929c54fb0303cf85b9c8cd5d3456de96320b4977c71bf99032
34e02fad5ba43cd012fcc1eaded617671f3ca56281f5c83f8dc3a12a38a89402
13bb9e6fa94d6b7f290280e283f8efd9119c7d7b6ff9e641944394c8b3cda6f1
7bf601134515c88a6aaede2dc78a577c27469f6654b32b8d431712
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark

%%EndFont 
%%BeginFont: CMSY10
%!PS-AdobeFont-1.1: CMSY10 1.0
%%CreationDate: 1991 Aug 15 07:20:57

% Copyright (C) 1997 American Mathematical Society.  All Rights Reserved.

11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMSY10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.035 def
/isFixedPitch false def
end readonly def
/FontName /CMSY10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /minus put
dup 25 /approxequal put
readonly def
/FontBBox{-29 -960 1116 775}readonly def
/UniqueXX 5000820 def
currentdict end
currentfile eexec
9b9c1569015f2c1d2bf560f4c0d52257bac8ced9b09a275ab231194ecf829352
05826f4e975dcecec72b2cf3a18899ccde1fd935d09d813b096cc6b83cdf4f23
b9a60db41f9976ac333263c908dcefcdbd4c8402ed00a36e7487634d089fd45a
f4a38a56a4412c3b0baffaeb717bf0de9ffb7a8460bf475a6718b0c73c571145
d026957276530530a2fbefc6c8f67052788e6703bb5ee49533870bca1f113ad8
3750d597b842d8d96c423ba1273ddd32f3a54a912a443fcd44f7c3a6fe3956b0
aa1e784aaec6fce08dae0c76da9d0a3eba57b98a6233d9e9f0c3f00fcc6b2c6a
9ba23af389e6dfff4efec3de05d6276c6be417703ce508377f25960ef4ed83b4
9b01b873f3a639ce00f356229b6477a081933fef3bb80e2b9dffa7f75567b1fa
4d739b772f8d674e567534c6c5bbf1cf615372be20b18472f7aa58be8c216dbd
df81cc0a86b6d8318ca68fe22c8af13b54d7576fe4ca5a7af9005ea5cc4edb79
c0ab668e4fec4b7f5a9eb5f0e4c088cd818ecc4feb4b40ec8bd2981bf2336074
b64c430035b7d4eb41c5714c319ae0c7f0df32ef5dcc37f69a157a4a37fe0193
615747883307f99106bc25d5ccc325c092b2ae4539757ca96f6e319b3423d28b
0a25f4bd1b4e9d5ffff9559be4e195899307968920bb11d9d2c6b6aa72836ba0
a179a7c0bc204ed06898cfa525b1cebea4558fda37dc188c62dbe498215a2f59
61b25fa5d029380b1ec2c787511a6aef82b949c9205368c3150ec63f5830f088
3d7e6d1d332ed957a13b7fed0f159857b4c76015902fecc5e2e41c2fb3a9e412
b127d304a4ca53329846a9ff1929ef4b20bf275ee9a44210049f8b667a0abaee
1205a0956e421e0dfa9a34a2267b91520b9ee68416eb4d7c8a525e756997fc10
6a97c45bef7c45c2bcbcf7008cd988bacc7994f59709174d945a2a626b67e26c
1d983172662256b7f105421e662c9b0973f4eb1cfe664a5881033e84fdec679e
1c5645fc60bee84bc1118b277eaa05dedfc87d5259fa9e73c695e512711ecd37
3b8bab97238f123226cbff6a289fced74eb5c2f3a212f80d9ad0911c4a25c4fe
342dcc6788035200dd801541cc1b760ff9a926d8de5d0a087ec875f5e0d4b937
97dad619f83351971d3aa92c6c168e
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark

%%EndFont 
TeXDict begin 39158280 55380996 2074 600 600 (main.dvi)
@start /Fa 203[121 1[121 1[121 10[202 37[{}4 247.95 /CMR12
rf /Fb 230[193 24[193{}2 247.95 /CMSY10 rf /Fc 133[86
86 86 86 1[86 86 86 86 1[86 86 86 86 86 2[86 86 1[86
86 86 86 86 86 1[86 7[86 2[86 86 86 1[86 2[86 1[86 1[86
86 1[86 86 1[86 86 86 6[86 86 86 86 86 86 86 86 86 86
86 86 86 86 3[86 86 2[86 1[86 35[{TeXBase1Encoding ReEncodeFont}54
144.164 /Courier rf /Fd 137[142 142 8[142 2[142 2[142
142 142 2[142 7[142 13[142 5[142 7[142 2[142 7[142 142
2[142 46[{TeXBase1Encoding ReEncodeFont}16 237.447 /Courier
rf /Fe 130[92 1[92 92 92 92 92 92 92 92 92 92 92 92 92
92 92 92 92 92 92 92 92 92 92 92 92 92 92 1[92 1[92 1[92
3[92 92 92 92 92 92 92 92 92 92 92 92 1[92 92 92 92 92
1[92 92 92 92 2[92 92 92 92 92 92 92 92 92 92 92 92 92
92 92 92 92 92 92 92 92 92 92 92 1[92 92 92 92 34[{
TeXBase1Encoding ReEncodeFont}80 152.644 /Courier rf
/Ff 130[58 1[58 2[86 14[38 2[48 60[57 57 40[{
TeXBase1Encoding ReEncodeFont}7 172.188 /Helvetica rf
/Fg 107[80 80 24[121 121 121 174 121 134 67 121 80 134
134 134 134 201 54 121 54 54 134 134 67 134 134 121 134
134 1[134 8[161 174 147 161 174 1[161 188 174 201 134
161 1[67 174 188 147 161 174 174 161 161 245 134 141
1[141 1[67 134 134 134 134 134 134 134 134 134 134 67
67 80 67 141 94 80 80 2[214 33[121 121 2[{TeXBase1Encoding ReEncodeFont}
75 241.063 /Helvetica rf /Fh 135[110 3[66 110 77 1[121
121 121 1[55 110 1[55 121 2[110 121 110 121 110 13[132
143 1[132 154 1[165 1[143 1[55 2[121 4[143 7[110 110
110 110 110 110 110 110 110 110 2[66 45[{TeXBase1Encoding ReEncodeFont}
36 197.673 /Helvetica-Bold rf /Fi 105[39 32[39 1[35 24
1[39 39 39 1[16 2[16 1[39 1[39 39 2[39 9[67 3[47 51 2[55
1[59 39 1[35 20 2[43 47 1[51 47 47 7[39 39 39 39 39 39
39 39 39 39 20 2[20 2[24 24 40[{TeXBase1Encoding ReEncodeFont}40
70.5976 /Helvetica rf /Fj 134[71 2[71 79 39 71 47 1[79
79 79 118 31 2[31 79 79 39 79 79 71 79 79 9[133 1[102
2[102 4[118 79 1[71 39 2[86 2[102 94 7[39 7[79 1[79 39
39 47 39 44[{TeXBase1Encoding ReEncodeFont}37 141.195
/Helvetica rf /Fk 172[134 13[147 1[161 67[{
TeXBase1Encoding ReEncodeFont}3 241.063 /Times-Roman
rf /Fl 170[139 118 107 129 1[107 139 1[171 118 2[64 3[118
3[139 65[{TeXBase1Encoding ReEncodeFont}11 192.85 /Times-Roman
rf /Fm 168[337 238 1[218 238 258 1[238 278 1[297 2[199
99 2[218 238 258 258 258 258 1[218 16[99 46[{
TeXBase1Encoding ReEncodeFont}18 357.117 /Helvetica-Bold
rf /Fn 166[191 1[270 191 206 175 191 206 1[191 222 206
238 175 206 159 79 206 222 175 191 206 206 206 206 65[{
TeXBase1Encoding ReEncodeFont}23 285.694 /Helvetica-Bold
rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%PaperSize: A4

%%EndSetup
%%Page: 1 1
1 0 bop -600 6000 a
SDict begin [ /Page 1 /View [ /Fit ] /URI << /Base () >> /PageMode
/UseOutlines  /DOCVIEW pdfmark end
 -600 6000 a -600 6000 a
SDict begin [ {Catalog} << /ViewerPreferences << /FitWindow true /CenterWindow
true >> >> /PUT pdfmark end
 -600 6000
a -600 6000 a
SDict begin H.S end
 -600 6000 a -600 6000 a
SDict begin 12 H.A end
 -600 6000 a -600
6000 a
SDict begin [ /View [/XYZ H.V] /Dest (Doc-Start) cvn H.B /DEST pdfmark
end
 -600 6000 a 4500 6000 a
 tx@Dict begin 90 Rot  end
 4500 6000 a 5246 3360
a @beginspecial 14 @llx 14 @lly 815 @urx 35 @ury 2834
@rwi 28 @rhi @setspecial
%%BeginDocument: renau-line.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: GIMP PostScript file plugin V 1.12 by Peter Kirchgessner
%%Title: /home/renau/pp.eps
%%CreationDate: Sun Feb 10 23:11:41 2002
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 14 14 815 35
%%EndComments
%%BeginProlog
% Use own dictionary to avoid conflicts
10 dict begin
%%EndProlog
%%Page: 1 1
% Translate for offset
14.173228 14.173228 translate
% Translate to begin of first scanline
0.000000 20.000000 translate
800.000000 -20.000000 scale
% Image geometry
800 20 8
% Transformation matrix
[ 800 0 0 20 0 0 ]
% Strings to hold RGB-samples per scanline
/rstr 800 string def
/gstr 800 string def
/bstr 800 string def
{currentfile /ASCII85Decode filter /RunLengthDecode filter rstr readstring pop}
{currentfile /ASCII85Decode filter /RunLengthDecode filter gstr readstring pop}
{currentfile /ASCII85Decode filter /RunLengthDecode filter bstr readstring pop}
true 3
%%BeginData:        11785 ASCII Bytes
colorimage
jo5DZbZO.#!F"OKrrK0!lph+MVY0$M!r09*lph+MT_/0^!Ukg17flA]p$)JWnQkQQ!G_;crr@W4
7fu:n\FnbZ!pt;+lUM"Q[eT+e!GtBp7fci.li.(dn>94G7f\RjrrVJ28a/_H87pH(rr^H'>tEmD
"%ZXajmW3Nn:X@!7fl5.jl$.>e7.T2!_\L>gA_3$Eqr4U~>
jo5DZeT^:m!I<norrK]OltHN;\+et`!r9fWltHN;Z1e+q!V2fJB``.\pZ_\YoR$"?!JU:+rrAGK
B`i+$`V89i!q;ChlY-E?`;/Zt!JkLXB`WM%li.(do=&i%B`OpLrrVVOC[#O7C4b9mrr^fFHYVJQ
")<+^lL4`So:'L]B``%5lJV[CgjeL$!c4S"gA_3,N;71<~>
jSo8XnETHCnbqbQ!Vl0MmfE1^jSo;\q=*_=!VcTkrrN,llgFlKrosF`rpfFF!V66JrrD]QmfN(U
rnm_VrU]=C!q?$bl2LbSm-auFq<It]rqGpBmf<%%rrN)ikO/HBqptcKqXsC8mfN%QrU9aerq,LE
!VH?KrrN#ek3i?DrS%8Pqt'XPJ,~>
jo5A5C[+Cj@+OWC!S1NA7fe,/j8T/)B'`"h89EtjrrK/pm7.4LL%+=+!4hJe!4Cec!T@PN7fu:u
c1p/q!KKk>7fc;ckl1[b9'o+M9:>D;rrV&-9B8SD<kufV!q(/%kskeGB[YQ5"8q/G?/A'R9m=>C
n,EI^SkA<=!G9U8rrW#3<TcjQ9:X]8!mbmXq+#r~>
jo5A<L?`IRIGO2g!Sr(fB`XRlj8T/2K'[1QC6%TVrrK`Lm:cW;SFbtE!64D?!5d^p!TnppB`i+*
f(n2&!MaMtB`W(akl1[qC[Gg;D6*BrrrV8JCuf:2Fj%l+!qD7cl"L36K\P/Z"9%D`HerH=DNN$7
n,EI`Y\WQ=!J8n]rrW&?FQ[?=D6DRl!n`HHq.Y?~>
jo5AYo'5ZEnb_VO!W2EQmfE([j8T/Wo'>`FoDSRd!Vl0NmfE([kl1YYmI(&NiVrrVn`B3@o)&FC
rrD`Vmf<.HrrDi[mfE.]li."`o],B@nG10*!WDWQmfE"VfDbpMp@7#."7YpXrpTjfrqG^H!V6-H
rrW2qnE00>p=]HHqt'UOJ,~>
k5PMEECfCc!F<\0rrVP*8F/hJ?/GSArrV;+8F/hI>/'n6!R"p=7fu:siVr'@!+>4b!F#!PrrL;F
k!oJEDrogT!M`BT7fc;Mkl1\=;sd'V89*bWrrL&Dj$s/sj87"!"8q;(8EiVH88ZuVg&D0I_/E!(
7fu@oVrd@H!qiEdlUM"V\G5(`!qi]ok=5PLU"]MKqpBFUpd]i~>
k5PMJMe_Ql!IN/XrrVYHC@#X9HfY1errVJIC@#X8H-6$a!S)YdB`i+)k5OTE!.F9L!I=:rrrLYo
k%Om4M<`ps!OQb1B`W(Nkl1\DF7!ZCC5_BCrrLGmj(SRXkkrU'"9%PHC?]F7C5CdGg&D0Kb_g8p
B`i.%\*ED]!r'-AlY-EB`VJNn!r'BKk@js9ZeGE]qq6pDph>6~>
k5PJ\oBPcFnbVPN!WDWUmfDtVj8T/YoBYiGnbN(^!W)?QmfE"WkPkPPmdC2Hro3qYqXN\9!V63F
rrMl`lL+`Hkl1\]nEfTEoDS"T!W)?HmfE%YaSu;>oB5QCo)./?!ri&fh<tF9p\jO[!rhr`lgFoE
q>TCR!rhuakO/H@pY#QIqt'RNJ,~>
kPkVKDb01a!`6?#lMgmK9'f%K9uQ)l!q1n;lph+QRIg@V!UG'u7fcW8kPkRa8af.M8XAE:!qE?l
k!oJEHKsAe!r0*"lUM"LL[XI,!H(Hq7fc`$m/I.URo&3:"%ZF[lcB),dqe/;!_@%Wg&D0Jc\YZY
7fubJch?c+!PDV%7flD^p#H&Srp$+Sk=5SRX7k9I!nVQdpIB`~>
kPkVOM/)?j!cc0SlMgm_C[>a9DU7AC!qMmultHN>X7lJk!Ul3<B`W>-kPkRpC[Ys<CT?Fp!qX$H
k%Om4PO@<-!r9ZQlY-E:Sau"E!JtRYB`WFrm/I.XX`3B9");t[n&YM0gP4p+!c!GHg&D0LfUm9B
B`iILf_Fk6!Q]NOB``1]pZ)8UrpI%3k@k!>](aqY!oAuRpM#-~>
kPkS]o'5ZFnG3(KrrDcYmfDqSj8T/Zp$;&JnFlkZrrN)im-auEqrdtZq!IMMp>c/SrqQ!EmfE%Y
hZ!ZVq!dS;!VQHUrrDWVmfDqRm/I.dp@./3!q>p^aSu;<o&oHBo).2@"9/2jnD<U9nFc\XmJd4_
na#WFnFuqArrW/nnE96AnG*":rrN#gp@!M~>
kPkR/8aAkI9<IIY!Qn4)7fc2Dir9%K:$b@O8VlL*rrJrmm7.1MT'-+Sk$[UI!FF"2rrVMG:$+qH
9:"B5!l\G9lph+JGNJ&g!N\o\7fl;BnEp5WjbHRl7fu:u\F[fA!m"Y<kskhHB%$V2rr_A\A4k`L
"&!RKp$D\Zemdr8!_eUCir9)LOA4n.!E6J\rrV;,8G5Q(~>
kPkRGC[5[8D8#36!RkuRB`W"Hir9%]DX;'=CS'hgrrKNHm:cT<Yil#el@&)7!IWGYrrVY`DWYX6
CoQ4i!mc4.ltHN9OQu'0!P<.7B``(EoBlPZlCDhSB`i+*`V%=P!n)F1l"L67K%p7Xrr_PqJSX.W
")Wq>p[%n\h1+a)!c=\'ir9)OUi,@0!HQ-3rrVJJCA)@l~>
kPkPRl0eWIl2Le\nE]NCp#>uPp@.D:!VQEgrrMl`m-arKkPkS]na>iHnb_DI!r_f]jmN3Ch#@EO
n`oQDoDRnQ!;PmK!VQHZrrW/lnDs$>o(i:+rrMudkO/HBqq:uNrV,m=mfN+Wrp9Xcqsit?!VQHO
rrW2mnE96@nG1c;!WDW_msk~>
kl1[E8F&bH9UG&E!rhOtlph+JDsZNa!Q7h#7fdP[qu6`KA4Z,Y!_@G$kPkRQ:$tLPN9fX+!rM#$
k!oJD>-Qf^!S1iI7fd5Hkl1\B;=-jT89!/Jrr_l,Ce<_Y!`=O"aSuA8Zrfl`7fl4rf%U-+k+#mQ
hF@ZPR,\&1rrV=s8F/hK8q5q$j8T/QGNMBs<Q4jhrrVS69(b])~>
kl1[ZC?oR7D5un$!rhY>ltHN9MXTU*!RG`NB`X(Iqu6`RJSOUe!c!bckPkRcDXM3>U$q.D!rV8C
k%Om3H,&/7!Sr@mB`Wh:kl1\HEU@HAC5^p9rr_u;LMQ!c!caXaaSuA:_KTbZB``%(h:hl2lE5VP
hJ!(;X69HJrrVM?C@#X:CR=;bj8T/SOQL6YFO0m=rrV\RC\;Cl~>
kl1YUl0eWGl2Le_o'>`FoDR_L!W)<OmfE"Vqu6]oo'GfGoDRkP!VZ$NmfE+[jo5A[oB#EAnbCo>
!W2HQmfE"Vkl1\]nEfTEoD@tU!ri#djR30>o_Z`0!rhubkO/HBqqD&OrV#d;mfN%Qr9O@`rUT7B
!VH?MrrN,jk3i??qUtlLrU][MJ,~>
lMgqZTh+K>!_\=;lMgn\QL%*C86ja,rrW2V?0au^=Np[?rrV\L8F8nJ<S$@5!p*o_mmdFP_>NHq
!QSF,7fu:t`VA9h!p4&blUM"V\G5:f!.jK,!Eco#rr_AN>"IdG"%Zn#m`>D0or;-X7fl8*e(t$-
pu'&@<(c%<"%ZIGbN]$-G=_'j!_@Cfir9&:?fjiZ@as'1!K9\D7t:~>
lMgq[ZYJf?!c=M!lMgn]WpFF$C3n^srrW2\Hg>AIGLcTgrrVedC@,^9Fku6\!pY;NmqDi?bl-](
!Rc8UB`i+)chZDs!pYAPlY-EB`VJ`t!1<+e!I)QOrr_PeG\ZAT")<=rn]:_3pUYS4B``(2gYMl5
q<#tiFDKcJ");tIe`m)7OD=,r!c!_Tir9&@I-,,DJ)&]V!MOB&Bn-~>
lMgnapZ_,Ip&=7V!WMfYmfDtUj8T/Xna#WEnGE+_!WMcYmfDqTkPkS]na5cFqW7_XqXN\9!qQ3e
h>[NSo'5ZFnG3(IrrD]XmfDtSmf*@ep@754!qH'aaSu>@q!dJ8!V?3Erri?!qXj:5mfN"NqW\"[
oBPcFoDIVJ!W;KMmfDtUf`(sEoC%2~>
lMgmo;!UUQ8:BUbrrW/A:@(IO;lesY!UtU)7fc;nqYpT*=RATZ9:"c@!r&chmRI:mp#c8TYYaIP
!_[Uch#@HSF\(gg!_oQbkl1\,9C54N8tPYDrr`/MLem,&!`4R$aSuAAn=EM@7fuD4fDFG)"Qck;
;b5b8"&F$EmHOWOO%AS,!G0I6rrL;Ek=5SFFOSnB!LugS7t:~>
lMgn'EU.<?C6e)LrrW/JDsV0=Ek:<2!V;ZDB`W(iqYpT7GO9)FCoQUt!r9HEmV)]UpZDJV^Mr=L
!c<qQh#@HSO)!up!cGLAkl1\6D=)$=CU!O%rr`/TSo<_)!ca^caSuAAo<<5uB`i4;hYZ10"R<^e
F)'QG")j48nEKrRUh]40!J/e\rrLYnk@k!5NSE+c!Np81Bn-~>
lMgn\nETHCo_n%S!W)<PmfDqQj8T/Zo]klFq>1*lq=*b>!;>UU!WMl]mfE"Yk5PJWnE'*>oD@;B
!;#LE!q>s`kl1YZlgFlKrpTjgqt9I?mfN"NqoA^<rqGpFmfE(Xh>[TUq"4(3mfW(Nq#0IW!;5XG
!V6*HrrMuck3i?Bqq1oKp@@[&~>
li."/=R&BWD:e(Q!r^b`lph+NNq)31!qiE`lph(JOS\tYj`*iZ7fl4okNDjGgMcIL!4D"i!pPY<
k!oJKN9T0u"9/+[9'\tK9TAQ*rrM@km7.4KIdZ\)!mGRSk!oME>,1N+rrVAG:$>(K9S_`drr_2>
=@h7<"&!R6jludHp7Y%C7fl]#puMGVnZ>gS7fuD4fDF;%!qrE`nje3~>
li."9GNrlCLu.Fs!r_#.ltHN<U\!RH!r'0?ltHK9V#()mlAKEFB``%%m-"BLied&:!5dq!!pu\!
k%Om8U$^\9"9/.pC[5[9D5-XcrrMM7m:cW:QLXGD!nE-Ck%Op4GdR"]rrVP`DWkd9D4TtKrr_DY
GA>rJ")Wn,lKS<MpTnW#B``Cqq;hPWoXo>0B`i4;hYZ%,!r'*>nnEU~>
li."^n`oQDo)%\O!W;NSmfE+\jSo8[pZh2Ip%n[hrU]CE!V63PrrN&gmI(&NkPkV^p$h,4!q>m]
h#@ESp?D#Hp&=1T!WDQTmfE(Zn,EFco&T6@nb<"&rrW/lnE96@p&3bI!rV`\g[>47q#0IW!WMiY
mfN"SroF(\rqQ!FmfE(Xg&D*Pp[R^&~>
m/I+@<U*'U=Np[-rrM21lph+JHfa>g!r09*lph+JDs[B$!qVgQm7.1V^$#CsrM<0T7fd2jkl1_8
F%b[d!_?@ug]%?NY=n1O"%n((roj@^N9j%8>hAHE!Ou7n7fl7scGokcm"nF"7fl>Mn)=9Kpu'&3
g.)6RV;(b.rrKT*lUM"MVY0$M!q)1Gk=5SILZR1g!Ol"t7t:~>
m/I+GFm<ZBGLcTUrrMAMltHN9PNq6/!r9fWltHN9MXUHB!qr[3m:cTCali[*rO$M1B`WeVkl1_?
NG[im!bukog]%?O^23+L")F7froj@^U$QIoHJ\,j!QB9EB``()f>dgln"4I\B``.Oo&9TNq<#t_
g1^Y<[Gq#GrrL&XlY-E;\+et`!qE.+k@k!7Sa+l-!Q9$KBn-~>
m/I+anETHCnGDJM!WDZVmfE(ZjSo;\q=*_=!V?9errN,mm-auEq<%\Wp[.DMo)@kQ!W2KMmfDqQ
g]%<Rq!%5Jo_mtQ!;5^I!V-'UrrMrbjR3-?qo8X:rUo=A!VZNOrr`8uqX`G0"7c-`roj@_q=*\<
!VcTSrrW/lnE00?p&3PC!Vu6Tmsk~>
mJd4K=R&BW::TQg!qi0[lph(gc/\g)c"?93!F44PrrKi<m7.1MMWb!@roI_Z7fc8ll2Lk\`G8$-
7fl4pcJ/@#rP__$7fl5'gun\<b"_4m!Nl+drrVPK9]\bG9SMHGrr`8`M,!2(!DooXrrr8dc(&iL
gID?ET]Q.8rrL;KlUM"JL%+4("8q;68EWJE:7:S'rrL;Kn4/!~>
mJd4PGNrlCDoLu@!r&s;ltHKPf&Qc2eq34%!IESurrL8fm:cT<T]c=Vrp#(&B`W%gl2Lk]c\?2t
B``%&fA$<,rQfNMB``%0j6-FCdr+Md!PJ6urrVYbD<5I5D4Kb/rr`8eT5Nk,!HGg4rrr;heuk!M
gM$b1Z0M;NrrLYslY-E9SFbkB"9%PSC?K:4Dl`H]rrLYsn7dC~>
mJd4cn`oQDnG2>K!rhr`m-auGqr@\Wqss(A!V-'`rrMrcm-arIk5PJ\o'PlGq<@n\rqc3ImfE"V
gA_3MnETHCoDIeO!W)<PmfE4_nc&Xgp#GKAo_c`/!r_f]kjJQApu25UrVQ<[nD!C5nFunDrrMud
lL+cGroF([rUf7@!q>p_f`)!KnaQ!t~>
n,EIdf4aG>!DJpGrrW,7>O4i]<OhhbrrV;+8F/hI;lfcp!p+Vsm7.1ok3)aGq6NW[7fdPql2Lgh
>"IgH"%\(,r7q;Rqp8^87fdANkl1_`lt,NR!J9Y-rrUbi8``GE<Mo9ba8Z51MG!)&!F*"lrrhZ)
J5o.p7g)A3de3V&rrM1jlUM%JC>o0RrrUJZ8EWJD=Lcu_!T[bZ7t:~>
n,EIdhLt0.!H"n%rrW/CH0f5HFN+(:rrVJIC@#X8Ek;,I!pYk^m:cTWlf\9LqS?q7B`X+\l2Lh"
H"uMV")=:jrS7DSr7QJ_B`Wq?kl1_`mt'h>!L`EHrrV#6CZT74FLUl@a8Z54TPNb*!I;WCrrhf9
QZQusB`r1:g\:^1rrMA7lY-H9L?AKsrrUf*C?K:3GK&26!U5.'Bn-~>
mf*=bo',TCp?;MWqXNq@!q?$bjSo8ZoBYiGnG)k[!WDWVmfE"XkPkS^q!IMNoDRqR!Vl3HmfE(Z
gA_3Nn`oQDo)%VM!WDTUmfE(Znc&XeoAo?AnFuq%rrN,lkO/HAq;VDVrVH0Ug$]"7qu5aX!WDQR
mfE"WjSo8Xo&fBAnG1]9!WDQWmsk~>
n,EF9Ep?-r98E!#rrM+tlph+MVY0$M!q1n;lph+ONq*#H!qrNdm7.1XbNAg*lt>`V!_C*&lMgmN
9BJ_G:Qb)!rrLMXl:1n]_YWKr!Vr,L7fcWMo)Ag^X'A3X7fu:o\FmlA!VL["7fll1puVMYpt`/j
8D6Q98oMK1jSo7,8F/hJ86jI$rrTN-8E`PF88HH#rrIF:mmhm~>
n,EFAN9Y*YD4U7^rrM;?ltHN;\+et`!qMmultHN=U\"B_!r06Bm:cTDe`Ql4mt:%B!c#pUlMgma
D!#F5Dl3'YrrLf(l=g<HcMQi*!W&k`B`WA?o)Ag`\pA,RB`i+%`V7CP!V_]=B``S(q;qVZq;]5F
C>*A(CPp=(jSo7DC@#X9C3nLmrrU#ZC?T@5C519irrJ9tmqI:~>
n,EFcoBG]Ep&=4U!W;QTmfE1^jSo8[p$;&JnFceXrrW2onEoZFnG;;I!WDTVmf<1JrrDcSmfN"O
rS%8Pqss%@!V-$LrrN,mm-auErUTsirqQ$EmfN(Url4s=rq#=A!qH-djo5G^r:oj8mfN+VrT*tY
oBPcFnb_DI!Vl0HmfE"Vf)GaAmdGZ~>
nG`R9E_,Ld!_Ih%kl1[N9C,.LJ+2Lu!LHLH7fl55jneuXcXcE5!DAgArrK/nmRI:olg+QPk''DZ
7fl_nn_4!Een%D<7flT&rTO7_rR+O/7fg'qoD\mRN`5%0"&+'dpr<=7iF(h=!EI/%rrr8dc(&WD
fgc-M\*a%QrrJfdlULtTYiYldl&8F$7fu;%fDF2"!MN0S7t:~>
nG`RBN,%Zm!c+(dkl1[aD<ts;Qh08;!NL#'B``%;lMCM]fR`F(!GngurrK`JmV)]Wn*BuTl]>oE
B``Fio\0<Hh1BD-B``=trTO7_rRu8XB`Z0MoD\mWUN5I1")X7Qq8WF8k'cE,!HlfPrrr;heujgG
fkCP8`:3ZbrrKHBlY-BA^?,@rm@eI]B`i+.hYYq)!OHV1Bn-~>
nG`OdoBG]Eo_n"R!;>aI!VHBOrrDcXmfE(ZqYpTno'GfFp>u;Sq!IMNo)7nS!WDWOmfN"Rrn@AQ
qss%@!V#pIrrN#dm-arMo)Adip$h&2!qcBh`r?);n`T?AnG;8H"9&,jo%<C4nbN.DrrDfYmfDqQ
jo5D\p$h,4!V?3>rrDf\msk~>
o)Aghd;hhD7fd_`kl1\,>3n`\?/GSArrK5qlULtnfD>LKonc<.7fdPfk5PJIAaW%h9sEs`!nM'V
k!oGSbM)suqpT:NlUM"QXnh2\!rh;(lph)-qXjdiqq$Eok!oME;i]tYrrL\Rk=5PVal`U+lb\0P
8D6Q9862)Cj8T2X`(fPf!`>EZk5PM6F%kae!_I=lfDbpL`(fVhJ,~>
o)Aghfo0_3B`X4Mkl1\6GjK,GHfY1errKfMlY-BVhYR6RpRc6gB`X+Sk5PJMJaR4QDSPN;!o8QF
k%Oj?e_:$*qqHj?lY-E>^&$sm!rhJGltHKfqt0mjqqd`Yk%Op4Ehhp=rrLr#k@jsAe)pZ5n'78A
C>*A(C3?QFj8T2YcYi&_!cb@:k5PM=NG[im!c*YXfDbpMcYi,aJ,~>
nc&XeoBG]EoD@bO!W)?QmfDtVj8T,SlL+cEqtg<nrq5XH!V?6OrrN)hmdC2Gq!7q\qsrk;!V-$>
rrN#flL+fDq#9IV!WDWVmf<"NrrW)inE'*?nFcb!rrN#ekO/HAqW@e[rVH0Uf^An2pAO"N!W)<O
mfN"ProX4]qt&q<!V63?rrMucmI,Q~>
o)AdCE_,Ic!b0XUl2LeMHL+-&9uQ,m!r03#lUM"Ybkq;;!rTl7m7.4X_>NHq!MrKX7fdehmJd:]
]OFFo7fd,Yg&D-*G=_$i"&G]croj@_oq:YA!E8=UrrUD^8ENDE86i4c`r?,8`F.k!!bKmYl2LkX
b`c8`7fu:^M:UYc!TR>K7fl>Ip#l>Wpr.#>k=5SFHKs)]!TR>L7t:~>
o)AdJN,%Wl!e8u%l2LeQP3cl`DU7DD!r9cSlY-EEebf7D!r^>bm:cWDbl-](!OZe4B`X:TmJd:_
aF@seB`WbHg&D-1OD=)q")kR@roj@_pTa(!!HRZ#rrU`-C?B44C3mJ_`r?,9c[Ftj!eK/)l2LkZ
eYd]FB`i*lTAAK+!U+doB``+KpZMPYq9Oe1k@k!5PO@$%!U+dpBn-~>
o)AafoBG]Enb_PM!WDWVmfDqSjSo;\q=*_=!V$!^rrMucmI()FqW7_Wp[.DMoDJ"U!ri#cjmN6?
r7V)Nqt'+A!q>s`kPkS^p[%>LnGVtY!W2HKmfN%Srl4s>rqc0JmfE"Vkl1baqtBR3mfN"Oqr.PU
rUK1A!VZNUrrW2ro&]<@oDR8?!WDQTmsk~>
oD\jQB^&"f<Rg43!MrW[7fc2<j8T/!?L()^9Xsou!TJ%b7fl;>p#c8Uj_%-Q7fl>fq!S.`oqkpS
7f\+mrrV;68aAkJ99\u0rrLPHlph&QoD\j$=QN$S8T31urrK?,kXP\FC";MK"nBs2C/@IR7fuS9
a7S?j!UFpo7feG2k5PLm?qBHN!DAa/rrMG/lUQI~>
oD\jVK^!1OFPQ'Z!OZn6B`W"Aj8T/+I-YJID8l>N!U#@-B``(BpZDJWl@Wj?B``.cq<n7apU5>.
B`OOQrrVJRC[5[9D5['hrrLkpltHI.oD\j1GNEN?CPprdrrKlZk\1*5L#)%o"n^KPL2gt\B`i@?
de;Z"!Ul*7B`Xgnk5PM%IVS%[!GnacrrMSLlY1k~>
oD\jio',TDnGDDK!Vc*Mmf<%@rrMudlL+`Kq>UKnoBboHp&=+R!WDTVmfE4_mf*@fp[RA6!;+qD
!WDZTmfE.]k5PJZnEfTDp[eCcq=*J6!V?3,rrMobkO/HBqs+1arqlH\nCR+2nFZSViVrrWoBPcF
p&4%Q!Vu9Imf<(3rrN)ilgK?~>
o`"sP>j4`Z;oRr"!nLmQmRI=LA*)eO!nM-Xlph(JOSJhVQqQg:!G'O=rrVu"9^bIQ88%&Qrr`8i
SknK=!DoB?rrV_N:$P4LJ`Z%o!UG$t7fd>lp&>*[OA+b+!_e[A`;]k(9B\kJ8SclSli.(1P%75;
7flM5bMW=#nVug(!cIB(kPkUl=%MLE!ElYWrrMYLl:6@~>
o`"sUHKf,EEmNqK!o8EBmV)`;JEl4q!o8TGltHK9V"jrjX)76<!J/ncrrW#1D=;0?C4kg?rr`8l
Y]&Z<!H>9qrrVeeDX(p:RHir7!Ul3<B`WqXp&>*^Ui#4-!c=b%`;]k;D!5R8CPL[Dli.(;VL`U9
B``7:e_gB-o:kMa!f?CFkPkV%G&$2S!I2B0rrM_cl=kb~>
o`"sjn`fKCnG;>J!W2HSmfDtWjSo8Xo'5ZDp%\Oep?_5Ko)%SL!WMl]mfE"Xmf*@fp[I>6!V#j9
rrW2mnETHCo_mqP!WDWVmfE"Xp&>'kp#GKAp&2i/!;>RD!V6-QrrW&jo%*72nFQM6rrN,llL+cE
rT=+\q=*P8!V,s8rrN,llL06~>
p&>'\@-L/_<O_khrrV\L8F8nJ;n_8l!pObslph+JDs[<"!R"[67flD_p?)AUh0/3V!DTEYrrUr'
9'/VF?+9O[rrJrml:1nnh>ZU;!V`__7fc?-p&>*EDb9%\!EckMrrVJ38a&YG8Tj+\rr_o6I8e]e
"%d%"le_XBXA8(O!F"LGrrV_e;<C@M@)_okrrK2rlULqRJ,~>
p&>'_IHbGIFN"+@rrVedC@,^9F33MC!ptt^ltHN9MXUB@!S)G^B``1]pu_SWj,`VB!H,=5rrV2F
CZ]=4Hc5[2rrKNIl=g<Vj8S6A!VsCpB`W,%p&>*LMJM<f!I)N$rrVVPCZoI6CQI`Hrr_uCQ#kMj
")EIqn)"'F]5R"L!I<kkrrVf"ETUs:IF%`>rrK`MlY-?>J,~>
p&>'kn`fKCnG28I!WMcYmfDqRjSo8ZoBPcFoDSLb!W)?RmfN"QroX4]r:B@F!V#jOrrN&ijmN9@
q>T%H!Vc*KmfE"Wk5PJ]q!@GMnG;hX!W2KLmfDqR`;]l:oB,KBoDS%U"9//hnC?t/o(W+>rrMoa
lgFlEr9+(]rqGpEmfN%Urmh#Lq!dV<!:YL~>
p\t<mk%j3O!DTWWrrKT2m7.1NNoU-?N(`J,!F44OrrMG3m7.4KGNIrd!O,;d7fd2dn,EHu?qBHN
!_?eDfDbl[;<gXP=PDm:!S:WD7f\MArr_el>Y+!I!_@7R`;]o#Db9._!_\I6mf*I\d%4uH8Cp?6
86Cl&h>[N!>3eZZ<648&!p,G=k!oGUf$s^#b@'X+!Dp(P~>
p\t<nl\=Y<!H,L2rrL&^m:cT<UZ;@TTl'+0!IEStrrMSOm:cW:OQts-!P`O?B`WeQn,EI-I;7qZ
!c!58fDbliEU%6=GN%Z`!T&1iB`Ok#rr_l(H>;SV!c!SB`;]o(M/2<h!c=Urmf*I_fs$3KC=d/%
C3QE.h>[N+GjB&EFOK@P!pZP#k%OjAh:2H*eU?at!HGo*~>
pAY0lo',TDnG)/G!Vu6Omf<%@rrD`WmfDtUq>UKooBboHoDReN!Vl0PmfE"Xn,EFan`B3?nbUl;
!Vu6MmfDtVjo5AYna,]Ep%JCerqQ$EmfE"V`;]l:o&fBAp&4=Y"TJ;mo'k2u!qGs\h>[NPna#WE
nG;>J!r_f]k3i?@qpbWHqXNn?!V#l7~>
%%EndData
showpage
%%Trailer
end
%%EOF

%%EndDocument
 @endspecial 4266 1057 a
 gsave currentpoint currentpoint translate 270 neg rotate neg exch
neg exch translate
 4266 1057 a @beginspecial 276
@llx 366 @lly 336 @urx 426 @ury 141 @rwi 141 @rhi @setspecial
%%BeginDocument: angleHG.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/rico/texte/texstyle/Prosper-beta/img/angleHG.ps
%%Creator: XV Version 3.10a  Rev: 12/29/94 (PNG patch 1.2)  -  by John Bradley
%%BoundingBox: 276 366 336 426
%%Pages: 1
%%DocumentFonts:
%%EndComments
%%EndProlog

%%Page: 1 1

% remember original state
/origstate save def

% build a temporary dictionary
20 dict begin

% define string to hold a scanline's worth of data
/pix 180 string def

% define space for color conversions
/grays 60 string def  % space for gray scale line
/npixls 0 def
/rgbindx 0 def

% print in landscape mode
90 rotate 0 -612 translate

% lower left corner
366 276 translate

% size of image (on paper, in 1/72inch coords)
59.97600 59.97600 scale

% define 'colorimage' if it isn't defined
%   ('colortogray' and 'mergeprocs' come from xwd2ps
%     via xgrab)
/colorimage where   % do we know about 'colorimage'?
  { pop }           % yes: pop off the 'dict' returned
  {                 % no:  define one
    /colortogray {  % define an RGB->I function
      /rgbdata exch store    % call input 'rgbdata'
      rgbdata length 3 idiv
      /npixls exch store
      /rgbindx 0 store
      0 1 npixls 1 sub {
        grays exch
        rgbdata rgbindx       get 20 mul    % Red
        rgbdata rgbindx 1 add get 32 mul    % Green
        rgbdata rgbindx 2 add get 12 mul    % Blue
        add add 64 idiv      % I = .5G + .31R + .18B
        put
        /rgbindx rgbindx 3 add store
      } for
      grays 0 npixls getinterval
    } bind def

    % Utility procedure for colorimage operator.
    % This procedure takes two procedures off the
    % stack and merges them into a single procedure.

    /mergeprocs { % def
      dup length
      3 -1 roll
      dup
      length
      dup
      5 1 roll
      3 -1 roll
      add
      array cvx
      dup
      3 -1 roll
      0 exch
      putinterval
      dup
      4 2 roll
      putinterval
    } bind def

    /colorimage { % def
      pop pop     % remove 'false 3' operands
      {colortogray} mergeprocs
      image
    } bind def
  } ifelse          % end of 'false' case



60 60 8			% dimensions of data
[60 0 0 -60 0 60]		% mapping matrix
{currentfile pix readhexstring pop}
false 3 colorimage

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffafee3effeaaffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffafee3e3fe64ffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffe3fe64fafee3ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffe9fe88f1feb3ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffe8fe86dffe55fefefeffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffebfe96dafe37fefefeffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffedfe9edefe48f7fed5ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffedfe9ee2fe60eefea5f5fecaecfe95ecfe97ecfe98
ecfe99ecfe9bf6feceffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffeffeaadffe4fe0fe55dcfe3f
dbfe3cdbfe3ddbfe3dddfe48defe4cdcfe43d9fe32d6fe20e2fe5fe3fe67defe4ddefe4d
defe4edefe4edbfe3bdbfe3cdcfe3ddcfe3fdcfe40dcfe42ddfe43ddfe45ddfe46ddfe48
ddfe46e2fe63e5fe72e5fe74e6fe76e6fe77e6fe79e7fe7ae9fe86e8fe85ebfe94ecfe97
ecfe99ecfe9cedfe9eeffeacf2febcf3febef3fec1f4fec4f9fedfffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffeffeaaf1feb3f5fec7e9fe87
e7fe7be7fe7be7fe7be2fe60e1fe5bd6fe1dd8fe2adafe33e1fe5bdffe54defe4edffe50
dffe51dffe53e0fe54ddfe49ddfe4bdefe4cdefe4edefe50dffe52dffe54e5fe73eafe93
e9fe89e6fe7ae4fe6ce4fe6ee8fe84e8fe85e9fe87e9fe8ae8fe84e7fe7ce8fe81e9fe8a
f0feb0f8fedbf9fedff1feb8f1febaeafe8bfbfeeafbfeebfdfef5ffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff5fecddffe52e1fe5df5fec9f5fec9f5fecaf5feca
f5fecbf5feccf5feccf5fecdf6fecef6fecef6fecef6fecff6fed0f6fed1eefea5e9fe8a
f6fed1f7fed7f7fed8f7fed9f6fecdfafee8fcfef1fcfef2fdfef7fcfef3fdfef7fefefc
fefefcfefefdf9fee0f6fecff5feccf4fec2ffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff5fecde3fe64e5fe74ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffdfef5fefefdfefefdfefefcfefefcfffffffefef9
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff5fecde5fe74dffe53ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff6fecee6fe79e5fe6ff8fed8ffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff6fecee6fe7aebfe95effeaaffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff6fecee6fe7aedfe9eeefea2ffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff6fecee6fe7bedfe9eeefea3ffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff6fecfe6fe78ecfe9eeefea5ffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffefefe
fefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff6fed0e2fe63e0fe59dffe55ffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffefefe
fefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffedfe9fe2fe5fd8fe2ad8fe2dffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffecfe9adffe53d6fe1cdefe4cf6fecfffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffedfe9cd8fe2cd6fe20defe4bf6fed0ffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffefefdffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffedfe9dd8fe27d7fe22defe4ef6fed0ffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffedfe9dd7fe26d6fe20e0fe5bf6fed2ffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff3febdd7fe22d7fe22e1fe5ef7fed3ffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff4fec6d6fe20d7fe21e0fe57f7fed4ffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff4fec6d6fe20d6fe1fe0fe59f7fed5ffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff4fec6d6fe1ed6fe1ee5fe73f7fed6ffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff4fec6d6fe1dd9fe32e0fe56ffffffffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff5fecce0fe55defe48e8fe81ffffffffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffbfeede7fe7fe0fe56e9fe85ffffffffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff7fed8e8fe84e7fe7ef1feb4ffffffffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff2feb8edfea0effea6f1feb6ffffffffffffffffff
fffffffefefefefefeffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffefefceffeabf0feafeffea7f2feb7ffffffffffffffffff
fffffffefefefefefefefefeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffefefcf5fecaecfe9de7fe7af8feddffffffffffffffffff
fffffffefefefefefefefefefefefeffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffefefcf5fecce8fe85e8fe80ffffffffffffffffffffffff
fffffffefefefefefefefefeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffff8fedefdfef8fdfefbf3fec0e9fe89ecfe96ffffffffffffffffffffffff
fefefefefefefefefefefefeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffdfef6fefefafefefaf4fec2e9fe89ecfe96ffffffffffffffffffffffff
fefefefefefefefefefefefeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffdfef6fefefefefefdf4fec2e8fe85edfe9dffffffffffffffffffffffff
fefefefefefefefefefefefeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffefef9fefefdfefefce7fe7be5fe76f2feb7ffffffffffffffffffffffff
fffffffffffffefefefefefeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffdfef6fdfefafefefbe2fe65e5fe75f6fed0ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffdfef9fefefce6fe79e6fe77fafee6ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffcfef6fefefbecfe9be7fe7efbfeecffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffdfef5fdfef7f7fed5e9fe8dfcfef2ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffcfeeffbfeebedfea1fdfef7ffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffefefeffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffefefdfbfee9effeabffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffefefefefefeffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffbfeeceffea6ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff9fee3f3fec1ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffeefea2f8fedaffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff1feb2fafee4ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffcfef0fefefaffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff


showpage

% stop using temporary dictionary
end

% restore original state
origstate restore

%%Trailer

%%EndDocument
 @endspecial 4511 1057 a
 currentpoint grestore moveto
 4511 1057 a 4130 5844 a
 currentpoint currentpoint translate 0.76611 0.76611 scale neg exch
neg exch translate
 4130
5844 a 4130 5844 a
 gsave currentpoint currentpoint translate 0 neg rotate neg exch neg
exch translate
 4130 5844 a @beginspecial 0 @llx 0
@lly 37 @urx 42 @ury 370 @rwi @setspecial
%%BeginDocument: figs/uiuc.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: uiuc.eps
%%Creator: fig2dev Version 3.2 Patchlevel 3d
%%CreationDate: Sun Feb 10 22:03:46 2002
%%For: renau@nether.cs.uiuc.edu (Jose Renau)
%%BoundingBox: 0 0 37 42
%%Magnification: 1.0000
%%EndComments
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def
/col32 {0.200 0.200 0.400 srgb} bind def
/col33 {0.800 0.400 0.000 srgb} bind def

end
save
newpath 0 42 moveto 0 0 lineto 37 0 lineto 37 42 lineto closepath clip newpath
-273.7 413.7 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
 0.06000 0.06000 sc
%
% Fig objects follow
%
%  polyline 
% Polyline
n 5070 6872 m 5070 6227 l 4584 6227 l 4584 6872 l
 5070 6872 l  cp gs col32 1.00 shd ef gr 
%  polyline 
% Polyline
15.000 slw
n 5070 6872 m 5070 6227 l 4584 6227 l 4584 6872 l
 5070 6872 l  cp gs col32 s gr 
%  polyline 
% Polyline
0.000 slw
n 5056 6858 m 5056 6243 l 4598 6243 l 4598 6858 l
 5056 6858 l  cp gs col32 1.00 shd ef gr 
%  polyline 
% Polyline
7.500 slw
n 5056 6858 m 5056 6243 l 4598 6243 l 4598 6858 l
 5056 6858 l  cp gs col33 s gr 
%  spline 
% Polyline
2 slj
0.000 slw
n 4944 6783 m 4944 6781 l 4944 6773 l 4944 6759 l 4944 6751 l 4944 6749 l
 4943 6749 l 4935 6748 l 4924 6746 l 4914 6744 l 4906 6742 l
 4900 6741 l 4896 6739 l 4892 6738 l 4887 6735 l 4884 6732 l
 4880 6728 l 4877 6722 l 4875 6716 l 4873 6709 l 4872 6702 l
 4871 6693 l 4870 6683 l 4869 6670 l 4869 6654 l 4868 6637 l
 4868 6621 l 4868 6609 l 4868 6604 l 4868 6603 l 4868 6602 l
 4868 6597 l 4868 6585 l 4868 6567 l 4868 6544 l 4868 6521 l
 4868 6503 l 4868 6491 l 4868 6486 l 4868 6485 l 4868 6483 l
 4868 6474 l 4868 6457 l 4869 6438 l 4869 6420 l 4870 6406 l
 4870 6395 l 4871 6387 l 4873 6381 l 4874 6375 l 4876 6371 l
 4879 6367 l 4882 6365 l 4885 6363 l 4889 6362 l 4892 6361 l
 4898 6359 l 4905 6358 l 4915 6356 l 4925 6354 l 4933 6352 l
 4934 6352 l 4934 6350 l 4934 6343 l 4934 6331 l 4934 6324 l
 4934 6322 l 4933 6322 l 4928 6322 l 4916 6322 l 4896 6322 l
 4869 6322 l 4837 6322 l 4806 6322 l 4779 6322 l 4759 6322 l
 4747 6322 l 4742 6322 l 4741 6322 l 4740 6322 l 4737 6322 l
 4732 6322 l 4729 6322 l 4726 6322 l 4724 6322 l 4721 6323 l
 4718 6324 l 4716 6325 l 4714 6326 l 4712 6327 l 4710 6329 l
 4707 6332 l 4705 6334 l 4703 6336 l 4701 6338 l 4700 6339 l
 4699 6341 l 4698 6342 l 4697 6344 l 4696 6346 l 4696 6347 l
 4695 6349 l 4695 6351 l 4695 6353 l 4694 6356 l 4694 6358 l
 4694 6359 l 4694 6360 l 4694 6362 l 4694 6365 l 4694 6367 l
 4695 6369 l 4695 6370 l 4696 6372 l 4697 6374 l 4697 6375 l
 4698 6377 l 4699 6378 l 4701 6379 l 4702 6381 l 4704 6383 l
 4706 6385 l 4708 6386 l 4709 6388 l 4710 6389 l 4712 6389 l
 4713 6390 l 4715 6391 l 4716 6391 l 4718 6391 l 4720 6391 l
 4721 6391 l 4724 6391 l 4726 6391 l 4727 6391 l 4729 6391 l
 4732 6390 l 4735 6390 l 4737 6389 l 4740 6388 l 4742 6387 l
 4744 6385 l 4747 6383 l 4748 6381 l 4749 6379 l 4750 6376 l
 4751 6372 l 4752 6369 l 4752 6368 l 4752 6366 l 4752 6364 l
 4752 6362 l 4752 6361 l 4752 6359 l 4752 6358 l 4751 6357 l
 4751 6356 l 4750 6355 l 4749 6354 l 4749 6353 l 4748 6352 l
 4747 6351 l 4746 6350 l 4745 6349 l 4744 6348 l 4743 6348 l
 4742 6347 l 4741 6346 l 4740 6346 l 4739 6346 l 4738 6346 l
 4736 6345 l 4735 6345 l 4733 6345 l 4732 6345 l 4730 6345 l
 4729 6345 l 4728 6346 l 4727 6346 l 4725 6346 l 4724 6347 l
 4724 6348 l 4723 6348 l 4722 6349 l 4721 6351 l 4720 6352 l
 4719 6353 l 4718 6354 l 4718 6355 l 4717 6356 l 4717 6357 l
 4717 6358 l 4716 6359 l 4717 6360 l 4717 6361 l 4717 6362 l
 4717 6363 l 4718 6364 l 4718 6365 l 4719 6366 l 4719 6367 l
 4720 6367 l 4720 6368 l 4721 6368 l 4722 6369 l 4723 6369 l
 4723 6368 l 4724 6368 l 4725 6368 l 4726 6367 l 4727 6367 l
 4727 6366 l 4728 6366 l 4728 6365 l 4729 6365 l 4729 6364 l
 4729 6363 l 4729 6362 l 4729 6361 l 4728 6360 l 4728 6359 l
 4729 6359 l 4729 6358 l 4730 6357 l 4731 6357 l 4731 6356 l
 4732 6356 l 4733 6356 l 4734 6356 l 4735 6356 l 4735 6357 l
 4736 6357 l 4737 6357 l 4738 6357 l 4738 6358 l 4739 6358 l
 4739 6359 l 4739 6360 l 4740 6360 l 4740 6361 l 4740 6362 l
 4741 6362 l 4741 6363 l 4741 6364 l 4740 6364 l 4740 6365 l
 4740 6366 l 4740 6368 l 4739 6371 l 4739 6373 l 4738 6374 l
 4737 6375 l 4736 6376 l 4735 6377 l 4733 6378 l 4732 6379 l
 4731 6379 l 4729 6379 l 4727 6380 l 4725 6380 l 4724 6380 l
 4722 6380 l 4721 6380 l 4720 6380 l 4719 6380 l 4718 6380 l
 4717 6379 l 4716 6379 l 4715 6379 l 4715 6378 l 4714 6377 l
 4713 6376 l 4712 6375 l 4711 6374 l 4710 6373 l 4710 6372 l
 4709 6372 l 4708 6371 l 4708 6370 l 4707 6369 l 4707 6368 l
 4707 6367 l 4706 6365 l 4706 6363 l 4706 6361 l 4706 6359 l
 4706 6357 l 4706 6355 l 4706 6353 l 4706 6352 l 4707 6351 l
 4707 6350 l 4707 6348 l 4708 6347 l 4709 6346 l 4709 6345 l
 4710 6344 l 4712 6343 l 4713 6342 l 4715 6340 l 4717 6339 l
 4718 6337 l 4720 6337 l 4721 6336 l 4723 6335 l 4725 6334 l
 4727 6334 l 4729 6334 l 4731 6333 l 4734 6333 l 4738 6333 l
 4740 6333 l 4741 6333 l 4742 6333 l 4744 6333 l 4747 6333 l
 4753 6333 l 4759 6333 l 4767 6333 l 4776 6333 l 4785 6333 l
 4794 6333 l 4802 6333 l 4809 6333 l 4815 6333 l 4822 6333 l
 4827 6333 l 4828 6333 l 4828 6334 l 4828 6337 l 4828 6341 l
 4828 6344 l 4828 6345 l 4826 6345 l 4816 6345 l 4797 6345 l
 4779 6345 l 4769 6345 l 4767 6345 l 4766 6345 l 4765 6345 l
 4764 6346 l 4763 6346 l 4762 6347 l 4762 6348 l 4761 6349 l
 4761 6350 l 4761 6351 l 4761 6352 l 4761 6353 l 4761 6354 l
 4761 6355 l 4762 6356 l 4762 6357 l 4763 6358 l 4764 6359 l
 4765 6359 l 4766 6359 l 4767 6359 l 4769 6359 l 4779 6359 l
 4798 6359 l 4816 6359 l 4826 6359 l 4828 6359 l 4828 6360 l
 4828 6362 l 4828 6367 l 4828 6369 l 4828 6370 l 4826 6370 l
 4817 6370 l 4799 6370 l 4782 6370 l 4773 6370 l 4771 6370 l
 4770 6370 l 4769 6370 l 4768 6370 l 4767 6371 l 4766 6371 l
 4766 6372 l 4765 6373 l 4765 6374 l 4765 6375 l 4765 6376 l
 4765 6377 l 4766 6378 l 4766 6379 l 4767 6380 l 4768 6381 l
 4769 6381 l 4770 6381 l 4771 6381 l 4773 6381 l 4782 6381 l
 4800 6381 l 4817 6381 l 4826 6381 l 4828 6381 l 4828 6384 l
 4828 6391 l 4828 6404 l 4828 6423 l 4828 6449 l 4828 6480 l
 4828 6516 l 4828 6554 l 4828 6592 l 4828 6628 l 4828 6659 l
 4828 6685 l 4828 6704 l 4828 6717 l 4828 6724 l 4828 6727 l
 4827 6727 l 4819 6727 l 4802 6727 l 4780 6727 l 4757 6727 l
 4740 6727 l 4732 6727 l 4731 6727 l 4730 6727 l 4729 6727 l
 4728 6727 l 4727 6728 l 4726 6728 l 4726 6729 l 4726 6730 l
 4725 6730 l 4725 6731 l 4725 6732 l 4725 6733 l 4725 6734 l
 4725 6735 l 4725 6736 l 4725 6737 l 4726 6738 l 4726 6739 l
 4727 6739 l 4727 6740 l 4728 6740 l 4729 6740 l 4730 6740 l
 4731 6740 l 4732 6740 l 4740 6740 l 4757 6740 l 4780 6740 l
 4802 6740 l 4819 6740 l 4827 6740 l 4828 6740 l 4828 6741 l
 4828 6745 l 4828 6750 l 4828 6754 l 4828 6755 l 4827 6755 l
 4822 6755 l 4811 6755 l 4792 6755 l 4770 6755 l 4748 6755 l
 4729 6755 l 4718 6755 l 4713 6755 l 4712 6755 l 4710 6755 l
 4707 6755 l 4706 6756 l 4704 6756 l 4703 6757 l 4702 6758 l
 4701 6759 l 4700 6760 l 4699 6761 l 4699 6763 l 4698 6764 l
 4698 6767 l 4698 6769 l 4698 6770 l 4698 6773 l 4698 6779 l
 4698 6782 l 4698 6783 l 4699 6783 l 4703 6783 l 4713 6783 l
 4730 6783 l 4755 6783 l 4786 6783 l 4821 6783 l 4856 6783 l
 4887 6783 l 4912 6783 l 4929 6783 l 4939 6783 l 4943 6783 l

 4944 6783 l  cp gs col7 1.00 shd ef gr 
%  spline 
% Polyline
n 4783 6706 m 4783 6705 l 4783 6702 l 4783 6693 l 4783 6678 l 4783 6656 l
 4783 6626 l 4783 6592 l 4783 6555 l 4783 6517 l 4783 6483 l
 4783 6453 l 4783 6431 l 4783 6416 l 4783 6407 l 4783 6404 l
 4783 6403 l 4783 6402 l 4783 6401 l 4783 6400 l 4782 6400 l
 4782 6399 l 4781 6399 l 4781 6398 l 4780 6398 l 4779 6398 l
 4778 6398 l 4777 6398 l 4776 6398 l 4775 6398 l 4774 6399 l
 4773 6399 l 4773 6400 l 4772 6401 l 4772 6402 l 4772 6403 l
 4772 6404 l 4772 6407 l 4772 6416 l 4772 6431 l 4772 6453 l
 4772 6483 l 4772 6517 l 4772 6555 l 4772 6592 l 4772 6626 l
 4772 6656 l 4772 6678 l 4772 6693 l 4772 6702 l 4772 6705 l
 4772 6706 l 4772 6707 l 4772 6708 l 4773 6709 l 4773 6710 l
 4774 6711 l 4775 6712 l 4776 6712 l 4777 6712 l 4778 6712 l
 4779 6712 l 4780 6712 l 4781 6712 l 4781 6711 l 4782 6711 l
 4782 6710 l 4783 6709 l 4783 6708 l 4783 6707 l
 4783 6706 l  cp gs col7 1.00 shd ef gr 
%  spline 
% Polyline
n 4813 6705 m 4813 6704 l 4813 6701 l 4813 6692 l 4813 6677 l 4813 6655 l
 4813 6626 l 4813 6592 l 4813 6555 l 4813 6518 l 4813 6484 l
 4813 6455 l 4813 6433 l 4813 6418 l 4813 6409 l 4813 6406 l
 4813 6405 l 4813 6404 l 4813 6402 l 4813 6401 l 4812 6400 l
 4811 6399 l 4811 6398 l 4810 6398 l 4809 6398 l 4808 6397 l
 4807 6397 l 4806 6397 l 4805 6397 l 4804 6397 l 4803 6397 l
 4802 6397 l 4801 6398 l 4800 6398 l 4799 6399 l 4799 6400 l
 4798 6401 l 4798 6402 l 4798 6404 l 4798 6405 l 4798 6406 l
 4798 6409 l 4798 6418 l 4798 6433 l 4798 6455 l 4798 6484 l
 4798 6518 l 4798 6555 l 4798 6592 l 4798 6626 l 4798 6655 l
 4798 6677 l 4798 6692 l 4798 6701 l 4798 6704 l 4798 6705 l
 4798 6706 l 4798 6707 l 4798 6708 l 4799 6709 l 4799 6710 l
 4799 6711 l 4800 6711 l 4801 6712 l 4802 6713 l 4803 6713 l
 4804 6713 l 4805 6713 l 4806 6713 l 4807 6713 l 4808 6713 l
 4809 6712 l 4810 6712 l 4811 6711 l 4812 6710 l 4812 6709 l
 4813 6708 l 4813 6707 l 4813 6706 l
 4813 6705 l  cp gs col7 1.00 shd ef gr 
%  polyline 
% Polyline
0 slj
n 5136 6864 m 5124 6864 l 5124 6894 l 5119 6894 l 5119 6864 l 5108 6864 l
 5108 6860 l 5136 6860 l
 5136 6864 l  cp gs col32 1.00 shd ef gr 
%  polyline 
% Polyline
n 5172 6894 m 5167 6894 l 5167 6867 l 5157 6880 l 5156 6880 l 5146 6867 l
 5145 6867 l 5145 6894 l 5141 6894 l 5141 6860 l 5145 6860 l
 5156 6874 l 5168 6860 l 5172 6860 l
 5172 6894 l  cp gs col32 1.00 shd ef gr 
$F2psEnd
rs

%%EndDocument
 @endspecial 4769 5844 a
 currentpoint grestore moveto
 4769 5844 a 4130 5844 a
 currentpoint currentpoint translate 1 0.76611 div 1 0.76611 div scale
neg exch neg exch translate
 4130
5844 a 5001 3450 a
SDict begin H.S end
 5001 3450 a 5001 3450 a
SDict begin H.R end
 5001 3450
a 5001 3450 a
SDict begin [ /View [/XYZ H.V] /Dest (page.1) cvn H.B /DEST pdfmark
end
 5001 3450 a 5001 3450 a
SDict begin [ {ThisPage} << /Trans << /S /Replace >> >> /PUT pdfmark
end
 5001 3450 a 5001
3450 a
SDict begin [ /Title () /Subject () /Creator (LaTeX with hyperref and prosper packages)
/Author () /Producer (dvips + Distiller) /Keywords () /DOCINFO pdfmark
end
 5001 3450 a 7007 2185 a Fm(S)18 b(E)g(S)g(C)5994
2539 y Fk(S)12 b Fl(U)g(P)g(E)g(R)71 b Fk(E)12 b(S)g(C)g
Fl(A)g(L)g(A)g(R)72 b(S)12 b(I)g(M)g(U)g(L)g(A)-9 b(T)9
b(O)j(R)6227 2943 y Fj(Joe)38 b(Renau,)g(Basilio)h(F)-6
b(r)o(aguela,)37 b(and)g(Liu)i(W)l(ei)6204 3880 y(Univ)l(ersity)f(of)h
(Illinois)h(at)f(Urbana-Champaing)6672 4124 y(http:://sesc.sourcef)l
(orge)n(.net)7147 4368 y(March)f(2002)10245 5222 y
 0 setgray
 10245
5222 a 4500 6000 a
 tx@Dict begin -90 Rot  end
 4500 6000 a eop
%%Page: 2 2
2 1 bop 4500 6000 a
 tx@Dict begin 90 Rot  end
 4500 6000 a 5981 1792 a @beginspecial
-168 @llx 371 @lly 782 @urx 421 @ury 2834 @rwi 283 @rhi
@setspecial
%%BeginDocument: barre-rico.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /ufs/goualard/TEMP/barre_hor.ps
%%Creator: XV Version 3.10a  Rev: 12/29/94 (PNG patch 1.2)  -  by John Bradley
%%BoundingBox: -168 371 782 421
%%Pages: 1
%%DocumentFonts:
%%EndComments
%%EndProlog

%%Page: 1 1

% remember original state
/origstate save def

% build a temporary dictionary
20 dict begin

% define space for color conversions
/grays 950 string def  % space for gray scale line
/npixls 0 def
/rgbindx 0 def

% lower left corner
-168 371 translate

% size of image (on paper, in 1/72inch coords)
949.96800 49.96800 scale

% define 'colorimage' if it isn't defined
%   ('colortogray' and 'mergeprocs' come from xwd2ps
%     via xgrab)
/colorimage where   % do we know about 'colorimage'?
  { pop }           % yes: pop off the 'dict' returned
  {                 % no:  define one
    /colortogray {  % define an RGB->I function
      /rgbdata exch store    % call input 'rgbdata'
      rgbdata length 3 idiv
      /npixls exch store
      /rgbindx 0 store
      0 1 npixls 1 sub {
        grays exch
        rgbdata rgbindx       get 20 mul    % Red
        rgbdata rgbindx 1 add get 32 mul    % Green
        rgbdata rgbindx 2 add get 12 mul    % Blue
        add add 64 idiv      % I = .5G + .31R + .18B
        put
        /rgbindx rgbindx 3 add store
      } for
      grays 0 npixls getinterval
    } bind def

    % Utility procedure for colorimage operator.
    % This procedure takes two procedures off the
    % stack and merges them into a single procedure.

    /mergeprocs { % def
      dup length
      3 -1 roll
      dup
      length
      dup
      5 1 roll
      3 -1 roll
      add
      array cvx
      dup
      3 -1 roll
      0 exch
      putinterval
      dup
      4 2 roll
      putinterval
    } bind def

    /colorimage { % def
      pop pop     % remove 'false 3' operands
      {colortogray} mergeprocs
      image
    } bind def
  } ifelse          % end of 'false' case



% define the colormap
/cmap 117 string def


% load up the colormap
currentfile cmap readhexstring
bcfe04 dcfe84 ccfe44 ecfec4 c4fe24 d4fe64 f4fee4 e4fea4 bcfe14 ccfe54 
f4fed4 c4fe34 d4fe74 fcfef4 ecfeb4 e4fe94 f4fecc fcfee4 ecfeac c4fe1c 
d4fe54 ccfe3c dcfe74 bcfe0c dcfe8c ccfe4c ecfecc c4fe2c d4fe6c e4feac 
bcfe1c f4fedc c4fe3c fcfefc ecfebc e4fe9c fcfeec d4fe5c dcfe7c 
pop pop   % lose return values from readhexstring


% rlecmapimage expects to have 'w h bits matrix' on stack
/rlecmapimage {
  /buffer 1 string def
  /rgbval 3 string def
  /block  384 string def

  % proc to read a block from file, and return RGB data
  { currentfile buffer readhexstring pop
    /bcount exch 0 get store
    bcount 128 ge
    {  % it's a non-run block
      0 1 bcount 128 sub
      { currentfile buffer readhexstring pop pop

        % look up value in color map
        /rgbval cmap buffer 0 get 3 mul 3 getinterval store

        % and put it in position i*3 in block
        block exch 3 mul rgbval putinterval
      } for
      block  0  bcount 127 sub 3 mul  getinterval
    }

    { % else it's a run block
      currentfile buffer readhexstring pop pop

      % look up value in colormap
      /rgbval cmap buffer 0 get 3 mul 3 getinterval store

      0 1 bcount { block exch 3 mul rgbval putinterval } for

      block 0 bcount 1 add 3 mul getinterval
    } ifelse
  } % end of proc
  false 3 colorimage
} bind def


950 50 8			% dimensions of data
[950 0 0 -50 0 50]		% mapping matrix
rlecmapimage

7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f210221870d1f220e220311212a21
7f217f217f217f217f217f2175218211030e820e220e820e220e860e220e23050b048404
090e24212a21
7f217f217f217f217f217f2171218e110312260b041e131e131e131e131e871e17001702
1d24212c21
7f217f217f217f217f217f216921830d1f220e870e221226200408000b00841702070d21
0521842403100d212321
7f217f217f217f217f217f2121218524220f231f213a218f0d0a220e220e23051b041e13
1e0817000c008408190706210421851103221f0d212521
7f217f217f217f217f217f211e2189240e1c1b17000825242136218a0d1026021b041e13
081700110085172001030d210421840316030d212821
7f217f217f217f217f21342186111a120f070a215721860d1110220e220e860e12182504
17000300821b1f212521851f0e2326230e080e841d010908001100820820090209840c1d
1a06210521841026230d212a21
7f217f217f217f21792186241f10220e220e820e220e820e220e820e220e820e220e820e
220e830e070f01010182070a2117218b0610231c1508001708090a2151218e0d1f101d01
14201b1e131e131e08000700820c0d211021840d100311210921881103220e07050b0800
8400171e081e821e081e851e081e0817001000851e2009181a210b21850d22261d24212c
21
7f217f217f217f21472184241f10220e820e220e820e220e820e220e820e220e820e220e
820e220e810e2283221f0d210e219a241f10070f1c09151e041e131e131e131e131e131e
131e131e131e821e080002008b17081410210d1110220e220e820e220e820e220e010e81
2301880126012616191b08000500820422212f2182240d211921890d0a0e072625150417
00100082201a210921890d1110220e23011620048304051f210421891103231c15131e08
1700190082171e090309820c1a210e21841f0e0a0d212e21
7f217f217f217f213f2190241f100e070f011c1920041e131e081e0882081e0882081e08
82081e0882081e0803088304250a2107218b241f030e12181619151e08001d00811e268c
2614201b041e131e131e131e088108178117000f0082091f211521840d0610220e0f0e88
120f012625020c11211321890d0a22121809040817001300831e050a2105218a0d1f101d
0114201b1e170004008408260e220e860e230c020417001800821e2009020982181a2114
21810d213321
7f211221842422121f217f217f217f211221850d0a220e220e820e220e820e220e820e22
0e010e881d0f1605090b041e178117001a008f1e22210d1110221d0f0116190b041e1781
1700220001171f00820b2221102189111022120f0125151b1e011e81081e821e081e821e
081e821e081e821e081e821e1700030082171c0e110e861d01251b1e170015008220181d
021d81220e020e86070119150417000b0086081e131e08170019008308091d210c21830d
1f24214121
7f210721830d0a220e040e83230504088308052421492185240a22230f01130182070a21
7f2106218c240a03220e220e220e220e1d0f840f01231f217f210a2199240a221d0f0116
191b1e131e131e131e131e131e131e131e17002300810b16871609200413081700490087
171e051d1f10220e0a0e8712232625201b1e178117001b000108011e81081e821e081e82
1e081e821e081e821e081e831e0817000c0085171e201e08000300831720090c840c090b
1b1e871e081e081e0817001f0083081e201e821e20090809820c03210b21860d0a222307
0d210521010d3a21
7f21042188112218141b13081e088108178117000300821b1f2140218b241f100e070f1c
25021b1317811700140083081410217f218c241f10070f05021b04131e131e011e810817
811700010093170207220e220e220e220e220e220e22120f18018301231f216e218c0d0a
22120f0116191b130817004c000117811e208120090509822008002c008308200c188518
0c09021b1e821e081e821e081e821e081e811e08810817811700400081171e871e09181a
061c08000300851e200b1e1700250083171e200983091806211721820d110a010a841d26
1918214421
6c219a1103220e220e220e220e220e220e220e220e220e22120f050b08000d0093091d22
0e220e220e220e220e220e220e2203112127218c241f100e070f0105021b1e08001e0082
0422216a2189241f10220e230f1826018201260182012601890126160509150408170011
0085131e131e131e821e131e831e131e0882081700020083082524215e2183240a220e82
0e220e8b0e22120f011605190b1308178117004d008817081e2009181d06210821810900
22000408071e0117510085080b09181a21022182060900040082081700120082171e000f
00011e83091806210d21821a031d8e1d221d221d0e22030a110d240d240d810d21012182
2406214521
68219711030f252004131e131e131e131e131e131e131e131e131e821e08001100011e83
131e131e821e131e821e131e821e131e811e1383131c1f211e218d0d1110221d0f260519
0b041e17002500821b0c0103018426161c05250b258405160f1d0e210e82070f26012681
0126822601268426010f1f2117218a241f100e070f1609150408820817003900821b1f21
56218a0a0f0c2514190215041e0801088217081701173400011781001781170016000117
011e85200c181d06210e218105000d0083171e08000c00011781081e041e020802171e00
82081e208120090d0982201e001b00850820090c1a210721821817000b008b081e200920
1920192009200986090c1d1a060900030083171e20090209010c83181a0621082187060a
0e1d071d0e1d821d0f1802180107841d220a24215221
1d21830d1f220e820e220e820e220e820e220e860e220e221024212321840d10230f010a
01852616091b08003b00820812210421830d1f102281220e820e220e820e220e820e220e
820e220e820e220e890e1d0f011609201b1317811700470081081e821e081e821e081e82
1e081e821e081e821e081e821e081e821e081e821e081e821e081e821e081e841e081e08
000a0083170b260182012601820126018201260182012601820126018a01260126160525
19151b088108004200820c0d21032196240a03220e220e220e220e220e220e220e220e22
0e1d0f810f01150182231f210921840d0610220e0e0e8418140417002100821720090409
822017002c008317081e208520090c1d1a211621821a201e811e20832009200982092009
86092009181a0c003400011e8520090c181a211221831a0c200982092009820920091109
830c1a06210a2182062000080087082009181a0621060206812106810621052183061d0c
0984090c181d1a011a02060e21820d062482240d216021
1c21970d0702041e131e131e131e131e131e131e0420050f100d211f21840d231b17004d
00a008182212230f011609151b131e131e131e131e131e131e131e131e131e130817001b
0083170017007f0041008c201a241f10070f1c021b04131e821e131e821e131e821e131e
821e131e011e810817811700160001178205112101218a111022120f181614151b1e821e
081e821e081e821e081e821e081e821e0817811700250082090621032182060900260088
17081e20090c1d1a212e2183062017001f008317081e208120090a09830c181a21442183
240917008300081e2001208409181a0621142183061a1d1a841a062106217721
1b21830d071b000f008517080b05230e8f0e220e220e220e220e220e220e220e22842210
110d210821830d231e004f00841e041e08178117007f0065008117000e000108011e8720
0c16090b1e08003000880401181614201b1e178117003a00822006210421820620001f00
81171e861e20090c1d1a213521820609001700011788081e20090c181a0621492184060a
101a1086101a10110d210d880d061a180c09181a0601067f211b21
1b21820a1900140081081e821e131e821e131e821e131e821e131e8d1e131e13040b1925
1812221f0d210321820a20007f007f0033000108160081081e031e820817003600811700
40008308091a2106218203091e031e8120091609830c1d1a213d21821f01091409840c18
1a06214e21010d0124010685240624060d210321850a26012206217f211f21
1b21831020170029008c1708040b021925051626051e007f002f000d1782081e20812009
1e0982201e00370081171e811e208120090c0982181d0683061808007900011781081e07
1e8120090e09820c1d217f216721820611217f212221
1b21830d0e0c090c0982201e004d00820817002a000217011e8120090c09811e00380082
17081e851e090c181a068306210621822106218221062182210621822106212521821a0c
09010982201e002700011781081e811e2085200c181d06211321821a200022000117011e
82091e0035008317081e20812009090982201e0002008608091a062106217f215521810d
217f215321
2d21851a0c201e17004300850820090c1a068206200022008317081e208620090c181d1a
210f21821d08002e000117021e0120840c181a06214221821d0c09250983181d06211c21
821a20001c008817081e2009181d062101218109002d0081171e871e20090c181a06210e
21851d09200c1a217f215a2182110d215321810d217d21
30218306180c090f0983201e08002500811e09820920090109830c1a062104218203201e
081e01201309810c1d821d1a21182182062000260081171e011e8620090c181a06217f21
1521830d1d0c091909840c181d06210721821a191e091e83200920098209200982092009
8209200982092009820920098209200982092009820920098209200985090c181a06217f
217621810d215121860d1026142510217c21
462185061d0c2017002000820906214e21820618098209200981092082201e178217081e
011e01201309840c181a06217f217f217f217f214421810d2401248306240d217d21
4a21841d201e0800150081081e041e820906217f217f217f217f217f217f214521
4e2185061a18201e000b0085171e091d06217f217f217f217f217f217f214e21
5221821a0c090909830c1d06217f217f217f217f217f217f215121
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521

%
% Compression made this file 2.88% of the uncompressed size.
%


showpage

% stop using temporary dictionary
end

% restore original state
origstate restore

%%Trailer

%%EndDocument
 @endspecial 5001 5222 a @beginspecial @setspecial
 tx@Dict begin STP newpath 1.0 SLW 0.5451 0.39608 0.03137 setrgbcolor
 /ArrowA { moveto } def /ArrowB { } def [ 341.43292 -28.45274 -22.76227
-28.45274  /Lineto /lineto load def false Line  gsave 1.0 SLW 0.5451
0.39608 0.03137 setrgbcolor 0 setlinecap stroke  grestore end
 
@endspecial
621 x Fi(SESC)20 b(\(IA)n(COMA)e(g)o(roup\))2960 b(Joe)20
b(Renau,)h(Basilio)e(F)m(r)o(aguela,)h(and)g(Liu)g(W)n(ei)39
b(\226)20 b(page)40 b(2/23)4266 1057 y
 gsave currentpoint currentpoint translate 270 neg rotate neg exch
neg exch translate
 4266 1057 a @beginspecial
276 @llx 366 @lly 336 @urx 426 @ury 141 @rwi 141 @rhi
@setspecial
%%BeginDocument: angleHG.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/rico/texte/texstyle/Prosper-beta/img/angleHG.ps
%%Creator: XV Version 3.10a  Rev: 12/29/94 (PNG patch 1.2)  -  by John Bradley
%%BoundingBox: 276 366 336 426
%%Pages: 1
%%DocumentFonts:
%%EndComments
%%EndProlog

%%Page: 1 1

% remember original state
/origstate save def

% build a temporary dictionary
20 dict begin

% define string to hold a scanline's worth of data
/pix 180 string def

% define space for color conversions
/grays 60 string def  % space for gray scale line
/npixls 0 def
/rgbindx 0 def

% print in landscape mode
90 rotate 0 -612 translate

% lower left corner
366 276 translate

% size of image (on paper, in 1/72inch coords)
59.97600 59.97600 scale

% define 'colorimage' if it isn't defined
%   ('colortogray' and 'mergeprocs' come from xwd2ps
%     via xgrab)
/colorimage where   % do we know about 'colorimage'?
  { pop }           % yes: pop off the 'dict' returned
  {                 % no:  define one
    /colortogray {  % define an RGB->I function
      /rgbdata exch store    % call input 'rgbdata'
      rgbdata length 3 idiv
      /npixls exch store
      /rgbindx 0 store
      0 1 npixls 1 sub {
        grays exch
        rgbdata rgbindx       get 20 mul    % Red
        rgbdata rgbindx 1 add get 32 mul    % Green
        rgbdata rgbindx 2 add get 12 mul    % Blue
        add add 64 idiv      % I = .5G + .31R + .18B
        put
        /rgbindx rgbindx 3 add store
      } for
      grays 0 npixls getinterval
    } bind def

    % Utility procedure for colorimage operator.
    % This procedure takes two procedures off the
    % stack and merges them into a single procedure.

    /mergeprocs { % def
      dup length
      3 -1 roll
      dup
      length
      dup
      5 1 roll
      3 -1 roll
      add
      array cvx
      dup
      3 -1 roll
      0 exch
      putinterval
      dup
      4 2 roll
      putinterval
    } bind def

    /colorimage { % def
      pop pop     % remove 'false 3' operands
      {colortogray} mergeprocs
      image
    } bind def
  } ifelse          % end of 'false' case



60 60 8			% dimensions of data
[60 0 0 -60 0 60]		% mapping matrix
{currentfile pix readhexstring pop}
false 3 colorimage

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffafee3effeaaffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffafee3e3fe64ffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffe3fe64fafee3ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffe9fe88f1feb3ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffe8fe86dffe55fefefeffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffebfe96dafe37fefefeffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffedfe9edefe48f7fed5ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffedfe9ee2fe60eefea5f5fecaecfe95ecfe97ecfe98
ecfe99ecfe9bf6feceffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffeffeaadffe4fe0fe55dcfe3f
dbfe3cdbfe3ddbfe3dddfe48defe4cdcfe43d9fe32d6fe20e2fe5fe3fe67defe4ddefe4d
defe4edefe4edbfe3bdbfe3cdcfe3ddcfe3fdcfe40dcfe42ddfe43ddfe45ddfe46ddfe48
ddfe46e2fe63e5fe72e5fe74e6fe76e6fe77e6fe79e7fe7ae9fe86e8fe85ebfe94ecfe97
ecfe99ecfe9cedfe9eeffeacf2febcf3febef3fec1f4fec4f9fedfffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffeffeaaf1feb3f5fec7e9fe87
e7fe7be7fe7be7fe7be2fe60e1fe5bd6fe1dd8fe2adafe33e1fe5bdffe54defe4edffe50
dffe51dffe53e0fe54ddfe49ddfe4bdefe4cdefe4edefe50dffe52dffe54e5fe73eafe93
e9fe89e6fe7ae4fe6ce4fe6ee8fe84e8fe85e9fe87e9fe8ae8fe84e7fe7ce8fe81e9fe8a
f0feb0f8fedbf9fedff1feb8f1febaeafe8bfbfeeafbfeebfdfef5ffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff5fecddffe52e1fe5df5fec9f5fec9f5fecaf5feca
f5fecbf5feccf5feccf5fecdf6fecef6fecef6fecef6fecff6fed0f6fed1eefea5e9fe8a
f6fed1f7fed7f7fed8f7fed9f6fecdfafee8fcfef1fcfef2fdfef7fcfef3fdfef7fefefc
fefefcfefefdf9fee0f6fecff5feccf4fec2ffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff5fecde3fe64e5fe74ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffdfef5fefefdfefefdfefefcfefefcfffffffefef9
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff5fecde5fe74dffe53ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff6fecee6fe79e5fe6ff8fed8ffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff6fecee6fe7aebfe95effeaaffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff6fecee6fe7aedfe9eeefea2ffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff6fecee6fe7bedfe9eeefea3ffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff6fecfe6fe78ecfe9eeefea5ffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffefefe
fefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff6fed0e2fe63e0fe59dffe55ffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffefefe
fefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffedfe9fe2fe5fd8fe2ad8fe2dffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffecfe9adffe53d6fe1cdefe4cf6fecfffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffedfe9cd8fe2cd6fe20defe4bf6fed0ffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffefefdffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffedfe9dd8fe27d7fe22defe4ef6fed0ffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffedfe9dd7fe26d6fe20e0fe5bf6fed2ffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff3febdd7fe22d7fe22e1fe5ef7fed3ffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff4fec6d6fe20d7fe21e0fe57f7fed4ffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff4fec6d6fe20d6fe1fe0fe59f7fed5ffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff4fec6d6fe1ed6fe1ee5fe73f7fed6ffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff4fec6d6fe1dd9fe32e0fe56ffffffffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff5fecce0fe55defe48e8fe81ffffffffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffbfeede7fe7fe0fe56e9fe85ffffffffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff7fed8e8fe84e7fe7ef1feb4ffffffffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff2feb8edfea0effea6f1feb6ffffffffffffffffff
fffffffefefefefefeffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffefefceffeabf0feafeffea7f2feb7ffffffffffffffffff
fffffffefefefefefefefefeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffefefcf5fecaecfe9de7fe7af8feddffffffffffffffffff
fffffffefefefefefefefefefefefeffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffefefcf5fecce8fe85e8fe80ffffffffffffffffffffffff
fffffffefefefefefefefefeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffff8fedefdfef8fdfefbf3fec0e9fe89ecfe96ffffffffffffffffffffffff
fefefefefefefefefefefefeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffdfef6fefefafefefaf4fec2e9fe89ecfe96ffffffffffffffffffffffff
fefefefefefefefefefefefeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffdfef6fefefefefefdf4fec2e8fe85edfe9dffffffffffffffffffffffff
fefefefefefefefefefefefeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffefef9fefefdfefefce7fe7be5fe76f2feb7ffffffffffffffffffffffff
fffffffffffffefefefefefeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffdfef6fdfefafefefbe2fe65e5fe75f6fed0ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffdfef9fefefce6fe79e6fe77fafee6ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffcfef6fefefbecfe9be7fe7efbfeecffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffdfef5fdfef7f7fed5e9fe8dfcfef2ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffcfeeffbfeebedfea1fdfef7ffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffefefeffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffefefdfbfee9effeabffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffefefefefefeffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffbfeeceffea6ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff9fee3f3fec1ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffeefea2f8fedaffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff1feb2fafee4ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffcfef0fefefaffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff


showpage

% stop using temporary dictionary
end

% restore original state
origstate restore

%%Trailer

%%EndDocument
 @endspecial 4511 1057 a
 currentpoint grestore moveto
 4511 1057 a 4130 5844 a
 currentpoint currentpoint translate 0.76611 0.76611 scale neg exch
neg exch translate
 4130
5844 a 4130 5844 a
 gsave currentpoint currentpoint translate 0 neg rotate neg exch neg
exch translate
 4130 5844 a @beginspecial 0 @llx 0
@lly 37 @urx 42 @ury 370 @rwi @setspecial
%%BeginDocument: figs/uiuc.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: uiuc.eps
%%Creator: fig2dev Version 3.2 Patchlevel 3d
%%CreationDate: Sun Feb 10 22:03:46 2002
%%For: renau@nether.cs.uiuc.edu (Jose Renau)
%%BoundingBox: 0 0 37 42
%%Magnification: 1.0000
%%EndComments
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def
/col32 {0.200 0.200 0.400 srgb} bind def
/col33 {0.800 0.400 0.000 srgb} bind def

end
save
newpath 0 42 moveto 0 0 lineto 37 0 lineto 37 42 lineto closepath clip newpath
-273.7 413.7 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
 0.06000 0.06000 sc
%
% Fig objects follow
%
%  polyline 
% Polyline
n 5070 6872 m 5070 6227 l 4584 6227 l 4584 6872 l
 5070 6872 l  cp gs col32 1.00 shd ef gr 
%  polyline 
% Polyline
15.000 slw
n 5070 6872 m 5070 6227 l 4584 6227 l 4584 6872 l
 5070 6872 l  cp gs col32 s gr 
%  polyline 
% Polyline
0.000 slw
n 5056 6858 m 5056 6243 l 4598 6243 l 4598 6858 l
 5056 6858 l  cp gs col32 1.00 shd ef gr 
%  polyline 
% Polyline
7.500 slw
n 5056 6858 m 5056 6243 l 4598 6243 l 4598 6858 l
 5056 6858 l  cp gs col33 s gr 
%  spline 
% Polyline
2 slj
0.000 slw
n 4944 6783 m 4944 6781 l 4944 6773 l 4944 6759 l 4944 6751 l 4944 6749 l
 4943 6749 l 4935 6748 l 4924 6746 l 4914 6744 l 4906 6742 l
 4900 6741 l 4896 6739 l 4892 6738 l 4887 6735 l 4884 6732 l
 4880 6728 l 4877 6722 l 4875 6716 l 4873 6709 l 4872 6702 l
 4871 6693 l 4870 6683 l 4869 6670 l 4869 6654 l 4868 6637 l
 4868 6621 l 4868 6609 l 4868 6604 l 4868 6603 l 4868 6602 l
 4868 6597 l 4868 6585 l 4868 6567 l 4868 6544 l 4868 6521 l
 4868 6503 l 4868 6491 l 4868 6486 l 4868 6485 l 4868 6483 l
 4868 6474 l 4868 6457 l 4869 6438 l 4869 6420 l 4870 6406 l
 4870 6395 l 4871 6387 l 4873 6381 l 4874 6375 l 4876 6371 l
 4879 6367 l 4882 6365 l 4885 6363 l 4889 6362 l 4892 6361 l
 4898 6359 l 4905 6358 l 4915 6356 l 4925 6354 l 4933 6352 l
 4934 6352 l 4934 6350 l 4934 6343 l 4934 6331 l 4934 6324 l
 4934 6322 l 4933 6322 l 4928 6322 l 4916 6322 l 4896 6322 l
 4869 6322 l 4837 6322 l 4806 6322 l 4779 6322 l 4759 6322 l
 4747 6322 l 4742 6322 l 4741 6322 l 4740 6322 l 4737 6322 l
 4732 6322 l 4729 6322 l 4726 6322 l 4724 6322 l 4721 6323 l
 4718 6324 l 4716 6325 l 4714 6326 l 4712 6327 l 4710 6329 l
 4707 6332 l 4705 6334 l 4703 6336 l 4701 6338 l 4700 6339 l
 4699 6341 l 4698 6342 l 4697 6344 l 4696 6346 l 4696 6347 l
 4695 6349 l 4695 6351 l 4695 6353 l 4694 6356 l 4694 6358 l
 4694 6359 l 4694 6360 l 4694 6362 l 4694 6365 l 4694 6367 l
 4695 6369 l 4695 6370 l 4696 6372 l 4697 6374 l 4697 6375 l
 4698 6377 l 4699 6378 l 4701 6379 l 4702 6381 l 4704 6383 l
 4706 6385 l 4708 6386 l 4709 6388 l 4710 6389 l 4712 6389 l
 4713 6390 l 4715 6391 l 4716 6391 l 4718 6391 l 4720 6391 l
 4721 6391 l 4724 6391 l 4726 6391 l 4727 6391 l 4729 6391 l
 4732 6390 l 4735 6390 l 4737 6389 l 4740 6388 l 4742 6387 l
 4744 6385 l 4747 6383 l 4748 6381 l 4749 6379 l 4750 6376 l
 4751 6372 l 4752 6369 l 4752 6368 l 4752 6366 l 4752 6364 l
 4752 6362 l 4752 6361 l 4752 6359 l 4752 6358 l 4751 6357 l
 4751 6356 l 4750 6355 l 4749 6354 l 4749 6353 l 4748 6352 l
 4747 6351 l 4746 6350 l 4745 6349 l 4744 6348 l 4743 6348 l
 4742 6347 l 4741 6346 l 4740 6346 l 4739 6346 l 4738 6346 l
 4736 6345 l 4735 6345 l 4733 6345 l 4732 6345 l 4730 6345 l
 4729 6345 l 4728 6346 l 4727 6346 l 4725 6346 l 4724 6347 l
 4724 6348 l 4723 6348 l 4722 6349 l 4721 6351 l 4720 6352 l
 4719 6353 l 4718 6354 l 4718 6355 l 4717 6356 l 4717 6357 l
 4717 6358 l 4716 6359 l 4717 6360 l 4717 6361 l 4717 6362 l
 4717 6363 l 4718 6364 l 4718 6365 l 4719 6366 l 4719 6367 l
 4720 6367 l 4720 6368 l 4721 6368 l 4722 6369 l 4723 6369 l
 4723 6368 l 4724 6368 l 4725 6368 l 4726 6367 l 4727 6367 l
 4727 6366 l 4728 6366 l 4728 6365 l 4729 6365 l 4729 6364 l
 4729 6363 l 4729 6362 l 4729 6361 l 4728 6360 l 4728 6359 l
 4729 6359 l 4729 6358 l 4730 6357 l 4731 6357 l 4731 6356 l
 4732 6356 l 4733 6356 l 4734 6356 l 4735 6356 l 4735 6357 l
 4736 6357 l 4737 6357 l 4738 6357 l 4738 6358 l 4739 6358 l
 4739 6359 l 4739 6360 l 4740 6360 l 4740 6361 l 4740 6362 l
 4741 6362 l 4741 6363 l 4741 6364 l 4740 6364 l 4740 6365 l
 4740 6366 l 4740 6368 l 4739 6371 l 4739 6373 l 4738 6374 l
 4737 6375 l 4736 6376 l 4735 6377 l 4733 6378 l 4732 6379 l
 4731 6379 l 4729 6379 l 4727 6380 l 4725 6380 l 4724 6380 l
 4722 6380 l 4721 6380 l 4720 6380 l 4719 6380 l 4718 6380 l
 4717 6379 l 4716 6379 l 4715 6379 l 4715 6378 l 4714 6377 l
 4713 6376 l 4712 6375 l 4711 6374 l 4710 6373 l 4710 6372 l
 4709 6372 l 4708 6371 l 4708 6370 l 4707 6369 l 4707 6368 l
 4707 6367 l 4706 6365 l 4706 6363 l 4706 6361 l 4706 6359 l
 4706 6357 l 4706 6355 l 4706 6353 l 4706 6352 l 4707 6351 l
 4707 6350 l 4707 6348 l 4708 6347 l 4709 6346 l 4709 6345 l
 4710 6344 l 4712 6343 l 4713 6342 l 4715 6340 l 4717 6339 l
 4718 6337 l 4720 6337 l 4721 6336 l 4723 6335 l 4725 6334 l
 4727 6334 l 4729 6334 l 4731 6333 l 4734 6333 l 4738 6333 l
 4740 6333 l 4741 6333 l 4742 6333 l 4744 6333 l 4747 6333 l
 4753 6333 l 4759 6333 l 4767 6333 l 4776 6333 l 4785 6333 l
 4794 6333 l 4802 6333 l 4809 6333 l 4815 6333 l 4822 6333 l
 4827 6333 l 4828 6333 l 4828 6334 l 4828 6337 l 4828 6341 l
 4828 6344 l 4828 6345 l 4826 6345 l 4816 6345 l 4797 6345 l
 4779 6345 l 4769 6345 l 4767 6345 l 4766 6345 l 4765 6345 l
 4764 6346 l 4763 6346 l 4762 6347 l 4762 6348 l 4761 6349 l
 4761 6350 l 4761 6351 l 4761 6352 l 4761 6353 l 4761 6354 l
 4761 6355 l 4762 6356 l 4762 6357 l 4763 6358 l 4764 6359 l
 4765 6359 l 4766 6359 l 4767 6359 l 4769 6359 l 4779 6359 l
 4798 6359 l 4816 6359 l 4826 6359 l 4828 6359 l 4828 6360 l
 4828 6362 l 4828 6367 l 4828 6369 l 4828 6370 l 4826 6370 l
 4817 6370 l 4799 6370 l 4782 6370 l 4773 6370 l 4771 6370 l
 4770 6370 l 4769 6370 l 4768 6370 l 4767 6371 l 4766 6371 l
 4766 6372 l 4765 6373 l 4765 6374 l 4765 6375 l 4765 6376 l
 4765 6377 l 4766 6378 l 4766 6379 l 4767 6380 l 4768 6381 l
 4769 6381 l 4770 6381 l 4771 6381 l 4773 6381 l 4782 6381 l
 4800 6381 l 4817 6381 l 4826 6381 l 4828 6381 l 4828 6384 l
 4828 6391 l 4828 6404 l 4828 6423 l 4828 6449 l 4828 6480 l
 4828 6516 l 4828 6554 l 4828 6592 l 4828 6628 l 4828 6659 l
 4828 6685 l 4828 6704 l 4828 6717 l 4828 6724 l 4828 6727 l
 4827 6727 l 4819 6727 l 4802 6727 l 4780 6727 l 4757 6727 l
 4740 6727 l 4732 6727 l 4731 6727 l 4730 6727 l 4729 6727 l
 4728 6727 l 4727 6728 l 4726 6728 l 4726 6729 l 4726 6730 l
 4725 6730 l 4725 6731 l 4725 6732 l 4725 6733 l 4725 6734 l
 4725 6735 l 4725 6736 l 4725 6737 l 4726 6738 l 4726 6739 l
 4727 6739 l 4727 6740 l 4728 6740 l 4729 6740 l 4730 6740 l
 4731 6740 l 4732 6740 l 4740 6740 l 4757 6740 l 4780 6740 l
 4802 6740 l 4819 6740 l 4827 6740 l 4828 6740 l 4828 6741 l
 4828 6745 l 4828 6750 l 4828 6754 l 4828 6755 l 4827 6755 l
 4822 6755 l 4811 6755 l 4792 6755 l 4770 6755 l 4748 6755 l
 4729 6755 l 4718 6755 l 4713 6755 l 4712 6755 l 4710 6755 l
 4707 6755 l 4706 6756 l 4704 6756 l 4703 6757 l 4702 6758 l
 4701 6759 l 4700 6760 l 4699 6761 l 4699 6763 l 4698 6764 l
 4698 6767 l 4698 6769 l 4698 6770 l 4698 6773 l 4698 6779 l
 4698 6782 l 4698 6783 l 4699 6783 l 4703 6783 l 4713 6783 l
 4730 6783 l 4755 6783 l 4786 6783 l 4821 6783 l 4856 6783 l
 4887 6783 l 4912 6783 l 4929 6783 l 4939 6783 l 4943 6783 l

 4944 6783 l  cp gs col7 1.00 shd ef gr 
%  spline 
% Polyline
n 4783 6706 m 4783 6705 l 4783 6702 l 4783 6693 l 4783 6678 l 4783 6656 l
 4783 6626 l 4783 6592 l 4783 6555 l 4783 6517 l 4783 6483 l
 4783 6453 l 4783 6431 l 4783 6416 l 4783 6407 l 4783 6404 l
 4783 6403 l 4783 6402 l 4783 6401 l 4783 6400 l 4782 6400 l
 4782 6399 l 4781 6399 l 4781 6398 l 4780 6398 l 4779 6398 l
 4778 6398 l 4777 6398 l 4776 6398 l 4775 6398 l 4774 6399 l
 4773 6399 l 4773 6400 l 4772 6401 l 4772 6402 l 4772 6403 l
 4772 6404 l 4772 6407 l 4772 6416 l 4772 6431 l 4772 6453 l
 4772 6483 l 4772 6517 l 4772 6555 l 4772 6592 l 4772 6626 l
 4772 6656 l 4772 6678 l 4772 6693 l 4772 6702 l 4772 6705 l
 4772 6706 l 4772 6707 l 4772 6708 l 4773 6709 l 4773 6710 l
 4774 6711 l 4775 6712 l 4776 6712 l 4777 6712 l 4778 6712 l
 4779 6712 l 4780 6712 l 4781 6712 l 4781 6711 l 4782 6711 l
 4782 6710 l 4783 6709 l 4783 6708 l 4783 6707 l
 4783 6706 l  cp gs col7 1.00 shd ef gr 
%  spline 
% Polyline
n 4813 6705 m 4813 6704 l 4813 6701 l 4813 6692 l 4813 6677 l 4813 6655 l
 4813 6626 l 4813 6592 l 4813 6555 l 4813 6518 l 4813 6484 l
 4813 6455 l 4813 6433 l 4813 6418 l 4813 6409 l 4813 6406 l
 4813 6405 l 4813 6404 l 4813 6402 l 4813 6401 l 4812 6400 l
 4811 6399 l 4811 6398 l 4810 6398 l 4809 6398 l 4808 6397 l
 4807 6397 l 4806 6397 l 4805 6397 l 4804 6397 l 4803 6397 l
 4802 6397 l 4801 6398 l 4800 6398 l 4799 6399 l 4799 6400 l
 4798 6401 l 4798 6402 l 4798 6404 l 4798 6405 l 4798 6406 l
 4798 6409 l 4798 6418 l 4798 6433 l 4798 6455 l 4798 6484 l
 4798 6518 l 4798 6555 l 4798 6592 l 4798 6626 l 4798 6655 l
 4798 6677 l 4798 6692 l 4798 6701 l 4798 6704 l 4798 6705 l
 4798 6706 l 4798 6707 l 4798 6708 l 4799 6709 l 4799 6710 l
 4799 6711 l 4800 6711 l 4801 6712 l 4802 6713 l 4803 6713 l
 4804 6713 l 4805 6713 l 4806 6713 l 4807 6713 l 4808 6713 l
 4809 6712 l 4810 6712 l 4811 6711 l 4812 6710 l 4812 6709 l
 4813 6708 l 4813 6707 l 4813 6706 l
 4813 6705 l  cp gs col7 1.00 shd ef gr 
%  polyline 
% Polyline
0 slj
n 5136 6864 m 5124 6864 l 5124 6894 l 5119 6894 l 5119 6864 l 5108 6864 l
 5108 6860 l 5136 6860 l
 5136 6864 l  cp gs col32 1.00 shd ef gr 
%  polyline 
% Polyline
n 5172 6894 m 5167 6894 l 5167 6867 l 5157 6880 l 5156 6880 l 5146 6867 l
 5145 6867 l 5145 6894 l 5141 6894 l 5141 6860 l 5145 6860 l
 5156 6874 l 5168 6860 l 5172 6860 l
 5172 6894 l  cp gs col32 1.00 shd ef gr 
$F2psEnd
rs

%%EndDocument
 @endspecial 4769 5844 a
 currentpoint grestore moveto
 4769 5844 a 4130 5844 a
 currentpoint currentpoint translate 1 0.76611 div 1 0.76611 div scale
neg exch neg exch translate
 4130
5844 a 5001 3450 a
SDict begin H.S end
 5001 3450 a 5001 3450 a
SDict begin H.R end
 5001 3450
a 5001 3450 a
SDict begin [ /View [/XYZ H.V] /Dest (page.1) cvn H.B /DEST pdfmark
end
 5001 3450 a 5001 3450 a
SDict begin [ {ThisPage} << /Trans << /S /Replace >> >> /PUT pdfmark
end
 5001 3450 a 5001
3450 a
SDict begin [ /Page 2/View [ /XYZ null null null ] /Title (Joe vs. The Simulators)
/OUT pdfmark end
 5001 3450 a 6135 1453 a Fm(J)18 b Fn(O)g(E)116
b(V)18 b(S)g Fm(.)140 b(T)18 b Fn(H)g(E)116 b Fm(S)18
b Fn(I)g(M)g(U)g(L)g(A)-8 b(T)7 b(O)18 b(R)g(S)4581 2157
y Fh(94-95)101 b Fg(SIMUS:)66 b(An)h(R2000)g(tr)n(ace-dr)t(iv)-6
b(en)66 b(sim)g(\(14KLOC\))4581 2528 y Fh(98-01)101 b
Fg(MINT+SMT)-5 b(:)67 b(An)g(R3000)g(e)-7 b(x)g(ecution-dr)t(iv)h(en)64
b(sim)4934 2843 y @beginspecial 276 @llx 376 @lly 336
@urx 416 @ury 113 @rwi @setspecial
%%BeginDocument: green-bullet-on-white.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/fred/TeX/STYLES/Prosper/img/green-bullet-on-white.ps
%%Creator: XV Version 3.10a+FLmask  Rev: 12/29/94  -  by John Bradley
%%BoundingBox: 276 376 336 416
%%Pages: 1
%%DocumentFonts:
%%EndComments
%%EndProlog

%%Page: 1 1

% remember original state
/origstate save def

% build a temporary dictionary
20 dict begin

% define space for color conversions
/grays 60 string def  % space for gray scale line
/npixls 0 def
/rgbindx 0 def

% lower left corner
276 376 translate

% size of image (on paper, in 1/72inch coords)
59.97600 40.03200 scale

% define 'colorimage' if it isn't defined
%   ('colortogray' and 'mergeprocs' come from xwd2ps
%     via xgrab)
/colorimage where   % do we know about 'colorimage'?
  { pop }           % yes: pop off the 'dict' returned
  {                 % no:  define one
    /colortogray {  % define an RGB->I function
      /rgbdata exch store    % call input 'rgbdata'
      rgbdata length 3 idiv
      /npixls exch store
      /rgbindx 0 store
      0 1 npixls 1 sub {
        grays exch
        rgbdata rgbindx       get 20 mul    % Red
        rgbdata rgbindx 1 add get 32 mul    % Green
        rgbdata rgbindx 2 add get 12 mul    % Blue
        add add 64 idiv      % I = .5G + .31R + .18B
        put
        /rgbindx rgbindx 3 add store
      } for
      grays 0 npixls getinterval
    } bind def

    % Utility procedure for colorimage operator.
    % This procedure takes two procedures off the
    % stack and merges them into a single procedure.

    /mergeprocs { % def
      dup length
      3 -1 roll
      dup
      length
      dup
      5 1 roll
      3 -1 roll
      add
      array cvx
      dup
      3 -1 roll
      0 exch
      putinterval
      dup
      4 2 roll
      putinterval
    } bind def

    /colorimage { % def
      pop pop     % remove 'false 3' operands
      {colortogray} mergeprocs
      image
    } bind def
  } ifelse          % end of 'false' case



% define the colormap
/cmap 723 string def


% load up the colormap
currentfile cmap readhexstring
041808 049008 8c948c 045204 4c544c 04c804 84e284 449644 c4cbc4 0c380e 
04ac07 cce6cc 345e2c e4e7e4 046604 2c3a2c 347234 e4fee2 048208 64cc60 
34922c 24b224 04e404 044604 647264 242623 049f07 8cae8c 04bc06 24c61c 
f4f8f3 1c541c 04d804 1c621c 1c7220 0c280d 14910f 045e04 047c04 ccdcd0 
14ac18 1c481c 747473 04d105 0c6c0b 24852a 1c381c f4f1f3 acafac f4fef5 
0c310c acc6ac 049708 a4a4a3 3c4a44 148314 144812 9cea94 04b405 149e14 
1cbc1c 044004 e4fef4 dcdddd 748274 5c5959 4cba54 145b11 145413 147412 
c4fec4 e4f1e7 146411 088a0a 243028 09c207 fcf8f3 147c13 14c80e acceac 
3c3939 04f405 044e07 07a608 14d00f 0c1f10 0c900b d4d3d4 ecfee3 1c291d 
0c6e14 bcbfbd d4f6d4 909a94 4c5a50 0cac08 24ba24 547e54 0cbc0a 0c5c16 
0c7c0b fcf1fb acb8ac 1c311c aca7a9 e2e2e2 a4e2a4 0cc80a 6c9a6c 143715 
0c650a 0c840b 07de06 14970c 0c980a 0cb40a 848583 ecf0f0 c3c6c3 0c540d 
0c740c cccccc 74ce6c 30a02c 04ec05 54aa5c 6cb66c 9cfa9c 2c862c 5c926c 
6ca674 b4deac 9cda9c 34aa2c 6c7e6c acfeac 448244 34d22c 7d7d7c 6c6d6c 
445644 4c4d4c 1c7a19 1c3e1c 3c3f3c 2c422c 7c9a84 54c254 dceadc 144014 
343231 bccebc bcbabc 447244 6c6664 9c9d9c 7caa7c 349a38 6c7a74 84b69c 
1c4e18 898a89 ccfadc 1c6c2c b8e2c0 1c8a24 a1aaa1 3c4e3c 5f5e5c d8fed8 
24be24 78d670 688668 148a14 14a618 145624 0c480e 2c292b 142916 1c921c 
d4dad9 243828 143017 b4d2bc b4b7b5 1c961c 8c868c 247e24 144e13 04fa04 
246224 fcfefc 0c4e0c ace2b4 3caa3c 244e24 0c180c 949394 545454 ece9ec 
343634 2cb127 6c736c 0ca00c 0cda08 0c5c0b 0ccf06 146a0c b4b2b4 646464 
b4c2b4 0c3f0c ecfdf9 e4dedc ccfdcc 2c2f2b 142214 146b16 c4c2c2 545b54 
2cb62c 74ba74 346634 b4fcb0 244224 444242 246a24 e4feec 0ce204 f4f9fc 
f4eefc 444744 54b654 fcf9fc 0c9114 dcd6d4 ecfeec 0c7b14 0cc614 0c6314 
0c8414 
pop pop   % lose return values from readhexstring


% rlecmapimage expects to have 'w h bits matrix' on stack
/rlecmapimage {
  /buffer 1 string def
  /rgbval 3 string def
  /block  384 string def

  % proc to read a block from file, and return RGB data
  { currentfile buffer readhexstring pop
    /bcount exch 0 get store
    bcount 128 ge
    {  % it's a non-run block
      0 1 bcount 128 sub
      { currentfile buffer readhexstring pop pop

        % look up value in color map
        /rgbval cmap buffer 0 get 3 mul 3 getinterval store

        % and put it in position i*3 in block
        block exch 3 mul rgbval putinterval
      } for
      block  0  bcount 127 sub 3 mul  getinterval
    }

    { % else it's a run block
      currentfile buffer readhexstring pop pop

      % look up value in colormap
      /rgbval cmap buffer 0 get 3 mul 3 getinterval store

      0 1 bcount { block exch 3 mul rgbval putinterval } for

      block 0 bcount 1 add 3 mul getinterval
    } ifelse
  } % end of proc
  false 3 colorimage
} bind def


60 40 8			% dimensions of data
[60 0 0 -40 0 40]		% mapping matrix
rlecmapimage

10bf8131bf05bf03e98165e902e9046587bf3158ec31bfe9658265e9bf09bf
10bf8131bf04bf81e9bf01bf02e98265bfe982e965e901e981bf318131ec82ecbfe982e9
65bf0abf
12bf82751ebf83bf1ebf318231ec3102318111318131bf81bfe901e981bf318131bf01bf
01e90bbf
0fbf02e901bf023101ec021101a981d6a981a9118111318131bf14bf
0fbf8165e901e988e5bfd4ecd66add07808c80149dc2137f46a911d431bfe981e9bf0fbf

0fbf01e982bfe9318331a49ce28fe2454d37562456dc71567bab87a9d4bf81bfe981e9bf
81bf318131bf0abf
10bf8ac775bf311bde43224d37568656cb535f1a733c893cae8506a91131bfe9bf01bf81
58bf0abf
0fbf911ebf31b761a0442245ed56721a530a3a4e3a813a4e864e73c94246e3bf10bf
07bf81e9bf82bfe9bf92bf1ebf31ec4f0c38e2ef8e4d49561a530a3a6283624b052b8a2b
ce4e60c2dfe331bf4cbf0cbf
0abf81e9bf82bfe9ec8eec83de1f21778e786f01341a0a3a1c851c4b052b20168b162054
aa93df11312fe965bf0abf
0ebf8d3111883d77cdcf78646f0134530a810a1c911c4ece20167c517c16542893a9ec31
e965bf0abf
08bf01e999bfe91ebf316cc07743cd45786f49561a530a3a624b6b2b707c510151877c70
4edcaba9bfe981e9bf0abf
0bbf01e985bf27d34352cf90cf0e4d2656011a530a1c62ee2b20167c5102518816cc1db9
d611bfe9bf0abf
07bf81e9bf01bf90e9bf4c86d3445277d92c786f49721a0a3a853a4b0520167c827c51bd
88bd5116e44b157a11bf0cbf
0dbf8d3f0fc33d4403cfbb0e3756011a0a860a624b2b20167c817c5102510116854b897b
a911bf0bbf
08bf82e9e5bf97bf75dab209bcc021ef254d2649561a533a1c4b052b70167c037c811620
85203a853911bf0bbf
0bbf0131869eb6d3b0bc7748884845646f561acb0a7382734b2b812b1683167c16cc01cc
012b844b2813d4bf0bbf
0abf0231955e236db0c04463cf45646f5634cb533a73624b2b2016821670548854ce2b20
4b28e831bf0bbf
0abf023183b5b6d3b089b044436e45786f49341a871a0a733a626b2b200120896b4e6b05
2b1c5f9decbf0bbf
09bf8131bf97bf31d82e09d3b044cd485a786f1201cb1a530a73621c052b852b054e4b1c
0585053a282d58bf0bbf
0bbf9431bf556709b03844cd482c7864125634cb1a5f0a7382734b0501050162011c854b
0aae2d58bf0bbf
0bbf0131934a236dd3b0bc7743485a786f1201341acb535f3a813a1c011c0173023a8453
3b1458bf0bbf
0bbf8431bf0455098309d338778277ef2c852c266f1201348134cb83cb530a3a013a810a
5f815f0a850a1ab37d58bf0bbf
08bf81e9bf93bf31bf18d83209d338c044cd6e0e2c64126f0172837271cb5382530a5383
53ae531a851a01a57e58bf0bbf
0bbf01e5837600230901098138c082c0482c862c7864126f49568156728272341a811a72
0272864912bb841131bf0abf
03bf94e9bfe9bfe9bf1ebf1ebf275923b632099538c044ef81ef7881786481646f816fad
84adea01ea560156882449ad2da3115831bf0abf
04bf02e992654ce61e75bf0d185523b66d0995bcc043cd2c812c7881786483646f64f001
f08b6f496f49642d6382e3314cbf0abf
01bf85e9e5e9652fc784c7693fc7698a69c7d2b200232eb60929bc84bc6343ef2c862c78
45784d78ed82ed6f6489644d45a3afa2114c31bf0abf
01e58175c783c769d5eb8ceb797679dab87908db67c4b66d876d9538b0447743ef84ef6e
2c78458e455a457864788ecfbe9fd4315831bf0abf
88e5750d3f5779da98d083d0689b3501358d5d0236c45567b6320995b04477cd92cdef6e
2c6e5ad95acf782c4517813e31bf2fbf0bbf
887569575bd0689bc5ba83ba8a2a8a878aca2a74db5955b284b23209d3b081b077017701
cd016e02ef876e2c6e4810a4d4bf01bf814cbf0abf
873f79b835c5ba2a9a829aa8410141868de1d104c690d881d85583552e6d958b9538b0c0
77cd03cd6377afcd84cd4321c1d483d4e9654c814cbf0abf
88575b9b742ad1418de181e15081509603968450c8d759d881d8b283b2326d0981099585
9538bcb0381f871f95c3995ca931bf81bfe981e9bf0bbf
8779b8c58ad1c6e750855096d7b119b104b184d7b119d855845523b2b66d016d83952995
2987296de09211d431bf01bf01e90cbf
8979d0c52aa88de15096b181b119041901b18796c80fd74a59b2b602b6016d86326d328f
ac0b318331bf31bf01bf81e9bf0cbf
88575b9b742ad1c68de186e1c850c850c850865096c850e1e70487045e8ca7912e672e85
2e8cac33473101318158bf02bf82e9bfe981e9bf0abf
8b3f799835c5742a8bd1a8dbc683c68dc68d818dc601c68cdbd1ca40a15da66697274711
31863158bf31bf31bf82bf4ce985e9bfe9bfe9bf0abf
8bc76957dab8359bc5a1748a2a052a018a01748b029ba6665b279447ec311ebf83bf581e
bf82bf4cbf02bf82e9bfe981e9bf0abf
881e75693f57795bb8d082d068350135029b0135013088b8985b7608b40d751e811ebf83
bf1e75bf81bf4c814cbf05bf81e9bf0bbf
83e9e52fc782c7693f823f5779817976027681da760276827957b482b4c7750175822fe5
bf82bf4cbf01bf814cbf81bfe981e9bf01bf01e90dbf

%
% Compression made this file 26.36% of the uncompressed size.
%


showpage

% stop using temporary dictionary
end

% restore original state
origstate restore

%%Trailer

%%EndDocument
 @endspecial 297 w(MINT)-5 b(:)68 b(Real)e(MIPS)h(R3000)g(e)-7
b(x)g(ecution)65 b(\(26KLOC\))4934 3163 y @beginspecial
276 @llx 376 @lly 336 @urx 416 @ury 113 @rwi @setspecial
%%BeginDocument: green-bullet-on-white.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/fred/TeX/STYLES/Prosper/img/green-bullet-on-white.ps
%%Creator: XV Version 3.10a+FLmask  Rev: 12/29/94  -  by John Bradley
%%BoundingBox: 276 376 336 416
%%Pages: 1
%%DocumentFonts:
%%EndComments
%%EndProlog

%%Page: 1 1

% remember original state
/origstate save def

% build a temporary dictionary
20 dict begin

% define space for color conversions
/grays 60 string def  % space for gray scale line
/npixls 0 def
/rgbindx 0 def

% lower left corner
276 376 translate

% size of image (on paper, in 1/72inch coords)
59.97600 40.03200 scale

% define 'colorimage' if it isn't defined
%   ('colortogray' and 'mergeprocs' come from xwd2ps
%     via xgrab)
/colorimage where   % do we know about 'colorimage'?
  { pop }           % yes: pop off the 'dict' returned
  {                 % no:  define one
    /colortogray {  % define an RGB->I function
      /rgbdata exch store    % call input 'rgbdata'
      rgbdata length 3 idiv
      /npixls exch store
      /rgbindx 0 store
      0 1 npixls 1 sub {
        grays exch
        rgbdata rgbindx       get 20 mul    % Red
        rgbdata rgbindx 1 add get 32 mul    % Green
        rgbdata rgbindx 2 add get 12 mul    % Blue
        add add 64 idiv      % I = .5G + .31R + .18B
        put
        /rgbindx rgbindx 3 add store
      } for
      grays 0 npixls getinterval
    } bind def

    % Utility procedure for colorimage operator.
    % This procedure takes two procedures off the
    % stack and merges them into a single procedure.

    /mergeprocs { % def
      dup length
      3 -1 roll
      dup
      length
      dup
      5 1 roll
      3 -1 roll
      add
      array cvx
      dup
      3 -1 roll
      0 exch
      putinterval
      dup
      4 2 roll
      putinterval
    } bind def

    /colorimage { % def
      pop pop     % remove 'false 3' operands
      {colortogray} mergeprocs
      image
    } bind def
  } ifelse          % end of 'false' case



% define the colormap
/cmap 723 string def


% load up the colormap
currentfile cmap readhexstring
041808 049008 8c948c 045204 4c544c 04c804 84e284 449644 c4cbc4 0c380e 
04ac07 cce6cc 345e2c e4e7e4 046604 2c3a2c 347234 e4fee2 048208 64cc60 
34922c 24b224 04e404 044604 647264 242623 049f07 8cae8c 04bc06 24c61c 
f4f8f3 1c541c 04d804 1c621c 1c7220 0c280d 14910f 045e04 047c04 ccdcd0 
14ac18 1c481c 747473 04d105 0c6c0b 24852a 1c381c f4f1f3 acafac f4fef5 
0c310c acc6ac 049708 a4a4a3 3c4a44 148314 144812 9cea94 04b405 149e14 
1cbc1c 044004 e4fef4 dcdddd 748274 5c5959 4cba54 145b11 145413 147412 
c4fec4 e4f1e7 146411 088a0a 243028 09c207 fcf8f3 147c13 14c80e acceac 
3c3939 04f405 044e07 07a608 14d00f 0c1f10 0c900b d4d3d4 ecfee3 1c291d 
0c6e14 bcbfbd d4f6d4 909a94 4c5a50 0cac08 24ba24 547e54 0cbc0a 0c5c16 
0c7c0b fcf1fb acb8ac 1c311c aca7a9 e2e2e2 a4e2a4 0cc80a 6c9a6c 143715 
0c650a 0c840b 07de06 14970c 0c980a 0cb40a 848583 ecf0f0 c3c6c3 0c540d 
0c740c cccccc 74ce6c 30a02c 04ec05 54aa5c 6cb66c 9cfa9c 2c862c 5c926c 
6ca674 b4deac 9cda9c 34aa2c 6c7e6c acfeac 448244 34d22c 7d7d7c 6c6d6c 
445644 4c4d4c 1c7a19 1c3e1c 3c3f3c 2c422c 7c9a84 54c254 dceadc 144014 
343231 bccebc bcbabc 447244 6c6664 9c9d9c 7caa7c 349a38 6c7a74 84b69c 
1c4e18 898a89 ccfadc 1c6c2c b8e2c0 1c8a24 a1aaa1 3c4e3c 5f5e5c d8fed8 
24be24 78d670 688668 148a14 14a618 145624 0c480e 2c292b 142916 1c921c 
d4dad9 243828 143017 b4d2bc b4b7b5 1c961c 8c868c 247e24 144e13 04fa04 
246224 fcfefc 0c4e0c ace2b4 3caa3c 244e24 0c180c 949394 545454 ece9ec 
343634 2cb127 6c736c 0ca00c 0cda08 0c5c0b 0ccf06 146a0c b4b2b4 646464 
b4c2b4 0c3f0c ecfdf9 e4dedc ccfdcc 2c2f2b 142214 146b16 c4c2c2 545b54 
2cb62c 74ba74 346634 b4fcb0 244224 444242 246a24 e4feec 0ce204 f4f9fc 
f4eefc 444744 54b654 fcf9fc 0c9114 dcd6d4 ecfeec 0c7b14 0cc614 0c6314 
0c8414 
pop pop   % lose return values from readhexstring


% rlecmapimage expects to have 'w h bits matrix' on stack
/rlecmapimage {
  /buffer 1 string def
  /rgbval 3 string def
  /block  384 string def

  % proc to read a block from file, and return RGB data
  { currentfile buffer readhexstring pop
    /bcount exch 0 get store
    bcount 128 ge
    {  % it's a non-run block
      0 1 bcount 128 sub
      { currentfile buffer readhexstring pop pop

        % look up value in color map
        /rgbval cmap buffer 0 get 3 mul 3 getinterval store

        % and put it in position i*3 in block
        block exch 3 mul rgbval putinterval
      } for
      block  0  bcount 127 sub 3 mul  getinterval
    }

    { % else it's a run block
      currentfile buffer readhexstring pop pop

      % look up value in colormap
      /rgbval cmap buffer 0 get 3 mul 3 getinterval store

      0 1 bcount { block exch 3 mul rgbval putinterval } for

      block 0 bcount 1 add 3 mul getinterval
    } ifelse
  } % end of proc
  false 3 colorimage
} bind def


60 40 8			% dimensions of data
[60 0 0 -40 0 40]		% mapping matrix
rlecmapimage

10bf8131bf05bf03e98165e902e9046587bf3158ec31bfe9658265e9bf09bf
10bf8131bf04bf81e9bf01bf02e98265bfe982e965e901e981bf318131ec82ecbfe982e9
65bf0abf
12bf82751ebf83bf1ebf318231ec3102318111318131bf81bfe901e981bf318131bf01bf
01e90bbf
0fbf02e901bf023101ec021101a981d6a981a9118111318131bf14bf
0fbf8165e901e988e5bfd4ecd66add07808c80149dc2137f46a911d431bfe981e9bf0fbf

0fbf01e982bfe9318331a49ce28fe2454d37562456dc71567bab87a9d4bf81bfe981e9bf
81bf318131bf0abf
10bf8ac775bf311bde43224d37568656cb535f1a733c893cae8506a91131bfe9bf01bf81
58bf0abf
0fbf911ebf31b761a0442245ed56721a530a3a4e3a813a4e864e73c94246e3bf10bf
07bf81e9bf82bfe9bf92bf1ebf31ec4f0c38e2ef8e4d49561a530a3a6283624b052b8a2b
ce4e60c2dfe331bf4cbf0cbf
0abf81e9bf82bfe9ec8eec83de1f21778e786f01341a0a3a1c851c4b052b20168b162054
aa93df11312fe965bf0abf
0ebf8d3111883d77cdcf78646f0134530a810a1c911c4ece20167c517c16542893a9ec31
e965bf0abf
08bf01e999bfe91ebf316cc07743cd45786f49561a530a3a624b6b2b707c510151877c70
4edcaba9bfe981e9bf0abf
0bbf01e985bf27d34352cf90cf0e4d2656011a530a1c62ee2b20167c5102518816cc1db9
d611bfe9bf0abf
07bf81e9bf01bf90e9bf4c86d3445277d92c786f49721a0a3a853a4b0520167c827c51bd
88bd5116e44b157a11bf0cbf
0dbf8d3f0fc33d4403cfbb0e3756011a0a860a624b2b20167c817c5102510116854b897b
a911bf0bbf
08bf82e9e5bf97bf75dab209bcc021ef254d2649561a533a1c4b052b70167c037c811620
85203a853911bf0bbf
0bbf0131869eb6d3b0bc7748884845646f561acb0a7382734b2b812b1683167c16cc01cc
012b844b2813d4bf0bbf
0abf0231955e236db0c04463cf45646f5634cb533a73624b2b2016821670548854ce2b20
4b28e831bf0bbf
0abf023183b5b6d3b089b044436e45786f49341a871a0a733a626b2b200120896b4e6b05
2b1c5f9decbf0bbf
09bf8131bf97bf31d82e09d3b044cd485a786f1201cb1a530a73621c052b852b054e4b1c
0585053a282d58bf0bbf
0bbf9431bf556709b03844cd482c7864125634cb1a5f0a7382734b0501050162011c854b
0aae2d58bf0bbf
0bbf0131934a236dd3b0bc7743485a786f1201341acb535f3a813a1c011c0173023a8453
3b1458bf0bbf
0bbf8431bf0455098309d338778277ef2c852c266f1201348134cb83cb530a3a013a810a
5f815f0a850a1ab37d58bf0bbf
08bf81e9bf93bf31bf18d83209d338c044cd6e0e2c64126f0172837271cb5382530a5383
53ae531a851a01a57e58bf0bbf
0bbf01e5837600230901098138c082c0482c862c7864126f49568156728272341a811a72
0272864912bb841131bf0abf
03bf94e9bfe9bfe9bf1ebf1ebf275923b632099538c044ef81ef7881786481646f816fad
84adea01ea560156882449ad2da3115831bf0abf
04bf02e992654ce61e75bf0d185523b66d0995bcc043cd2c812c7881786483646f64f001
f08b6f496f49642d6382e3314cbf0abf
01bf85e9e5e9652fc784c7693fc7698a69c7d2b200232eb60929bc84bc6343ef2c862c78
45784d78ed82ed6f6489644d45a3afa2114c31bf0abf
01e58175c783c769d5eb8ceb797679dab87908db67c4b66d876d9538b0447743ef84ef6e
2c78458e455a457864788ecfbe9fd4315831bf0abf
88e5750d3f5779da98d083d0689b3501358d5d0236c45567b6320995b04477cd92cdef6e
2c6e5ad95acf782c4517813e31bf2fbf0bbf
887569575bd0689bc5ba83ba8a2a8a878aca2a74db5955b284b23209d3b081b077017701
cd016e02ef876e2c6e4810a4d4bf01bf814cbf0abf
873f79b835c5ba2a9a829aa8410141868de1d104c690d881d85583552e6d958b9538b0c0
77cd03cd6377afcd84cd4321c1d483d4e9654c814cbf0abf
88575b9b742ad1418de181e15081509603968450c8d759d881d8b283b2326d0981099585
9538bcb0381f871f95c3995ca931bf81bfe981e9bf0bbf
8779b8c58ad1c6e750855096d7b119b104b184d7b119d855845523b2b66d016d83952995
2987296de09211d431bf01bf01e90cbf
8979d0c52aa88de15096b181b119041901b18796c80fd74a59b2b602b6016d86326d328f
ac0b318331bf31bf01bf81e9bf0cbf
88575b9b742ad1c68de186e1c850c850c850865096c850e1e70487045e8ca7912e672e85
2e8cac33473101318158bf02bf82e9bfe981e9bf0abf
8b3f799835c5742a8bd1a8dbc683c68dc68d818dc601c68cdbd1ca40a15da66697274711
31863158bf31bf31bf82bf4ce985e9bfe9bfe9bf0abf
8bc76957dab8359bc5a1748a2a052a018a01748b029ba6665b279447ec311ebf83bf581e
bf82bf4cbf02bf82e9bfe981e9bf0abf
881e75693f57795bb8d082d068350135029b0135013088b8985b7608b40d751e811ebf83
bf1e75bf81bf4c814cbf05bf81e9bf0bbf
83e9e52fc782c7693f823f5779817976027681da760276827957b482b4c7750175822fe5
bf82bf4cbf01bf814cbf81bfe981e9bf01bf01e90dbf

%
% Compression made this file 26.36% of the uncompressed size.
%


showpage

% stop using temporary dictionary
end

% restore original state
origstate restore

%%Trailer

%%EndDocument
 @endspecial 297 w(SMT)-5 b(:)67 b(Timing)g(sim)n(ulator)e(\(19KLOC\))
4934 3486 y @beginspecial 276 @llx 376 @lly 336 @urx
416 @ury 113 @rwi @setspecial
%%BeginDocument: green-bullet-on-white.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/fred/TeX/STYLES/Prosper/img/green-bullet-on-white.ps
%%Creator: XV Version 3.10a+FLmask  Rev: 12/29/94  -  by John Bradley
%%BoundingBox: 276 376 336 416
%%Pages: 1
%%DocumentFonts:
%%EndComments
%%EndProlog

%%Page: 1 1

% remember original state
/origstate save def

% build a temporary dictionary
20 dict begin

% define space for color conversions
/grays 60 string def  % space for gray scale line
/npixls 0 def
/rgbindx 0 def

% lower left corner
276 376 translate

% size of image (on paper, in 1/72inch coords)
59.97600 40.03200 scale

% define 'colorimage' if it isn't defined
%   ('colortogray' and 'mergeprocs' come from xwd2ps
%     via xgrab)
/colorimage where   % do we know about 'colorimage'?
  { pop }           % yes: pop off the 'dict' returned
  {                 % no:  define one
    /colortogray {  % define an RGB->I function
      /rgbdata exch store    % call input 'rgbdata'
      rgbdata length 3 idiv
      /npixls exch store
      /rgbindx 0 store
      0 1 npixls 1 sub {
        grays exch
        rgbdata rgbindx       get 20 mul    % Red
        rgbdata rgbindx 1 add get 32 mul    % Green
        rgbdata rgbindx 2 add get 12 mul    % Blue
        add add 64 idiv      % I = .5G + .31R + .18B
        put
        /rgbindx rgbindx 3 add store
      } for
      grays 0 npixls getinterval
    } bind def

    % Utility procedure for colorimage operator.
    % This procedure takes two procedures off the
    % stack and merges them into a single procedure.

    /mergeprocs { % def
      dup length
      3 -1 roll
      dup
      length
      dup
      5 1 roll
      3 -1 roll
      add
      array cvx
      dup
      3 -1 roll
      0 exch
      putinterval
      dup
      4 2 roll
      putinterval
    } bind def

    /colorimage { % def
      pop pop     % remove 'false 3' operands
      {colortogray} mergeprocs
      image
    } bind def
  } ifelse          % end of 'false' case



% define the colormap
/cmap 723 string def


% load up the colormap
currentfile cmap readhexstring
041808 049008 8c948c 045204 4c544c 04c804 84e284 449644 c4cbc4 0c380e 
04ac07 cce6cc 345e2c e4e7e4 046604 2c3a2c 347234 e4fee2 048208 64cc60 
34922c 24b224 04e404 044604 647264 242623 049f07 8cae8c 04bc06 24c61c 
f4f8f3 1c541c 04d804 1c621c 1c7220 0c280d 14910f 045e04 047c04 ccdcd0 
14ac18 1c481c 747473 04d105 0c6c0b 24852a 1c381c f4f1f3 acafac f4fef5 
0c310c acc6ac 049708 a4a4a3 3c4a44 148314 144812 9cea94 04b405 149e14 
1cbc1c 044004 e4fef4 dcdddd 748274 5c5959 4cba54 145b11 145413 147412 
c4fec4 e4f1e7 146411 088a0a 243028 09c207 fcf8f3 147c13 14c80e acceac 
3c3939 04f405 044e07 07a608 14d00f 0c1f10 0c900b d4d3d4 ecfee3 1c291d 
0c6e14 bcbfbd d4f6d4 909a94 4c5a50 0cac08 24ba24 547e54 0cbc0a 0c5c16 
0c7c0b fcf1fb acb8ac 1c311c aca7a9 e2e2e2 a4e2a4 0cc80a 6c9a6c 143715 
0c650a 0c840b 07de06 14970c 0c980a 0cb40a 848583 ecf0f0 c3c6c3 0c540d 
0c740c cccccc 74ce6c 30a02c 04ec05 54aa5c 6cb66c 9cfa9c 2c862c 5c926c 
6ca674 b4deac 9cda9c 34aa2c 6c7e6c acfeac 448244 34d22c 7d7d7c 6c6d6c 
445644 4c4d4c 1c7a19 1c3e1c 3c3f3c 2c422c 7c9a84 54c254 dceadc 144014 
343231 bccebc bcbabc 447244 6c6664 9c9d9c 7caa7c 349a38 6c7a74 84b69c 
1c4e18 898a89 ccfadc 1c6c2c b8e2c0 1c8a24 a1aaa1 3c4e3c 5f5e5c d8fed8 
24be24 78d670 688668 148a14 14a618 145624 0c480e 2c292b 142916 1c921c 
d4dad9 243828 143017 b4d2bc b4b7b5 1c961c 8c868c 247e24 144e13 04fa04 
246224 fcfefc 0c4e0c ace2b4 3caa3c 244e24 0c180c 949394 545454 ece9ec 
343634 2cb127 6c736c 0ca00c 0cda08 0c5c0b 0ccf06 146a0c b4b2b4 646464 
b4c2b4 0c3f0c ecfdf9 e4dedc ccfdcc 2c2f2b 142214 146b16 c4c2c2 545b54 
2cb62c 74ba74 346634 b4fcb0 244224 444242 246a24 e4feec 0ce204 f4f9fc 
f4eefc 444744 54b654 fcf9fc 0c9114 dcd6d4 ecfeec 0c7b14 0cc614 0c6314 
0c8414 
pop pop   % lose return values from readhexstring


% rlecmapimage expects to have 'w h bits matrix' on stack
/rlecmapimage {
  /buffer 1 string def
  /rgbval 3 string def
  /block  384 string def

  % proc to read a block from file, and return RGB data
  { currentfile buffer readhexstring pop
    /bcount exch 0 get store
    bcount 128 ge
    {  % it's a non-run block
      0 1 bcount 128 sub
      { currentfile buffer readhexstring pop pop

        % look up value in color map
        /rgbval cmap buffer 0 get 3 mul 3 getinterval store

        % and put it in position i*3 in block
        block exch 3 mul rgbval putinterval
      } for
      block  0  bcount 127 sub 3 mul  getinterval
    }

    { % else it's a run block
      currentfile buffer readhexstring pop pop

      % look up value in colormap
      /rgbval cmap buffer 0 get 3 mul 3 getinterval store

      0 1 bcount { block exch 3 mul rgbval putinterval } for

      block 0 bcount 1 add 3 mul getinterval
    } ifelse
  } % end of proc
  false 3 colorimage
} bind def


60 40 8			% dimensions of data
[60 0 0 -40 0 40]		% mapping matrix
rlecmapimage

10bf8131bf05bf03e98165e902e9046587bf3158ec31bfe9658265e9bf09bf
10bf8131bf04bf81e9bf01bf02e98265bfe982e965e901e981bf318131ec82ecbfe982e9
65bf0abf
12bf82751ebf83bf1ebf318231ec3102318111318131bf81bfe901e981bf318131bf01bf
01e90bbf
0fbf02e901bf023101ec021101a981d6a981a9118111318131bf14bf
0fbf8165e901e988e5bfd4ecd66add07808c80149dc2137f46a911d431bfe981e9bf0fbf

0fbf01e982bfe9318331a49ce28fe2454d37562456dc71567bab87a9d4bf81bfe981e9bf
81bf318131bf0abf
10bf8ac775bf311bde43224d37568656cb535f1a733c893cae8506a91131bfe9bf01bf81
58bf0abf
0fbf911ebf31b761a0442245ed56721a530a3a4e3a813a4e864e73c94246e3bf10bf
07bf81e9bf82bfe9bf92bf1ebf31ec4f0c38e2ef8e4d49561a530a3a6283624b052b8a2b
ce4e60c2dfe331bf4cbf0cbf
0abf81e9bf82bfe9ec8eec83de1f21778e786f01341a0a3a1c851c4b052b20168b162054
aa93df11312fe965bf0abf
0ebf8d3111883d77cdcf78646f0134530a810a1c911c4ece20167c517c16542893a9ec31
e965bf0abf
08bf01e999bfe91ebf316cc07743cd45786f49561a530a3a624b6b2b707c510151877c70
4edcaba9bfe981e9bf0abf
0bbf01e985bf27d34352cf90cf0e4d2656011a530a1c62ee2b20167c5102518816cc1db9
d611bfe9bf0abf
07bf81e9bf01bf90e9bf4c86d3445277d92c786f49721a0a3a853a4b0520167c827c51bd
88bd5116e44b157a11bf0cbf
0dbf8d3f0fc33d4403cfbb0e3756011a0a860a624b2b20167c817c5102510116854b897b
a911bf0bbf
08bf82e9e5bf97bf75dab209bcc021ef254d2649561a533a1c4b052b70167c037c811620
85203a853911bf0bbf
0bbf0131869eb6d3b0bc7748884845646f561acb0a7382734b2b812b1683167c16cc01cc
012b844b2813d4bf0bbf
0abf0231955e236db0c04463cf45646f5634cb533a73624b2b2016821670548854ce2b20
4b28e831bf0bbf
0abf023183b5b6d3b089b044436e45786f49341a871a0a733a626b2b200120896b4e6b05
2b1c5f9decbf0bbf
09bf8131bf97bf31d82e09d3b044cd485a786f1201cb1a530a73621c052b852b054e4b1c
0585053a282d58bf0bbf
0bbf9431bf556709b03844cd482c7864125634cb1a5f0a7382734b0501050162011c854b
0aae2d58bf0bbf
0bbf0131934a236dd3b0bc7743485a786f1201341acb535f3a813a1c011c0173023a8453
3b1458bf0bbf
0bbf8431bf0455098309d338778277ef2c852c266f1201348134cb83cb530a3a013a810a
5f815f0a850a1ab37d58bf0bbf
08bf81e9bf93bf31bf18d83209d338c044cd6e0e2c64126f0172837271cb5382530a5383
53ae531a851a01a57e58bf0bbf
0bbf01e5837600230901098138c082c0482c862c7864126f49568156728272341a811a72
0272864912bb841131bf0abf
03bf94e9bfe9bfe9bf1ebf1ebf275923b632099538c044ef81ef7881786481646f816fad
84adea01ea560156882449ad2da3115831bf0abf
04bf02e992654ce61e75bf0d185523b66d0995bcc043cd2c812c7881786483646f64f001
f08b6f496f49642d6382e3314cbf0abf
01bf85e9e5e9652fc784c7693fc7698a69c7d2b200232eb60929bc84bc6343ef2c862c78
45784d78ed82ed6f6489644d45a3afa2114c31bf0abf
01e58175c783c769d5eb8ceb797679dab87908db67c4b66d876d9538b0447743ef84ef6e
2c78458e455a457864788ecfbe9fd4315831bf0abf
88e5750d3f5779da98d083d0689b3501358d5d0236c45567b6320995b04477cd92cdef6e
2c6e5ad95acf782c4517813e31bf2fbf0bbf
887569575bd0689bc5ba83ba8a2a8a878aca2a74db5955b284b23209d3b081b077017701
cd016e02ef876e2c6e4810a4d4bf01bf814cbf0abf
873f79b835c5ba2a9a829aa8410141868de1d104c690d881d85583552e6d958b9538b0c0
77cd03cd6377afcd84cd4321c1d483d4e9654c814cbf0abf
88575b9b742ad1418de181e15081509603968450c8d759d881d8b283b2326d0981099585
9538bcb0381f871f95c3995ca931bf81bfe981e9bf0bbf
8779b8c58ad1c6e750855096d7b119b104b184d7b119d855845523b2b66d016d83952995
2987296de09211d431bf01bf01e90cbf
8979d0c52aa88de15096b181b119041901b18796c80fd74a59b2b602b6016d86326d328f
ac0b318331bf31bf01bf81e9bf0cbf
88575b9b742ad1c68de186e1c850c850c850865096c850e1e70487045e8ca7912e672e85
2e8cac33473101318158bf02bf82e9bfe981e9bf0abf
8b3f799835c5742a8bd1a8dbc683c68dc68d818dc601c68cdbd1ca40a15da66697274711
31863158bf31bf31bf82bf4ce985e9bfe9bfe9bf0abf
8bc76957dab8359bc5a1748a2a052a018a01748b029ba6665b279447ec311ebf83bf581e
bf82bf4cbf02bf82e9bfe981e9bf0abf
881e75693f57795bb8d082d068350135029b0135013088b8985b7608b40d751e811ebf83
bf1e75bf81bf4c814cbf05bf81e9bf0bbf
83e9e52fc782c7693f823f5779817976027681da760276827957b482b4c7750175822fe5
bf82bf4cbf01bf814cbf81bfe981e9bf01bf01e90dbf

%
% Compression made this file 26.36% of the uncompressed size.
%


showpage

% stop using temporary dictionary
end

% restore original state
origstate restore

%%Trailer

%%EndDocument
 @endspecial 297 w(Fle)-7 b(xRAM:)61 b(A)g(sample)g(memor)7
b(y)61 b(bac)-5 b(k)g(end)62 b(\(3.5KLOC\))4581 3857
y Fh(01-02)101 b Fg(SESC:)66 b(An)h(R3000)g(e)-7 b(x)g(ecution-dr)t(iv)
h(en)65 b(sim)4934 4172 y @beginspecial 276 @llx 376
@lly 336 @urx 416 @ury 113 @rwi @setspecial
%%BeginDocument: green-bullet-on-white.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/fred/TeX/STYLES/Prosper/img/green-bullet-on-white.ps
%%Creator: XV Version 3.10a+FLmask  Rev: 12/29/94  -  by John Bradley
%%BoundingBox: 276 376 336 416
%%Pages: 1
%%DocumentFonts:
%%EndComments
%%EndProlog

%%Page: 1 1

% remember original state
/origstate save def

% build a temporary dictionary
20 dict begin

% define space for color conversions
/grays 60 string def  % space for gray scale line
/npixls 0 def
/rgbindx 0 def

% lower left corner
276 376 translate

% size of image (on paper, in 1/72inch coords)
59.97600 40.03200 scale

% define 'colorimage' if it isn't defined
%   ('colortogray' and 'mergeprocs' come from xwd2ps
%     via xgrab)
/colorimage where   % do we know about 'colorimage'?
  { pop }           % yes: pop off the 'dict' returned
  {                 % no:  define one
    /colortogray {  % define an RGB->I function
      /rgbdata exch store    % call input 'rgbdata'
      rgbdata length 3 idiv
      /npixls exch store
      /rgbindx 0 store
      0 1 npixls 1 sub {
        grays exch
        rgbdata rgbindx       get 20 mul    % Red
        rgbdata rgbindx 1 add get 32 mul    % Green
        rgbdata rgbindx 2 add get 12 mul    % Blue
        add add 64 idiv      % I = .5G + .31R + .18B
        put
        /rgbindx rgbindx 3 add store
      } for
      grays 0 npixls getinterval
    } bind def

    % Utility procedure for colorimage operator.
    % This procedure takes two procedures off the
    % stack and merges them into a single procedure.

    /mergeprocs { % def
      dup length
      3 -1 roll
      dup
      length
      dup
      5 1 roll
      3 -1 roll
      add
      array cvx
      dup
      3 -1 roll
      0 exch
      putinterval
      dup
      4 2 roll
      putinterval
    } bind def

    /colorimage { % def
      pop pop     % remove 'false 3' operands
      {colortogray} mergeprocs
      image
    } bind def
  } ifelse          % end of 'false' case



% define the colormap
/cmap 723 string def


% load up the colormap
currentfile cmap readhexstring
041808 049008 8c948c 045204 4c544c 04c804 84e284 449644 c4cbc4 0c380e 
04ac07 cce6cc 345e2c e4e7e4 046604 2c3a2c 347234 e4fee2 048208 64cc60 
34922c 24b224 04e404 044604 647264 242623 049f07 8cae8c 04bc06 24c61c 
f4f8f3 1c541c 04d804 1c621c 1c7220 0c280d 14910f 045e04 047c04 ccdcd0 
14ac18 1c481c 747473 04d105 0c6c0b 24852a 1c381c f4f1f3 acafac f4fef5 
0c310c acc6ac 049708 a4a4a3 3c4a44 148314 144812 9cea94 04b405 149e14 
1cbc1c 044004 e4fef4 dcdddd 748274 5c5959 4cba54 145b11 145413 147412 
c4fec4 e4f1e7 146411 088a0a 243028 09c207 fcf8f3 147c13 14c80e acceac 
3c3939 04f405 044e07 07a608 14d00f 0c1f10 0c900b d4d3d4 ecfee3 1c291d 
0c6e14 bcbfbd d4f6d4 909a94 4c5a50 0cac08 24ba24 547e54 0cbc0a 0c5c16 
0c7c0b fcf1fb acb8ac 1c311c aca7a9 e2e2e2 a4e2a4 0cc80a 6c9a6c 143715 
0c650a 0c840b 07de06 14970c 0c980a 0cb40a 848583 ecf0f0 c3c6c3 0c540d 
0c740c cccccc 74ce6c 30a02c 04ec05 54aa5c 6cb66c 9cfa9c 2c862c 5c926c 
6ca674 b4deac 9cda9c 34aa2c 6c7e6c acfeac 448244 34d22c 7d7d7c 6c6d6c 
445644 4c4d4c 1c7a19 1c3e1c 3c3f3c 2c422c 7c9a84 54c254 dceadc 144014 
343231 bccebc bcbabc 447244 6c6664 9c9d9c 7caa7c 349a38 6c7a74 84b69c 
1c4e18 898a89 ccfadc 1c6c2c b8e2c0 1c8a24 a1aaa1 3c4e3c 5f5e5c d8fed8 
24be24 78d670 688668 148a14 14a618 145624 0c480e 2c292b 142916 1c921c 
d4dad9 243828 143017 b4d2bc b4b7b5 1c961c 8c868c 247e24 144e13 04fa04 
246224 fcfefc 0c4e0c ace2b4 3caa3c 244e24 0c180c 949394 545454 ece9ec 
343634 2cb127 6c736c 0ca00c 0cda08 0c5c0b 0ccf06 146a0c b4b2b4 646464 
b4c2b4 0c3f0c ecfdf9 e4dedc ccfdcc 2c2f2b 142214 146b16 c4c2c2 545b54 
2cb62c 74ba74 346634 b4fcb0 244224 444242 246a24 e4feec 0ce204 f4f9fc 
f4eefc 444744 54b654 fcf9fc 0c9114 dcd6d4 ecfeec 0c7b14 0cc614 0c6314 
0c8414 
pop pop   % lose return values from readhexstring


% rlecmapimage expects to have 'w h bits matrix' on stack
/rlecmapimage {
  /buffer 1 string def
  /rgbval 3 string def
  /block  384 string def

  % proc to read a block from file, and return RGB data
  { currentfile buffer readhexstring pop
    /bcount exch 0 get store
    bcount 128 ge
    {  % it's a non-run block
      0 1 bcount 128 sub
      { currentfile buffer readhexstring pop pop

        % look up value in color map
        /rgbval cmap buffer 0 get 3 mul 3 getinterval store

        % and put it in position i*3 in block
        block exch 3 mul rgbval putinterval
      } for
      block  0  bcount 127 sub 3 mul  getinterval
    }

    { % else it's a run block
      currentfile buffer readhexstring pop pop

      % look up value in colormap
      /rgbval cmap buffer 0 get 3 mul 3 getinterval store

      0 1 bcount { block exch 3 mul rgbval putinterval } for

      block 0 bcount 1 add 3 mul getinterval
    } ifelse
  } % end of proc
  false 3 colorimage
} bind def


60 40 8			% dimensions of data
[60 0 0 -40 0 40]		% mapping matrix
rlecmapimage

10bf8131bf05bf03e98165e902e9046587bf3158ec31bfe9658265e9bf09bf
10bf8131bf04bf81e9bf01bf02e98265bfe982e965e901e981bf318131ec82ecbfe982e9
65bf0abf
12bf82751ebf83bf1ebf318231ec3102318111318131bf81bfe901e981bf318131bf01bf
01e90bbf
0fbf02e901bf023101ec021101a981d6a981a9118111318131bf14bf
0fbf8165e901e988e5bfd4ecd66add07808c80149dc2137f46a911d431bfe981e9bf0fbf

0fbf01e982bfe9318331a49ce28fe2454d37562456dc71567bab87a9d4bf81bfe981e9bf
81bf318131bf0abf
10bf8ac775bf311bde43224d37568656cb535f1a733c893cae8506a91131bfe9bf01bf81
58bf0abf
0fbf911ebf31b761a0442245ed56721a530a3a4e3a813a4e864e73c94246e3bf10bf
07bf81e9bf82bfe9bf92bf1ebf31ec4f0c38e2ef8e4d49561a530a3a6283624b052b8a2b
ce4e60c2dfe331bf4cbf0cbf
0abf81e9bf82bfe9ec8eec83de1f21778e786f01341a0a3a1c851c4b052b20168b162054
aa93df11312fe965bf0abf
0ebf8d3111883d77cdcf78646f0134530a810a1c911c4ece20167c517c16542893a9ec31
e965bf0abf
08bf01e999bfe91ebf316cc07743cd45786f49561a530a3a624b6b2b707c510151877c70
4edcaba9bfe981e9bf0abf
0bbf01e985bf27d34352cf90cf0e4d2656011a530a1c62ee2b20167c5102518816cc1db9
d611bfe9bf0abf
07bf81e9bf01bf90e9bf4c86d3445277d92c786f49721a0a3a853a4b0520167c827c51bd
88bd5116e44b157a11bf0cbf
0dbf8d3f0fc33d4403cfbb0e3756011a0a860a624b2b20167c817c5102510116854b897b
a911bf0bbf
08bf82e9e5bf97bf75dab209bcc021ef254d2649561a533a1c4b052b70167c037c811620
85203a853911bf0bbf
0bbf0131869eb6d3b0bc7748884845646f561acb0a7382734b2b812b1683167c16cc01cc
012b844b2813d4bf0bbf
0abf0231955e236db0c04463cf45646f5634cb533a73624b2b2016821670548854ce2b20
4b28e831bf0bbf
0abf023183b5b6d3b089b044436e45786f49341a871a0a733a626b2b200120896b4e6b05
2b1c5f9decbf0bbf
09bf8131bf97bf31d82e09d3b044cd485a786f1201cb1a530a73621c052b852b054e4b1c
0585053a282d58bf0bbf
0bbf9431bf556709b03844cd482c7864125634cb1a5f0a7382734b0501050162011c854b
0aae2d58bf0bbf
0bbf0131934a236dd3b0bc7743485a786f1201341acb535f3a813a1c011c0173023a8453
3b1458bf0bbf
0bbf8431bf0455098309d338778277ef2c852c266f1201348134cb83cb530a3a013a810a
5f815f0a850a1ab37d58bf0bbf
08bf81e9bf93bf31bf18d83209d338c044cd6e0e2c64126f0172837271cb5382530a5383
53ae531a851a01a57e58bf0bbf
0bbf01e5837600230901098138c082c0482c862c7864126f49568156728272341a811a72
0272864912bb841131bf0abf
03bf94e9bfe9bfe9bf1ebf1ebf275923b632099538c044ef81ef7881786481646f816fad
84adea01ea560156882449ad2da3115831bf0abf
04bf02e992654ce61e75bf0d185523b66d0995bcc043cd2c812c7881786483646f64f001
f08b6f496f49642d6382e3314cbf0abf
01bf85e9e5e9652fc784c7693fc7698a69c7d2b200232eb60929bc84bc6343ef2c862c78
45784d78ed82ed6f6489644d45a3afa2114c31bf0abf
01e58175c783c769d5eb8ceb797679dab87908db67c4b66d876d9538b0447743ef84ef6e
2c78458e455a457864788ecfbe9fd4315831bf0abf
88e5750d3f5779da98d083d0689b3501358d5d0236c45567b6320995b04477cd92cdef6e
2c6e5ad95acf782c4517813e31bf2fbf0bbf
887569575bd0689bc5ba83ba8a2a8a878aca2a74db5955b284b23209d3b081b077017701
cd016e02ef876e2c6e4810a4d4bf01bf814cbf0abf
873f79b835c5ba2a9a829aa8410141868de1d104c690d881d85583552e6d958b9538b0c0
77cd03cd6377afcd84cd4321c1d483d4e9654c814cbf0abf
88575b9b742ad1418de181e15081509603968450c8d759d881d8b283b2326d0981099585
9538bcb0381f871f95c3995ca931bf81bfe981e9bf0bbf
8779b8c58ad1c6e750855096d7b119b104b184d7b119d855845523b2b66d016d83952995
2987296de09211d431bf01bf01e90cbf
8979d0c52aa88de15096b181b119041901b18796c80fd74a59b2b602b6016d86326d328f
ac0b318331bf31bf01bf81e9bf0cbf
88575b9b742ad1c68de186e1c850c850c850865096c850e1e70487045e8ca7912e672e85
2e8cac33473101318158bf02bf82e9bfe981e9bf0abf
8b3f799835c5742a8bd1a8dbc683c68dc68d818dc601c68cdbd1ca40a15da66697274711
31863158bf31bf31bf82bf4ce985e9bfe9bfe9bf0abf
8bc76957dab8359bc5a1748a2a052a018a01748b029ba6665b279447ec311ebf83bf581e
bf82bf4cbf02bf82e9bfe981e9bf0abf
881e75693f57795bb8d082d068350135029b0135013088b8985b7608b40d751e811ebf83
bf1e75bf81bf4c814cbf05bf81e9bf0bbf
83e9e52fc782c7693f823f5779817976027681da760276827957b482b4c7750175822fe5
bf82bf4cbf01bf814cbf81bfe981e9bf01bf01e90dbf

%
% Compression made this file 26.36% of the uncompressed size.
%


showpage

% stop using temporary dictionary
end

% restore original state
origstate restore

%%Trailer

%%EndDocument
 @endspecial 297 w(MINT)-5 b(:)68 b(Real)e(MIPS)h(R3000)g(e)-7
b(x)g(ecution)65 b(\(26KLOC\))4934 4492 y @beginspecial
276 @llx 376 @lly 336 @urx 416 @ury 113 @rwi @setspecial
%%BeginDocument: green-bullet-on-white.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/fred/TeX/STYLES/Prosper/img/green-bullet-on-white.ps
%%Creator: XV Version 3.10a+FLmask  Rev: 12/29/94  -  by John Bradley
%%BoundingBox: 276 376 336 416
%%Pages: 1
%%DocumentFonts:
%%EndComments
%%EndProlog

%%Page: 1 1

% remember original state
/origstate save def

% build a temporary dictionary
20 dict begin

% define space for color conversions
/grays 60 string def  % space for gray scale line
/npixls 0 def
/rgbindx 0 def

% lower left corner
276 376 translate

% size of image (on paper, in 1/72inch coords)
59.97600 40.03200 scale

% define 'colorimage' if it isn't defined
%   ('colortogray' and 'mergeprocs' come from xwd2ps
%     via xgrab)
/colorimage where   % do we know about 'colorimage'?
  { pop }           % yes: pop off the 'dict' returned
  {                 % no:  define one
    /colortogray {  % define an RGB->I function
      /rgbdata exch store    % call input 'rgbdata'
      rgbdata length 3 idiv
      /npixls exch store
      /rgbindx 0 store
      0 1 npixls 1 sub {
        grays exch
        rgbdata rgbindx       get 20 mul    % Red
        rgbdata rgbindx 1 add get 32 mul    % Green
        rgbdata rgbindx 2 add get 12 mul    % Blue
        add add 64 idiv      % I = .5G + .31R + .18B
        put
        /rgbindx rgbindx 3 add store
      } for
      grays 0 npixls getinterval
    } bind def

    % Utility procedure for colorimage operator.
    % This procedure takes two procedures off the
    % stack and merges them into a single procedure.

    /mergeprocs { % def
      dup length
      3 -1 roll
      dup
      length
      dup
      5 1 roll
      3 -1 roll
      add
      array cvx
      dup
      3 -1 roll
      0 exch
      putinterval
      dup
      4 2 roll
      putinterval
    } bind def

    /colorimage { % def
      pop pop     % remove 'false 3' operands
      {colortogray} mergeprocs
      image
    } bind def
  } ifelse          % end of 'false' case



% define the colormap
/cmap 723 string def


% load up the colormap
currentfile cmap readhexstring
041808 049008 8c948c 045204 4c544c 04c804 84e284 449644 c4cbc4 0c380e 
04ac07 cce6cc 345e2c e4e7e4 046604 2c3a2c 347234 e4fee2 048208 64cc60 
34922c 24b224 04e404 044604 647264 242623 049f07 8cae8c 04bc06 24c61c 
f4f8f3 1c541c 04d804 1c621c 1c7220 0c280d 14910f 045e04 047c04 ccdcd0 
14ac18 1c481c 747473 04d105 0c6c0b 24852a 1c381c f4f1f3 acafac f4fef5 
0c310c acc6ac 049708 a4a4a3 3c4a44 148314 144812 9cea94 04b405 149e14 
1cbc1c 044004 e4fef4 dcdddd 748274 5c5959 4cba54 145b11 145413 147412 
c4fec4 e4f1e7 146411 088a0a 243028 09c207 fcf8f3 147c13 14c80e acceac 
3c3939 04f405 044e07 07a608 14d00f 0c1f10 0c900b d4d3d4 ecfee3 1c291d 
0c6e14 bcbfbd d4f6d4 909a94 4c5a50 0cac08 24ba24 547e54 0cbc0a 0c5c16 
0c7c0b fcf1fb acb8ac 1c311c aca7a9 e2e2e2 a4e2a4 0cc80a 6c9a6c 143715 
0c650a 0c840b 07de06 14970c 0c980a 0cb40a 848583 ecf0f0 c3c6c3 0c540d 
0c740c cccccc 74ce6c 30a02c 04ec05 54aa5c 6cb66c 9cfa9c 2c862c 5c926c 
6ca674 b4deac 9cda9c 34aa2c 6c7e6c acfeac 448244 34d22c 7d7d7c 6c6d6c 
445644 4c4d4c 1c7a19 1c3e1c 3c3f3c 2c422c 7c9a84 54c254 dceadc 144014 
343231 bccebc bcbabc 447244 6c6664 9c9d9c 7caa7c 349a38 6c7a74 84b69c 
1c4e18 898a89 ccfadc 1c6c2c b8e2c0 1c8a24 a1aaa1 3c4e3c 5f5e5c d8fed8 
24be24 78d670 688668 148a14 14a618 145624 0c480e 2c292b 142916 1c921c 
d4dad9 243828 143017 b4d2bc b4b7b5 1c961c 8c868c 247e24 144e13 04fa04 
246224 fcfefc 0c4e0c ace2b4 3caa3c 244e24 0c180c 949394 545454 ece9ec 
343634 2cb127 6c736c 0ca00c 0cda08 0c5c0b 0ccf06 146a0c b4b2b4 646464 
b4c2b4 0c3f0c ecfdf9 e4dedc ccfdcc 2c2f2b 142214 146b16 c4c2c2 545b54 
2cb62c 74ba74 346634 b4fcb0 244224 444242 246a24 e4feec 0ce204 f4f9fc 
f4eefc 444744 54b654 fcf9fc 0c9114 dcd6d4 ecfeec 0c7b14 0cc614 0c6314 
0c8414 
pop pop   % lose return values from readhexstring


% rlecmapimage expects to have 'w h bits matrix' on stack
/rlecmapimage {
  /buffer 1 string def
  /rgbval 3 string def
  /block  384 string def

  % proc to read a block from file, and return RGB data
  { currentfile buffer readhexstring pop
    /bcount exch 0 get store
    bcount 128 ge
    {  % it's a non-run block
      0 1 bcount 128 sub
      { currentfile buffer readhexstring pop pop

        % look up value in color map
        /rgbval cmap buffer 0 get 3 mul 3 getinterval store

        % and put it in position i*3 in block
        block exch 3 mul rgbval putinterval
      } for
      block  0  bcount 127 sub 3 mul  getinterval
    }

    { % else it's a run block
      currentfile buffer readhexstring pop pop

      % look up value in colormap
      /rgbval cmap buffer 0 get 3 mul 3 getinterval store

      0 1 bcount { block exch 3 mul rgbval putinterval } for

      block 0 bcount 1 add 3 mul getinterval
    } ifelse
  } % end of proc
  false 3 colorimage
} bind def


60 40 8			% dimensions of data
[60 0 0 -40 0 40]		% mapping matrix
rlecmapimage

10bf8131bf05bf03e98165e902e9046587bf3158ec31bfe9658265e9bf09bf
10bf8131bf04bf81e9bf01bf02e98265bfe982e965e901e981bf318131ec82ecbfe982e9
65bf0abf
12bf82751ebf83bf1ebf318231ec3102318111318131bf81bfe901e981bf318131bf01bf
01e90bbf
0fbf02e901bf023101ec021101a981d6a981a9118111318131bf14bf
0fbf8165e901e988e5bfd4ecd66add07808c80149dc2137f46a911d431bfe981e9bf0fbf

0fbf01e982bfe9318331a49ce28fe2454d37562456dc71567bab87a9d4bf81bfe981e9bf
81bf318131bf0abf
10bf8ac775bf311bde43224d37568656cb535f1a733c893cae8506a91131bfe9bf01bf81
58bf0abf
0fbf911ebf31b761a0442245ed56721a530a3a4e3a813a4e864e73c94246e3bf10bf
07bf81e9bf82bfe9bf92bf1ebf31ec4f0c38e2ef8e4d49561a530a3a6283624b052b8a2b
ce4e60c2dfe331bf4cbf0cbf
0abf81e9bf82bfe9ec8eec83de1f21778e786f01341a0a3a1c851c4b052b20168b162054
aa93df11312fe965bf0abf
0ebf8d3111883d77cdcf78646f0134530a810a1c911c4ece20167c517c16542893a9ec31
e965bf0abf
08bf01e999bfe91ebf316cc07743cd45786f49561a530a3a624b6b2b707c510151877c70
4edcaba9bfe981e9bf0abf
0bbf01e985bf27d34352cf90cf0e4d2656011a530a1c62ee2b20167c5102518816cc1db9
d611bfe9bf0abf
07bf81e9bf01bf90e9bf4c86d3445277d92c786f49721a0a3a853a4b0520167c827c51bd
88bd5116e44b157a11bf0cbf
0dbf8d3f0fc33d4403cfbb0e3756011a0a860a624b2b20167c817c5102510116854b897b
a911bf0bbf
08bf82e9e5bf97bf75dab209bcc021ef254d2649561a533a1c4b052b70167c037c811620
85203a853911bf0bbf
0bbf0131869eb6d3b0bc7748884845646f561acb0a7382734b2b812b1683167c16cc01cc
012b844b2813d4bf0bbf
0abf0231955e236db0c04463cf45646f5634cb533a73624b2b2016821670548854ce2b20
4b28e831bf0bbf
0abf023183b5b6d3b089b044436e45786f49341a871a0a733a626b2b200120896b4e6b05
2b1c5f9decbf0bbf
09bf8131bf97bf31d82e09d3b044cd485a786f1201cb1a530a73621c052b852b054e4b1c
0585053a282d58bf0bbf
0bbf9431bf556709b03844cd482c7864125634cb1a5f0a7382734b0501050162011c854b
0aae2d58bf0bbf
0bbf0131934a236dd3b0bc7743485a786f1201341acb535f3a813a1c011c0173023a8453
3b1458bf0bbf
0bbf8431bf0455098309d338778277ef2c852c266f1201348134cb83cb530a3a013a810a
5f815f0a850a1ab37d58bf0bbf
08bf81e9bf93bf31bf18d83209d338c044cd6e0e2c64126f0172837271cb5382530a5383
53ae531a851a01a57e58bf0bbf
0bbf01e5837600230901098138c082c0482c862c7864126f49568156728272341a811a72
0272864912bb841131bf0abf
03bf94e9bfe9bfe9bf1ebf1ebf275923b632099538c044ef81ef7881786481646f816fad
84adea01ea560156882449ad2da3115831bf0abf
04bf02e992654ce61e75bf0d185523b66d0995bcc043cd2c812c7881786483646f64f001
f08b6f496f49642d6382e3314cbf0abf
01bf85e9e5e9652fc784c7693fc7698a69c7d2b200232eb60929bc84bc6343ef2c862c78
45784d78ed82ed6f6489644d45a3afa2114c31bf0abf
01e58175c783c769d5eb8ceb797679dab87908db67c4b66d876d9538b0447743ef84ef6e
2c78458e455a457864788ecfbe9fd4315831bf0abf
88e5750d3f5779da98d083d0689b3501358d5d0236c45567b6320995b04477cd92cdef6e
2c6e5ad95acf782c4517813e31bf2fbf0bbf
887569575bd0689bc5ba83ba8a2a8a878aca2a74db5955b284b23209d3b081b077017701
cd016e02ef876e2c6e4810a4d4bf01bf814cbf0abf
873f79b835c5ba2a9a829aa8410141868de1d104c690d881d85583552e6d958b9538b0c0
77cd03cd6377afcd84cd4321c1d483d4e9654c814cbf0abf
88575b9b742ad1418de181e15081509603968450c8d759d881d8b283b2326d0981099585
9538bcb0381f871f95c3995ca931bf81bfe981e9bf0bbf
8779b8c58ad1c6e750855096d7b119b104b184d7b119d855845523b2b66d016d83952995
2987296de09211d431bf01bf01e90cbf
8979d0c52aa88de15096b181b119041901b18796c80fd74a59b2b602b6016d86326d328f
ac0b318331bf31bf01bf81e9bf0cbf
88575b9b742ad1c68de186e1c850c850c850865096c850e1e70487045e8ca7912e672e85
2e8cac33473101318158bf02bf82e9bfe981e9bf0abf
8b3f799835c5742a8bd1a8dbc683c68dc68d818dc601c68cdbd1ca40a15da66697274711
31863158bf31bf31bf82bf4ce985e9bfe9bfe9bf0abf
8bc76957dab8359bc5a1748a2a052a018a01748b029ba6665b279447ec311ebf83bf581e
bf82bf4cbf02bf82e9bfe981e9bf0abf
881e75693f57795bb8d082d068350135029b0135013088b8985b7608b40d751e811ebf83
bf1e75bf81bf4c814cbf05bf81e9bf0bbf
83e9e52fc782c7693f823f5779817976027681da760276827957b482b4c7750175822fe5
bf82bf4cbf01bf814cbf81bfe981e9bf01bf01e90dbf

%
% Compression made this file 26.36% of the uncompressed size.
%


showpage

% stop using temporary dictionary
end

% restore original state
origstate restore

%%Trailer

%%EndDocument
 @endspecial 297 w(SESC:)i(Timing)f(sim)n(ulator)f(in)i(C++)f
(\(22KLOC\))4581 4992 y(Simplescalar)e(4.0)j(\(55KLOC\))10245
5222 y
 0 setgray
 10245 5222 a 4500 6000 a
 tx@Dict begin -90 Rot  end
 4500 6000 a eop
%%Page: 3 3
3 2 bop 4500 6000 a
 tx@Dict begin 90 Rot  end
 4500 6000 a 5981 1792 a @beginspecial
-168 @llx 371 @lly 782 @urx 421 @ury 2834 @rwi 283 @rhi
@setspecial
%%BeginDocument: barre-rico.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /ufs/goualard/TEMP/barre_hor.ps
%%Creator: XV Version 3.10a  Rev: 12/29/94 (PNG patch 1.2)  -  by John Bradley
%%BoundingBox: -168 371 782 421
%%Pages: 1
%%DocumentFonts:
%%EndComments
%%EndProlog

%%Page: 1 1

% remember original state
/origstate save def

% build a temporary dictionary
20 dict begin

% define space for color conversions
/grays 950 string def  % space for gray scale line
/npixls 0 def
/rgbindx 0 def

% lower left corner
-168 371 translate

% size of image (on paper, in 1/72inch coords)
949.96800 49.96800 scale

% define 'colorimage' if it isn't defined
%   ('colortogray' and 'mergeprocs' come from xwd2ps
%     via xgrab)
/colorimage where   % do we know about 'colorimage'?
  { pop }           % yes: pop off the 'dict' returned
  {                 % no:  define one
    /colortogray {  % define an RGB->I function
      /rgbdata exch store    % call input 'rgbdata'
      rgbdata length 3 idiv
      /npixls exch store
      /rgbindx 0 store
      0 1 npixls 1 sub {
        grays exch
        rgbdata rgbindx       get 20 mul    % Red
        rgbdata rgbindx 1 add get 32 mul    % Green
        rgbdata rgbindx 2 add get 12 mul    % Blue
        add add 64 idiv      % I = .5G + .31R + .18B
        put
        /rgbindx rgbindx 3 add store
      } for
      grays 0 npixls getinterval
    } bind def

    % Utility procedure for colorimage operator.
    % This procedure takes two procedures off the
    % stack and merges them into a single procedure.

    /mergeprocs { % def
      dup length
      3 -1 roll
      dup
      length
      dup
      5 1 roll
      3 -1 roll
      add
      array cvx
      dup
      3 -1 roll
      0 exch
      putinterval
      dup
      4 2 roll
      putinterval
    } bind def

    /colorimage { % def
      pop pop     % remove 'false 3' operands
      {colortogray} mergeprocs
      image
    } bind def
  } ifelse          % end of 'false' case



% define the colormap
/cmap 117 string def


% load up the colormap
currentfile cmap readhexstring
bcfe04 dcfe84 ccfe44 ecfec4 c4fe24 d4fe64 f4fee4 e4fea4 bcfe14 ccfe54 
f4fed4 c4fe34 d4fe74 fcfef4 ecfeb4 e4fe94 f4fecc fcfee4 ecfeac c4fe1c 
d4fe54 ccfe3c dcfe74 bcfe0c dcfe8c ccfe4c ecfecc c4fe2c d4fe6c e4feac 
bcfe1c f4fedc c4fe3c fcfefc ecfebc e4fe9c fcfeec d4fe5c dcfe7c 
pop pop   % lose return values from readhexstring


% rlecmapimage expects to have 'w h bits matrix' on stack
/rlecmapimage {
  /buffer 1 string def
  /rgbval 3 string def
  /block  384 string def

  % proc to read a block from file, and return RGB data
  { currentfile buffer readhexstring pop
    /bcount exch 0 get store
    bcount 128 ge
    {  % it's a non-run block
      0 1 bcount 128 sub
      { currentfile buffer readhexstring pop pop

        % look up value in color map
        /rgbval cmap buffer 0 get 3 mul 3 getinterval store

        % and put it in position i*3 in block
        block exch 3 mul rgbval putinterval
      } for
      block  0  bcount 127 sub 3 mul  getinterval
    }

    { % else it's a run block
      currentfile buffer readhexstring pop pop

      % look up value in colormap
      /rgbval cmap buffer 0 get 3 mul 3 getinterval store

      0 1 bcount { block exch 3 mul rgbval putinterval } for

      block 0 bcount 1 add 3 mul getinterval
    } ifelse
  } % end of proc
  false 3 colorimage
} bind def


950 50 8			% dimensions of data
[950 0 0 -50 0 50]		% mapping matrix
rlecmapimage

7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f210221870d1f220e220311212a21
7f217f217f217f217f217f2175218211030e820e220e820e220e860e220e23050b048404
090e24212a21
7f217f217f217f217f217f2171218e110312260b041e131e131e131e131e871e17001702
1d24212c21
7f217f217f217f217f217f216921830d1f220e870e221226200408000b00841702070d21
0521842403100d212321
7f217f217f217f217f217f2121218524220f231f213a218f0d0a220e220e23051b041e13
1e0817000c008408190706210421851103221f0d212521
7f217f217f217f217f217f211e2189240e1c1b17000825242136218a0d1026021b041e13
081700110085172001030d210421840316030d212821
7f217f217f217f217f21342186111a120f070a215721860d1110220e220e860e12182504
17000300821b1f212521851f0e2326230e080e841d010908001100820820090209840c1d
1a06210521841026230d212a21
7f217f217f217f21792186241f10220e220e820e220e820e220e820e220e820e220e820e
220e830e070f01010182070a2117218b0610231c1508001708090a2151218e0d1f101d01
14201b1e131e131e08000700820c0d211021840d100311210921881103220e07050b0800
8400171e081e821e081e851e081e0817001000851e2009181a210b21850d22261d24212c
21
7f217f217f217f21472184241f10220e820e220e820e220e820e220e820e220e820e220e
820e220e810e2283221f0d210e219a241f10070f1c09151e041e131e131e131e131e131e
131e131e131e821e080002008b17081410210d1110220e220e820e220e820e220e010e81
2301880126012616191b08000500820422212f2182240d211921890d0a0e072625150417
00100082201a210921890d1110220e23011620048304051f210421891103231c15131e08
1700190082171e090309820c1a210e21841f0e0a0d212e21
7f217f217f217f213f2190241f100e070f011c1920041e131e081e0882081e0882081e08
82081e0882081e0803088304250a2107218b241f030e12181619151e08001d00811e268c
2614201b041e131e131e131e088108178117000f0082091f211521840d0610220e0f0e88
120f012625020c11211321890d0a22121809040817001300831e050a2105218a0d1f101d
0114201b1e170004008408260e220e860e230c020417001800821e2009020982181a2114
21810d213321
7f211221842422121f217f217f217f211221850d0a220e220e820e220e820e220e820e22
0e010e881d0f1605090b041e178117001a008f1e22210d1110221d0f0116190b041e1781
1700220001171f00820b2221102189111022120f0125151b1e011e81081e821e081e821e
081e821e081e821e081e821e1700030082171c0e110e861d01251b1e170015008220181d
021d81220e020e86070119150417000b0086081e131e08170019008308091d210c21830d
1f24214121
7f210721830d0a220e040e83230504088308052421492185240a22230f01130182070a21
7f2106218c240a03220e220e220e220e1d0f840f01231f217f210a2199240a221d0f0116
191b1e131e131e131e131e131e131e131e17002300810b16871609200413081700490087
171e051d1f10220e0a0e8712232625201b1e178117001b000108011e81081e821e081e82
1e081e821e081e821e081e831e0817000c0085171e201e08000300831720090c840c090b
1b1e871e081e081e0817001f0083081e201e821e20090809820c03210b21860d0a222307
0d210521010d3a21
7f21042188112218141b13081e088108178117000300821b1f2140218b241f100e070f1c
25021b1317811700140083081410217f218c241f10070f05021b04131e131e011e810817
811700010093170207220e220e220e220e220e220e22120f18018301231f216e218c0d0a
22120f0116191b130817004c000117811e208120090509822008002c008308200c188518
0c09021b1e821e081e821e081e821e081e811e08810817811700400081171e871e09181a
061c08000300851e200b1e1700250083171e200983091806211721820d110a010a841d26
1918214421
6c219a1103220e220e220e220e220e220e220e220e220e22120f050b08000d0093091d22
0e220e220e220e220e220e220e2203112127218c241f100e070f0105021b1e08001e0082
0422216a2189241f10220e230f1826018201260182012601890126160509150408170011
0085131e131e131e821e131e831e131e0882081700020083082524215e2183240a220e82
0e220e8b0e22120f011605190b1308178117004d008817081e2009181d06210821810900
22000408071e0117510085080b09181a21022182060900040082081700120082171e000f
00011e83091806210d21821a031d8e1d221d221d0e22030a110d240d240d810d21012182
2406214521
68219711030f252004131e131e131e131e131e131e131e131e131e821e08001100011e83
131e131e821e131e821e131e821e131e811e1383131c1f211e218d0d1110221d0f260519
0b041e17002500821b0c0103018426161c05250b258405160f1d0e210e82070f26012681
0126822601268426010f1f2117218a241f100e070f1609150408820817003900821b1f21
56218a0a0f0c2514190215041e0801088217081701173400011781001781170016000117
011e85200c181d06210e218105000d0083171e08000c00011781081e041e020802171e00
82081e208120090d0982201e001b00850820090c1a210721821817000b008b081e200920
1920192009200986090c1d1a060900030083171e20090209010c83181a0621082187060a
0e1d071d0e1d821d0f1802180107841d220a24215221
1d21830d1f220e820e220e820e220e820e220e860e220e221024212321840d10230f010a
01852616091b08003b00820812210421830d1f102281220e820e220e820e220e820e220e
820e220e820e220e890e1d0f011609201b1317811700470081081e821e081e821e081e82
1e081e821e081e821e081e821e081e821e081e821e081e821e081e821e081e841e081e08
000a0083170b260182012601820126018201260182012601820126018a01260126160525
19151b088108004200820c0d21032196240a03220e220e220e220e220e220e220e220e22
0e1d0f810f01150182231f210921840d0610220e0e0e8418140417002100821720090409
822017002c008317081e208520090c1d1a211621821a201e811e20832009200982092009
86092009181a0c003400011e8520090c181a211221831a0c200982092009820920091109
830c1a06210a2182062000080087082009181a0621060206812106810621052183061d0c
0984090c181d1a011a02060e21820d062482240d216021
1c21970d0702041e131e131e131e131e131e131e0420050f100d211f21840d231b17004d
00a008182212230f011609151b131e131e131e131e131e131e131e131e131e130817001b
0083170017007f0041008c201a241f10070f1c021b04131e821e131e821e131e821e131e
821e131e011e810817811700160001178205112101218a111022120f181614151b1e821e
081e821e081e821e081e821e081e821e0817811700250082090621032182060900260088
17081e20090c1d1a212e2183062017001f008317081e208120090a09830c181a21442183
240917008300081e2001208409181a0621142183061a1d1a841a062106217721
1b21830d071b000f008517080b05230e8f0e220e220e220e220e220e220e220e22842210
110d210821830d231e004f00841e041e08178117007f0065008117000e000108011e8720
0c16090b1e08003000880401181614201b1e178117003a00822006210421820620001f00
81171e861e20090c1d1a213521820609001700011788081e20090c181a0621492184060a
101a1086101a10110d210d880d061a180c09181a0601067f211b21
1b21820a1900140081081e821e131e821e131e821e131e821e131e8d1e131e13040b1925
1812221f0d210321820a20007f007f0033000108160081081e031e820817003600811700
40008308091a2106218203091e031e8120091609830c1d1a213d21821f01091409840c18
1a06214e21010d0124010685240624060d210321850a26012206217f211f21
1b21831020170029008c1708040b021925051626051e007f002f000d1782081e20812009
1e0982201e00370081171e811e208120090c0982181d0683061808007900011781081e07
1e8120090e09820c1d217f216721820611217f212221
1b21830d0e0c090c0982201e004d00820817002a000217011e8120090c09811e00380082
17081e851e090c181a068306210621822106218221062182210621822106212521821a0c
09010982201e002700011781081e811e2085200c181d06211321821a200022000117011e
82091e0035008317081e20812009090982201e0002008608091a062106217f215521810d
217f215321
2d21851a0c201e17004300850820090c1a068206200022008317081e208620090c181d1a
210f21821d08002e000117021e0120840c181a06214221821d0c09250983181d06211c21
821a20001c008817081e2009181d062101218109002d0081171e871e20090c181a06210e
21851d09200c1a217f215a2182110d215321810d217d21
30218306180c090f0983201e08002500811e09820920090109830c1a062104218203201e
081e01201309810c1d821d1a21182182062000260081171e011e8620090c181a06217f21
1521830d1d0c091909840c181d06210721821a191e091e83200920098209200982092009
8209200982092009820920098209200982092009820920098209200985090c181a06217f
217621810d215121860d1026142510217c21
462185061d0c2017002000820906214e21820618098209200981092082201e178217081e
011e01201309840c181a06217f217f217f217f214421810d2401248306240d217d21
4a21841d201e0800150081081e041e820906217f217f217f217f217f217f214521
4e2185061a18201e000b0085171e091d06217f217f217f217f217f217f214e21
5221821a0c090909830c1d06217f217f217f217f217f217f215121
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521

%
% Compression made this file 2.88% of the uncompressed size.
%


showpage

% stop using temporary dictionary
end

% restore original state
origstate restore

%%Trailer

%%EndDocument
 @endspecial 5001 5222 a @beginspecial @setspecial
 tx@Dict begin STP newpath 1.0 SLW 0.5451 0.39608 0.03137 setrgbcolor
 /ArrowA { moveto } def /ArrowB { } def [ 341.43292 -28.45274 -22.76227
-28.45274  /Lineto /lineto load def false Line  gsave 1.0 SLW 0.5451
0.39608 0.03137 setrgbcolor 0 setlinecap stroke  grestore end
 
@endspecial
621 x Fi(SESC)20 b(\(IA)n(COMA)e(g)o(roup\))2960 b(Joe)20
b(Renau,)h(Basilio)e(F)m(r)o(aguela,)h(and)g(Liu)g(W)n(ei)39
b(\226)20 b(page)40 b(3/23)4266 1057 y
 gsave currentpoint currentpoint translate 270 neg rotate neg exch
neg exch translate
 4266 1057 a @beginspecial
276 @llx 366 @lly 336 @urx 426 @ury 141 @rwi 141 @rhi
@setspecial
%%BeginDocument: angleHG.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/rico/texte/texstyle/Prosper-beta/img/angleHG.ps
%%Creator: XV Version 3.10a  Rev: 12/29/94 (PNG patch 1.2)  -  by John Bradley
%%BoundingBox: 276 366 336 426
%%Pages: 1
%%DocumentFonts:
%%EndComments
%%EndProlog

%%Page: 1 1

% remember original state
/origstate save def

% build a temporary dictionary
20 dict begin

% define string to hold a scanline's worth of data
/pix 180 string def

% define space for color conversions
/grays 60 string def  % space for gray scale line
/npixls 0 def
/rgbindx 0 def

% print in landscape mode
90 rotate 0 -612 translate

% lower left corner
366 276 translate

% size of image (on paper, in 1/72inch coords)
59.97600 59.97600 scale

% define 'colorimage' if it isn't defined
%   ('colortogray' and 'mergeprocs' come from xwd2ps
%     via xgrab)
/colorimage where   % do we know about 'colorimage'?
  { pop }           % yes: pop off the 'dict' returned
  {                 % no:  define one
    /colortogray {  % define an RGB->I function
      /rgbdata exch store    % call input 'rgbdata'
      rgbdata length 3 idiv
      /npixls exch store
      /rgbindx 0 store
      0 1 npixls 1 sub {
        grays exch
        rgbdata rgbindx       get 20 mul    % Red
        rgbdata rgbindx 1 add get 32 mul    % Green
        rgbdata rgbindx 2 add get 12 mul    % Blue
        add add 64 idiv      % I = .5G + .31R + .18B
        put
        /rgbindx rgbindx 3 add store
      } for
      grays 0 npixls getinterval
    } bind def

    % Utility procedure for colorimage operator.
    % This procedure takes two procedures off the
    % stack and merges them into a single procedure.

    /mergeprocs { % def
      dup length
      3 -1 roll
      dup
      length
      dup
      5 1 roll
      3 -1 roll
      add
      array cvx
      dup
      3 -1 roll
      0 exch
      putinterval
      dup
      4 2 roll
      putinterval
    } bind def

    /colorimage { % def
      pop pop     % remove 'false 3' operands
      {colortogray} mergeprocs
      image
    } bind def
  } ifelse          % end of 'false' case



60 60 8			% dimensions of data
[60 0 0 -60 0 60]		% mapping matrix
{currentfile pix readhexstring pop}
false 3 colorimage

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffafee3effeaaffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffafee3e3fe64ffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffe3fe64fafee3ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffe9fe88f1feb3ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffe8fe86dffe55fefefeffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffebfe96dafe37fefefeffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffedfe9edefe48f7fed5ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffedfe9ee2fe60eefea5f5fecaecfe95ecfe97ecfe98
ecfe99ecfe9bf6feceffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffeffeaadffe4fe0fe55dcfe3f
dbfe3cdbfe3ddbfe3dddfe48defe4cdcfe43d9fe32d6fe20e2fe5fe3fe67defe4ddefe4d
defe4edefe4edbfe3bdbfe3cdcfe3ddcfe3fdcfe40dcfe42ddfe43ddfe45ddfe46ddfe48
ddfe46e2fe63e5fe72e5fe74e6fe76e6fe77e6fe79e7fe7ae9fe86e8fe85ebfe94ecfe97
ecfe99ecfe9cedfe9eeffeacf2febcf3febef3fec1f4fec4f9fedfffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffeffeaaf1feb3f5fec7e9fe87
e7fe7be7fe7be7fe7be2fe60e1fe5bd6fe1dd8fe2adafe33e1fe5bdffe54defe4edffe50
dffe51dffe53e0fe54ddfe49ddfe4bdefe4cdefe4edefe50dffe52dffe54e5fe73eafe93
e9fe89e6fe7ae4fe6ce4fe6ee8fe84e8fe85e9fe87e9fe8ae8fe84e7fe7ce8fe81e9fe8a
f0feb0f8fedbf9fedff1feb8f1febaeafe8bfbfeeafbfeebfdfef5ffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff5fecddffe52e1fe5df5fec9f5fec9f5fecaf5feca
f5fecbf5feccf5feccf5fecdf6fecef6fecef6fecef6fecff6fed0f6fed1eefea5e9fe8a
f6fed1f7fed7f7fed8f7fed9f6fecdfafee8fcfef1fcfef2fdfef7fcfef3fdfef7fefefc
fefefcfefefdf9fee0f6fecff5feccf4fec2ffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff5fecde3fe64e5fe74ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffdfef5fefefdfefefdfefefcfefefcfffffffefef9
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff5fecde5fe74dffe53ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff6fecee6fe79e5fe6ff8fed8ffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff6fecee6fe7aebfe95effeaaffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff6fecee6fe7aedfe9eeefea2ffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff6fecee6fe7bedfe9eeefea3ffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff6fecfe6fe78ecfe9eeefea5ffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffefefe
fefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff6fed0e2fe63e0fe59dffe55ffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffefefe
fefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffedfe9fe2fe5fd8fe2ad8fe2dffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffecfe9adffe53d6fe1cdefe4cf6fecfffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffedfe9cd8fe2cd6fe20defe4bf6fed0ffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffefefdffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffedfe9dd8fe27d7fe22defe4ef6fed0ffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffedfe9dd7fe26d6fe20e0fe5bf6fed2ffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff3febdd7fe22d7fe22e1fe5ef7fed3ffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff4fec6d6fe20d7fe21e0fe57f7fed4ffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff4fec6d6fe20d6fe1fe0fe59f7fed5ffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff4fec6d6fe1ed6fe1ee5fe73f7fed6ffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff4fec6d6fe1dd9fe32e0fe56ffffffffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff5fecce0fe55defe48e8fe81ffffffffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffbfeede7fe7fe0fe56e9fe85ffffffffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff7fed8e8fe84e7fe7ef1feb4ffffffffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff2feb8edfea0effea6f1feb6ffffffffffffffffff
fffffffefefefefefeffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffefefceffeabf0feafeffea7f2feb7ffffffffffffffffff
fffffffefefefefefefefefeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffefefcf5fecaecfe9de7fe7af8feddffffffffffffffffff
fffffffefefefefefefefefefefefeffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffefefcf5fecce8fe85e8fe80ffffffffffffffffffffffff
fffffffefefefefefefefefeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffff8fedefdfef8fdfefbf3fec0e9fe89ecfe96ffffffffffffffffffffffff
fefefefefefefefefefefefeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffdfef6fefefafefefaf4fec2e9fe89ecfe96ffffffffffffffffffffffff
fefefefefefefefefefefefeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffdfef6fefefefefefdf4fec2e8fe85edfe9dffffffffffffffffffffffff
fefefefefefefefefefefefeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffefef9fefefdfefefce7fe7be5fe76f2feb7ffffffffffffffffffffffff
fffffffffffffefefefefefeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffdfef6fdfefafefefbe2fe65e5fe75f6fed0ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffdfef9fefefce6fe79e6fe77fafee6ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffcfef6fefefbecfe9be7fe7efbfeecffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffdfef5fdfef7f7fed5e9fe8dfcfef2ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffcfeeffbfeebedfea1fdfef7ffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffefefeffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffefefdfbfee9effeabffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffefefefefefeffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffbfeeceffea6ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff9fee3f3fec1ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffeefea2f8fedaffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff1feb2fafee4ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffcfef0fefefaffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff


showpage

% stop using temporary dictionary
end

% restore original state
origstate restore

%%Trailer

%%EndDocument
 @endspecial 4511 1057 a
 currentpoint grestore moveto
 4511 1057 a 4130 5844 a
 currentpoint currentpoint translate 0.76611 0.76611 scale neg exch
neg exch translate
 4130
5844 a 4130 5844 a
 gsave currentpoint currentpoint translate 0 neg rotate neg exch neg
exch translate
 4130 5844 a @beginspecial 0 @llx 0
@lly 37 @urx 42 @ury 370 @rwi @setspecial
%%BeginDocument: figs/uiuc.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: uiuc.eps
%%Creator: fig2dev Version 3.2 Patchlevel 3d
%%CreationDate: Sun Feb 10 22:03:46 2002
%%For: renau@nether.cs.uiuc.edu (Jose Renau)
%%BoundingBox: 0 0 37 42
%%Magnification: 1.0000
%%EndComments
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def
/col32 {0.200 0.200 0.400 srgb} bind def
/col33 {0.800 0.400 0.000 srgb} bind def

end
save
newpath 0 42 moveto 0 0 lineto 37 0 lineto 37 42 lineto closepath clip newpath
-273.7 413.7 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
 0.06000 0.06000 sc
%
% Fig objects follow
%
%  polyline 
% Polyline
n 5070 6872 m 5070 6227 l 4584 6227 l 4584 6872 l
 5070 6872 l  cp gs col32 1.00 shd ef gr 
%  polyline 
% Polyline
15.000 slw
n 5070 6872 m 5070 6227 l 4584 6227 l 4584 6872 l
 5070 6872 l  cp gs col32 s gr 
%  polyline 
% Polyline
0.000 slw
n 5056 6858 m 5056 6243 l 4598 6243 l 4598 6858 l
 5056 6858 l  cp gs col32 1.00 shd ef gr 
%  polyline 
% Polyline
7.500 slw
n 5056 6858 m 5056 6243 l 4598 6243 l 4598 6858 l
 5056 6858 l  cp gs col33 s gr 
%  spline 
% Polyline
2 slj
0.000 slw
n 4944 6783 m 4944 6781 l 4944 6773 l 4944 6759 l 4944 6751 l 4944 6749 l
 4943 6749 l 4935 6748 l 4924 6746 l 4914 6744 l 4906 6742 l
 4900 6741 l 4896 6739 l 4892 6738 l 4887 6735 l 4884 6732 l
 4880 6728 l 4877 6722 l 4875 6716 l 4873 6709 l 4872 6702 l
 4871 6693 l 4870 6683 l 4869 6670 l 4869 6654 l 4868 6637 l
 4868 6621 l 4868 6609 l 4868 6604 l 4868 6603 l 4868 6602 l
 4868 6597 l 4868 6585 l 4868 6567 l 4868 6544 l 4868 6521 l
 4868 6503 l 4868 6491 l 4868 6486 l 4868 6485 l 4868 6483 l
 4868 6474 l 4868 6457 l 4869 6438 l 4869 6420 l 4870 6406 l
 4870 6395 l 4871 6387 l 4873 6381 l 4874 6375 l 4876 6371 l
 4879 6367 l 4882 6365 l 4885 6363 l 4889 6362 l 4892 6361 l
 4898 6359 l 4905 6358 l 4915 6356 l 4925 6354 l 4933 6352 l
 4934 6352 l 4934 6350 l 4934 6343 l 4934 6331 l 4934 6324 l
 4934 6322 l 4933 6322 l 4928 6322 l 4916 6322 l 4896 6322 l
 4869 6322 l 4837 6322 l 4806 6322 l 4779 6322 l 4759 6322 l
 4747 6322 l 4742 6322 l 4741 6322 l 4740 6322 l 4737 6322 l
 4732 6322 l 4729 6322 l 4726 6322 l 4724 6322 l 4721 6323 l
 4718 6324 l 4716 6325 l 4714 6326 l 4712 6327 l 4710 6329 l
 4707 6332 l 4705 6334 l 4703 6336 l 4701 6338 l 4700 6339 l
 4699 6341 l 4698 6342 l 4697 6344 l 4696 6346 l 4696 6347 l
 4695 6349 l 4695 6351 l 4695 6353 l 4694 6356 l 4694 6358 l
 4694 6359 l 4694 6360 l 4694 6362 l 4694 6365 l 4694 6367 l
 4695 6369 l 4695 6370 l 4696 6372 l 4697 6374 l 4697 6375 l
 4698 6377 l 4699 6378 l 4701 6379 l 4702 6381 l 4704 6383 l
 4706 6385 l 4708 6386 l 4709 6388 l 4710 6389 l 4712 6389 l
 4713 6390 l 4715 6391 l 4716 6391 l 4718 6391 l 4720 6391 l
 4721 6391 l 4724 6391 l 4726 6391 l 4727 6391 l 4729 6391 l
 4732 6390 l 4735 6390 l 4737 6389 l 4740 6388 l 4742 6387 l
 4744 6385 l 4747 6383 l 4748 6381 l 4749 6379 l 4750 6376 l
 4751 6372 l 4752 6369 l 4752 6368 l 4752 6366 l 4752 6364 l
 4752 6362 l 4752 6361 l 4752 6359 l 4752 6358 l 4751 6357 l
 4751 6356 l 4750 6355 l 4749 6354 l 4749 6353 l 4748 6352 l
 4747 6351 l 4746 6350 l 4745 6349 l 4744 6348 l 4743 6348 l
 4742 6347 l 4741 6346 l 4740 6346 l 4739 6346 l 4738 6346 l
 4736 6345 l 4735 6345 l 4733 6345 l 4732 6345 l 4730 6345 l
 4729 6345 l 4728 6346 l 4727 6346 l 4725 6346 l 4724 6347 l
 4724 6348 l 4723 6348 l 4722 6349 l 4721 6351 l 4720 6352 l
 4719 6353 l 4718 6354 l 4718 6355 l 4717 6356 l 4717 6357 l
 4717 6358 l 4716 6359 l 4717 6360 l 4717 6361 l 4717 6362 l
 4717 6363 l 4718 6364 l 4718 6365 l 4719 6366 l 4719 6367 l
 4720 6367 l 4720 6368 l 4721 6368 l 4722 6369 l 4723 6369 l
 4723 6368 l 4724 6368 l 4725 6368 l 4726 6367 l 4727 6367 l
 4727 6366 l 4728 6366 l 4728 6365 l 4729 6365 l 4729 6364 l
 4729 6363 l 4729 6362 l 4729 6361 l 4728 6360 l 4728 6359 l
 4729 6359 l 4729 6358 l 4730 6357 l 4731 6357 l 4731 6356 l
 4732 6356 l 4733 6356 l 4734 6356 l 4735 6356 l 4735 6357 l
 4736 6357 l 4737 6357 l 4738 6357 l 4738 6358 l 4739 6358 l
 4739 6359 l 4739 6360 l 4740 6360 l 4740 6361 l 4740 6362 l
 4741 6362 l 4741 6363 l 4741 6364 l 4740 6364 l 4740 6365 l
 4740 6366 l 4740 6368 l 4739 6371 l 4739 6373 l 4738 6374 l
 4737 6375 l 4736 6376 l 4735 6377 l 4733 6378 l 4732 6379 l
 4731 6379 l 4729 6379 l 4727 6380 l 4725 6380 l 4724 6380 l
 4722 6380 l 4721 6380 l 4720 6380 l 4719 6380 l 4718 6380 l
 4717 6379 l 4716 6379 l 4715 6379 l 4715 6378 l 4714 6377 l
 4713 6376 l 4712 6375 l 4711 6374 l 4710 6373 l 4710 6372 l
 4709 6372 l 4708 6371 l 4708 6370 l 4707 6369 l 4707 6368 l
 4707 6367 l 4706 6365 l 4706 6363 l 4706 6361 l 4706 6359 l
 4706 6357 l 4706 6355 l 4706 6353 l 4706 6352 l 4707 6351 l
 4707 6350 l 4707 6348 l 4708 6347 l 4709 6346 l 4709 6345 l
 4710 6344 l 4712 6343 l 4713 6342 l 4715 6340 l 4717 6339 l
 4718 6337 l 4720 6337 l 4721 6336 l 4723 6335 l 4725 6334 l
 4727 6334 l 4729 6334 l 4731 6333 l 4734 6333 l 4738 6333 l
 4740 6333 l 4741 6333 l 4742 6333 l 4744 6333 l 4747 6333 l
 4753 6333 l 4759 6333 l 4767 6333 l 4776 6333 l 4785 6333 l
 4794 6333 l 4802 6333 l 4809 6333 l 4815 6333 l 4822 6333 l
 4827 6333 l 4828 6333 l 4828 6334 l 4828 6337 l 4828 6341 l
 4828 6344 l 4828 6345 l 4826 6345 l 4816 6345 l 4797 6345 l
 4779 6345 l 4769 6345 l 4767 6345 l 4766 6345 l 4765 6345 l
 4764 6346 l 4763 6346 l 4762 6347 l 4762 6348 l 4761 6349 l
 4761 6350 l 4761 6351 l 4761 6352 l 4761 6353 l 4761 6354 l
 4761 6355 l 4762 6356 l 4762 6357 l 4763 6358 l 4764 6359 l
 4765 6359 l 4766 6359 l 4767 6359 l 4769 6359 l 4779 6359 l
 4798 6359 l 4816 6359 l 4826 6359 l 4828 6359 l 4828 6360 l
 4828 6362 l 4828 6367 l 4828 6369 l 4828 6370 l 4826 6370 l
 4817 6370 l 4799 6370 l 4782 6370 l 4773 6370 l 4771 6370 l
 4770 6370 l 4769 6370 l 4768 6370 l 4767 6371 l 4766 6371 l
 4766 6372 l 4765 6373 l 4765 6374 l 4765 6375 l 4765 6376 l
 4765 6377 l 4766 6378 l 4766 6379 l 4767 6380 l 4768 6381 l
 4769 6381 l 4770 6381 l 4771 6381 l 4773 6381 l 4782 6381 l
 4800 6381 l 4817 6381 l 4826 6381 l 4828 6381 l 4828 6384 l
 4828 6391 l 4828 6404 l 4828 6423 l 4828 6449 l 4828 6480 l
 4828 6516 l 4828 6554 l 4828 6592 l 4828 6628 l 4828 6659 l
 4828 6685 l 4828 6704 l 4828 6717 l 4828 6724 l 4828 6727 l
 4827 6727 l 4819 6727 l 4802 6727 l 4780 6727 l 4757 6727 l
 4740 6727 l 4732 6727 l 4731 6727 l 4730 6727 l 4729 6727 l
 4728 6727 l 4727 6728 l 4726 6728 l 4726 6729 l 4726 6730 l
 4725 6730 l 4725 6731 l 4725 6732 l 4725 6733 l 4725 6734 l
 4725 6735 l 4725 6736 l 4725 6737 l 4726 6738 l 4726 6739 l
 4727 6739 l 4727 6740 l 4728 6740 l 4729 6740 l 4730 6740 l
 4731 6740 l 4732 6740 l 4740 6740 l 4757 6740 l 4780 6740 l
 4802 6740 l 4819 6740 l 4827 6740 l 4828 6740 l 4828 6741 l
 4828 6745 l 4828 6750 l 4828 6754 l 4828 6755 l 4827 6755 l
 4822 6755 l 4811 6755 l 4792 6755 l 4770 6755 l 4748 6755 l
 4729 6755 l 4718 6755 l 4713 6755 l 4712 6755 l 4710 6755 l
 4707 6755 l 4706 6756 l 4704 6756 l 4703 6757 l 4702 6758 l
 4701 6759 l 4700 6760 l 4699 6761 l 4699 6763 l 4698 6764 l
 4698 6767 l 4698 6769 l 4698 6770 l 4698 6773 l 4698 6779 l
 4698 6782 l 4698 6783 l 4699 6783 l 4703 6783 l 4713 6783 l
 4730 6783 l 4755 6783 l 4786 6783 l 4821 6783 l 4856 6783 l
 4887 6783 l 4912 6783 l 4929 6783 l 4939 6783 l 4943 6783 l

 4944 6783 l  cp gs col7 1.00 shd ef gr 
%  spline 
% Polyline
n 4783 6706 m 4783 6705 l 4783 6702 l 4783 6693 l 4783 6678 l 4783 6656 l
 4783 6626 l 4783 6592 l 4783 6555 l 4783 6517 l 4783 6483 l
 4783 6453 l 4783 6431 l 4783 6416 l 4783 6407 l 4783 6404 l
 4783 6403 l 4783 6402 l 4783 6401 l 4783 6400 l 4782 6400 l
 4782 6399 l 4781 6399 l 4781 6398 l 4780 6398 l 4779 6398 l
 4778 6398 l 4777 6398 l 4776 6398 l 4775 6398 l 4774 6399 l
 4773 6399 l 4773 6400 l 4772 6401 l 4772 6402 l 4772 6403 l
 4772 6404 l 4772 6407 l 4772 6416 l 4772 6431 l 4772 6453 l
 4772 6483 l 4772 6517 l 4772 6555 l 4772 6592 l 4772 6626 l
 4772 6656 l 4772 6678 l 4772 6693 l 4772 6702 l 4772 6705 l
 4772 6706 l 4772 6707 l 4772 6708 l 4773 6709 l 4773 6710 l
 4774 6711 l 4775 6712 l 4776 6712 l 4777 6712 l 4778 6712 l
 4779 6712 l 4780 6712 l 4781 6712 l 4781 6711 l 4782 6711 l
 4782 6710 l 4783 6709 l 4783 6708 l 4783 6707 l
 4783 6706 l  cp gs col7 1.00 shd ef gr 
%  spline 
% Polyline
n 4813 6705 m 4813 6704 l 4813 6701 l 4813 6692 l 4813 6677 l 4813 6655 l
 4813 6626 l 4813 6592 l 4813 6555 l 4813 6518 l 4813 6484 l
 4813 6455 l 4813 6433 l 4813 6418 l 4813 6409 l 4813 6406 l
 4813 6405 l 4813 6404 l 4813 6402 l 4813 6401 l 4812 6400 l
 4811 6399 l 4811 6398 l 4810 6398 l 4809 6398 l 4808 6397 l
 4807 6397 l 4806 6397 l 4805 6397 l 4804 6397 l 4803 6397 l
 4802 6397 l 4801 6398 l 4800 6398 l 4799 6399 l 4799 6400 l
 4798 6401 l 4798 6402 l 4798 6404 l 4798 6405 l 4798 6406 l
 4798 6409 l 4798 6418 l 4798 6433 l 4798 6455 l 4798 6484 l
 4798 6518 l 4798 6555 l 4798 6592 l 4798 6626 l 4798 6655 l
 4798 6677 l 4798 6692 l 4798 6701 l 4798 6704 l 4798 6705 l
 4798 6706 l 4798 6707 l 4798 6708 l 4799 6709 l 4799 6710 l
 4799 6711 l 4800 6711 l 4801 6712 l 4802 6713 l 4803 6713 l
 4804 6713 l 4805 6713 l 4806 6713 l 4807 6713 l 4808 6713 l
 4809 6712 l 4810 6712 l 4811 6711 l 4812 6710 l 4812 6709 l
 4813 6708 l 4813 6707 l 4813 6706 l
 4813 6705 l  cp gs col7 1.00 shd ef gr 
%  polyline 
% Polyline
0 slj
n 5136 6864 m 5124 6864 l 5124 6894 l 5119 6894 l 5119 6864 l 5108 6864 l
 5108 6860 l 5136 6860 l
 5136 6864 l  cp gs col32 1.00 shd ef gr 
%  polyline 
% Polyline
n 5172 6894 m 5167 6894 l 5167 6867 l 5157 6880 l 5156 6880 l 5146 6867 l
 5145 6867 l 5145 6894 l 5141 6894 l 5141 6860 l 5145 6860 l
 5156 6874 l 5168 6860 l 5172 6860 l
 5172 6894 l  cp gs col32 1.00 shd ef gr 
$F2psEnd
rs

%%EndDocument
 @endspecial 4769 5844 a
 currentpoint grestore moveto
 4769 5844 a 4130 5844 a
 currentpoint currentpoint translate 1 0.76611 div 1 0.76611 div scale
neg exch neg exch translate
 4130
5844 a 5001 3450 a
SDict begin H.S end
 5001 3450 a 5001 3450 a
SDict begin H.R end
 5001 3450
a 5001 3450 a
SDict begin [ /View [/XYZ H.V] /Dest (page.1) cvn H.B /DEST pdfmark
end
 5001 3450 a 5001 3450 a
SDict begin [ {ThisPage} << /Trans << /S /Replace >> >> /PUT pdfmark
end
 5001 3450 a 5001
3450 a
SDict begin [ /Page 3/View [ /XYZ null null null ] /Title (Why Another One?)
/OUT pdfmark end
 5001 3450 a 6873 1453 a Fm(W)18 b Fn(H)g(Y)117
b Fm(A)18 b Fn(N)g(O)7 b(T)18 b(H)g(E)g(R)114 b Fm(O)18
b Fn(N)g(E)g Fm(?)4649 2157 y @beginspecial 276 @llx
376 @lly 336 @urx 416 @ury 113 @rwi @setspecial
%%BeginDocument: green-bullet-on-white.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/fred/TeX/STYLES/Prosper/img/green-bullet-on-white.ps
%%Creator: XV Version 3.10a+FLmask  Rev: 12/29/94  -  by John Bradley
%%BoundingBox: 276 376 336 416
%%Pages: 1
%%DocumentFonts:
%%EndComments
%%EndProlog

%%Page: 1 1

% remember original state
/origstate save def

% build a temporary dictionary
20 dict begin

% define space for color conversions
/grays 60 string def  % space for gray scale line
/npixls 0 def
/rgbindx 0 def

% lower left corner
276 376 translate

% size of image (on paper, in 1/72inch coords)
59.97600 40.03200 scale

% define 'colorimage' if it isn't defined
%   ('colortogray' and 'mergeprocs' come from xwd2ps
%     via xgrab)
/colorimage where   % do we know about 'colorimage'?
  { pop }           % yes: pop off the 'dict' returned
  {                 % no:  define one
    /colortogray {  % define an RGB->I function
      /rgbdata exch store    % call input 'rgbdata'
      rgbdata length 3 idiv
      /npixls exch store
      /rgbindx 0 store
      0 1 npixls 1 sub {
        grays exch
        rgbdata rgbindx       get 20 mul    % Red
        rgbdata rgbindx 1 add get 32 mul    % Green
        rgbdata rgbindx 2 add get 12 mul    % Blue
        add add 64 idiv      % I = .5G + .31R + .18B
        put
        /rgbindx rgbindx 3 add store
      } for
      grays 0 npixls getinterval
    } bind def

    % Utility procedure for colorimage operator.
    % This procedure takes two procedures off the
    % stack and merges them into a single procedure.

    /mergeprocs { % def
      dup length
      3 -1 roll
      dup
      length
      dup
      5 1 roll
      3 -1 roll
      add
      array cvx
      dup
      3 -1 roll
      0 exch
      putinterval
      dup
      4 2 roll
      putinterval
    } bind def

    /colorimage { % def
      pop pop     % remove 'false 3' operands
      {colortogray} mergeprocs
      image
    } bind def
  } ifelse          % end of 'false' case



% define the colormap
/cmap 723 string def


% load up the colormap
currentfile cmap readhexstring
041808 049008 8c948c 045204 4c544c 04c804 84e284 449644 c4cbc4 0c380e 
04ac07 cce6cc 345e2c e4e7e4 046604 2c3a2c 347234 e4fee2 048208 64cc60 
34922c 24b224 04e404 044604 647264 242623 049f07 8cae8c 04bc06 24c61c 
f4f8f3 1c541c 04d804 1c621c 1c7220 0c280d 14910f 045e04 047c04 ccdcd0 
14ac18 1c481c 747473 04d105 0c6c0b 24852a 1c381c f4f1f3 acafac f4fef5 
0c310c acc6ac 049708 a4a4a3 3c4a44 148314 144812 9cea94 04b405 149e14 
1cbc1c 044004 e4fef4 dcdddd 748274 5c5959 4cba54 145b11 145413 147412 
c4fec4 e4f1e7 146411 088a0a 243028 09c207 fcf8f3 147c13 14c80e acceac 
3c3939 04f405 044e07 07a608 14d00f 0c1f10 0c900b d4d3d4 ecfee3 1c291d 
0c6e14 bcbfbd d4f6d4 909a94 4c5a50 0cac08 24ba24 547e54 0cbc0a 0c5c16 
0c7c0b fcf1fb acb8ac 1c311c aca7a9 e2e2e2 a4e2a4 0cc80a 6c9a6c 143715 
0c650a 0c840b 07de06 14970c 0c980a 0cb40a 848583 ecf0f0 c3c6c3 0c540d 
0c740c cccccc 74ce6c 30a02c 04ec05 54aa5c 6cb66c 9cfa9c 2c862c 5c926c 
6ca674 b4deac 9cda9c 34aa2c 6c7e6c acfeac 448244 34d22c 7d7d7c 6c6d6c 
445644 4c4d4c 1c7a19 1c3e1c 3c3f3c 2c422c 7c9a84 54c254 dceadc 144014 
343231 bccebc bcbabc 447244 6c6664 9c9d9c 7caa7c 349a38 6c7a74 84b69c 
1c4e18 898a89 ccfadc 1c6c2c b8e2c0 1c8a24 a1aaa1 3c4e3c 5f5e5c d8fed8 
24be24 78d670 688668 148a14 14a618 145624 0c480e 2c292b 142916 1c921c 
d4dad9 243828 143017 b4d2bc b4b7b5 1c961c 8c868c 247e24 144e13 04fa04 
246224 fcfefc 0c4e0c ace2b4 3caa3c 244e24 0c180c 949394 545454 ece9ec 
343634 2cb127 6c736c 0ca00c 0cda08 0c5c0b 0ccf06 146a0c b4b2b4 646464 
b4c2b4 0c3f0c ecfdf9 e4dedc ccfdcc 2c2f2b 142214 146b16 c4c2c2 545b54 
2cb62c 74ba74 346634 b4fcb0 244224 444242 246a24 e4feec 0ce204 f4f9fc 
f4eefc 444744 54b654 fcf9fc 0c9114 dcd6d4 ecfeec 0c7b14 0cc614 0c6314 
0c8414 
pop pop   % lose return values from readhexstring


% rlecmapimage expects to have 'w h bits matrix' on stack
/rlecmapimage {
  /buffer 1 string def
  /rgbval 3 string def
  /block  384 string def

  % proc to read a block from file, and return RGB data
  { currentfile buffer readhexstring pop
    /bcount exch 0 get store
    bcount 128 ge
    {  % it's a non-run block
      0 1 bcount 128 sub
      { currentfile buffer readhexstring pop pop

        % look up value in color map
        /rgbval cmap buffer 0 get 3 mul 3 getinterval store

        % and put it in position i*3 in block
        block exch 3 mul rgbval putinterval
      } for
      block  0  bcount 127 sub 3 mul  getinterval
    }

    { % else it's a run block
      currentfile buffer readhexstring pop pop

      % look up value in colormap
      /rgbval cmap buffer 0 get 3 mul 3 getinterval store

      0 1 bcount { block exch 3 mul rgbval putinterval } for

      block 0 bcount 1 add 3 mul getinterval
    } ifelse
  } % end of proc
  false 3 colorimage
} bind def


60 40 8			% dimensions of data
[60 0 0 -40 0 40]		% mapping matrix
rlecmapimage

10bf8131bf05bf03e98165e902e9046587bf3158ec31bfe9658265e9bf09bf
10bf8131bf04bf81e9bf01bf02e98265bfe982e965e901e981bf318131ec82ecbfe982e9
65bf0abf
12bf82751ebf83bf1ebf318231ec3102318111318131bf81bfe901e981bf318131bf01bf
01e90bbf
0fbf02e901bf023101ec021101a981d6a981a9118111318131bf14bf
0fbf8165e901e988e5bfd4ecd66add07808c80149dc2137f46a911d431bfe981e9bf0fbf

0fbf01e982bfe9318331a49ce28fe2454d37562456dc71567bab87a9d4bf81bfe981e9bf
81bf318131bf0abf
10bf8ac775bf311bde43224d37568656cb535f1a733c893cae8506a91131bfe9bf01bf81
58bf0abf
0fbf911ebf31b761a0442245ed56721a530a3a4e3a813a4e864e73c94246e3bf10bf
07bf81e9bf82bfe9bf92bf1ebf31ec4f0c38e2ef8e4d49561a530a3a6283624b052b8a2b
ce4e60c2dfe331bf4cbf0cbf
0abf81e9bf82bfe9ec8eec83de1f21778e786f01341a0a3a1c851c4b052b20168b162054
aa93df11312fe965bf0abf
0ebf8d3111883d77cdcf78646f0134530a810a1c911c4ece20167c517c16542893a9ec31
e965bf0abf
08bf01e999bfe91ebf316cc07743cd45786f49561a530a3a624b6b2b707c510151877c70
4edcaba9bfe981e9bf0abf
0bbf01e985bf27d34352cf90cf0e4d2656011a530a1c62ee2b20167c5102518816cc1db9
d611bfe9bf0abf
07bf81e9bf01bf90e9bf4c86d3445277d92c786f49721a0a3a853a4b0520167c827c51bd
88bd5116e44b157a11bf0cbf
0dbf8d3f0fc33d4403cfbb0e3756011a0a860a624b2b20167c817c5102510116854b897b
a911bf0bbf
08bf82e9e5bf97bf75dab209bcc021ef254d2649561a533a1c4b052b70167c037c811620
85203a853911bf0bbf
0bbf0131869eb6d3b0bc7748884845646f561acb0a7382734b2b812b1683167c16cc01cc
012b844b2813d4bf0bbf
0abf0231955e236db0c04463cf45646f5634cb533a73624b2b2016821670548854ce2b20
4b28e831bf0bbf
0abf023183b5b6d3b089b044436e45786f49341a871a0a733a626b2b200120896b4e6b05
2b1c5f9decbf0bbf
09bf8131bf97bf31d82e09d3b044cd485a786f1201cb1a530a73621c052b852b054e4b1c
0585053a282d58bf0bbf
0bbf9431bf556709b03844cd482c7864125634cb1a5f0a7382734b0501050162011c854b
0aae2d58bf0bbf
0bbf0131934a236dd3b0bc7743485a786f1201341acb535f3a813a1c011c0173023a8453
3b1458bf0bbf
0bbf8431bf0455098309d338778277ef2c852c266f1201348134cb83cb530a3a013a810a
5f815f0a850a1ab37d58bf0bbf
08bf81e9bf93bf31bf18d83209d338c044cd6e0e2c64126f0172837271cb5382530a5383
53ae531a851a01a57e58bf0bbf
0bbf01e5837600230901098138c082c0482c862c7864126f49568156728272341a811a72
0272864912bb841131bf0abf
03bf94e9bfe9bfe9bf1ebf1ebf275923b632099538c044ef81ef7881786481646f816fad
84adea01ea560156882449ad2da3115831bf0abf
04bf02e992654ce61e75bf0d185523b66d0995bcc043cd2c812c7881786483646f64f001
f08b6f496f49642d6382e3314cbf0abf
01bf85e9e5e9652fc784c7693fc7698a69c7d2b200232eb60929bc84bc6343ef2c862c78
45784d78ed82ed6f6489644d45a3afa2114c31bf0abf
01e58175c783c769d5eb8ceb797679dab87908db67c4b66d876d9538b0447743ef84ef6e
2c78458e455a457864788ecfbe9fd4315831bf0abf
88e5750d3f5779da98d083d0689b3501358d5d0236c45567b6320995b04477cd92cdef6e
2c6e5ad95acf782c4517813e31bf2fbf0bbf
887569575bd0689bc5ba83ba8a2a8a878aca2a74db5955b284b23209d3b081b077017701
cd016e02ef876e2c6e4810a4d4bf01bf814cbf0abf
873f79b835c5ba2a9a829aa8410141868de1d104c690d881d85583552e6d958b9538b0c0
77cd03cd6377afcd84cd4321c1d483d4e9654c814cbf0abf
88575b9b742ad1418de181e15081509603968450c8d759d881d8b283b2326d0981099585
9538bcb0381f871f95c3995ca931bf81bfe981e9bf0bbf
8779b8c58ad1c6e750855096d7b119b104b184d7b119d855845523b2b66d016d83952995
2987296de09211d431bf01bf01e90cbf
8979d0c52aa88de15096b181b119041901b18796c80fd74a59b2b602b6016d86326d328f
ac0b318331bf31bf01bf81e9bf0cbf
88575b9b742ad1c68de186e1c850c850c850865096c850e1e70487045e8ca7912e672e85
2e8cac33473101318158bf02bf82e9bfe981e9bf0abf
8b3f799835c5742a8bd1a8dbc683c68dc68d818dc601c68cdbd1ca40a15da66697274711
31863158bf31bf31bf82bf4ce985e9bfe9bfe9bf0abf
8bc76957dab8359bc5a1748a2a052a018a01748b029ba6665b279447ec311ebf83bf581e
bf82bf4cbf02bf82e9bfe981e9bf0abf
881e75693f57795bb8d082d068350135029b0135013088b8985b7608b40d751e811ebf83
bf1e75bf81bf4c814cbf05bf81e9bf0bbf
83e9e52fc782c7693f823f5779817976027681da760276827957b482b4c7750175822fe5
bf82bf4cbf01bf814cbf81bfe981e9bf01bf01e90dbf

%
% Compression made this file 26.36% of the uncompressed size.
%


showpage

% stop using temporary dictionary
end

% restore original state
origstate restore

%%Trailer

%%EndDocument
 @endspecial 298 w Fg(Model)66 b(more)h(details)f(in)g(the)h
(out-of-order)i(core)4649 2522 y @beginspecial 276 @llx
376 @lly 336 @urx 416 @ury 113 @rwi @setspecial
%%BeginDocument: green-bullet-on-white.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/fred/TeX/STYLES/Prosper/img/green-bullet-on-white.ps
%%Creator: XV Version 3.10a+FLmask  Rev: 12/29/94  -  by John Bradley
%%BoundingBox: 276 376 336 416
%%Pages: 1
%%DocumentFonts:
%%EndComments
%%EndProlog

%%Page: 1 1

% remember original state
/origstate save def

% build a temporary dictionary
20 dict begin

% define space for color conversions
/grays 60 string def  % space for gray scale line
/npixls 0 def
/rgbindx 0 def

% lower left corner
276 376 translate

% size of image (on paper, in 1/72inch coords)
59.97600 40.03200 scale

% define 'colorimage' if it isn't defined
%   ('colortogray' and 'mergeprocs' come from xwd2ps
%     via xgrab)
/colorimage where   % do we know about 'colorimage'?
  { pop }           % yes: pop off the 'dict' returned
  {                 % no:  define one
    /colortogray {  % define an RGB->I function
      /rgbdata exch store    % call input 'rgbdata'
      rgbdata length 3 idiv
      /npixls exch store
      /rgbindx 0 store
      0 1 npixls 1 sub {
        grays exch
        rgbdata rgbindx       get 20 mul    % Red
        rgbdata rgbindx 1 add get 32 mul    % Green
        rgbdata rgbindx 2 add get 12 mul    % Blue
        add add 64 idiv      % I = .5G + .31R + .18B
        put
        /rgbindx rgbindx 3 add store
      } for
      grays 0 npixls getinterval
    } bind def

    % Utility procedure for colorimage operator.
    % This procedure takes two procedures off the
    % stack and merges them into a single procedure.

    /mergeprocs { % def
      dup length
      3 -1 roll
      dup
      length
      dup
      5 1 roll
      3 -1 roll
      add
      array cvx
      dup
      3 -1 roll
      0 exch
      putinterval
      dup
      4 2 roll
      putinterval
    } bind def

    /colorimage { % def
      pop pop     % remove 'false 3' operands
      {colortogray} mergeprocs
      image
    } bind def
  } ifelse          % end of 'false' case



% define the colormap
/cmap 723 string def


% load up the colormap
currentfile cmap readhexstring
041808 049008 8c948c 045204 4c544c 04c804 84e284 449644 c4cbc4 0c380e 
04ac07 cce6cc 345e2c e4e7e4 046604 2c3a2c 347234 e4fee2 048208 64cc60 
34922c 24b224 04e404 044604 647264 242623 049f07 8cae8c 04bc06 24c61c 
f4f8f3 1c541c 04d804 1c621c 1c7220 0c280d 14910f 045e04 047c04 ccdcd0 
14ac18 1c481c 747473 04d105 0c6c0b 24852a 1c381c f4f1f3 acafac f4fef5 
0c310c acc6ac 049708 a4a4a3 3c4a44 148314 144812 9cea94 04b405 149e14 
1cbc1c 044004 e4fef4 dcdddd 748274 5c5959 4cba54 145b11 145413 147412 
c4fec4 e4f1e7 146411 088a0a 243028 09c207 fcf8f3 147c13 14c80e acceac 
3c3939 04f405 044e07 07a608 14d00f 0c1f10 0c900b d4d3d4 ecfee3 1c291d 
0c6e14 bcbfbd d4f6d4 909a94 4c5a50 0cac08 24ba24 547e54 0cbc0a 0c5c16 
0c7c0b fcf1fb acb8ac 1c311c aca7a9 e2e2e2 a4e2a4 0cc80a 6c9a6c 143715 
0c650a 0c840b 07de06 14970c 0c980a 0cb40a 848583 ecf0f0 c3c6c3 0c540d 
0c740c cccccc 74ce6c 30a02c 04ec05 54aa5c 6cb66c 9cfa9c 2c862c 5c926c 
6ca674 b4deac 9cda9c 34aa2c 6c7e6c acfeac 448244 34d22c 7d7d7c 6c6d6c 
445644 4c4d4c 1c7a19 1c3e1c 3c3f3c 2c422c 7c9a84 54c254 dceadc 144014 
343231 bccebc bcbabc 447244 6c6664 9c9d9c 7caa7c 349a38 6c7a74 84b69c 
1c4e18 898a89 ccfadc 1c6c2c b8e2c0 1c8a24 a1aaa1 3c4e3c 5f5e5c d8fed8 
24be24 78d670 688668 148a14 14a618 145624 0c480e 2c292b 142916 1c921c 
d4dad9 243828 143017 b4d2bc b4b7b5 1c961c 8c868c 247e24 144e13 04fa04 
246224 fcfefc 0c4e0c ace2b4 3caa3c 244e24 0c180c 949394 545454 ece9ec 
343634 2cb127 6c736c 0ca00c 0cda08 0c5c0b 0ccf06 146a0c b4b2b4 646464 
b4c2b4 0c3f0c ecfdf9 e4dedc ccfdcc 2c2f2b 142214 146b16 c4c2c2 545b54 
2cb62c 74ba74 346634 b4fcb0 244224 444242 246a24 e4feec 0ce204 f4f9fc 
f4eefc 444744 54b654 fcf9fc 0c9114 dcd6d4 ecfeec 0c7b14 0cc614 0c6314 
0c8414 
pop pop   % lose return values from readhexstring


% rlecmapimage expects to have 'w h bits matrix' on stack
/rlecmapimage {
  /buffer 1 string def
  /rgbval 3 string def
  /block  384 string def

  % proc to read a block from file, and return RGB data
  { currentfile buffer readhexstring pop
    /bcount exch 0 get store
    bcount 128 ge
    {  % it's a non-run block
      0 1 bcount 128 sub
      { currentfile buffer readhexstring pop pop

        % look up value in color map
        /rgbval cmap buffer 0 get 3 mul 3 getinterval store

        % and put it in position i*3 in block
        block exch 3 mul rgbval putinterval
      } for
      block  0  bcount 127 sub 3 mul  getinterval
    }

    { % else it's a run block
      currentfile buffer readhexstring pop pop

      % look up value in colormap
      /rgbval cmap buffer 0 get 3 mul 3 getinterval store

      0 1 bcount { block exch 3 mul rgbval putinterval } for

      block 0 bcount 1 add 3 mul getinterval
    } ifelse
  } % end of proc
  false 3 colorimage
} bind def


60 40 8			% dimensions of data
[60 0 0 -40 0 40]		% mapping matrix
rlecmapimage

10bf8131bf05bf03e98165e902e9046587bf3158ec31bfe9658265e9bf09bf
10bf8131bf04bf81e9bf01bf02e98265bfe982e965e901e981bf318131ec82ecbfe982e9
65bf0abf
12bf82751ebf83bf1ebf318231ec3102318111318131bf81bfe901e981bf318131bf01bf
01e90bbf
0fbf02e901bf023101ec021101a981d6a981a9118111318131bf14bf
0fbf8165e901e988e5bfd4ecd66add07808c80149dc2137f46a911d431bfe981e9bf0fbf

0fbf01e982bfe9318331a49ce28fe2454d37562456dc71567bab87a9d4bf81bfe981e9bf
81bf318131bf0abf
10bf8ac775bf311bde43224d37568656cb535f1a733c893cae8506a91131bfe9bf01bf81
58bf0abf
0fbf911ebf31b761a0442245ed56721a530a3a4e3a813a4e864e73c94246e3bf10bf
07bf81e9bf82bfe9bf92bf1ebf31ec4f0c38e2ef8e4d49561a530a3a6283624b052b8a2b
ce4e60c2dfe331bf4cbf0cbf
0abf81e9bf82bfe9ec8eec83de1f21778e786f01341a0a3a1c851c4b052b20168b162054
aa93df11312fe965bf0abf
0ebf8d3111883d77cdcf78646f0134530a810a1c911c4ece20167c517c16542893a9ec31
e965bf0abf
08bf01e999bfe91ebf316cc07743cd45786f49561a530a3a624b6b2b707c510151877c70
4edcaba9bfe981e9bf0abf
0bbf01e985bf27d34352cf90cf0e4d2656011a530a1c62ee2b20167c5102518816cc1db9
d611bfe9bf0abf
07bf81e9bf01bf90e9bf4c86d3445277d92c786f49721a0a3a853a4b0520167c827c51bd
88bd5116e44b157a11bf0cbf
0dbf8d3f0fc33d4403cfbb0e3756011a0a860a624b2b20167c817c5102510116854b897b
a911bf0bbf
08bf82e9e5bf97bf75dab209bcc021ef254d2649561a533a1c4b052b70167c037c811620
85203a853911bf0bbf
0bbf0131869eb6d3b0bc7748884845646f561acb0a7382734b2b812b1683167c16cc01cc
012b844b2813d4bf0bbf
0abf0231955e236db0c04463cf45646f5634cb533a73624b2b2016821670548854ce2b20
4b28e831bf0bbf
0abf023183b5b6d3b089b044436e45786f49341a871a0a733a626b2b200120896b4e6b05
2b1c5f9decbf0bbf
09bf8131bf97bf31d82e09d3b044cd485a786f1201cb1a530a73621c052b852b054e4b1c
0585053a282d58bf0bbf
0bbf9431bf556709b03844cd482c7864125634cb1a5f0a7382734b0501050162011c854b
0aae2d58bf0bbf
0bbf0131934a236dd3b0bc7743485a786f1201341acb535f3a813a1c011c0173023a8453
3b1458bf0bbf
0bbf8431bf0455098309d338778277ef2c852c266f1201348134cb83cb530a3a013a810a
5f815f0a850a1ab37d58bf0bbf
08bf81e9bf93bf31bf18d83209d338c044cd6e0e2c64126f0172837271cb5382530a5383
53ae531a851a01a57e58bf0bbf
0bbf01e5837600230901098138c082c0482c862c7864126f49568156728272341a811a72
0272864912bb841131bf0abf
03bf94e9bfe9bfe9bf1ebf1ebf275923b632099538c044ef81ef7881786481646f816fad
84adea01ea560156882449ad2da3115831bf0abf
04bf02e992654ce61e75bf0d185523b66d0995bcc043cd2c812c7881786483646f64f001
f08b6f496f49642d6382e3314cbf0abf
01bf85e9e5e9652fc784c7693fc7698a69c7d2b200232eb60929bc84bc6343ef2c862c78
45784d78ed82ed6f6489644d45a3afa2114c31bf0abf
01e58175c783c769d5eb8ceb797679dab87908db67c4b66d876d9538b0447743ef84ef6e
2c78458e455a457864788ecfbe9fd4315831bf0abf
88e5750d3f5779da98d083d0689b3501358d5d0236c45567b6320995b04477cd92cdef6e
2c6e5ad95acf782c4517813e31bf2fbf0bbf
887569575bd0689bc5ba83ba8a2a8a878aca2a74db5955b284b23209d3b081b077017701
cd016e02ef876e2c6e4810a4d4bf01bf814cbf0abf
873f79b835c5ba2a9a829aa8410141868de1d104c690d881d85583552e6d958b9538b0c0
77cd03cd6377afcd84cd4321c1d483d4e9654c814cbf0abf
88575b9b742ad1418de181e15081509603968450c8d759d881d8b283b2326d0981099585
9538bcb0381f871f95c3995ca931bf81bfe981e9bf0bbf
8779b8c58ad1c6e750855096d7b119b104b184d7b119d855845523b2b66d016d83952995
2987296de09211d431bf01bf01e90cbf
8979d0c52aa88de15096b181b119041901b18796c80fd74a59b2b602b6016d86326d328f
ac0b318331bf31bf01bf81e9bf0cbf
88575b9b742ad1c68de186e1c850c850c850865096c850e1e70487045e8ca7912e672e85
2e8cac33473101318158bf02bf82e9bfe981e9bf0abf
8b3f799835c5742a8bd1a8dbc683c68dc68d818dc601c68cdbd1ca40a15da66697274711
31863158bf31bf31bf82bf4ce985e9bfe9bfe9bf0abf
8bc76957dab8359bc5a1748a2a052a018a01748b029ba6665b279447ec311ebf83bf581e
bf82bf4cbf02bf82e9bfe981e9bf0abf
881e75693f57795bb8d082d068350135029b0135013088b8985b7608b40d751e811ebf83
bf1e75bf81bf4c814cbf05bf81e9bf0bbf
83e9e52fc782c7693f823f5779817976027681da760276827957b482b4c7750175822fe5
bf82bf4cbf01bf814cbf81bfe981e9bf01bf01e90dbf

%
% Compression made this file 26.36% of the uncompressed size.
%


showpage

% stop using temporary dictionary
end

% restore original state
origstate restore

%%Trailer

%%EndDocument
 @endspecial 298 w(The)e(need)g(f)-7 b(or)67 b(speed)4649
2893 y @beginspecial 276 @llx 376 @lly 336 @urx 416 @ury
113 @rwi @setspecial
%%BeginDocument: green-bullet-on-white.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/fred/TeX/STYLES/Prosper/img/green-bullet-on-white.ps
%%Creator: XV Version 3.10a+FLmask  Rev: 12/29/94  -  by John Bradley
%%BoundingBox: 276 376 336 416
%%Pages: 1
%%DocumentFonts:
%%EndComments
%%EndProlog

%%Page: 1 1

% remember original state
/origstate save def

% build a temporary dictionary
20 dict begin

% define space for color conversions
/grays 60 string def  % space for gray scale line
/npixls 0 def
/rgbindx 0 def

% lower left corner
276 376 translate

% size of image (on paper, in 1/72inch coords)
59.97600 40.03200 scale

% define 'colorimage' if it isn't defined
%   ('colortogray' and 'mergeprocs' come from xwd2ps
%     via xgrab)
/colorimage where   % do we know about 'colorimage'?
  { pop }           % yes: pop off the 'dict' returned
  {                 % no:  define one
    /colortogray {  % define an RGB->I function
      /rgbdata exch store    % call input 'rgbdata'
      rgbdata length 3 idiv
      /npixls exch store
      /rgbindx 0 store
      0 1 npixls 1 sub {
        grays exch
        rgbdata rgbindx       get 20 mul    % Red
        rgbdata rgbindx 1 add get 32 mul    % Green
        rgbdata rgbindx 2 add get 12 mul    % Blue
        add add 64 idiv      % I = .5G + .31R + .18B
        put
        /rgbindx rgbindx 3 add store
      } for
      grays 0 npixls getinterval
    } bind def

    % Utility procedure for colorimage operator.
    % This procedure takes two procedures off the
    % stack and merges them into a single procedure.

    /mergeprocs { % def
      dup length
      3 -1 roll
      dup
      length
      dup
      5 1 roll
      3 -1 roll
      add
      array cvx
      dup
      3 -1 roll
      0 exch
      putinterval
      dup
      4 2 roll
      putinterval
    } bind def

    /colorimage { % def
      pop pop     % remove 'false 3' operands
      {colortogray} mergeprocs
      image
    } bind def
  } ifelse          % end of 'false' case



% define the colormap
/cmap 723 string def


% load up the colormap
currentfile cmap readhexstring
041808 049008 8c948c 045204 4c544c 04c804 84e284 449644 c4cbc4 0c380e 
04ac07 cce6cc 345e2c e4e7e4 046604 2c3a2c 347234 e4fee2 048208 64cc60 
34922c 24b224 04e404 044604 647264 242623 049f07 8cae8c 04bc06 24c61c 
f4f8f3 1c541c 04d804 1c621c 1c7220 0c280d 14910f 045e04 047c04 ccdcd0 
14ac18 1c481c 747473 04d105 0c6c0b 24852a 1c381c f4f1f3 acafac f4fef5 
0c310c acc6ac 049708 a4a4a3 3c4a44 148314 144812 9cea94 04b405 149e14 
1cbc1c 044004 e4fef4 dcdddd 748274 5c5959 4cba54 145b11 145413 147412 
c4fec4 e4f1e7 146411 088a0a 243028 09c207 fcf8f3 147c13 14c80e acceac 
3c3939 04f405 044e07 07a608 14d00f 0c1f10 0c900b d4d3d4 ecfee3 1c291d 
0c6e14 bcbfbd d4f6d4 909a94 4c5a50 0cac08 24ba24 547e54 0cbc0a 0c5c16 
0c7c0b fcf1fb acb8ac 1c311c aca7a9 e2e2e2 a4e2a4 0cc80a 6c9a6c 143715 
0c650a 0c840b 07de06 14970c 0c980a 0cb40a 848583 ecf0f0 c3c6c3 0c540d 
0c740c cccccc 74ce6c 30a02c 04ec05 54aa5c 6cb66c 9cfa9c 2c862c 5c926c 
6ca674 b4deac 9cda9c 34aa2c 6c7e6c acfeac 448244 34d22c 7d7d7c 6c6d6c 
445644 4c4d4c 1c7a19 1c3e1c 3c3f3c 2c422c 7c9a84 54c254 dceadc 144014 
343231 bccebc bcbabc 447244 6c6664 9c9d9c 7caa7c 349a38 6c7a74 84b69c 
1c4e18 898a89 ccfadc 1c6c2c b8e2c0 1c8a24 a1aaa1 3c4e3c 5f5e5c d8fed8 
24be24 78d670 688668 148a14 14a618 145624 0c480e 2c292b 142916 1c921c 
d4dad9 243828 143017 b4d2bc b4b7b5 1c961c 8c868c 247e24 144e13 04fa04 
246224 fcfefc 0c4e0c ace2b4 3caa3c 244e24 0c180c 949394 545454 ece9ec 
343634 2cb127 6c736c 0ca00c 0cda08 0c5c0b 0ccf06 146a0c b4b2b4 646464 
b4c2b4 0c3f0c ecfdf9 e4dedc ccfdcc 2c2f2b 142214 146b16 c4c2c2 545b54 
2cb62c 74ba74 346634 b4fcb0 244224 444242 246a24 e4feec 0ce204 f4f9fc 
f4eefc 444744 54b654 fcf9fc 0c9114 dcd6d4 ecfeec 0c7b14 0cc614 0c6314 
0c8414 
pop pop   % lose return values from readhexstring


% rlecmapimage expects to have 'w h bits matrix' on stack
/rlecmapimage {
  /buffer 1 string def
  /rgbval 3 string def
  /block  384 string def

  % proc to read a block from file, and return RGB data
  { currentfile buffer readhexstring pop
    /bcount exch 0 get store
    bcount 128 ge
    {  % it's a non-run block
      0 1 bcount 128 sub
      { currentfile buffer readhexstring pop pop

        % look up value in color map
        /rgbval cmap buffer 0 get 3 mul 3 getinterval store

        % and put it in position i*3 in block
        block exch 3 mul rgbval putinterval
      } for
      block  0  bcount 127 sub 3 mul  getinterval
    }

    { % else it's a run block
      currentfile buffer readhexstring pop pop

      % look up value in colormap
      /rgbval cmap buffer 0 get 3 mul 3 getinterval store

      0 1 bcount { block exch 3 mul rgbval putinterval } for

      block 0 bcount 1 add 3 mul getinterval
    } ifelse
  } % end of proc
  false 3 colorimage
} bind def


60 40 8			% dimensions of data
[60 0 0 -40 0 40]		% mapping matrix
rlecmapimage

10bf8131bf05bf03e98165e902e9046587bf3158ec31bfe9658265e9bf09bf
10bf8131bf04bf81e9bf01bf02e98265bfe982e965e901e981bf318131ec82ecbfe982e9
65bf0abf
12bf82751ebf83bf1ebf318231ec3102318111318131bf81bfe901e981bf318131bf01bf
01e90bbf
0fbf02e901bf023101ec021101a981d6a981a9118111318131bf14bf
0fbf8165e901e988e5bfd4ecd66add07808c80149dc2137f46a911d431bfe981e9bf0fbf

0fbf01e982bfe9318331a49ce28fe2454d37562456dc71567bab87a9d4bf81bfe981e9bf
81bf318131bf0abf
10bf8ac775bf311bde43224d37568656cb535f1a733c893cae8506a91131bfe9bf01bf81
58bf0abf
0fbf911ebf31b761a0442245ed56721a530a3a4e3a813a4e864e73c94246e3bf10bf
07bf81e9bf82bfe9bf92bf1ebf31ec4f0c38e2ef8e4d49561a530a3a6283624b052b8a2b
ce4e60c2dfe331bf4cbf0cbf
0abf81e9bf82bfe9ec8eec83de1f21778e786f01341a0a3a1c851c4b052b20168b162054
aa93df11312fe965bf0abf
0ebf8d3111883d77cdcf78646f0134530a810a1c911c4ece20167c517c16542893a9ec31
e965bf0abf
08bf01e999bfe91ebf316cc07743cd45786f49561a530a3a624b6b2b707c510151877c70
4edcaba9bfe981e9bf0abf
0bbf01e985bf27d34352cf90cf0e4d2656011a530a1c62ee2b20167c5102518816cc1db9
d611bfe9bf0abf
07bf81e9bf01bf90e9bf4c86d3445277d92c786f49721a0a3a853a4b0520167c827c51bd
88bd5116e44b157a11bf0cbf
0dbf8d3f0fc33d4403cfbb0e3756011a0a860a624b2b20167c817c5102510116854b897b
a911bf0bbf
08bf82e9e5bf97bf75dab209bcc021ef254d2649561a533a1c4b052b70167c037c811620
85203a853911bf0bbf
0bbf0131869eb6d3b0bc7748884845646f561acb0a7382734b2b812b1683167c16cc01cc
012b844b2813d4bf0bbf
0abf0231955e236db0c04463cf45646f5634cb533a73624b2b2016821670548854ce2b20
4b28e831bf0bbf
0abf023183b5b6d3b089b044436e45786f49341a871a0a733a626b2b200120896b4e6b05
2b1c5f9decbf0bbf
09bf8131bf97bf31d82e09d3b044cd485a786f1201cb1a530a73621c052b852b054e4b1c
0585053a282d58bf0bbf
0bbf9431bf556709b03844cd482c7864125634cb1a5f0a7382734b0501050162011c854b
0aae2d58bf0bbf
0bbf0131934a236dd3b0bc7743485a786f1201341acb535f3a813a1c011c0173023a8453
3b1458bf0bbf
0bbf8431bf0455098309d338778277ef2c852c266f1201348134cb83cb530a3a013a810a
5f815f0a850a1ab37d58bf0bbf
08bf81e9bf93bf31bf18d83209d338c044cd6e0e2c64126f0172837271cb5382530a5383
53ae531a851a01a57e58bf0bbf
0bbf01e5837600230901098138c082c0482c862c7864126f49568156728272341a811a72
0272864912bb841131bf0abf
03bf94e9bfe9bfe9bf1ebf1ebf275923b632099538c044ef81ef7881786481646f816fad
84adea01ea560156882449ad2da3115831bf0abf
04bf02e992654ce61e75bf0d185523b66d0995bcc043cd2c812c7881786483646f64f001
f08b6f496f49642d6382e3314cbf0abf
01bf85e9e5e9652fc784c7693fc7698a69c7d2b200232eb60929bc84bc6343ef2c862c78
45784d78ed82ed6f6489644d45a3afa2114c31bf0abf
01e58175c783c769d5eb8ceb797679dab87908db67c4b66d876d9538b0447743ef84ef6e
2c78458e455a457864788ecfbe9fd4315831bf0abf
88e5750d3f5779da98d083d0689b3501358d5d0236c45567b6320995b04477cd92cdef6e
2c6e5ad95acf782c4517813e31bf2fbf0bbf
887569575bd0689bc5ba83ba8a2a8a878aca2a74db5955b284b23209d3b081b077017701
cd016e02ef876e2c6e4810a4d4bf01bf814cbf0abf
873f79b835c5ba2a9a829aa8410141868de1d104c690d881d85583552e6d958b9538b0c0
77cd03cd6377afcd84cd4321c1d483d4e9654c814cbf0abf
88575b9b742ad1418de181e15081509603968450c8d759d881d8b283b2326d0981099585
9538bcb0381f871f95c3995ca931bf81bfe981e9bf0bbf
8779b8c58ad1c6e750855096d7b119b104b184d7b119d855845523b2b66d016d83952995
2987296de09211d431bf01bf01e90cbf
8979d0c52aa88de15096b181b119041901b18796c80fd74a59b2b602b6016d86326d328f
ac0b318331bf31bf01bf81e9bf0cbf
88575b9b742ad1c68de186e1c850c850c850865096c850e1e70487045e8ca7912e672e85
2e8cac33473101318158bf02bf82e9bfe981e9bf0abf
8b3f799835c5742a8bd1a8dbc683c68dc68d818dc601c68cdbd1ca40a15da66697274711
31863158bf31bf31bf82bf4ce985e9bfe9bfe9bf0abf
8bc76957dab8359bc5a1748a2a052a018a01748b029ba6665b279447ec311ebf83bf581e
bf82bf4cbf02bf82e9bfe981e9bf0abf
881e75693f57795bb8d082d068350135029b0135013088b8985b7608b40d751e811ebf83
bf1e75bf81bf4c814cbf05bf81e9bf0bbf
83e9e52fc782c7693f823f5779817976027681da760276827957b482b4c7750175822fe5
bf82bf4cbf01bf814cbf81bfe981e9bf01bf01e90dbf

%
% Compression made this file 26.36% of the uncompressed size.
%


showpage

% stop using temporary dictionary
end

% restore original state
origstate restore

%%Trailer

%%EndDocument
 @endspecial 298 w(I)g(do)g(not)g(fully)e(understand)i(smt)g(\(>3)g(y)
-5 b(ears\))4649 3258 y @beginspecial 276 @llx 376 @lly
336 @urx 416 @ury 113 @rwi @setspecial
%%BeginDocument: green-bullet-on-white.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/fred/TeX/STYLES/Prosper/img/green-bullet-on-white.ps
%%Creator: XV Version 3.10a+FLmask  Rev: 12/29/94  -  by John Bradley
%%BoundingBox: 276 376 336 416
%%Pages: 1
%%DocumentFonts:
%%EndComments
%%EndProlog

%%Page: 1 1

% remember original state
/origstate save def

% build a temporary dictionary
20 dict begin

% define space for color conversions
/grays 60 string def  % space for gray scale line
/npixls 0 def
/rgbindx 0 def

% lower left corner
276 376 translate

% size of image (on paper, in 1/72inch coords)
59.97600 40.03200 scale

% define 'colorimage' if it isn't defined
%   ('colortogray' and 'mergeprocs' come from xwd2ps
%     via xgrab)
/colorimage where   % do we know about 'colorimage'?
  { pop }           % yes: pop off the 'dict' returned
  {                 % no:  define one
    /colortogray {  % define an RGB->I function
      /rgbdata exch store    % call input 'rgbdata'
      rgbdata length 3 idiv
      /npixls exch store
      /rgbindx 0 store
      0 1 npixls 1 sub {
        grays exch
        rgbdata rgbindx       get 20 mul    % Red
        rgbdata rgbindx 1 add get 32 mul    % Green
        rgbdata rgbindx 2 add get 12 mul    % Blue
        add add 64 idiv      % I = .5G + .31R + .18B
        put
        /rgbindx rgbindx 3 add store
      } for
      grays 0 npixls getinterval
    } bind def

    % Utility procedure for colorimage operator.
    % This procedure takes two procedures off the
    % stack and merges them into a single procedure.

    /mergeprocs { % def
      dup length
      3 -1 roll
      dup
      length
      dup
      5 1 roll
      3 -1 roll
      add
      array cvx
      dup
      3 -1 roll
      0 exch
      putinterval
      dup
      4 2 roll
      putinterval
    } bind def

    /colorimage { % def
      pop pop     % remove 'false 3' operands
      {colortogray} mergeprocs
      image
    } bind def
  } ifelse          % end of 'false' case



% define the colormap
/cmap 723 string def


% load up the colormap
currentfile cmap readhexstring
041808 049008 8c948c 045204 4c544c 04c804 84e284 449644 c4cbc4 0c380e 
04ac07 cce6cc 345e2c e4e7e4 046604 2c3a2c 347234 e4fee2 048208 64cc60 
34922c 24b224 04e404 044604 647264 242623 049f07 8cae8c 04bc06 24c61c 
f4f8f3 1c541c 04d804 1c621c 1c7220 0c280d 14910f 045e04 047c04 ccdcd0 
14ac18 1c481c 747473 04d105 0c6c0b 24852a 1c381c f4f1f3 acafac f4fef5 
0c310c acc6ac 049708 a4a4a3 3c4a44 148314 144812 9cea94 04b405 149e14 
1cbc1c 044004 e4fef4 dcdddd 748274 5c5959 4cba54 145b11 145413 147412 
c4fec4 e4f1e7 146411 088a0a 243028 09c207 fcf8f3 147c13 14c80e acceac 
3c3939 04f405 044e07 07a608 14d00f 0c1f10 0c900b d4d3d4 ecfee3 1c291d 
0c6e14 bcbfbd d4f6d4 909a94 4c5a50 0cac08 24ba24 547e54 0cbc0a 0c5c16 
0c7c0b fcf1fb acb8ac 1c311c aca7a9 e2e2e2 a4e2a4 0cc80a 6c9a6c 143715 
0c650a 0c840b 07de06 14970c 0c980a 0cb40a 848583 ecf0f0 c3c6c3 0c540d 
0c740c cccccc 74ce6c 30a02c 04ec05 54aa5c 6cb66c 9cfa9c 2c862c 5c926c 
6ca674 b4deac 9cda9c 34aa2c 6c7e6c acfeac 448244 34d22c 7d7d7c 6c6d6c 
445644 4c4d4c 1c7a19 1c3e1c 3c3f3c 2c422c 7c9a84 54c254 dceadc 144014 
343231 bccebc bcbabc 447244 6c6664 9c9d9c 7caa7c 349a38 6c7a74 84b69c 
1c4e18 898a89 ccfadc 1c6c2c b8e2c0 1c8a24 a1aaa1 3c4e3c 5f5e5c d8fed8 
24be24 78d670 688668 148a14 14a618 145624 0c480e 2c292b 142916 1c921c 
d4dad9 243828 143017 b4d2bc b4b7b5 1c961c 8c868c 247e24 144e13 04fa04 
246224 fcfefc 0c4e0c ace2b4 3caa3c 244e24 0c180c 949394 545454 ece9ec 
343634 2cb127 6c736c 0ca00c 0cda08 0c5c0b 0ccf06 146a0c b4b2b4 646464 
b4c2b4 0c3f0c ecfdf9 e4dedc ccfdcc 2c2f2b 142214 146b16 c4c2c2 545b54 
2cb62c 74ba74 346634 b4fcb0 244224 444242 246a24 e4feec 0ce204 f4f9fc 
f4eefc 444744 54b654 fcf9fc 0c9114 dcd6d4 ecfeec 0c7b14 0cc614 0c6314 
0c8414 
pop pop   % lose return values from readhexstring


% rlecmapimage expects to have 'w h bits matrix' on stack
/rlecmapimage {
  /buffer 1 string def
  /rgbval 3 string def
  /block  384 string def

  % proc to read a block from file, and return RGB data
  { currentfile buffer readhexstring pop
    /bcount exch 0 get store
    bcount 128 ge
    {  % it's a non-run block
      0 1 bcount 128 sub
      { currentfile buffer readhexstring pop pop

        % look up value in color map
        /rgbval cmap buffer 0 get 3 mul 3 getinterval store

        % and put it in position i*3 in block
        block exch 3 mul rgbval putinterval
      } for
      block  0  bcount 127 sub 3 mul  getinterval
    }

    { % else it's a run block
      currentfile buffer readhexstring pop pop

      % look up value in colormap
      /rgbval cmap buffer 0 get 3 mul 3 getinterval store

      0 1 bcount { block exch 3 mul rgbval putinterval } for

      block 0 bcount 1 add 3 mul getinterval
    } ifelse
  } % end of proc
  false 3 colorimage
} bind def


60 40 8			% dimensions of data
[60 0 0 -40 0 40]		% mapping matrix
rlecmapimage

10bf8131bf05bf03e98165e902e9046587bf3158ec31bfe9658265e9bf09bf
10bf8131bf04bf81e9bf01bf02e98265bfe982e965e901e981bf318131ec82ecbfe982e9
65bf0abf
12bf82751ebf83bf1ebf318231ec3102318111318131bf81bfe901e981bf318131bf01bf
01e90bbf
0fbf02e901bf023101ec021101a981d6a981a9118111318131bf14bf
0fbf8165e901e988e5bfd4ecd66add07808c80149dc2137f46a911d431bfe981e9bf0fbf

0fbf01e982bfe9318331a49ce28fe2454d37562456dc71567bab87a9d4bf81bfe981e9bf
81bf318131bf0abf
10bf8ac775bf311bde43224d37568656cb535f1a733c893cae8506a91131bfe9bf01bf81
58bf0abf
0fbf911ebf31b761a0442245ed56721a530a3a4e3a813a4e864e73c94246e3bf10bf
07bf81e9bf82bfe9bf92bf1ebf31ec4f0c38e2ef8e4d49561a530a3a6283624b052b8a2b
ce4e60c2dfe331bf4cbf0cbf
0abf81e9bf82bfe9ec8eec83de1f21778e786f01341a0a3a1c851c4b052b20168b162054
aa93df11312fe965bf0abf
0ebf8d3111883d77cdcf78646f0134530a810a1c911c4ece20167c517c16542893a9ec31
e965bf0abf
08bf01e999bfe91ebf316cc07743cd45786f49561a530a3a624b6b2b707c510151877c70
4edcaba9bfe981e9bf0abf
0bbf01e985bf27d34352cf90cf0e4d2656011a530a1c62ee2b20167c5102518816cc1db9
d611bfe9bf0abf
07bf81e9bf01bf90e9bf4c86d3445277d92c786f49721a0a3a853a4b0520167c827c51bd
88bd5116e44b157a11bf0cbf
0dbf8d3f0fc33d4403cfbb0e3756011a0a860a624b2b20167c817c5102510116854b897b
a911bf0bbf
08bf82e9e5bf97bf75dab209bcc021ef254d2649561a533a1c4b052b70167c037c811620
85203a853911bf0bbf
0bbf0131869eb6d3b0bc7748884845646f561acb0a7382734b2b812b1683167c16cc01cc
012b844b2813d4bf0bbf
0abf0231955e236db0c04463cf45646f5634cb533a73624b2b2016821670548854ce2b20
4b28e831bf0bbf
0abf023183b5b6d3b089b044436e45786f49341a871a0a733a626b2b200120896b4e6b05
2b1c5f9decbf0bbf
09bf8131bf97bf31d82e09d3b044cd485a786f1201cb1a530a73621c052b852b054e4b1c
0585053a282d58bf0bbf
0bbf9431bf556709b03844cd482c7864125634cb1a5f0a7382734b0501050162011c854b
0aae2d58bf0bbf
0bbf0131934a236dd3b0bc7743485a786f1201341acb535f3a813a1c011c0173023a8453
3b1458bf0bbf
0bbf8431bf0455098309d338778277ef2c852c266f1201348134cb83cb530a3a013a810a
5f815f0a850a1ab37d58bf0bbf
08bf81e9bf93bf31bf18d83209d338c044cd6e0e2c64126f0172837271cb5382530a5383
53ae531a851a01a57e58bf0bbf
0bbf01e5837600230901098138c082c0482c862c7864126f49568156728272341a811a72
0272864912bb841131bf0abf
03bf94e9bfe9bfe9bf1ebf1ebf275923b632099538c044ef81ef7881786481646f816fad
84adea01ea560156882449ad2da3115831bf0abf
04bf02e992654ce61e75bf0d185523b66d0995bcc043cd2c812c7881786483646f64f001
f08b6f496f49642d6382e3314cbf0abf
01bf85e9e5e9652fc784c7693fc7698a69c7d2b200232eb60929bc84bc6343ef2c862c78
45784d78ed82ed6f6489644d45a3afa2114c31bf0abf
01e58175c783c769d5eb8ceb797679dab87908db67c4b66d876d9538b0447743ef84ef6e
2c78458e455a457864788ecfbe9fd4315831bf0abf
88e5750d3f5779da98d083d0689b3501358d5d0236c45567b6320995b04477cd92cdef6e
2c6e5ad95acf782c4517813e31bf2fbf0bbf
887569575bd0689bc5ba83ba8a2a8a878aca2a74db5955b284b23209d3b081b077017701
cd016e02ef876e2c6e4810a4d4bf01bf814cbf0abf
873f79b835c5ba2a9a829aa8410141868de1d104c690d881d85583552e6d958b9538b0c0
77cd03cd6377afcd84cd4321c1d483d4e9654c814cbf0abf
88575b9b742ad1418de181e15081509603968450c8d759d881d8b283b2326d0981099585
9538bcb0381f871f95c3995ca931bf81bfe981e9bf0bbf
8779b8c58ad1c6e750855096d7b119b104b184d7b119d855845523b2b66d016d83952995
2987296de09211d431bf01bf01e90cbf
8979d0c52aa88de15096b181b119041901b18796c80fd74a59b2b602b6016d86326d328f
ac0b318331bf31bf01bf81e9bf0cbf
88575b9b742ad1c68de186e1c850c850c850865096c850e1e70487045e8ca7912e672e85
2e8cac33473101318158bf02bf82e9bfe981e9bf0abf
8b3f799835c5742a8bd1a8dbc683c68dc68d818dc601c68cdbd1ca40a15da66697274711
31863158bf31bf31bf82bf4ce985e9bfe9bfe9bf0abf
8bc76957dab8359bc5a1748a2a052a018a01748b029ba6665b279447ec311ebf83bf581e
bf82bf4cbf02bf82e9bfe981e9bf0abf
881e75693f57795bb8d082d068350135029b0135013088b8985b7608b40d751e811ebf83
bf1e75bf81bf4c814cbf05bf81e9bf0bbf
83e9e52fc782c7693f823f5779817976027681da760276827957b482b4c7750175822fe5
bf82bf4cbf01bf814cbf81bfe981e9bf01bf01e90dbf

%
% Compression made this file 26.36% of the uncompressed size.
%


showpage

% stop using temporary dictionary
end

% restore original state
origstate restore

%%Trailer

%%EndDocument
 @endspecial 298 w(T)-29 b(o)67 b(mak)-5 b(e)67 b(the)g(ne)-5
b(w)67 b(sim)n(ulator)e(understandab)-5 b(le:)4983 3573
y @beginspecial 276 @llx 376 @lly 336 @urx 416 @ury 85
@rwi @setspecial
%%BeginDocument: green-bullet-on-white.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/fred/TeX/STYLES/Prosper/img/green-bullet-on-white.ps
%%Creator: XV Version 3.10a+FLmask  Rev: 12/29/94  -  by John Bradley
%%BoundingBox: 276 376 336 416
%%Pages: 1
%%DocumentFonts:
%%EndComments
%%EndProlog

%%Page: 1 1

% remember original state
/origstate save def

% build a temporary dictionary
20 dict begin

% define space for color conversions
/grays 60 string def  % space for gray scale line
/npixls 0 def
/rgbindx 0 def

% lower left corner
276 376 translate

% size of image (on paper, in 1/72inch coords)
59.97600 40.03200 scale

% define 'colorimage' if it isn't defined
%   ('colortogray' and 'mergeprocs' come from xwd2ps
%     via xgrab)
/colorimage where   % do we know about 'colorimage'?
  { pop }           % yes: pop off the 'dict' returned
  {                 % no:  define one
    /colortogray {  % define an RGB->I function
      /rgbdata exch store    % call input 'rgbdata'
      rgbdata length 3 idiv
      /npixls exch store
      /rgbindx 0 store
      0 1 npixls 1 sub {
        grays exch
        rgbdata rgbindx       get 20 mul    % Red
        rgbdata rgbindx 1 add get 32 mul    % Green
        rgbdata rgbindx 2 add get 12 mul    % Blue
        add add 64 idiv      % I = .5G + .31R + .18B
        put
        /rgbindx rgbindx 3 add store
      } for
      grays 0 npixls getinterval
    } bind def

    % Utility procedure for colorimage operator.
    % This procedure takes two procedures off the
    % stack and merges them into a single procedure.

    /mergeprocs { % def
      dup length
      3 -1 roll
      dup
      length
      dup
      5 1 roll
      3 -1 roll
      add
      array cvx
      dup
      3 -1 roll
      0 exch
      putinterval
      dup
      4 2 roll
      putinterval
    } bind def

    /colorimage { % def
      pop pop     % remove 'false 3' operands
      {colortogray} mergeprocs
      image
    } bind def
  } ifelse          % end of 'false' case



% define the colormap
/cmap 723 string def


% load up the colormap
currentfile cmap readhexstring
041808 049008 8c948c 045204 4c544c 04c804 84e284 449644 c4cbc4 0c380e 
04ac07 cce6cc 345e2c e4e7e4 046604 2c3a2c 347234 e4fee2 048208 64cc60 
34922c 24b224 04e404 044604 647264 242623 049f07 8cae8c 04bc06 24c61c 
f4f8f3 1c541c 04d804 1c621c 1c7220 0c280d 14910f 045e04 047c04 ccdcd0 
14ac18 1c481c 747473 04d105 0c6c0b 24852a 1c381c f4f1f3 acafac f4fef5 
0c310c acc6ac 049708 a4a4a3 3c4a44 148314 144812 9cea94 04b405 149e14 
1cbc1c 044004 e4fef4 dcdddd 748274 5c5959 4cba54 145b11 145413 147412 
c4fec4 e4f1e7 146411 088a0a 243028 09c207 fcf8f3 147c13 14c80e acceac 
3c3939 04f405 044e07 07a608 14d00f 0c1f10 0c900b d4d3d4 ecfee3 1c291d 
0c6e14 bcbfbd d4f6d4 909a94 4c5a50 0cac08 24ba24 547e54 0cbc0a 0c5c16 
0c7c0b fcf1fb acb8ac 1c311c aca7a9 e2e2e2 a4e2a4 0cc80a 6c9a6c 143715 
0c650a 0c840b 07de06 14970c 0c980a 0cb40a 848583 ecf0f0 c3c6c3 0c540d 
0c740c cccccc 74ce6c 30a02c 04ec05 54aa5c 6cb66c 9cfa9c 2c862c 5c926c 
6ca674 b4deac 9cda9c 34aa2c 6c7e6c acfeac 448244 34d22c 7d7d7c 6c6d6c 
445644 4c4d4c 1c7a19 1c3e1c 3c3f3c 2c422c 7c9a84 54c254 dceadc 144014 
343231 bccebc bcbabc 447244 6c6664 9c9d9c 7caa7c 349a38 6c7a74 84b69c 
1c4e18 898a89 ccfadc 1c6c2c b8e2c0 1c8a24 a1aaa1 3c4e3c 5f5e5c d8fed8 
24be24 78d670 688668 148a14 14a618 145624 0c480e 2c292b 142916 1c921c 
d4dad9 243828 143017 b4d2bc b4b7b5 1c961c 8c868c 247e24 144e13 04fa04 
246224 fcfefc 0c4e0c ace2b4 3caa3c 244e24 0c180c 949394 545454 ece9ec 
343634 2cb127 6c736c 0ca00c 0cda08 0c5c0b 0ccf06 146a0c b4b2b4 646464 
b4c2b4 0c3f0c ecfdf9 e4dedc ccfdcc 2c2f2b 142214 146b16 c4c2c2 545b54 
2cb62c 74ba74 346634 b4fcb0 244224 444242 246a24 e4feec 0ce204 f4f9fc 
f4eefc 444744 54b654 fcf9fc 0c9114 dcd6d4 ecfeec 0c7b14 0cc614 0c6314 
0c8414 
pop pop   % lose return values from readhexstring


% rlecmapimage expects to have 'w h bits matrix' on stack
/rlecmapimage {
  /buffer 1 string def
  /rgbval 3 string def
  /block  384 string def

  % proc to read a block from file, and return RGB data
  { currentfile buffer readhexstring pop
    /bcount exch 0 get store
    bcount 128 ge
    {  % it's a non-run block
      0 1 bcount 128 sub
      { currentfile buffer readhexstring pop pop

        % look up value in color map
        /rgbval cmap buffer 0 get 3 mul 3 getinterval store

        % and put it in position i*3 in block
        block exch 3 mul rgbval putinterval
      } for
      block  0  bcount 127 sub 3 mul  getinterval
    }

    { % else it's a run block
      currentfile buffer readhexstring pop pop

      % look up value in colormap
      /rgbval cmap buffer 0 get 3 mul 3 getinterval store

      0 1 bcount { block exch 3 mul rgbval putinterval } for

      block 0 bcount 1 add 3 mul getinterval
    } ifelse
  } % end of proc
  false 3 colorimage
} bind def


60 40 8			% dimensions of data
[60 0 0 -40 0 40]		% mapping matrix
rlecmapimage

10bf8131bf05bf03e98165e902e9046587bf3158ec31bfe9658265e9bf09bf
10bf8131bf04bf81e9bf01bf02e98265bfe982e965e901e981bf318131ec82ecbfe982e9
65bf0abf
12bf82751ebf83bf1ebf318231ec3102318111318131bf81bfe901e981bf318131bf01bf
01e90bbf
0fbf02e901bf023101ec021101a981d6a981a9118111318131bf14bf
0fbf8165e901e988e5bfd4ecd66add07808c80149dc2137f46a911d431bfe981e9bf0fbf

0fbf01e982bfe9318331a49ce28fe2454d37562456dc71567bab87a9d4bf81bfe981e9bf
81bf318131bf0abf
10bf8ac775bf311bde43224d37568656cb535f1a733c893cae8506a91131bfe9bf01bf81
58bf0abf
0fbf911ebf31b761a0442245ed56721a530a3a4e3a813a4e864e73c94246e3bf10bf
07bf81e9bf82bfe9bf92bf1ebf31ec4f0c38e2ef8e4d49561a530a3a6283624b052b8a2b
ce4e60c2dfe331bf4cbf0cbf
0abf81e9bf82bfe9ec8eec83de1f21778e786f01341a0a3a1c851c4b052b20168b162054
aa93df11312fe965bf0abf
0ebf8d3111883d77cdcf78646f0134530a810a1c911c4ece20167c517c16542893a9ec31
e965bf0abf
08bf01e999bfe91ebf316cc07743cd45786f49561a530a3a624b6b2b707c510151877c70
4edcaba9bfe981e9bf0abf
0bbf01e985bf27d34352cf90cf0e4d2656011a530a1c62ee2b20167c5102518816cc1db9
d611bfe9bf0abf
07bf81e9bf01bf90e9bf4c86d3445277d92c786f49721a0a3a853a4b0520167c827c51bd
88bd5116e44b157a11bf0cbf
0dbf8d3f0fc33d4403cfbb0e3756011a0a860a624b2b20167c817c5102510116854b897b
a911bf0bbf
08bf82e9e5bf97bf75dab209bcc021ef254d2649561a533a1c4b052b70167c037c811620
85203a853911bf0bbf
0bbf0131869eb6d3b0bc7748884845646f561acb0a7382734b2b812b1683167c16cc01cc
012b844b2813d4bf0bbf
0abf0231955e236db0c04463cf45646f5634cb533a73624b2b2016821670548854ce2b20
4b28e831bf0bbf
0abf023183b5b6d3b089b044436e45786f49341a871a0a733a626b2b200120896b4e6b05
2b1c5f9decbf0bbf
09bf8131bf97bf31d82e09d3b044cd485a786f1201cb1a530a73621c052b852b054e4b1c
0585053a282d58bf0bbf
0bbf9431bf556709b03844cd482c7864125634cb1a5f0a7382734b0501050162011c854b
0aae2d58bf0bbf
0bbf0131934a236dd3b0bc7743485a786f1201341acb535f3a813a1c011c0173023a8453
3b1458bf0bbf
0bbf8431bf0455098309d338778277ef2c852c266f1201348134cb83cb530a3a013a810a
5f815f0a850a1ab37d58bf0bbf
08bf81e9bf93bf31bf18d83209d338c044cd6e0e2c64126f0172837271cb5382530a5383
53ae531a851a01a57e58bf0bbf
0bbf01e5837600230901098138c082c0482c862c7864126f49568156728272341a811a72
0272864912bb841131bf0abf
03bf94e9bfe9bfe9bf1ebf1ebf275923b632099538c044ef81ef7881786481646f816fad
84adea01ea560156882449ad2da3115831bf0abf
04bf02e992654ce61e75bf0d185523b66d0995bcc043cd2c812c7881786483646f64f001
f08b6f496f49642d6382e3314cbf0abf
01bf85e9e5e9652fc784c7693fc7698a69c7d2b200232eb60929bc84bc6343ef2c862c78
45784d78ed82ed6f6489644d45a3afa2114c31bf0abf
01e58175c783c769d5eb8ceb797679dab87908db67c4b66d876d9538b0447743ef84ef6e
2c78458e455a457864788ecfbe9fd4315831bf0abf
88e5750d3f5779da98d083d0689b3501358d5d0236c45567b6320995b04477cd92cdef6e
2c6e5ad95acf782c4517813e31bf2fbf0bbf
887569575bd0689bc5ba83ba8a2a8a878aca2a74db5955b284b23209d3b081b077017701
cd016e02ef876e2c6e4810a4d4bf01bf814cbf0abf
873f79b835c5ba2a9a829aa8410141868de1d104c690d881d85583552e6d958b9538b0c0
77cd03cd6377afcd84cd4321c1d483d4e9654c814cbf0abf
88575b9b742ad1418de181e15081509603968450c8d759d881d8b283b2326d0981099585
9538bcb0381f871f95c3995ca931bf81bfe981e9bf0bbf
8779b8c58ad1c6e750855096d7b119b104b184d7b119d855845523b2b66d016d83952995
2987296de09211d431bf01bf01e90cbf
8979d0c52aa88de15096b181b119041901b18796c80fd74a59b2b602b6016d86326d328f
ac0b318331bf31bf01bf81e9bf0cbf
88575b9b742ad1c68de186e1c850c850c850865096c850e1e70487045e8ca7912e672e85
2e8cac33473101318158bf02bf82e9bfe981e9bf0abf
8b3f799835c5742a8bd1a8dbc683c68dc68d818dc601c68cdbd1ca40a15da66697274711
31863158bf31bf31bf82bf4ce985e9bfe9bfe9bf0abf
8bc76957dab8359bc5a1748a2a052a018a01748b029ba6665b279447ec311ebf83bf581e
bf82bf4cbf02bf82e9bfe981e9bf0abf
881e75693f57795bb8d082d068350135029b0135013088b8985b7608b40d751e811ebf83
bf1e75bf81bf4c814cbf05bf81e9bf0bbf
83e9e52fc782c7693f823f5779817976027681da760276827957b482b4c7750175822fe5
bf82bf4cbf01bf814cbf81bfe981e9bf01bf01e90dbf

%
% Compression made this file 26.36% of the uncompressed size.
%


showpage

% stop using temporary dictionary
end

% restore original state
origstate restore

%%Trailer

%%EndDocument
 @endspecial 248 w(Clean)67 b(C++)g(design)4983 3891
y @beginspecial 276 @llx 376 @lly 336 @urx 416 @ury 85
@rwi @setspecial
%%BeginDocument: green-bullet-on-white.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/fred/TeX/STYLES/Prosper/img/green-bullet-on-white.ps
%%Creator: XV Version 3.10a+FLmask  Rev: 12/29/94  -  by John Bradley
%%BoundingBox: 276 376 336 416
%%Pages: 1
%%DocumentFonts:
%%EndComments
%%EndProlog

%%Page: 1 1

% remember original state
/origstate save def

% build a temporary dictionary
20 dict begin

% define space for color conversions
/grays 60 string def  % space for gray scale line
/npixls 0 def
/rgbindx 0 def

% lower left corner
276 376 translate

% size of image (on paper, in 1/72inch coords)
59.97600 40.03200 scale

% define 'colorimage' if it isn't defined
%   ('colortogray' and 'mergeprocs' come from xwd2ps
%     via xgrab)
/colorimage where   % do we know about 'colorimage'?
  { pop }           % yes: pop off the 'dict' returned
  {                 % no:  define one
    /colortogray {  % define an RGB->I function
      /rgbdata exch store    % call input 'rgbdata'
      rgbdata length 3 idiv
      /npixls exch store
      /rgbindx 0 store
      0 1 npixls 1 sub {
        grays exch
        rgbdata rgbindx       get 20 mul    % Red
        rgbdata rgbindx 1 add get 32 mul    % Green
        rgbdata rgbindx 2 add get 12 mul    % Blue
        add add 64 idiv      % I = .5G + .31R + .18B
        put
        /rgbindx rgbindx 3 add store
      } for
      grays 0 npixls getinterval
    } bind def

    % Utility procedure for colorimage operator.
    % This procedure takes two procedures off the
    % stack and merges them into a single procedure.

    /mergeprocs { % def
      dup length
      3 -1 roll
      dup
      length
      dup
      5 1 roll
      3 -1 roll
      add
      array cvx
      dup
      3 -1 roll
      0 exch
      putinterval
      dup
      4 2 roll
      putinterval
    } bind def

    /colorimage { % def
      pop pop     % remove 'false 3' operands
      {colortogray} mergeprocs
      image
    } bind def
  } ifelse          % end of 'false' case



% define the colormap
/cmap 723 string def


% load up the colormap
currentfile cmap readhexstring
041808 049008 8c948c 045204 4c544c 04c804 84e284 449644 c4cbc4 0c380e 
04ac07 cce6cc 345e2c e4e7e4 046604 2c3a2c 347234 e4fee2 048208 64cc60 
34922c 24b224 04e404 044604 647264 242623 049f07 8cae8c 04bc06 24c61c 
f4f8f3 1c541c 04d804 1c621c 1c7220 0c280d 14910f 045e04 047c04 ccdcd0 
14ac18 1c481c 747473 04d105 0c6c0b 24852a 1c381c f4f1f3 acafac f4fef5 
0c310c acc6ac 049708 a4a4a3 3c4a44 148314 144812 9cea94 04b405 149e14 
1cbc1c 044004 e4fef4 dcdddd 748274 5c5959 4cba54 145b11 145413 147412 
c4fec4 e4f1e7 146411 088a0a 243028 09c207 fcf8f3 147c13 14c80e acceac 
3c3939 04f405 044e07 07a608 14d00f 0c1f10 0c900b d4d3d4 ecfee3 1c291d 
0c6e14 bcbfbd d4f6d4 909a94 4c5a50 0cac08 24ba24 547e54 0cbc0a 0c5c16 
0c7c0b fcf1fb acb8ac 1c311c aca7a9 e2e2e2 a4e2a4 0cc80a 6c9a6c 143715 
0c650a 0c840b 07de06 14970c 0c980a 0cb40a 848583 ecf0f0 c3c6c3 0c540d 
0c740c cccccc 74ce6c 30a02c 04ec05 54aa5c 6cb66c 9cfa9c 2c862c 5c926c 
6ca674 b4deac 9cda9c 34aa2c 6c7e6c acfeac 448244 34d22c 7d7d7c 6c6d6c 
445644 4c4d4c 1c7a19 1c3e1c 3c3f3c 2c422c 7c9a84 54c254 dceadc 144014 
343231 bccebc bcbabc 447244 6c6664 9c9d9c 7caa7c 349a38 6c7a74 84b69c 
1c4e18 898a89 ccfadc 1c6c2c b8e2c0 1c8a24 a1aaa1 3c4e3c 5f5e5c d8fed8 
24be24 78d670 688668 148a14 14a618 145624 0c480e 2c292b 142916 1c921c 
d4dad9 243828 143017 b4d2bc b4b7b5 1c961c 8c868c 247e24 144e13 04fa04 
246224 fcfefc 0c4e0c ace2b4 3caa3c 244e24 0c180c 949394 545454 ece9ec 
343634 2cb127 6c736c 0ca00c 0cda08 0c5c0b 0ccf06 146a0c b4b2b4 646464 
b4c2b4 0c3f0c ecfdf9 e4dedc ccfdcc 2c2f2b 142214 146b16 c4c2c2 545b54 
2cb62c 74ba74 346634 b4fcb0 244224 444242 246a24 e4feec 0ce204 f4f9fc 
f4eefc 444744 54b654 fcf9fc 0c9114 dcd6d4 ecfeec 0c7b14 0cc614 0c6314 
0c8414 
pop pop   % lose return values from readhexstring


% rlecmapimage expects to have 'w h bits matrix' on stack
/rlecmapimage {
  /buffer 1 string def
  /rgbval 3 string def
  /block  384 string def

  % proc to read a block from file, and return RGB data
  { currentfile buffer readhexstring pop
    /bcount exch 0 get store
    bcount 128 ge
    {  % it's a non-run block
      0 1 bcount 128 sub
      { currentfile buffer readhexstring pop pop

        % look up value in color map
        /rgbval cmap buffer 0 get 3 mul 3 getinterval store

        % and put it in position i*3 in block
        block exch 3 mul rgbval putinterval
      } for
      block  0  bcount 127 sub 3 mul  getinterval
    }

    { % else it's a run block
      currentfile buffer readhexstring pop pop

      % look up value in colormap
      /rgbval cmap buffer 0 get 3 mul 3 getinterval store

      0 1 bcount { block exch 3 mul rgbval putinterval } for

      block 0 bcount 1 add 3 mul getinterval
    } ifelse
  } % end of proc
  false 3 colorimage
} bind def


60 40 8			% dimensions of data
[60 0 0 -40 0 40]		% mapping matrix
rlecmapimage

10bf8131bf05bf03e98165e902e9046587bf3158ec31bfe9658265e9bf09bf
10bf8131bf04bf81e9bf01bf02e98265bfe982e965e901e981bf318131ec82ecbfe982e9
65bf0abf
12bf82751ebf83bf1ebf318231ec3102318111318131bf81bfe901e981bf318131bf01bf
01e90bbf
0fbf02e901bf023101ec021101a981d6a981a9118111318131bf14bf
0fbf8165e901e988e5bfd4ecd66add07808c80149dc2137f46a911d431bfe981e9bf0fbf

0fbf01e982bfe9318331a49ce28fe2454d37562456dc71567bab87a9d4bf81bfe981e9bf
81bf318131bf0abf
10bf8ac775bf311bde43224d37568656cb535f1a733c893cae8506a91131bfe9bf01bf81
58bf0abf
0fbf911ebf31b761a0442245ed56721a530a3a4e3a813a4e864e73c94246e3bf10bf
07bf81e9bf82bfe9bf92bf1ebf31ec4f0c38e2ef8e4d49561a530a3a6283624b052b8a2b
ce4e60c2dfe331bf4cbf0cbf
0abf81e9bf82bfe9ec8eec83de1f21778e786f01341a0a3a1c851c4b052b20168b162054
aa93df11312fe965bf0abf
0ebf8d3111883d77cdcf78646f0134530a810a1c911c4ece20167c517c16542893a9ec31
e965bf0abf
08bf01e999bfe91ebf316cc07743cd45786f49561a530a3a624b6b2b707c510151877c70
4edcaba9bfe981e9bf0abf
0bbf01e985bf27d34352cf90cf0e4d2656011a530a1c62ee2b20167c5102518816cc1db9
d611bfe9bf0abf
07bf81e9bf01bf90e9bf4c86d3445277d92c786f49721a0a3a853a4b0520167c827c51bd
88bd5116e44b157a11bf0cbf
0dbf8d3f0fc33d4403cfbb0e3756011a0a860a624b2b20167c817c5102510116854b897b
a911bf0bbf
08bf82e9e5bf97bf75dab209bcc021ef254d2649561a533a1c4b052b70167c037c811620
85203a853911bf0bbf
0bbf0131869eb6d3b0bc7748884845646f561acb0a7382734b2b812b1683167c16cc01cc
012b844b2813d4bf0bbf
0abf0231955e236db0c04463cf45646f5634cb533a73624b2b2016821670548854ce2b20
4b28e831bf0bbf
0abf023183b5b6d3b089b044436e45786f49341a871a0a733a626b2b200120896b4e6b05
2b1c5f9decbf0bbf
09bf8131bf97bf31d82e09d3b044cd485a786f1201cb1a530a73621c052b852b054e4b1c
0585053a282d58bf0bbf
0bbf9431bf556709b03844cd482c7864125634cb1a5f0a7382734b0501050162011c854b
0aae2d58bf0bbf
0bbf0131934a236dd3b0bc7743485a786f1201341acb535f3a813a1c011c0173023a8453
3b1458bf0bbf
0bbf8431bf0455098309d338778277ef2c852c266f1201348134cb83cb530a3a013a810a
5f815f0a850a1ab37d58bf0bbf
08bf81e9bf93bf31bf18d83209d338c044cd6e0e2c64126f0172837271cb5382530a5383
53ae531a851a01a57e58bf0bbf
0bbf01e5837600230901098138c082c0482c862c7864126f49568156728272341a811a72
0272864912bb841131bf0abf
03bf94e9bfe9bfe9bf1ebf1ebf275923b632099538c044ef81ef7881786481646f816fad
84adea01ea560156882449ad2da3115831bf0abf
04bf02e992654ce61e75bf0d185523b66d0995bcc043cd2c812c7881786483646f64f001
f08b6f496f49642d6382e3314cbf0abf
01bf85e9e5e9652fc784c7693fc7698a69c7d2b200232eb60929bc84bc6343ef2c862c78
45784d78ed82ed6f6489644d45a3afa2114c31bf0abf
01e58175c783c769d5eb8ceb797679dab87908db67c4b66d876d9538b0447743ef84ef6e
2c78458e455a457864788ecfbe9fd4315831bf0abf
88e5750d3f5779da98d083d0689b3501358d5d0236c45567b6320995b04477cd92cdef6e
2c6e5ad95acf782c4517813e31bf2fbf0bbf
887569575bd0689bc5ba83ba8a2a8a878aca2a74db5955b284b23209d3b081b077017701
cd016e02ef876e2c6e4810a4d4bf01bf814cbf0abf
873f79b835c5ba2a9a829aa8410141868de1d104c690d881d85583552e6d958b9538b0c0
77cd03cd6377afcd84cd4321c1d483d4e9654c814cbf0abf
88575b9b742ad1418de181e15081509603968450c8d759d881d8b283b2326d0981099585
9538bcb0381f871f95c3995ca931bf81bfe981e9bf0bbf
8779b8c58ad1c6e750855096d7b119b104b184d7b119d855845523b2b66d016d83952995
2987296de09211d431bf01bf01e90cbf
8979d0c52aa88de15096b181b119041901b18796c80fd74a59b2b602b6016d86326d328f
ac0b318331bf31bf01bf81e9bf0cbf
88575b9b742ad1c68de186e1c850c850c850865096c850e1e70487045e8ca7912e672e85
2e8cac33473101318158bf02bf82e9bfe981e9bf0abf
8b3f799835c5742a8bd1a8dbc683c68dc68d818dc601c68cdbd1ca40a15da66697274711
31863158bf31bf31bf82bf4ce985e9bfe9bfe9bf0abf
8bc76957dab8359bc5a1748a2a052a018a01748b029ba6665b279447ec311ebf83bf581e
bf82bf4cbf02bf82e9bfe981e9bf0abf
881e75693f57795bb8d082d068350135029b0135013088b8985b7608b40d751e811ebf83
bf1e75bf81bf4c814cbf05bf81e9bf0bbf
83e9e52fc782c7693f823f5779817976027681da760276827957b482b4c7750175822fe5
bf82bf4cbf01bf814cbf81bfe981e9bf01bf01e90dbf

%
% Compression made this file 26.36% of the uncompressed size.
%


showpage

% stop using temporary dictionary
end

% restore original state
origstate restore

%%Trailer

%%EndDocument
 @endspecial 248 w(Document)g(in)f(source)4983 4205 y
@beginspecial 276 @llx 376 @lly 336 @urx 416 @ury 85
@rwi @setspecial
%%BeginDocument: green-bullet-on-white.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/fred/TeX/STYLES/Prosper/img/green-bullet-on-white.ps
%%Creator: XV Version 3.10a+FLmask  Rev: 12/29/94  -  by John Bradley
%%BoundingBox: 276 376 336 416
%%Pages: 1
%%DocumentFonts:
%%EndComments
%%EndProlog

%%Page: 1 1

% remember original state
/origstate save def

% build a temporary dictionary
20 dict begin

% define space for color conversions
/grays 60 string def  % space for gray scale line
/npixls 0 def
/rgbindx 0 def

% lower left corner
276 376 translate

% size of image (on paper, in 1/72inch coords)
59.97600 40.03200 scale

% define 'colorimage' if it isn't defined
%   ('colortogray' and 'mergeprocs' come from xwd2ps
%     via xgrab)
/colorimage where   % do we know about 'colorimage'?
  { pop }           % yes: pop off the 'dict' returned
  {                 % no:  define one
    /colortogray {  % define an RGB->I function
      /rgbdata exch store    % call input 'rgbdata'
      rgbdata length 3 idiv
      /npixls exch store
      /rgbindx 0 store
      0 1 npixls 1 sub {
        grays exch
        rgbdata rgbindx       get 20 mul    % Red
        rgbdata rgbindx 1 add get 32 mul    % Green
        rgbdata rgbindx 2 add get 12 mul    % Blue
        add add 64 idiv      % I = .5G + .31R + .18B
        put
        /rgbindx rgbindx 3 add store
      } for
      grays 0 npixls getinterval
    } bind def

    % Utility procedure for colorimage operator.
    % This procedure takes two procedures off the
    % stack and merges them into a single procedure.

    /mergeprocs { % def
      dup length
      3 -1 roll
      dup
      length
      dup
      5 1 roll
      3 -1 roll
      add
      array cvx
      dup
      3 -1 roll
      0 exch
      putinterval
      dup
      4 2 roll
      putinterval
    } bind def

    /colorimage { % def
      pop pop     % remove 'false 3' operands
      {colortogray} mergeprocs
      image
    } bind def
  } ifelse          % end of 'false' case



% define the colormap
/cmap 723 string def


% load up the colormap
currentfile cmap readhexstring
041808 049008 8c948c 045204 4c544c 04c804 84e284 449644 c4cbc4 0c380e 
04ac07 cce6cc 345e2c e4e7e4 046604 2c3a2c 347234 e4fee2 048208 64cc60 
34922c 24b224 04e404 044604 647264 242623 049f07 8cae8c 04bc06 24c61c 
f4f8f3 1c541c 04d804 1c621c 1c7220 0c280d 14910f 045e04 047c04 ccdcd0 
14ac18 1c481c 747473 04d105 0c6c0b 24852a 1c381c f4f1f3 acafac f4fef5 
0c310c acc6ac 049708 a4a4a3 3c4a44 148314 144812 9cea94 04b405 149e14 
1cbc1c 044004 e4fef4 dcdddd 748274 5c5959 4cba54 145b11 145413 147412 
c4fec4 e4f1e7 146411 088a0a 243028 09c207 fcf8f3 147c13 14c80e acceac 
3c3939 04f405 044e07 07a608 14d00f 0c1f10 0c900b d4d3d4 ecfee3 1c291d 
0c6e14 bcbfbd d4f6d4 909a94 4c5a50 0cac08 24ba24 547e54 0cbc0a 0c5c16 
0c7c0b fcf1fb acb8ac 1c311c aca7a9 e2e2e2 a4e2a4 0cc80a 6c9a6c 143715 
0c650a 0c840b 07de06 14970c 0c980a 0cb40a 848583 ecf0f0 c3c6c3 0c540d 
0c740c cccccc 74ce6c 30a02c 04ec05 54aa5c 6cb66c 9cfa9c 2c862c 5c926c 
6ca674 b4deac 9cda9c 34aa2c 6c7e6c acfeac 448244 34d22c 7d7d7c 6c6d6c 
445644 4c4d4c 1c7a19 1c3e1c 3c3f3c 2c422c 7c9a84 54c254 dceadc 144014 
343231 bccebc bcbabc 447244 6c6664 9c9d9c 7caa7c 349a38 6c7a74 84b69c 
1c4e18 898a89 ccfadc 1c6c2c b8e2c0 1c8a24 a1aaa1 3c4e3c 5f5e5c d8fed8 
24be24 78d670 688668 148a14 14a618 145624 0c480e 2c292b 142916 1c921c 
d4dad9 243828 143017 b4d2bc b4b7b5 1c961c 8c868c 247e24 144e13 04fa04 
246224 fcfefc 0c4e0c ace2b4 3caa3c 244e24 0c180c 949394 545454 ece9ec 
343634 2cb127 6c736c 0ca00c 0cda08 0c5c0b 0ccf06 146a0c b4b2b4 646464 
b4c2b4 0c3f0c ecfdf9 e4dedc ccfdcc 2c2f2b 142214 146b16 c4c2c2 545b54 
2cb62c 74ba74 346634 b4fcb0 244224 444242 246a24 e4feec 0ce204 f4f9fc 
f4eefc 444744 54b654 fcf9fc 0c9114 dcd6d4 ecfeec 0c7b14 0cc614 0c6314 
0c8414 
pop pop   % lose return values from readhexstring


% rlecmapimage expects to have 'w h bits matrix' on stack
/rlecmapimage {
  /buffer 1 string def
  /rgbval 3 string def
  /block  384 string def

  % proc to read a block from file, and return RGB data
  { currentfile buffer readhexstring pop
    /bcount exch 0 get store
    bcount 128 ge
    {  % it's a non-run block
      0 1 bcount 128 sub
      { currentfile buffer readhexstring pop pop

        % look up value in color map
        /rgbval cmap buffer 0 get 3 mul 3 getinterval store

        % and put it in position i*3 in block
        block exch 3 mul rgbval putinterval
      } for
      block  0  bcount 127 sub 3 mul  getinterval
    }

    { % else it's a run block
      currentfile buffer readhexstring pop pop

      % look up value in colormap
      /rgbval cmap buffer 0 get 3 mul 3 getinterval store

      0 1 bcount { block exch 3 mul rgbval putinterval } for

      block 0 bcount 1 add 3 mul getinterval
    } ifelse
  } % end of proc
  false 3 colorimage
} bind def


60 40 8			% dimensions of data
[60 0 0 -40 0 40]		% mapping matrix
rlecmapimage

10bf8131bf05bf03e98165e902e9046587bf3158ec31bfe9658265e9bf09bf
10bf8131bf04bf81e9bf01bf02e98265bfe982e965e901e981bf318131ec82ecbfe982e9
65bf0abf
12bf82751ebf83bf1ebf318231ec3102318111318131bf81bfe901e981bf318131bf01bf
01e90bbf
0fbf02e901bf023101ec021101a981d6a981a9118111318131bf14bf
0fbf8165e901e988e5bfd4ecd66add07808c80149dc2137f46a911d431bfe981e9bf0fbf

0fbf01e982bfe9318331a49ce28fe2454d37562456dc71567bab87a9d4bf81bfe981e9bf
81bf318131bf0abf
10bf8ac775bf311bde43224d37568656cb535f1a733c893cae8506a91131bfe9bf01bf81
58bf0abf
0fbf911ebf31b761a0442245ed56721a530a3a4e3a813a4e864e73c94246e3bf10bf
07bf81e9bf82bfe9bf92bf1ebf31ec4f0c38e2ef8e4d49561a530a3a6283624b052b8a2b
ce4e60c2dfe331bf4cbf0cbf
0abf81e9bf82bfe9ec8eec83de1f21778e786f01341a0a3a1c851c4b052b20168b162054
aa93df11312fe965bf0abf
0ebf8d3111883d77cdcf78646f0134530a810a1c911c4ece20167c517c16542893a9ec31
e965bf0abf
08bf01e999bfe91ebf316cc07743cd45786f49561a530a3a624b6b2b707c510151877c70
4edcaba9bfe981e9bf0abf
0bbf01e985bf27d34352cf90cf0e4d2656011a530a1c62ee2b20167c5102518816cc1db9
d611bfe9bf0abf
07bf81e9bf01bf90e9bf4c86d3445277d92c786f49721a0a3a853a4b0520167c827c51bd
88bd5116e44b157a11bf0cbf
0dbf8d3f0fc33d4403cfbb0e3756011a0a860a624b2b20167c817c5102510116854b897b
a911bf0bbf
08bf82e9e5bf97bf75dab209bcc021ef254d2649561a533a1c4b052b70167c037c811620
85203a853911bf0bbf
0bbf0131869eb6d3b0bc7748884845646f561acb0a7382734b2b812b1683167c16cc01cc
012b844b2813d4bf0bbf
0abf0231955e236db0c04463cf45646f5634cb533a73624b2b2016821670548854ce2b20
4b28e831bf0bbf
0abf023183b5b6d3b089b044436e45786f49341a871a0a733a626b2b200120896b4e6b05
2b1c5f9decbf0bbf
09bf8131bf97bf31d82e09d3b044cd485a786f1201cb1a530a73621c052b852b054e4b1c
0585053a282d58bf0bbf
0bbf9431bf556709b03844cd482c7864125634cb1a5f0a7382734b0501050162011c854b
0aae2d58bf0bbf
0bbf0131934a236dd3b0bc7743485a786f1201341acb535f3a813a1c011c0173023a8453
3b1458bf0bbf
0bbf8431bf0455098309d338778277ef2c852c266f1201348134cb83cb530a3a013a810a
5f815f0a850a1ab37d58bf0bbf
08bf81e9bf93bf31bf18d83209d338c044cd6e0e2c64126f0172837271cb5382530a5383
53ae531a851a01a57e58bf0bbf
0bbf01e5837600230901098138c082c0482c862c7864126f49568156728272341a811a72
0272864912bb841131bf0abf
03bf94e9bfe9bfe9bf1ebf1ebf275923b632099538c044ef81ef7881786481646f816fad
84adea01ea560156882449ad2da3115831bf0abf
04bf02e992654ce61e75bf0d185523b66d0995bcc043cd2c812c7881786483646f64f001
f08b6f496f49642d6382e3314cbf0abf
01bf85e9e5e9652fc784c7693fc7698a69c7d2b200232eb60929bc84bc6343ef2c862c78
45784d78ed82ed6f6489644d45a3afa2114c31bf0abf
01e58175c783c769d5eb8ceb797679dab87908db67c4b66d876d9538b0447743ef84ef6e
2c78458e455a457864788ecfbe9fd4315831bf0abf
88e5750d3f5779da98d083d0689b3501358d5d0236c45567b6320995b04477cd92cdef6e
2c6e5ad95acf782c4517813e31bf2fbf0bbf
887569575bd0689bc5ba83ba8a2a8a878aca2a74db5955b284b23209d3b081b077017701
cd016e02ef876e2c6e4810a4d4bf01bf814cbf0abf
873f79b835c5ba2a9a829aa8410141868de1d104c690d881d85583552e6d958b9538b0c0
77cd03cd6377afcd84cd4321c1d483d4e9654c814cbf0abf
88575b9b742ad1418de181e15081509603968450c8d759d881d8b283b2326d0981099585
9538bcb0381f871f95c3995ca931bf81bfe981e9bf0bbf
8779b8c58ad1c6e750855096d7b119b104b184d7b119d855845523b2b66d016d83952995
2987296de09211d431bf01bf01e90cbf
8979d0c52aa88de15096b181b119041901b18796c80fd74a59b2b602b6016d86326d328f
ac0b318331bf31bf01bf81e9bf0cbf
88575b9b742ad1c68de186e1c850c850c850865096c850e1e70487045e8ca7912e672e85
2e8cac33473101318158bf02bf82e9bfe981e9bf0abf
8b3f799835c5742a8bd1a8dbc683c68dc68d818dc601c68cdbd1ca40a15da66697274711
31863158bf31bf31bf82bf4ce985e9bfe9bfe9bf0abf
8bc76957dab8359bc5a1748a2a052a018a01748b029ba6665b279447ec311ebf83bf581e
bf82bf4cbf02bf82e9bfe981e9bf0abf
881e75693f57795bb8d082d068350135029b0135013088b8985b7608b40d751e811ebf83
bf1e75bf81bf4c814cbf05bf81e9bf0bbf
83e9e52fc782c7693f823f5779817976027681da760276827957b482b4c7750175822fe5
bf82bf4cbf01bf814cbf81bfe981e9bf01bf01e90dbf

%
% Compression made this file 26.36% of the uncompressed size.
%


showpage

% stop using temporary dictionary
end

% restore original state
origstate restore

%%Trailer

%%EndDocument
 @endspecial 248 w(Remo)l(v)-6 b(e)67 b(the)g(w)n(eird)g(MINT)g
(scheduling)4983 4528 y @beginspecial 276 @llx 376 @lly
336 @urx 416 @ury 85 @rwi @setspecial
%%BeginDocument: green-bullet-on-white.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/fred/TeX/STYLES/Prosper/img/green-bullet-on-white.ps
%%Creator: XV Version 3.10a+FLmask  Rev: 12/29/94  -  by John Bradley
%%BoundingBox: 276 376 336 416
%%Pages: 1
%%DocumentFonts:
%%EndComments
%%EndProlog

%%Page: 1 1

% remember original state
/origstate save def

% build a temporary dictionary
20 dict begin

% define space for color conversions
/grays 60 string def  % space for gray scale line
/npixls 0 def
/rgbindx 0 def

% lower left corner
276 376 translate

% size of image (on paper, in 1/72inch coords)
59.97600 40.03200 scale

% define 'colorimage' if it isn't defined
%   ('colortogray' and 'mergeprocs' come from xwd2ps
%     via xgrab)
/colorimage where   % do we know about 'colorimage'?
  { pop }           % yes: pop off the 'dict' returned
  {                 % no:  define one
    /colortogray {  % define an RGB->I function
      /rgbdata exch store    % call input 'rgbdata'
      rgbdata length 3 idiv
      /npixls exch store
      /rgbindx 0 store
      0 1 npixls 1 sub {
        grays exch
        rgbdata rgbindx       get 20 mul    % Red
        rgbdata rgbindx 1 add get 32 mul    % Green
        rgbdata rgbindx 2 add get 12 mul    % Blue
        add add 64 idiv      % I = .5G + .31R + .18B
        put
        /rgbindx rgbindx 3 add store
      } for
      grays 0 npixls getinterval
    } bind def

    % Utility procedure for colorimage operator.
    % This procedure takes two procedures off the
    % stack and merges them into a single procedure.

    /mergeprocs { % def
      dup length
      3 -1 roll
      dup
      length
      dup
      5 1 roll
      3 -1 roll
      add
      array cvx
      dup
      3 -1 roll
      0 exch
      putinterval
      dup
      4 2 roll
      putinterval
    } bind def

    /colorimage { % def
      pop pop     % remove 'false 3' operands
      {colortogray} mergeprocs
      image
    } bind def
  } ifelse          % end of 'false' case



% define the colormap
/cmap 723 string def


% load up the colormap
currentfile cmap readhexstring
041808 049008 8c948c 045204 4c544c 04c804 84e284 449644 c4cbc4 0c380e 
04ac07 cce6cc 345e2c e4e7e4 046604 2c3a2c 347234 e4fee2 048208 64cc60 
34922c 24b224 04e404 044604 647264 242623 049f07 8cae8c 04bc06 24c61c 
f4f8f3 1c541c 04d804 1c621c 1c7220 0c280d 14910f 045e04 047c04 ccdcd0 
14ac18 1c481c 747473 04d105 0c6c0b 24852a 1c381c f4f1f3 acafac f4fef5 
0c310c acc6ac 049708 a4a4a3 3c4a44 148314 144812 9cea94 04b405 149e14 
1cbc1c 044004 e4fef4 dcdddd 748274 5c5959 4cba54 145b11 145413 147412 
c4fec4 e4f1e7 146411 088a0a 243028 09c207 fcf8f3 147c13 14c80e acceac 
3c3939 04f405 044e07 07a608 14d00f 0c1f10 0c900b d4d3d4 ecfee3 1c291d 
0c6e14 bcbfbd d4f6d4 909a94 4c5a50 0cac08 24ba24 547e54 0cbc0a 0c5c16 
0c7c0b fcf1fb acb8ac 1c311c aca7a9 e2e2e2 a4e2a4 0cc80a 6c9a6c 143715 
0c650a 0c840b 07de06 14970c 0c980a 0cb40a 848583 ecf0f0 c3c6c3 0c540d 
0c740c cccccc 74ce6c 30a02c 04ec05 54aa5c 6cb66c 9cfa9c 2c862c 5c926c 
6ca674 b4deac 9cda9c 34aa2c 6c7e6c acfeac 448244 34d22c 7d7d7c 6c6d6c 
445644 4c4d4c 1c7a19 1c3e1c 3c3f3c 2c422c 7c9a84 54c254 dceadc 144014 
343231 bccebc bcbabc 447244 6c6664 9c9d9c 7caa7c 349a38 6c7a74 84b69c 
1c4e18 898a89 ccfadc 1c6c2c b8e2c0 1c8a24 a1aaa1 3c4e3c 5f5e5c d8fed8 
24be24 78d670 688668 148a14 14a618 145624 0c480e 2c292b 142916 1c921c 
d4dad9 243828 143017 b4d2bc b4b7b5 1c961c 8c868c 247e24 144e13 04fa04 
246224 fcfefc 0c4e0c ace2b4 3caa3c 244e24 0c180c 949394 545454 ece9ec 
343634 2cb127 6c736c 0ca00c 0cda08 0c5c0b 0ccf06 146a0c b4b2b4 646464 
b4c2b4 0c3f0c ecfdf9 e4dedc ccfdcc 2c2f2b 142214 146b16 c4c2c2 545b54 
2cb62c 74ba74 346634 b4fcb0 244224 444242 246a24 e4feec 0ce204 f4f9fc 
f4eefc 444744 54b654 fcf9fc 0c9114 dcd6d4 ecfeec 0c7b14 0cc614 0c6314 
0c8414 
pop pop   % lose return values from readhexstring


% rlecmapimage expects to have 'w h bits matrix' on stack
/rlecmapimage {
  /buffer 1 string def
  /rgbval 3 string def
  /block  384 string def

  % proc to read a block from file, and return RGB data
  { currentfile buffer readhexstring pop
    /bcount exch 0 get store
    bcount 128 ge
    {  % it's a non-run block
      0 1 bcount 128 sub
      { currentfile buffer readhexstring pop pop

        % look up value in color map
        /rgbval cmap buffer 0 get 3 mul 3 getinterval store

        % and put it in position i*3 in block
        block exch 3 mul rgbval putinterval
      } for
      block  0  bcount 127 sub 3 mul  getinterval
    }

    { % else it's a run block
      currentfile buffer readhexstring pop pop

      % look up value in colormap
      /rgbval cmap buffer 0 get 3 mul 3 getinterval store

      0 1 bcount { block exch 3 mul rgbval putinterval } for

      block 0 bcount 1 add 3 mul getinterval
    } ifelse
  } % end of proc
  false 3 colorimage
} bind def


60 40 8			% dimensions of data
[60 0 0 -40 0 40]		% mapping matrix
rlecmapimage

10bf8131bf05bf03e98165e902e9046587bf3158ec31bfe9658265e9bf09bf
10bf8131bf04bf81e9bf01bf02e98265bfe982e965e901e981bf318131ec82ecbfe982e9
65bf0abf
12bf82751ebf83bf1ebf318231ec3102318111318131bf81bfe901e981bf318131bf01bf
01e90bbf
0fbf02e901bf023101ec021101a981d6a981a9118111318131bf14bf
0fbf8165e901e988e5bfd4ecd66add07808c80149dc2137f46a911d431bfe981e9bf0fbf

0fbf01e982bfe9318331a49ce28fe2454d37562456dc71567bab87a9d4bf81bfe981e9bf
81bf318131bf0abf
10bf8ac775bf311bde43224d37568656cb535f1a733c893cae8506a91131bfe9bf01bf81
58bf0abf
0fbf911ebf31b761a0442245ed56721a530a3a4e3a813a4e864e73c94246e3bf10bf
07bf81e9bf82bfe9bf92bf1ebf31ec4f0c38e2ef8e4d49561a530a3a6283624b052b8a2b
ce4e60c2dfe331bf4cbf0cbf
0abf81e9bf82bfe9ec8eec83de1f21778e786f01341a0a3a1c851c4b052b20168b162054
aa93df11312fe965bf0abf
0ebf8d3111883d77cdcf78646f0134530a810a1c911c4ece20167c517c16542893a9ec31
e965bf0abf
08bf01e999bfe91ebf316cc07743cd45786f49561a530a3a624b6b2b707c510151877c70
4edcaba9bfe981e9bf0abf
0bbf01e985bf27d34352cf90cf0e4d2656011a530a1c62ee2b20167c5102518816cc1db9
d611bfe9bf0abf
07bf81e9bf01bf90e9bf4c86d3445277d92c786f49721a0a3a853a4b0520167c827c51bd
88bd5116e44b157a11bf0cbf
0dbf8d3f0fc33d4403cfbb0e3756011a0a860a624b2b20167c817c5102510116854b897b
a911bf0bbf
08bf82e9e5bf97bf75dab209bcc021ef254d2649561a533a1c4b052b70167c037c811620
85203a853911bf0bbf
0bbf0131869eb6d3b0bc7748884845646f561acb0a7382734b2b812b1683167c16cc01cc
012b844b2813d4bf0bbf
0abf0231955e236db0c04463cf45646f5634cb533a73624b2b2016821670548854ce2b20
4b28e831bf0bbf
0abf023183b5b6d3b089b044436e45786f49341a871a0a733a626b2b200120896b4e6b05
2b1c5f9decbf0bbf
09bf8131bf97bf31d82e09d3b044cd485a786f1201cb1a530a73621c052b852b054e4b1c
0585053a282d58bf0bbf
0bbf9431bf556709b03844cd482c7864125634cb1a5f0a7382734b0501050162011c854b
0aae2d58bf0bbf
0bbf0131934a236dd3b0bc7743485a786f1201341acb535f3a813a1c011c0173023a8453
3b1458bf0bbf
0bbf8431bf0455098309d338778277ef2c852c266f1201348134cb83cb530a3a013a810a
5f815f0a850a1ab37d58bf0bbf
08bf81e9bf93bf31bf18d83209d338c044cd6e0e2c64126f0172837271cb5382530a5383
53ae531a851a01a57e58bf0bbf
0bbf01e5837600230901098138c082c0482c862c7864126f49568156728272341a811a72
0272864912bb841131bf0abf
03bf94e9bfe9bfe9bf1ebf1ebf275923b632099538c044ef81ef7881786481646f816fad
84adea01ea560156882449ad2da3115831bf0abf
04bf02e992654ce61e75bf0d185523b66d0995bcc043cd2c812c7881786483646f64f001
f08b6f496f49642d6382e3314cbf0abf
01bf85e9e5e9652fc784c7693fc7698a69c7d2b200232eb60929bc84bc6343ef2c862c78
45784d78ed82ed6f6489644d45a3afa2114c31bf0abf
01e58175c783c769d5eb8ceb797679dab87908db67c4b66d876d9538b0447743ef84ef6e
2c78458e455a457864788ecfbe9fd4315831bf0abf
88e5750d3f5779da98d083d0689b3501358d5d0236c45567b6320995b04477cd92cdef6e
2c6e5ad95acf782c4517813e31bf2fbf0bbf
887569575bd0689bc5ba83ba8a2a8a878aca2a74db5955b284b23209d3b081b077017701
cd016e02ef876e2c6e4810a4d4bf01bf814cbf0abf
873f79b835c5ba2a9a829aa8410141868de1d104c690d881d85583552e6d958b9538b0c0
77cd03cd6377afcd84cd4321c1d483d4e9654c814cbf0abf
88575b9b742ad1418de181e15081509603968450c8d759d881d8b283b2326d0981099585
9538bcb0381f871f95c3995ca931bf81bfe981e9bf0bbf
8779b8c58ad1c6e750855096d7b119b104b184d7b119d855845523b2b66d016d83952995
2987296de09211d431bf01bf01e90cbf
8979d0c52aa88de15096b181b119041901b18796c80fd74a59b2b602b6016d86326d328f
ac0b318331bf31bf01bf81e9bf0cbf
88575b9b742ad1c68de186e1c850c850c850865096c850e1e70487045e8ca7912e672e85
2e8cac33473101318158bf02bf82e9bfe981e9bf0abf
8b3f799835c5742a8bd1a8dbc683c68dc68d818dc601c68cdbd1ca40a15da66697274711
31863158bf31bf31bf82bf4ce985e9bfe9bfe9bf0abf
8bc76957dab8359bc5a1748a2a052a018a01748b029ba6665b279447ec311ebf83bf581e
bf82bf4cbf02bf82e9bfe981e9bf0abf
881e75693f57795bb8d082d068350135029b0135013088b8985b7608b40d751e811ebf83
bf1e75bf81bf4c814cbf05bf81e9bf0bbf
83e9e52fc782c7693f823f5779817976027681da760276827957b482b4c7750175822fe5
bf82bf4cbf01bf814cbf81bfe981e9bf01bf01e90dbf

%
% Compression made this file 26.36% of the uncompressed size.
%


showpage

% stop using temporary dictionary
end

% restore original state
origstate restore

%%Trailer

%%EndDocument
 @endspecial 248 w(Common)g(po)l(w)n(erful)g(con\002gur)n(ation)f(f)-7
b(or)6 b(mat)4983 4846 y @beginspecial 276 @llx 376 @lly
336 @urx 416 @ury 85 @rwi @setspecial
%%BeginDocument: green-bullet-on-white.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/fred/TeX/STYLES/Prosper/img/green-bullet-on-white.ps
%%Creator: XV Version 3.10a+FLmask  Rev: 12/29/94  -  by John Bradley
%%BoundingBox: 276 376 336 416
%%Pages: 1
%%DocumentFonts:
%%EndComments
%%EndProlog

%%Page: 1 1

% remember original state
/origstate save def

% build a temporary dictionary
20 dict begin

% define space for color conversions
/grays 60 string def  % space for gray scale line
/npixls 0 def
/rgbindx 0 def

% lower left corner
276 376 translate

% size of image (on paper, in 1/72inch coords)
59.97600 40.03200 scale

% define 'colorimage' if it isn't defined
%   ('colortogray' and 'mergeprocs' come from xwd2ps
%     via xgrab)
/colorimage where   % do we know about 'colorimage'?
  { pop }           % yes: pop off the 'dict' returned
  {                 % no:  define one
    /colortogray {  % define an RGB->I function
      /rgbdata exch store    % call input 'rgbdata'
      rgbdata length 3 idiv
      /npixls exch store
      /rgbindx 0 store
      0 1 npixls 1 sub {
        grays exch
        rgbdata rgbindx       get 20 mul    % Red
        rgbdata rgbindx 1 add get 32 mul    % Green
        rgbdata rgbindx 2 add get 12 mul    % Blue
        add add 64 idiv      % I = .5G + .31R + .18B
        put
        /rgbindx rgbindx 3 add store
      } for
      grays 0 npixls getinterval
    } bind def

    % Utility procedure for colorimage operator.
    % This procedure takes two procedures off the
    % stack and merges them into a single procedure.

    /mergeprocs { % def
      dup length
      3 -1 roll
      dup
      length
      dup
      5 1 roll
      3 -1 roll
      add
      array cvx
      dup
      3 -1 roll
      0 exch
      putinterval
      dup
      4 2 roll
      putinterval
    } bind def

    /colorimage { % def
      pop pop     % remove 'false 3' operands
      {colortogray} mergeprocs
      image
    } bind def
  } ifelse          % end of 'false' case



% define the colormap
/cmap 723 string def


% load up the colormap
currentfile cmap readhexstring
041808 049008 8c948c 045204 4c544c 04c804 84e284 449644 c4cbc4 0c380e 
04ac07 cce6cc 345e2c e4e7e4 046604 2c3a2c 347234 e4fee2 048208 64cc60 
34922c 24b224 04e404 044604 647264 242623 049f07 8cae8c 04bc06 24c61c 
f4f8f3 1c541c 04d804 1c621c 1c7220 0c280d 14910f 045e04 047c04 ccdcd0 
14ac18 1c481c 747473 04d105 0c6c0b 24852a 1c381c f4f1f3 acafac f4fef5 
0c310c acc6ac 049708 a4a4a3 3c4a44 148314 144812 9cea94 04b405 149e14 
1cbc1c 044004 e4fef4 dcdddd 748274 5c5959 4cba54 145b11 145413 147412 
c4fec4 e4f1e7 146411 088a0a 243028 09c207 fcf8f3 147c13 14c80e acceac 
3c3939 04f405 044e07 07a608 14d00f 0c1f10 0c900b d4d3d4 ecfee3 1c291d 
0c6e14 bcbfbd d4f6d4 909a94 4c5a50 0cac08 24ba24 547e54 0cbc0a 0c5c16 
0c7c0b fcf1fb acb8ac 1c311c aca7a9 e2e2e2 a4e2a4 0cc80a 6c9a6c 143715 
0c650a 0c840b 07de06 14970c 0c980a 0cb40a 848583 ecf0f0 c3c6c3 0c540d 
0c740c cccccc 74ce6c 30a02c 04ec05 54aa5c 6cb66c 9cfa9c 2c862c 5c926c 
6ca674 b4deac 9cda9c 34aa2c 6c7e6c acfeac 448244 34d22c 7d7d7c 6c6d6c 
445644 4c4d4c 1c7a19 1c3e1c 3c3f3c 2c422c 7c9a84 54c254 dceadc 144014 
343231 bccebc bcbabc 447244 6c6664 9c9d9c 7caa7c 349a38 6c7a74 84b69c 
1c4e18 898a89 ccfadc 1c6c2c b8e2c0 1c8a24 a1aaa1 3c4e3c 5f5e5c d8fed8 
24be24 78d670 688668 148a14 14a618 145624 0c480e 2c292b 142916 1c921c 
d4dad9 243828 143017 b4d2bc b4b7b5 1c961c 8c868c 247e24 144e13 04fa04 
246224 fcfefc 0c4e0c ace2b4 3caa3c 244e24 0c180c 949394 545454 ece9ec 
343634 2cb127 6c736c 0ca00c 0cda08 0c5c0b 0ccf06 146a0c b4b2b4 646464 
b4c2b4 0c3f0c ecfdf9 e4dedc ccfdcc 2c2f2b 142214 146b16 c4c2c2 545b54 
2cb62c 74ba74 346634 b4fcb0 244224 444242 246a24 e4feec 0ce204 f4f9fc 
f4eefc 444744 54b654 fcf9fc 0c9114 dcd6d4 ecfeec 0c7b14 0cc614 0c6314 
0c8414 
pop pop   % lose return values from readhexstring


% rlecmapimage expects to have 'w h bits matrix' on stack
/rlecmapimage {
  /buffer 1 string def
  /rgbval 3 string def
  /block  384 string def

  % proc to read a block from file, and return RGB data
  { currentfile buffer readhexstring pop
    /bcount exch 0 get store
    bcount 128 ge
    {  % it's a non-run block
      0 1 bcount 128 sub
      { currentfile buffer readhexstring pop pop

        % look up value in color map
        /rgbval cmap buffer 0 get 3 mul 3 getinterval store

        % and put it in position i*3 in block
        block exch 3 mul rgbval putinterval
      } for
      block  0  bcount 127 sub 3 mul  getinterval
    }

    { % else it's a run block
      currentfile buffer readhexstring pop pop

      % look up value in colormap
      /rgbval cmap buffer 0 get 3 mul 3 getinterval store

      0 1 bcount { block exch 3 mul rgbval putinterval } for

      block 0 bcount 1 add 3 mul getinterval
    } ifelse
  } % end of proc
  false 3 colorimage
} bind def


60 40 8			% dimensions of data
[60 0 0 -40 0 40]		% mapping matrix
rlecmapimage

10bf8131bf05bf03e98165e902e9046587bf3158ec31bfe9658265e9bf09bf
10bf8131bf04bf81e9bf01bf02e98265bfe982e965e901e981bf318131ec82ecbfe982e9
65bf0abf
12bf82751ebf83bf1ebf318231ec3102318111318131bf81bfe901e981bf318131bf01bf
01e90bbf
0fbf02e901bf023101ec021101a981d6a981a9118111318131bf14bf
0fbf8165e901e988e5bfd4ecd66add07808c80149dc2137f46a911d431bfe981e9bf0fbf

0fbf01e982bfe9318331a49ce28fe2454d37562456dc71567bab87a9d4bf81bfe981e9bf
81bf318131bf0abf
10bf8ac775bf311bde43224d37568656cb535f1a733c893cae8506a91131bfe9bf01bf81
58bf0abf
0fbf911ebf31b761a0442245ed56721a530a3a4e3a813a4e864e73c94246e3bf10bf
07bf81e9bf82bfe9bf92bf1ebf31ec4f0c38e2ef8e4d49561a530a3a6283624b052b8a2b
ce4e60c2dfe331bf4cbf0cbf
0abf81e9bf82bfe9ec8eec83de1f21778e786f01341a0a3a1c851c4b052b20168b162054
aa93df11312fe965bf0abf
0ebf8d3111883d77cdcf78646f0134530a810a1c911c4ece20167c517c16542893a9ec31
e965bf0abf
08bf01e999bfe91ebf316cc07743cd45786f49561a530a3a624b6b2b707c510151877c70
4edcaba9bfe981e9bf0abf
0bbf01e985bf27d34352cf90cf0e4d2656011a530a1c62ee2b20167c5102518816cc1db9
d611bfe9bf0abf
07bf81e9bf01bf90e9bf4c86d3445277d92c786f49721a0a3a853a4b0520167c827c51bd
88bd5116e44b157a11bf0cbf
0dbf8d3f0fc33d4403cfbb0e3756011a0a860a624b2b20167c817c5102510116854b897b
a911bf0bbf
08bf82e9e5bf97bf75dab209bcc021ef254d2649561a533a1c4b052b70167c037c811620
85203a853911bf0bbf
0bbf0131869eb6d3b0bc7748884845646f561acb0a7382734b2b812b1683167c16cc01cc
012b844b2813d4bf0bbf
0abf0231955e236db0c04463cf45646f5634cb533a73624b2b2016821670548854ce2b20
4b28e831bf0bbf
0abf023183b5b6d3b089b044436e45786f49341a871a0a733a626b2b200120896b4e6b05
2b1c5f9decbf0bbf
09bf8131bf97bf31d82e09d3b044cd485a786f1201cb1a530a73621c052b852b054e4b1c
0585053a282d58bf0bbf
0bbf9431bf556709b03844cd482c7864125634cb1a5f0a7382734b0501050162011c854b
0aae2d58bf0bbf
0bbf0131934a236dd3b0bc7743485a786f1201341acb535f3a813a1c011c0173023a8453
3b1458bf0bbf
0bbf8431bf0455098309d338778277ef2c852c266f1201348134cb83cb530a3a013a810a
5f815f0a850a1ab37d58bf0bbf
08bf81e9bf93bf31bf18d83209d338c044cd6e0e2c64126f0172837271cb5382530a5383
53ae531a851a01a57e58bf0bbf
0bbf01e5837600230901098138c082c0482c862c7864126f49568156728272341a811a72
0272864912bb841131bf0abf
03bf94e9bfe9bfe9bf1ebf1ebf275923b632099538c044ef81ef7881786481646f816fad
84adea01ea560156882449ad2da3115831bf0abf
04bf02e992654ce61e75bf0d185523b66d0995bcc043cd2c812c7881786483646f64f001
f08b6f496f49642d6382e3314cbf0abf
01bf85e9e5e9652fc784c7693fc7698a69c7d2b200232eb60929bc84bc6343ef2c862c78
45784d78ed82ed6f6489644d45a3afa2114c31bf0abf
01e58175c783c769d5eb8ceb797679dab87908db67c4b66d876d9538b0447743ef84ef6e
2c78458e455a457864788ecfbe9fd4315831bf0abf
88e5750d3f5779da98d083d0689b3501358d5d0236c45567b6320995b04477cd92cdef6e
2c6e5ad95acf782c4517813e31bf2fbf0bbf
887569575bd0689bc5ba83ba8a2a8a878aca2a74db5955b284b23209d3b081b077017701
cd016e02ef876e2c6e4810a4d4bf01bf814cbf0abf
873f79b835c5ba2a9a829aa8410141868de1d104c690d881d85583552e6d958b9538b0c0
77cd03cd6377afcd84cd4321c1d483d4e9654c814cbf0abf
88575b9b742ad1418de181e15081509603968450c8d759d881d8b283b2326d0981099585
9538bcb0381f871f95c3995ca931bf81bfe981e9bf0bbf
8779b8c58ad1c6e750855096d7b119b104b184d7b119d855845523b2b66d016d83952995
2987296de09211d431bf01bf01e90cbf
8979d0c52aa88de15096b181b119041901b18796c80fd74a59b2b602b6016d86326d328f
ac0b318331bf31bf01bf81e9bf0cbf
88575b9b742ad1c68de186e1c850c850c850865096c850e1e70487045e8ca7912e672e85
2e8cac33473101318158bf02bf82e9bfe981e9bf0abf
8b3f799835c5742a8bd1a8dbc683c68dc68d818dc601c68cdbd1ca40a15da66697274711
31863158bf31bf31bf82bf4ce985e9bfe9bfe9bf0abf
8bc76957dab8359bc5a1748a2a052a018a01748b029ba6665b279447ec311ebf83bf581e
bf82bf4cbf02bf82e9bfe981e9bf0abf
881e75693f57795bb8d082d068350135029b0135013088b8985b7608b40d751e811ebf83
bf1e75bf81bf4c814cbf05bf81e9bf0bbf
83e9e52fc782c7693f823f5779817976027681da760276827957b482b4c7750175822fe5
bf82bf4cbf01bf814cbf81bfe981e9bf01bf01e90dbf

%
% Compression made this file 26.36% of the uncompressed size.
%


showpage

% stop using temporary dictionary
end

% restore original state
origstate restore

%%Trailer

%%EndDocument
 @endspecial 248 w(F)-12 b(acilitate)66 b(code)g(shar)t(ing)g(betw)n
(een)h(projects)10245 5222 y
 0 setgray
 10245 5222 a 4500 6000 a
 tx@Dict begin -90 Rot  end

4500 6000 a eop
%%Page: 4 4
4 3 bop 4500 6000 a
 tx@Dict begin 90 Rot  end
 4500 6000 a 5981 1792 a @beginspecial
-168 @llx 371 @lly 782 @urx 421 @ury 2834 @rwi 283 @rhi
@setspecial
%%BeginDocument: barre-rico.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /ufs/goualard/TEMP/barre_hor.ps
%%Creator: XV Version 3.10a  Rev: 12/29/94 (PNG patch 1.2)  -  by John Bradley
%%BoundingBox: -168 371 782 421
%%Pages: 1
%%DocumentFonts:
%%EndComments
%%EndProlog

%%Page: 1 1

% remember original state
/origstate save def

% build a temporary dictionary
20 dict begin

% define space for color conversions
/grays 950 string def  % space for gray scale line
/npixls 0 def
/rgbindx 0 def

% lower left corner
-168 371 translate

% size of image (on paper, in 1/72inch coords)
949.96800 49.96800 scale

% define 'colorimage' if it isn't defined
%   ('colortogray' and 'mergeprocs' come from xwd2ps
%     via xgrab)
/colorimage where   % do we know about 'colorimage'?
  { pop }           % yes: pop off the 'dict' returned
  {                 % no:  define one
    /colortogray {  % define an RGB->I function
      /rgbdata exch store    % call input 'rgbdata'
      rgbdata length 3 idiv
      /npixls exch store
      /rgbindx 0 store
      0 1 npixls 1 sub {
        grays exch
        rgbdata rgbindx       get 20 mul    % Red
        rgbdata rgbindx 1 add get 32 mul    % Green
        rgbdata rgbindx 2 add get 12 mul    % Blue
        add add 64 idiv      % I = .5G + .31R + .18B
        put
        /rgbindx rgbindx 3 add store
      } for
      grays 0 npixls getinterval
    } bind def

    % Utility procedure for colorimage operator.
    % This procedure takes two procedures off the
    % stack and merges them into a single procedure.

    /mergeprocs { % def
      dup length
      3 -1 roll
      dup
      length
      dup
      5 1 roll
      3 -1 roll
      add
      array cvx
      dup
      3 -1 roll
      0 exch
      putinterval
      dup
      4 2 roll
      putinterval
    } bind def

    /colorimage { % def
      pop pop     % remove 'false 3' operands
      {colortogray} mergeprocs
      image
    } bind def
  } ifelse          % end of 'false' case



% define the colormap
/cmap 117 string def


% load up the colormap
currentfile cmap readhexstring
bcfe04 dcfe84 ccfe44 ecfec4 c4fe24 d4fe64 f4fee4 e4fea4 bcfe14 ccfe54 
f4fed4 c4fe34 d4fe74 fcfef4 ecfeb4 e4fe94 f4fecc fcfee4 ecfeac c4fe1c 
d4fe54 ccfe3c dcfe74 bcfe0c dcfe8c ccfe4c ecfecc c4fe2c d4fe6c e4feac 
bcfe1c f4fedc c4fe3c fcfefc ecfebc e4fe9c fcfeec d4fe5c dcfe7c 
pop pop   % lose return values from readhexstring


% rlecmapimage expects to have 'w h bits matrix' on stack
/rlecmapimage {
  /buffer 1 string def
  /rgbval 3 string def
  /block  384 string def

  % proc to read a block from file, and return RGB data
  { currentfile buffer readhexstring pop
    /bcount exch 0 get store
    bcount 128 ge
    {  % it's a non-run block
      0 1 bcount 128 sub
      { currentfile buffer readhexstring pop pop

        % look up value in color map
        /rgbval cmap buffer 0 get 3 mul 3 getinterval store

        % and put it in position i*3 in block
        block exch 3 mul rgbval putinterval
      } for
      block  0  bcount 127 sub 3 mul  getinterval
    }

    { % else it's a run block
      currentfile buffer readhexstring pop pop

      % look up value in colormap
      /rgbval cmap buffer 0 get 3 mul 3 getinterval store

      0 1 bcount { block exch 3 mul rgbval putinterval } for

      block 0 bcount 1 add 3 mul getinterval
    } ifelse
  } % end of proc
  false 3 colorimage
} bind def


950 50 8			% dimensions of data
[950 0 0 -50 0 50]		% mapping matrix
rlecmapimage

7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f210221870d1f220e220311212a21
7f217f217f217f217f217f2175218211030e820e220e820e220e860e220e23050b048404
090e24212a21
7f217f217f217f217f217f2171218e110312260b041e131e131e131e131e871e17001702
1d24212c21
7f217f217f217f217f217f216921830d1f220e870e221226200408000b00841702070d21
0521842403100d212321
7f217f217f217f217f217f2121218524220f231f213a218f0d0a220e220e23051b041e13
1e0817000c008408190706210421851103221f0d212521
7f217f217f217f217f217f211e2189240e1c1b17000825242136218a0d1026021b041e13
081700110085172001030d210421840316030d212821
7f217f217f217f217f21342186111a120f070a215721860d1110220e220e860e12182504
17000300821b1f212521851f0e2326230e080e841d010908001100820820090209840c1d
1a06210521841026230d212a21
7f217f217f217f21792186241f10220e220e820e220e820e220e820e220e820e220e820e
220e830e070f01010182070a2117218b0610231c1508001708090a2151218e0d1f101d01
14201b1e131e131e08000700820c0d211021840d100311210921881103220e07050b0800
8400171e081e821e081e851e081e0817001000851e2009181a210b21850d22261d24212c
21
7f217f217f217f21472184241f10220e820e220e820e220e820e220e820e220e820e220e
820e220e810e2283221f0d210e219a241f10070f1c09151e041e131e131e131e131e131e
131e131e131e821e080002008b17081410210d1110220e220e820e220e820e220e010e81
2301880126012616191b08000500820422212f2182240d211921890d0a0e072625150417
00100082201a210921890d1110220e23011620048304051f210421891103231c15131e08
1700190082171e090309820c1a210e21841f0e0a0d212e21
7f217f217f217f213f2190241f100e070f011c1920041e131e081e0882081e0882081e08
82081e0882081e0803088304250a2107218b241f030e12181619151e08001d00811e268c
2614201b041e131e131e131e088108178117000f0082091f211521840d0610220e0f0e88
120f012625020c11211321890d0a22121809040817001300831e050a2105218a0d1f101d
0114201b1e170004008408260e220e860e230c020417001800821e2009020982181a2114
21810d213321
7f211221842422121f217f217f217f211221850d0a220e220e820e220e820e220e820e22
0e010e881d0f1605090b041e178117001a008f1e22210d1110221d0f0116190b041e1781
1700220001171f00820b2221102189111022120f0125151b1e011e81081e821e081e821e
081e821e081e821e081e821e1700030082171c0e110e861d01251b1e170015008220181d
021d81220e020e86070119150417000b0086081e131e08170019008308091d210c21830d
1f24214121
7f210721830d0a220e040e83230504088308052421492185240a22230f01130182070a21
7f2106218c240a03220e220e220e220e1d0f840f01231f217f210a2199240a221d0f0116
191b1e131e131e131e131e131e131e131e17002300810b16871609200413081700490087
171e051d1f10220e0a0e8712232625201b1e178117001b000108011e81081e821e081e82
1e081e821e081e821e081e831e0817000c0085171e201e08000300831720090c840c090b
1b1e871e081e081e0817001f0083081e201e821e20090809820c03210b21860d0a222307
0d210521010d3a21
7f21042188112218141b13081e088108178117000300821b1f2140218b241f100e070f1c
25021b1317811700140083081410217f218c241f10070f05021b04131e131e011e810817
811700010093170207220e220e220e220e220e220e22120f18018301231f216e218c0d0a
22120f0116191b130817004c000117811e208120090509822008002c008308200c188518
0c09021b1e821e081e821e081e821e081e811e08810817811700400081171e871e09181a
061c08000300851e200b1e1700250083171e200983091806211721820d110a010a841d26
1918214421
6c219a1103220e220e220e220e220e220e220e220e220e22120f050b08000d0093091d22
0e220e220e220e220e220e220e2203112127218c241f100e070f0105021b1e08001e0082
0422216a2189241f10220e230f1826018201260182012601890126160509150408170011
0085131e131e131e821e131e831e131e0882081700020083082524215e2183240a220e82
0e220e8b0e22120f011605190b1308178117004d008817081e2009181d06210821810900
22000408071e0117510085080b09181a21022182060900040082081700120082171e000f
00011e83091806210d21821a031d8e1d221d221d0e22030a110d240d240d810d21012182
2406214521
68219711030f252004131e131e131e131e131e131e131e131e131e821e08001100011e83
131e131e821e131e821e131e821e131e811e1383131c1f211e218d0d1110221d0f260519
0b041e17002500821b0c0103018426161c05250b258405160f1d0e210e82070f26012681
0126822601268426010f1f2117218a241f100e070f1609150408820817003900821b1f21
56218a0a0f0c2514190215041e0801088217081701173400011781001781170016000117
011e85200c181d06210e218105000d0083171e08000c00011781081e041e020802171e00
82081e208120090d0982201e001b00850820090c1a210721821817000b008b081e200920
1920192009200986090c1d1a060900030083171e20090209010c83181a0621082187060a
0e1d071d0e1d821d0f1802180107841d220a24215221
1d21830d1f220e820e220e820e220e820e220e860e220e221024212321840d10230f010a
01852616091b08003b00820812210421830d1f102281220e820e220e820e220e820e220e
820e220e820e220e890e1d0f011609201b1317811700470081081e821e081e821e081e82
1e081e821e081e821e081e821e081e821e081e821e081e821e081e821e081e841e081e08
000a0083170b260182012601820126018201260182012601820126018a01260126160525
19151b088108004200820c0d21032196240a03220e220e220e220e220e220e220e220e22
0e1d0f810f01150182231f210921840d0610220e0e0e8418140417002100821720090409
822017002c008317081e208520090c1d1a211621821a201e811e20832009200982092009
86092009181a0c003400011e8520090c181a211221831a0c200982092009820920091109
830c1a06210a2182062000080087082009181a0621060206812106810621052183061d0c
0984090c181d1a011a02060e21820d062482240d216021
1c21970d0702041e131e131e131e131e131e131e0420050f100d211f21840d231b17004d
00a008182212230f011609151b131e131e131e131e131e131e131e131e131e130817001b
0083170017007f0041008c201a241f10070f1c021b04131e821e131e821e131e821e131e
821e131e011e810817811700160001178205112101218a111022120f181614151b1e821e
081e821e081e821e081e821e081e821e0817811700250082090621032182060900260088
17081e20090c1d1a212e2183062017001f008317081e208120090a09830c181a21442183
240917008300081e2001208409181a0621142183061a1d1a841a062106217721
1b21830d071b000f008517080b05230e8f0e220e220e220e220e220e220e220e22842210
110d210821830d231e004f00841e041e08178117007f0065008117000e000108011e8720
0c16090b1e08003000880401181614201b1e178117003a00822006210421820620001f00
81171e861e20090c1d1a213521820609001700011788081e20090c181a0621492184060a
101a1086101a10110d210d880d061a180c09181a0601067f211b21
1b21820a1900140081081e821e131e821e131e821e131e821e131e8d1e131e13040b1925
1812221f0d210321820a20007f007f0033000108160081081e031e820817003600811700
40008308091a2106218203091e031e8120091609830c1d1a213d21821f01091409840c18
1a06214e21010d0124010685240624060d210321850a26012206217f211f21
1b21831020170029008c1708040b021925051626051e007f002f000d1782081e20812009
1e0982201e00370081171e811e208120090c0982181d0683061808007900011781081e07
1e8120090e09820c1d217f216721820611217f212221
1b21830d0e0c090c0982201e004d00820817002a000217011e8120090c09811e00380082
17081e851e090c181a068306210621822106218221062182210621822106212521821a0c
09010982201e002700011781081e811e2085200c181d06211321821a200022000117011e
82091e0035008317081e20812009090982201e0002008608091a062106217f215521810d
217f215321
2d21851a0c201e17004300850820090c1a068206200022008317081e208620090c181d1a
210f21821d08002e000117021e0120840c181a06214221821d0c09250983181d06211c21
821a20001c008817081e2009181d062101218109002d0081171e871e20090c181a06210e
21851d09200c1a217f215a2182110d215321810d217d21
30218306180c090f0983201e08002500811e09820920090109830c1a062104218203201e
081e01201309810c1d821d1a21182182062000260081171e011e8620090c181a06217f21
1521830d1d0c091909840c181d06210721821a191e091e83200920098209200982092009
8209200982092009820920098209200982092009820920098209200985090c181a06217f
217621810d215121860d1026142510217c21
462185061d0c2017002000820906214e21820618098209200981092082201e178217081e
011e01201309840c181a06217f217f217f217f214421810d2401248306240d217d21
4a21841d201e0800150081081e041e820906217f217f217f217f217f217f214521
4e2185061a18201e000b0085171e091d06217f217f217f217f217f217f214e21
5221821a0c090909830c1d06217f217f217f217f217f217f215121
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521

%
% Compression made this file 2.88% of the uncompressed size.
%


showpage

% stop using temporary dictionary
end

% restore original state
origstate restore

%%Trailer

%%EndDocument
 @endspecial 5001 5222 a @beginspecial @setspecial
 tx@Dict begin STP newpath 1.0 SLW 0.5451 0.39608 0.03137 setrgbcolor
 /ArrowA { moveto } def /ArrowB { } def [ 341.43292 -28.45274 -22.76227
-28.45274  /Lineto /lineto load def false Line  gsave 1.0 SLW 0.5451
0.39608 0.03137 setrgbcolor 0 setlinecap stroke  grestore end
 
@endspecial
621 x Fi(SESC)20 b(\(IA)n(COMA)e(g)o(roup\))2960 b(Joe)20
b(Renau,)h(Basilio)e(F)m(r)o(aguela,)h(and)g(Liu)g(W)n(ei)39
b(\226)20 b(page)40 b(4/23)4266 1057 y
 gsave currentpoint currentpoint translate 270 neg rotate neg exch
neg exch translate
 4266 1057 a @beginspecial
276 @llx 366 @lly 336 @urx 426 @ury 141 @rwi 141 @rhi
@setspecial
%%BeginDocument: angleHG.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/rico/texte/texstyle/Prosper-beta/img/angleHG.ps
%%Creator: XV Version 3.10a  Rev: 12/29/94 (PNG patch 1.2)  -  by John Bradley
%%BoundingBox: 276 366 336 426
%%Pages: 1
%%DocumentFonts:
%%EndComments
%%EndProlog

%%Page: 1 1

% remember original state
/origstate save def

% build a temporary dictionary
20 dict begin

% define string to hold a scanline's worth of data
/pix 180 string def

% define space for color conversions
/grays 60 string def  % space for gray scale line
/npixls 0 def
/rgbindx 0 def

% print in landscape mode
90 rotate 0 -612 translate

% lower left corner
366 276 translate

% size of image (on paper, in 1/72inch coords)
59.97600 59.97600 scale

% define 'colorimage' if it isn't defined
%   ('colortogray' and 'mergeprocs' come from xwd2ps
%     via xgrab)
/colorimage where   % do we know about 'colorimage'?
  { pop }           % yes: pop off the 'dict' returned
  {                 % no:  define one
    /colortogray {  % define an RGB->I function
      /rgbdata exch store    % call input 'rgbdata'
      rgbdata length 3 idiv
      /npixls exch store
      /rgbindx 0 store
      0 1 npixls 1 sub {
        grays exch
        rgbdata rgbindx       get 20 mul    % Red
        rgbdata rgbindx 1 add get 32 mul    % Green
        rgbdata rgbindx 2 add get 12 mul    % Blue
        add add 64 idiv      % I = .5G + .31R + .18B
        put
        /rgbindx rgbindx 3 add store
      } for
      grays 0 npixls getinterval
    } bind def

    % Utility procedure for colorimage operator.
    % This procedure takes two procedures off the
    % stack and merges them into a single procedure.

    /mergeprocs { % def
      dup length
      3 -1 roll
      dup
      length
      dup
      5 1 roll
      3 -1 roll
      add
      array cvx
      dup
      3 -1 roll
      0 exch
      putinterval
      dup
      4 2 roll
      putinterval
    } bind def

    /colorimage { % def
      pop pop     % remove 'false 3' operands
      {colortogray} mergeprocs
      image
    } bind def
  } ifelse          % end of 'false' case



60 60 8			% dimensions of data
[60 0 0 -60 0 60]		% mapping matrix
{currentfile pix readhexstring pop}
false 3 colorimage

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffafee3effeaaffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffafee3e3fe64ffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffe3fe64fafee3ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffe9fe88f1feb3ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffe8fe86dffe55fefefeffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffebfe96dafe37fefefeffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffedfe9edefe48f7fed5ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffedfe9ee2fe60eefea5f5fecaecfe95ecfe97ecfe98
ecfe99ecfe9bf6feceffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffeffeaadffe4fe0fe55dcfe3f
dbfe3cdbfe3ddbfe3dddfe48defe4cdcfe43d9fe32d6fe20e2fe5fe3fe67defe4ddefe4d
defe4edefe4edbfe3bdbfe3cdcfe3ddcfe3fdcfe40dcfe42ddfe43ddfe45ddfe46ddfe48
ddfe46e2fe63e5fe72e5fe74e6fe76e6fe77e6fe79e7fe7ae9fe86e8fe85ebfe94ecfe97
ecfe99ecfe9cedfe9eeffeacf2febcf3febef3fec1f4fec4f9fedfffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffeffeaaf1feb3f5fec7e9fe87
e7fe7be7fe7be7fe7be2fe60e1fe5bd6fe1dd8fe2adafe33e1fe5bdffe54defe4edffe50
dffe51dffe53e0fe54ddfe49ddfe4bdefe4cdefe4edefe50dffe52dffe54e5fe73eafe93
e9fe89e6fe7ae4fe6ce4fe6ee8fe84e8fe85e9fe87e9fe8ae8fe84e7fe7ce8fe81e9fe8a
f0feb0f8fedbf9fedff1feb8f1febaeafe8bfbfeeafbfeebfdfef5ffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff5fecddffe52e1fe5df5fec9f5fec9f5fecaf5feca
f5fecbf5feccf5feccf5fecdf6fecef6fecef6fecef6fecff6fed0f6fed1eefea5e9fe8a
f6fed1f7fed7f7fed8f7fed9f6fecdfafee8fcfef1fcfef2fdfef7fcfef3fdfef7fefefc
fefefcfefefdf9fee0f6fecff5feccf4fec2ffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff5fecde3fe64e5fe74ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffdfef5fefefdfefefdfefefcfefefcfffffffefef9
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff5fecde5fe74dffe53ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff6fecee6fe79e5fe6ff8fed8ffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff6fecee6fe7aebfe95effeaaffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff6fecee6fe7aedfe9eeefea2ffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff6fecee6fe7bedfe9eeefea3ffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff6fecfe6fe78ecfe9eeefea5ffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffefefe
fefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff6fed0e2fe63e0fe59dffe55ffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffefefe
fefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffedfe9fe2fe5fd8fe2ad8fe2dffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffecfe9adffe53d6fe1cdefe4cf6fecfffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffedfe9cd8fe2cd6fe20defe4bf6fed0ffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffefefdffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffedfe9dd8fe27d7fe22defe4ef6fed0ffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffedfe9dd7fe26d6fe20e0fe5bf6fed2ffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff3febdd7fe22d7fe22e1fe5ef7fed3ffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff4fec6d6fe20d7fe21e0fe57f7fed4ffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff4fec6d6fe20d6fe1fe0fe59f7fed5ffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff4fec6d6fe1ed6fe1ee5fe73f7fed6ffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff4fec6d6fe1dd9fe32e0fe56ffffffffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff5fecce0fe55defe48e8fe81ffffffffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffbfeede7fe7fe0fe56e9fe85ffffffffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff7fed8e8fe84e7fe7ef1feb4ffffffffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff2feb8edfea0effea6f1feb6ffffffffffffffffff
fffffffefefefefefeffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffefefceffeabf0feafeffea7f2feb7ffffffffffffffffff
fffffffefefefefefefefefeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffefefcf5fecaecfe9de7fe7af8feddffffffffffffffffff
fffffffefefefefefefefefefefefeffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffefefcf5fecce8fe85e8fe80ffffffffffffffffffffffff
fffffffefefefefefefefefeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffff8fedefdfef8fdfefbf3fec0e9fe89ecfe96ffffffffffffffffffffffff
fefefefefefefefefefefefeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffdfef6fefefafefefaf4fec2e9fe89ecfe96ffffffffffffffffffffffff
fefefefefefefefefefefefeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffdfef6fefefefefefdf4fec2e8fe85edfe9dffffffffffffffffffffffff
fefefefefefefefefefefefeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffefef9fefefdfefefce7fe7be5fe76f2feb7ffffffffffffffffffffffff
fffffffffffffefefefefefeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffdfef6fdfefafefefbe2fe65e5fe75f6fed0ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffdfef9fefefce6fe79e6fe77fafee6ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffcfef6fefefbecfe9be7fe7efbfeecffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffdfef5fdfef7f7fed5e9fe8dfcfef2ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffcfeeffbfeebedfea1fdfef7ffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffefefeffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffefefdfbfee9effeabffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffefefefefefeffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffbfeeceffea6ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff9fee3f3fec1ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffeefea2f8fedaffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff1feb2fafee4ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffcfef0fefefaffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff


showpage

% stop using temporary dictionary
end

% restore original state
origstate restore

%%Trailer

%%EndDocument
 @endspecial 4511 1057 a
 currentpoint grestore moveto
 4511 1057 a 4130 5844 a
 currentpoint currentpoint translate 0.76611 0.76611 scale neg exch
neg exch translate
 4130
5844 a 4130 5844 a
 gsave currentpoint currentpoint translate 0 neg rotate neg exch neg
exch translate
 4130 5844 a @beginspecial 0 @llx 0
@lly 37 @urx 42 @ury 370 @rwi @setspecial
%%BeginDocument: figs/uiuc.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: uiuc.eps
%%Creator: fig2dev Version 3.2 Patchlevel 3d
%%CreationDate: Sun Feb 10 22:03:46 2002
%%For: renau@nether.cs.uiuc.edu (Jose Renau)
%%BoundingBox: 0 0 37 42
%%Magnification: 1.0000
%%EndComments
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def
/col32 {0.200 0.200 0.400 srgb} bind def
/col33 {0.800 0.400 0.000 srgb} bind def

end
save
newpath 0 42 moveto 0 0 lineto 37 0 lineto 37 42 lineto closepath clip newpath
-273.7 413.7 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
 0.06000 0.06000 sc
%
% Fig objects follow
%
%  polyline 
% Polyline
n 5070 6872 m 5070 6227 l 4584 6227 l 4584 6872 l
 5070 6872 l  cp gs col32 1.00 shd ef gr 
%  polyline 
% Polyline
15.000 slw
n 5070 6872 m 5070 6227 l 4584 6227 l 4584 6872 l
 5070 6872 l  cp gs col32 s gr 
%  polyline 
% Polyline
0.000 slw
n 5056 6858 m 5056 6243 l 4598 6243 l 4598 6858 l
 5056 6858 l  cp gs col32 1.00 shd ef gr 
%  polyline 
% Polyline
7.500 slw
n 5056 6858 m 5056 6243 l 4598 6243 l 4598 6858 l
 5056 6858 l  cp gs col33 s gr 
%  spline 
% Polyline
2 slj
0.000 slw
n 4944 6783 m 4944 6781 l 4944 6773 l 4944 6759 l 4944 6751 l 4944 6749 l
 4943 6749 l 4935 6748 l 4924 6746 l 4914 6744 l 4906 6742 l
 4900 6741 l 4896 6739 l 4892 6738 l 4887 6735 l 4884 6732 l
 4880 6728 l 4877 6722 l 4875 6716 l 4873 6709 l 4872 6702 l
 4871 6693 l 4870 6683 l 4869 6670 l 4869 6654 l 4868 6637 l
 4868 6621 l 4868 6609 l 4868 6604 l 4868 6603 l 4868 6602 l
 4868 6597 l 4868 6585 l 4868 6567 l 4868 6544 l 4868 6521 l
 4868 6503 l 4868 6491 l 4868 6486 l 4868 6485 l 4868 6483 l
 4868 6474 l 4868 6457 l 4869 6438 l 4869 6420 l 4870 6406 l
 4870 6395 l 4871 6387 l 4873 6381 l 4874 6375 l 4876 6371 l
 4879 6367 l 4882 6365 l 4885 6363 l 4889 6362 l 4892 6361 l
 4898 6359 l 4905 6358 l 4915 6356 l 4925 6354 l 4933 6352 l
 4934 6352 l 4934 6350 l 4934 6343 l 4934 6331 l 4934 6324 l
 4934 6322 l 4933 6322 l 4928 6322 l 4916 6322 l 4896 6322 l
 4869 6322 l 4837 6322 l 4806 6322 l 4779 6322 l 4759 6322 l
 4747 6322 l 4742 6322 l 4741 6322 l 4740 6322 l 4737 6322 l
 4732 6322 l 4729 6322 l 4726 6322 l 4724 6322 l 4721 6323 l
 4718 6324 l 4716 6325 l 4714 6326 l 4712 6327 l 4710 6329 l
 4707 6332 l 4705 6334 l 4703 6336 l 4701 6338 l 4700 6339 l
 4699 6341 l 4698 6342 l 4697 6344 l 4696 6346 l 4696 6347 l
 4695 6349 l 4695 6351 l 4695 6353 l 4694 6356 l 4694 6358 l
 4694 6359 l 4694 6360 l 4694 6362 l 4694 6365 l 4694 6367 l
 4695 6369 l 4695 6370 l 4696 6372 l 4697 6374 l 4697 6375 l
 4698 6377 l 4699 6378 l 4701 6379 l 4702 6381 l 4704 6383 l
 4706 6385 l 4708 6386 l 4709 6388 l 4710 6389 l 4712 6389 l
 4713 6390 l 4715 6391 l 4716 6391 l 4718 6391 l 4720 6391 l
 4721 6391 l 4724 6391 l 4726 6391 l 4727 6391 l 4729 6391 l
 4732 6390 l 4735 6390 l 4737 6389 l 4740 6388 l 4742 6387 l
 4744 6385 l 4747 6383 l 4748 6381 l 4749 6379 l 4750 6376 l
 4751 6372 l 4752 6369 l 4752 6368 l 4752 6366 l 4752 6364 l
 4752 6362 l 4752 6361 l 4752 6359 l 4752 6358 l 4751 6357 l
 4751 6356 l 4750 6355 l 4749 6354 l 4749 6353 l 4748 6352 l
 4747 6351 l 4746 6350 l 4745 6349 l 4744 6348 l 4743 6348 l
 4742 6347 l 4741 6346 l 4740 6346 l 4739 6346 l 4738 6346 l
 4736 6345 l 4735 6345 l 4733 6345 l 4732 6345 l 4730 6345 l
 4729 6345 l 4728 6346 l 4727 6346 l 4725 6346 l 4724 6347 l
 4724 6348 l 4723 6348 l 4722 6349 l 4721 6351 l 4720 6352 l
 4719 6353 l 4718 6354 l 4718 6355 l 4717 6356 l 4717 6357 l
 4717 6358 l 4716 6359 l 4717 6360 l 4717 6361 l 4717 6362 l
 4717 6363 l 4718 6364 l 4718 6365 l 4719 6366 l 4719 6367 l
 4720 6367 l 4720 6368 l 4721 6368 l 4722 6369 l 4723 6369 l
 4723 6368 l 4724 6368 l 4725 6368 l 4726 6367 l 4727 6367 l
 4727 6366 l 4728 6366 l 4728 6365 l 4729 6365 l 4729 6364 l
 4729 6363 l 4729 6362 l 4729 6361 l 4728 6360 l 4728 6359 l
 4729 6359 l 4729 6358 l 4730 6357 l 4731 6357 l 4731 6356 l
 4732 6356 l 4733 6356 l 4734 6356 l 4735 6356 l 4735 6357 l
 4736 6357 l 4737 6357 l 4738 6357 l 4738 6358 l 4739 6358 l
 4739 6359 l 4739 6360 l 4740 6360 l 4740 6361 l 4740 6362 l
 4741 6362 l 4741 6363 l 4741 6364 l 4740 6364 l 4740 6365 l
 4740 6366 l 4740 6368 l 4739 6371 l 4739 6373 l 4738 6374 l
 4737 6375 l 4736 6376 l 4735 6377 l 4733 6378 l 4732 6379 l
 4731 6379 l 4729 6379 l 4727 6380 l 4725 6380 l 4724 6380 l
 4722 6380 l 4721 6380 l 4720 6380 l 4719 6380 l 4718 6380 l
 4717 6379 l 4716 6379 l 4715 6379 l 4715 6378 l 4714 6377 l
 4713 6376 l 4712 6375 l 4711 6374 l 4710 6373 l 4710 6372 l
 4709 6372 l 4708 6371 l 4708 6370 l 4707 6369 l 4707 6368 l
 4707 6367 l 4706 6365 l 4706 6363 l 4706 6361 l 4706 6359 l
 4706 6357 l 4706 6355 l 4706 6353 l 4706 6352 l 4707 6351 l
 4707 6350 l 4707 6348 l 4708 6347 l 4709 6346 l 4709 6345 l
 4710 6344 l 4712 6343 l 4713 6342 l 4715 6340 l 4717 6339 l
 4718 6337 l 4720 6337 l 4721 6336 l 4723 6335 l 4725 6334 l
 4727 6334 l 4729 6334 l 4731 6333 l 4734 6333 l 4738 6333 l
 4740 6333 l 4741 6333 l 4742 6333 l 4744 6333 l 4747 6333 l
 4753 6333 l 4759 6333 l 4767 6333 l 4776 6333 l 4785 6333 l
 4794 6333 l 4802 6333 l 4809 6333 l 4815 6333 l 4822 6333 l
 4827 6333 l 4828 6333 l 4828 6334 l 4828 6337 l 4828 6341 l
 4828 6344 l 4828 6345 l 4826 6345 l 4816 6345 l 4797 6345 l
 4779 6345 l 4769 6345 l 4767 6345 l 4766 6345 l 4765 6345 l
 4764 6346 l 4763 6346 l 4762 6347 l 4762 6348 l 4761 6349 l
 4761 6350 l 4761 6351 l 4761 6352 l 4761 6353 l 4761 6354 l
 4761 6355 l 4762 6356 l 4762 6357 l 4763 6358 l 4764 6359 l
 4765 6359 l 4766 6359 l 4767 6359 l 4769 6359 l 4779 6359 l
 4798 6359 l 4816 6359 l 4826 6359 l 4828 6359 l 4828 6360 l
 4828 6362 l 4828 6367 l 4828 6369 l 4828 6370 l 4826 6370 l
 4817 6370 l 4799 6370 l 4782 6370 l 4773 6370 l 4771 6370 l
 4770 6370 l 4769 6370 l 4768 6370 l 4767 6371 l 4766 6371 l
 4766 6372 l 4765 6373 l 4765 6374 l 4765 6375 l 4765 6376 l
 4765 6377 l 4766 6378 l 4766 6379 l 4767 6380 l 4768 6381 l
 4769 6381 l 4770 6381 l 4771 6381 l 4773 6381 l 4782 6381 l
 4800 6381 l 4817 6381 l 4826 6381 l 4828 6381 l 4828 6384 l
 4828 6391 l 4828 6404 l 4828 6423 l 4828 6449 l 4828 6480 l
 4828 6516 l 4828 6554 l 4828 6592 l 4828 6628 l 4828 6659 l
 4828 6685 l 4828 6704 l 4828 6717 l 4828 6724 l 4828 6727 l
 4827 6727 l 4819 6727 l 4802 6727 l 4780 6727 l 4757 6727 l
 4740 6727 l 4732 6727 l 4731 6727 l 4730 6727 l 4729 6727 l
 4728 6727 l 4727 6728 l 4726 6728 l 4726 6729 l 4726 6730 l
 4725 6730 l 4725 6731 l 4725 6732 l 4725 6733 l 4725 6734 l
 4725 6735 l 4725 6736 l 4725 6737 l 4726 6738 l 4726 6739 l
 4727 6739 l 4727 6740 l 4728 6740 l 4729 6740 l 4730 6740 l
 4731 6740 l 4732 6740 l 4740 6740 l 4757 6740 l 4780 6740 l
 4802 6740 l 4819 6740 l 4827 6740 l 4828 6740 l 4828 6741 l
 4828 6745 l 4828 6750 l 4828 6754 l 4828 6755 l 4827 6755 l
 4822 6755 l 4811 6755 l 4792 6755 l 4770 6755 l 4748 6755 l
 4729 6755 l 4718 6755 l 4713 6755 l 4712 6755 l 4710 6755 l
 4707 6755 l 4706 6756 l 4704 6756 l 4703 6757 l 4702 6758 l
 4701 6759 l 4700 6760 l 4699 6761 l 4699 6763 l 4698 6764 l
 4698 6767 l 4698 6769 l 4698 6770 l 4698 6773 l 4698 6779 l
 4698 6782 l 4698 6783 l 4699 6783 l 4703 6783 l 4713 6783 l
 4730 6783 l 4755 6783 l 4786 6783 l 4821 6783 l 4856 6783 l
 4887 6783 l 4912 6783 l 4929 6783 l 4939 6783 l 4943 6783 l

 4944 6783 l  cp gs col7 1.00 shd ef gr 
%  spline 
% Polyline
n 4783 6706 m 4783 6705 l 4783 6702 l 4783 6693 l 4783 6678 l 4783 6656 l
 4783 6626 l 4783 6592 l 4783 6555 l 4783 6517 l 4783 6483 l
 4783 6453 l 4783 6431 l 4783 6416 l 4783 6407 l 4783 6404 l
 4783 6403 l 4783 6402 l 4783 6401 l 4783 6400 l 4782 6400 l
 4782 6399 l 4781 6399 l 4781 6398 l 4780 6398 l 4779 6398 l
 4778 6398 l 4777 6398 l 4776 6398 l 4775 6398 l 4774 6399 l
 4773 6399 l 4773 6400 l 4772 6401 l 4772 6402 l 4772 6403 l
 4772 6404 l 4772 6407 l 4772 6416 l 4772 6431 l 4772 6453 l
 4772 6483 l 4772 6517 l 4772 6555 l 4772 6592 l 4772 6626 l
 4772 6656 l 4772 6678 l 4772 6693 l 4772 6702 l 4772 6705 l
 4772 6706 l 4772 6707 l 4772 6708 l 4773 6709 l 4773 6710 l
 4774 6711 l 4775 6712 l 4776 6712 l 4777 6712 l 4778 6712 l
 4779 6712 l 4780 6712 l 4781 6712 l 4781 6711 l 4782 6711 l
 4782 6710 l 4783 6709 l 4783 6708 l 4783 6707 l
 4783 6706 l  cp gs col7 1.00 shd ef gr 
%  spline 
% Polyline
n 4813 6705 m 4813 6704 l 4813 6701 l 4813 6692 l 4813 6677 l 4813 6655 l
 4813 6626 l 4813 6592 l 4813 6555 l 4813 6518 l 4813 6484 l
 4813 6455 l 4813 6433 l 4813 6418 l 4813 6409 l 4813 6406 l
 4813 6405 l 4813 6404 l 4813 6402 l 4813 6401 l 4812 6400 l
 4811 6399 l 4811 6398 l 4810 6398 l 4809 6398 l 4808 6397 l
 4807 6397 l 4806 6397 l 4805 6397 l 4804 6397 l 4803 6397 l
 4802 6397 l 4801 6398 l 4800 6398 l 4799 6399 l 4799 6400 l
 4798 6401 l 4798 6402 l 4798 6404 l 4798 6405 l 4798 6406 l
 4798 6409 l 4798 6418 l 4798 6433 l 4798 6455 l 4798 6484 l
 4798 6518 l 4798 6555 l 4798 6592 l 4798 6626 l 4798 6655 l
 4798 6677 l 4798 6692 l 4798 6701 l 4798 6704 l 4798 6705 l
 4798 6706 l 4798 6707 l 4798 6708 l 4799 6709 l 4799 6710 l
 4799 6711 l 4800 6711 l 4801 6712 l 4802 6713 l 4803 6713 l
 4804 6713 l 4805 6713 l 4806 6713 l 4807 6713 l 4808 6713 l
 4809 6712 l 4810 6712 l 4811 6711 l 4812 6710 l 4812 6709 l
 4813 6708 l 4813 6707 l 4813 6706 l
 4813 6705 l  cp gs col7 1.00 shd ef gr 
%  polyline 
% Polyline
0 slj
n 5136 6864 m 5124 6864 l 5124 6894 l 5119 6894 l 5119 6864 l 5108 6864 l
 5108 6860 l 5136 6860 l
 5136 6864 l  cp gs col32 1.00 shd ef gr 
%  polyline 
% Polyline
n 5172 6894 m 5167 6894 l 5167 6867 l 5157 6880 l 5156 6880 l 5146 6867 l
 5145 6867 l 5145 6894 l 5141 6894 l 5141 6860 l 5145 6860 l
 5156 6874 l 5168 6860 l 5172 6860 l
 5172 6894 l  cp gs col32 1.00 shd ef gr 
$F2psEnd
rs

%%EndDocument
 @endspecial 4769 5844 a
 currentpoint grestore moveto
 4769 5844 a 4130 5844 a
 currentpoint currentpoint translate 1 0.76611 div 1 0.76611 div scale
neg exch neg exch translate
 4130
5844 a 5001 3450 a
SDict begin H.S end
 5001 3450 a 5001 3450 a
SDict begin H.R end
 5001 3450
a 5001 3450 a
SDict begin [ /View [/XYZ H.V] /Dest (page.1) cvn H.B /DEST pdfmark
end
 5001 3450 a 5001 3450 a
SDict begin [ {ThisPage} << /Trans << /S /Replace >> >> /PUT pdfmark
end
 5001 3450 a 5001
3450 a
SDict begin [ /Page 4/View [ /XYZ null null null ] /Title (Objective)
/OUT pdfmark end
 5001 3450 a 8565 1453 a Fm(O)18 b Fn(B)g(J)g(E)g(C)g(T)g(I)g(V)g
(E)4649 2152 y @beginspecial 276 @llx 376 @lly 336 @urx
416 @ury 113 @rwi @setspecial
%%BeginDocument: green-bullet-on-white.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/fred/TeX/STYLES/Prosper/img/green-bullet-on-white.ps
%%Creator: XV Version 3.10a+FLmask  Rev: 12/29/94  -  by John Bradley
%%BoundingBox: 276 376 336 416
%%Pages: 1
%%DocumentFonts:
%%EndComments
%%EndProlog

%%Page: 1 1

% remember original state
/origstate save def

% build a temporary dictionary
20 dict begin

% define space for color conversions
/grays 60 string def  % space for gray scale line
/npixls 0 def
/rgbindx 0 def

% lower left corner
276 376 translate

% size of image (on paper, in 1/72inch coords)
59.97600 40.03200 scale

% define 'colorimage' if it isn't defined
%   ('colortogray' and 'mergeprocs' come from xwd2ps
%     via xgrab)
/colorimage where   % do we know about 'colorimage'?
  { pop }           % yes: pop off the 'dict' returned
  {                 % no:  define one
    /colortogray {  % define an RGB->I function
      /rgbdata exch store    % call input 'rgbdata'
      rgbdata length 3 idiv
      /npixls exch store
      /rgbindx 0 store
      0 1 npixls 1 sub {
        grays exch
        rgbdata rgbindx       get 20 mul    % Red
        rgbdata rgbindx 1 add get 32 mul    % Green
        rgbdata rgbindx 2 add get 12 mul    % Blue
        add add 64 idiv      % I = .5G + .31R + .18B
        put
        /rgbindx rgbindx 3 add store
      } for
      grays 0 npixls getinterval
    } bind def

    % Utility procedure for colorimage operator.
    % This procedure takes two procedures off the
    % stack and merges them into a single procedure.

    /mergeprocs { % def
      dup length
      3 -1 roll
      dup
      length
      dup
      5 1 roll
      3 -1 roll
      add
      array cvx
      dup
      3 -1 roll
      0 exch
      putinterval
      dup
      4 2 roll
      putinterval
    } bind def

    /colorimage { % def
      pop pop     % remove 'false 3' operands
      {colortogray} mergeprocs
      image
    } bind def
  } ifelse          % end of 'false' case



% define the colormap
/cmap 723 string def


% load up the colormap
currentfile cmap readhexstring
041808 049008 8c948c 045204 4c544c 04c804 84e284 449644 c4cbc4 0c380e 
04ac07 cce6cc 345e2c e4e7e4 046604 2c3a2c 347234 e4fee2 048208 64cc60 
34922c 24b224 04e404 044604 647264 242623 049f07 8cae8c 04bc06 24c61c 
f4f8f3 1c541c 04d804 1c621c 1c7220 0c280d 14910f 045e04 047c04 ccdcd0 
14ac18 1c481c 747473 04d105 0c6c0b 24852a 1c381c f4f1f3 acafac f4fef5 
0c310c acc6ac 049708 a4a4a3 3c4a44 148314 144812 9cea94 04b405 149e14 
1cbc1c 044004 e4fef4 dcdddd 748274 5c5959 4cba54 145b11 145413 147412 
c4fec4 e4f1e7 146411 088a0a 243028 09c207 fcf8f3 147c13 14c80e acceac 
3c3939 04f405 044e07 07a608 14d00f 0c1f10 0c900b d4d3d4 ecfee3 1c291d 
0c6e14 bcbfbd d4f6d4 909a94 4c5a50 0cac08 24ba24 547e54 0cbc0a 0c5c16 
0c7c0b fcf1fb acb8ac 1c311c aca7a9 e2e2e2 a4e2a4 0cc80a 6c9a6c 143715 
0c650a 0c840b 07de06 14970c 0c980a 0cb40a 848583 ecf0f0 c3c6c3 0c540d 
0c740c cccccc 74ce6c 30a02c 04ec05 54aa5c 6cb66c 9cfa9c 2c862c 5c926c 
6ca674 b4deac 9cda9c 34aa2c 6c7e6c acfeac 448244 34d22c 7d7d7c 6c6d6c 
445644 4c4d4c 1c7a19 1c3e1c 3c3f3c 2c422c 7c9a84 54c254 dceadc 144014 
343231 bccebc bcbabc 447244 6c6664 9c9d9c 7caa7c 349a38 6c7a74 84b69c 
1c4e18 898a89 ccfadc 1c6c2c b8e2c0 1c8a24 a1aaa1 3c4e3c 5f5e5c d8fed8 
24be24 78d670 688668 148a14 14a618 145624 0c480e 2c292b 142916 1c921c 
d4dad9 243828 143017 b4d2bc b4b7b5 1c961c 8c868c 247e24 144e13 04fa04 
246224 fcfefc 0c4e0c ace2b4 3caa3c 244e24 0c180c 949394 545454 ece9ec 
343634 2cb127 6c736c 0ca00c 0cda08 0c5c0b 0ccf06 146a0c b4b2b4 646464 
b4c2b4 0c3f0c ecfdf9 e4dedc ccfdcc 2c2f2b 142214 146b16 c4c2c2 545b54 
2cb62c 74ba74 346634 b4fcb0 244224 444242 246a24 e4feec 0ce204 f4f9fc 
f4eefc 444744 54b654 fcf9fc 0c9114 dcd6d4 ecfeec 0c7b14 0cc614 0c6314 
0c8414 
pop pop   % lose return values from readhexstring


% rlecmapimage expects to have 'w h bits matrix' on stack
/rlecmapimage {
  /buffer 1 string def
  /rgbval 3 string def
  /block  384 string def

  % proc to read a block from file, and return RGB data
  { currentfile buffer readhexstring pop
    /bcount exch 0 get store
    bcount 128 ge
    {  % it's a non-run block
      0 1 bcount 128 sub
      { currentfile buffer readhexstring pop pop

        % look up value in color map
        /rgbval cmap buffer 0 get 3 mul 3 getinterval store

        % and put it in position i*3 in block
        block exch 3 mul rgbval putinterval
      } for
      block  0  bcount 127 sub 3 mul  getinterval
    }

    { % else it's a run block
      currentfile buffer readhexstring pop pop

      % look up value in colormap
      /rgbval cmap buffer 0 get 3 mul 3 getinterval store

      0 1 bcount { block exch 3 mul rgbval putinterval } for

      block 0 bcount 1 add 3 mul getinterval
    } ifelse
  } % end of proc
  false 3 colorimage
} bind def


60 40 8			% dimensions of data
[60 0 0 -40 0 40]		% mapping matrix
rlecmapimage

10bf8131bf05bf03e98165e902e9046587bf3158ec31bfe9658265e9bf09bf
10bf8131bf04bf81e9bf01bf02e98265bfe982e965e901e981bf318131ec82ecbfe982e9
65bf0abf
12bf82751ebf83bf1ebf318231ec3102318111318131bf81bfe901e981bf318131bf01bf
01e90bbf
0fbf02e901bf023101ec021101a981d6a981a9118111318131bf14bf
0fbf8165e901e988e5bfd4ecd66add07808c80149dc2137f46a911d431bfe981e9bf0fbf

0fbf01e982bfe9318331a49ce28fe2454d37562456dc71567bab87a9d4bf81bfe981e9bf
81bf318131bf0abf
10bf8ac775bf311bde43224d37568656cb535f1a733c893cae8506a91131bfe9bf01bf81
58bf0abf
0fbf911ebf31b761a0442245ed56721a530a3a4e3a813a4e864e73c94246e3bf10bf
07bf81e9bf82bfe9bf92bf1ebf31ec4f0c38e2ef8e4d49561a530a3a6283624b052b8a2b
ce4e60c2dfe331bf4cbf0cbf
0abf81e9bf82bfe9ec8eec83de1f21778e786f01341a0a3a1c851c4b052b20168b162054
aa93df11312fe965bf0abf
0ebf8d3111883d77cdcf78646f0134530a810a1c911c4ece20167c517c16542893a9ec31
e965bf0abf
08bf01e999bfe91ebf316cc07743cd45786f49561a530a3a624b6b2b707c510151877c70
4edcaba9bfe981e9bf0abf
0bbf01e985bf27d34352cf90cf0e4d2656011a530a1c62ee2b20167c5102518816cc1db9
d611bfe9bf0abf
07bf81e9bf01bf90e9bf4c86d3445277d92c786f49721a0a3a853a4b0520167c827c51bd
88bd5116e44b157a11bf0cbf
0dbf8d3f0fc33d4403cfbb0e3756011a0a860a624b2b20167c817c5102510116854b897b
a911bf0bbf
08bf82e9e5bf97bf75dab209bcc021ef254d2649561a533a1c4b052b70167c037c811620
85203a853911bf0bbf
0bbf0131869eb6d3b0bc7748884845646f561acb0a7382734b2b812b1683167c16cc01cc
012b844b2813d4bf0bbf
0abf0231955e236db0c04463cf45646f5634cb533a73624b2b2016821670548854ce2b20
4b28e831bf0bbf
0abf023183b5b6d3b089b044436e45786f49341a871a0a733a626b2b200120896b4e6b05
2b1c5f9decbf0bbf
09bf8131bf97bf31d82e09d3b044cd485a786f1201cb1a530a73621c052b852b054e4b1c
0585053a282d58bf0bbf
0bbf9431bf556709b03844cd482c7864125634cb1a5f0a7382734b0501050162011c854b
0aae2d58bf0bbf
0bbf0131934a236dd3b0bc7743485a786f1201341acb535f3a813a1c011c0173023a8453
3b1458bf0bbf
0bbf8431bf0455098309d338778277ef2c852c266f1201348134cb83cb530a3a013a810a
5f815f0a850a1ab37d58bf0bbf
08bf81e9bf93bf31bf18d83209d338c044cd6e0e2c64126f0172837271cb5382530a5383
53ae531a851a01a57e58bf0bbf
0bbf01e5837600230901098138c082c0482c862c7864126f49568156728272341a811a72
0272864912bb841131bf0abf
03bf94e9bfe9bfe9bf1ebf1ebf275923b632099538c044ef81ef7881786481646f816fad
84adea01ea560156882449ad2da3115831bf0abf
04bf02e992654ce61e75bf0d185523b66d0995bcc043cd2c812c7881786483646f64f001
f08b6f496f49642d6382e3314cbf0abf
01bf85e9e5e9652fc784c7693fc7698a69c7d2b200232eb60929bc84bc6343ef2c862c78
45784d78ed82ed6f6489644d45a3afa2114c31bf0abf
01e58175c783c769d5eb8ceb797679dab87908db67c4b66d876d9538b0447743ef84ef6e
2c78458e455a457864788ecfbe9fd4315831bf0abf
88e5750d3f5779da98d083d0689b3501358d5d0236c45567b6320995b04477cd92cdef6e
2c6e5ad95acf782c4517813e31bf2fbf0bbf
887569575bd0689bc5ba83ba8a2a8a878aca2a74db5955b284b23209d3b081b077017701
cd016e02ef876e2c6e4810a4d4bf01bf814cbf0abf
873f79b835c5ba2a9a829aa8410141868de1d104c690d881d85583552e6d958b9538b0c0
77cd03cd6377afcd84cd4321c1d483d4e9654c814cbf0abf
88575b9b742ad1418de181e15081509603968450c8d759d881d8b283b2326d0981099585
9538bcb0381f871f95c3995ca931bf81bfe981e9bf0bbf
8779b8c58ad1c6e750855096d7b119b104b184d7b119d855845523b2b66d016d83952995
2987296de09211d431bf01bf01e90cbf
8979d0c52aa88de15096b181b119041901b18796c80fd74a59b2b602b6016d86326d328f
ac0b318331bf31bf01bf81e9bf0cbf
88575b9b742ad1c68de186e1c850c850c850865096c850e1e70487045e8ca7912e672e85
2e8cac33473101318158bf02bf82e9bfe981e9bf0abf
8b3f799835c5742a8bd1a8dbc683c68dc68d818dc601c68cdbd1ca40a15da66697274711
31863158bf31bf31bf82bf4ce985e9bfe9bfe9bf0abf
8bc76957dab8359bc5a1748a2a052a018a01748b029ba6665b279447ec311ebf83bf581e
bf82bf4cbf02bf82e9bfe981e9bf0abf
881e75693f57795bb8d082d068350135029b0135013088b8985b7608b40d751e811ebf83
bf1e75bf81bf4c814cbf05bf81e9bf0bbf
83e9e52fc782c7693f823f5779817976027681da760276827957b482b4c7750175822fe5
bf82bf4cbf01bf814cbf81bfe981e9bf01bf01e90dbf

%
% Compression made this file 26.36% of the uncompressed size.
%


showpage

% stop using temporary dictionary
end

% restore original state
origstate restore

%%Trailer

%%EndDocument
 @endspecial 298 w Fg(P)-10 b(ar)n(ameters:)4983 2466
y @beginspecial 276 @llx 376 @lly 336 @urx 416 @ury 85
@rwi @setspecial
%%BeginDocument: green-bullet-on-white.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/fred/TeX/STYLES/Prosper/img/green-bullet-on-white.ps
%%Creator: XV Version 3.10a+FLmask  Rev: 12/29/94  -  by John Bradley
%%BoundingBox: 276 376 336 416
%%Pages: 1
%%DocumentFonts:
%%EndComments
%%EndProlog

%%Page: 1 1

% remember original state
/origstate save def

% build a temporary dictionary
20 dict begin

% define space for color conversions
/grays 60 string def  % space for gray scale line
/npixls 0 def
/rgbindx 0 def

% lower left corner
276 376 translate

% size of image (on paper, in 1/72inch coords)
59.97600 40.03200 scale

% define 'colorimage' if it isn't defined
%   ('colortogray' and 'mergeprocs' come from xwd2ps
%     via xgrab)
/colorimage where   % do we know about 'colorimage'?
  { pop }           % yes: pop off the 'dict' returned
  {                 % no:  define one
    /colortogray {  % define an RGB->I function
      /rgbdata exch store    % call input 'rgbdata'
      rgbdata length 3 idiv
      /npixls exch store
      /rgbindx 0 store
      0 1 npixls 1 sub {
        grays exch
        rgbdata rgbindx       get 20 mul    % Red
        rgbdata rgbindx 1 add get 32 mul    % Green
        rgbdata rgbindx 2 add get 12 mul    % Blue
        add add 64 idiv      % I = .5G + .31R + .18B
        put
        /rgbindx rgbindx 3 add store
      } for
      grays 0 npixls getinterval
    } bind def

    % Utility procedure for colorimage operator.
    % This procedure takes two procedures off the
    % stack and merges them into a single procedure.

    /mergeprocs { % def
      dup length
      3 -1 roll
      dup
      length
      dup
      5 1 roll
      3 -1 roll
      add
      array cvx
      dup
      3 -1 roll
      0 exch
      putinterval
      dup
      4 2 roll
      putinterval
    } bind def

    /colorimage { % def
      pop pop     % remove 'false 3' operands
      {colortogray} mergeprocs
      image
    } bind def
  } ifelse          % end of 'false' case



% define the colormap
/cmap 723 string def


% load up the colormap
currentfile cmap readhexstring
041808 049008 8c948c 045204 4c544c 04c804 84e284 449644 c4cbc4 0c380e 
04ac07 cce6cc 345e2c e4e7e4 046604 2c3a2c 347234 e4fee2 048208 64cc60 
34922c 24b224 04e404 044604 647264 242623 049f07 8cae8c 04bc06 24c61c 
f4f8f3 1c541c 04d804 1c621c 1c7220 0c280d 14910f 045e04 047c04 ccdcd0 
14ac18 1c481c 747473 04d105 0c6c0b 24852a 1c381c f4f1f3 acafac f4fef5 
0c310c acc6ac 049708 a4a4a3 3c4a44 148314 144812 9cea94 04b405 149e14 
1cbc1c 044004 e4fef4 dcdddd 748274 5c5959 4cba54 145b11 145413 147412 
c4fec4 e4f1e7 146411 088a0a 243028 09c207 fcf8f3 147c13 14c80e acceac 
3c3939 04f405 044e07 07a608 14d00f 0c1f10 0c900b d4d3d4 ecfee3 1c291d 
0c6e14 bcbfbd d4f6d4 909a94 4c5a50 0cac08 24ba24 547e54 0cbc0a 0c5c16 
0c7c0b fcf1fb acb8ac 1c311c aca7a9 e2e2e2 a4e2a4 0cc80a 6c9a6c 143715 
0c650a 0c840b 07de06 14970c 0c980a 0cb40a 848583 ecf0f0 c3c6c3 0c540d 
0c740c cccccc 74ce6c 30a02c 04ec05 54aa5c 6cb66c 9cfa9c 2c862c 5c926c 
6ca674 b4deac 9cda9c 34aa2c 6c7e6c acfeac 448244 34d22c 7d7d7c 6c6d6c 
445644 4c4d4c 1c7a19 1c3e1c 3c3f3c 2c422c 7c9a84 54c254 dceadc 144014 
343231 bccebc bcbabc 447244 6c6664 9c9d9c 7caa7c 349a38 6c7a74 84b69c 
1c4e18 898a89 ccfadc 1c6c2c b8e2c0 1c8a24 a1aaa1 3c4e3c 5f5e5c d8fed8 
24be24 78d670 688668 148a14 14a618 145624 0c480e 2c292b 142916 1c921c 
d4dad9 243828 143017 b4d2bc b4b7b5 1c961c 8c868c 247e24 144e13 04fa04 
246224 fcfefc 0c4e0c ace2b4 3caa3c 244e24 0c180c 949394 545454 ece9ec 
343634 2cb127 6c736c 0ca00c 0cda08 0c5c0b 0ccf06 146a0c b4b2b4 646464 
b4c2b4 0c3f0c ecfdf9 e4dedc ccfdcc 2c2f2b 142214 146b16 c4c2c2 545b54 
2cb62c 74ba74 346634 b4fcb0 244224 444242 246a24 e4feec 0ce204 f4f9fc 
f4eefc 444744 54b654 fcf9fc 0c9114 dcd6d4 ecfeec 0c7b14 0cc614 0c6314 
0c8414 
pop pop   % lose return values from readhexstring


% rlecmapimage expects to have 'w h bits matrix' on stack
/rlecmapimage {
  /buffer 1 string def
  /rgbval 3 string def
  /block  384 string def

  % proc to read a block from file, and return RGB data
  { currentfile buffer readhexstring pop
    /bcount exch 0 get store
    bcount 128 ge
    {  % it's a non-run block
      0 1 bcount 128 sub
      { currentfile buffer readhexstring pop pop

        % look up value in color map
        /rgbval cmap buffer 0 get 3 mul 3 getinterval store

        % and put it in position i*3 in block
        block exch 3 mul rgbval putinterval
      } for
      block  0  bcount 127 sub 3 mul  getinterval
    }

    { % else it's a run block
      currentfile buffer readhexstring pop pop

      % look up value in colormap
      /rgbval cmap buffer 0 get 3 mul 3 getinterval store

      0 1 bcount { block exch 3 mul rgbval putinterval } for

      block 0 bcount 1 add 3 mul getinterval
    } ifelse
  } % end of proc
  false 3 colorimage
} bind def


60 40 8			% dimensions of data
[60 0 0 -40 0 40]		% mapping matrix
rlecmapimage

10bf8131bf05bf03e98165e902e9046587bf3158ec31bfe9658265e9bf09bf
10bf8131bf04bf81e9bf01bf02e98265bfe982e965e901e981bf318131ec82ecbfe982e9
65bf0abf
12bf82751ebf83bf1ebf318231ec3102318111318131bf81bfe901e981bf318131bf01bf
01e90bbf
0fbf02e901bf023101ec021101a981d6a981a9118111318131bf14bf
0fbf8165e901e988e5bfd4ecd66add07808c80149dc2137f46a911d431bfe981e9bf0fbf

0fbf01e982bfe9318331a49ce28fe2454d37562456dc71567bab87a9d4bf81bfe981e9bf
81bf318131bf0abf
10bf8ac775bf311bde43224d37568656cb535f1a733c893cae8506a91131bfe9bf01bf81
58bf0abf
0fbf911ebf31b761a0442245ed56721a530a3a4e3a813a4e864e73c94246e3bf10bf
07bf81e9bf82bfe9bf92bf1ebf31ec4f0c38e2ef8e4d49561a530a3a6283624b052b8a2b
ce4e60c2dfe331bf4cbf0cbf
0abf81e9bf82bfe9ec8eec83de1f21778e786f01341a0a3a1c851c4b052b20168b162054
aa93df11312fe965bf0abf
0ebf8d3111883d77cdcf78646f0134530a810a1c911c4ece20167c517c16542893a9ec31
e965bf0abf
08bf01e999bfe91ebf316cc07743cd45786f49561a530a3a624b6b2b707c510151877c70
4edcaba9bfe981e9bf0abf
0bbf01e985bf27d34352cf90cf0e4d2656011a530a1c62ee2b20167c5102518816cc1db9
d611bfe9bf0abf
07bf81e9bf01bf90e9bf4c86d3445277d92c786f49721a0a3a853a4b0520167c827c51bd
88bd5116e44b157a11bf0cbf
0dbf8d3f0fc33d4403cfbb0e3756011a0a860a624b2b20167c817c5102510116854b897b
a911bf0bbf
08bf82e9e5bf97bf75dab209bcc021ef254d2649561a533a1c4b052b70167c037c811620
85203a853911bf0bbf
0bbf0131869eb6d3b0bc7748884845646f561acb0a7382734b2b812b1683167c16cc01cc
012b844b2813d4bf0bbf
0abf0231955e236db0c04463cf45646f5634cb533a73624b2b2016821670548854ce2b20
4b28e831bf0bbf
0abf023183b5b6d3b089b044436e45786f49341a871a0a733a626b2b200120896b4e6b05
2b1c5f9decbf0bbf
09bf8131bf97bf31d82e09d3b044cd485a786f1201cb1a530a73621c052b852b054e4b1c
0585053a282d58bf0bbf
0bbf9431bf556709b03844cd482c7864125634cb1a5f0a7382734b0501050162011c854b
0aae2d58bf0bbf
0bbf0131934a236dd3b0bc7743485a786f1201341acb535f3a813a1c011c0173023a8453
3b1458bf0bbf
0bbf8431bf0455098309d338778277ef2c852c266f1201348134cb83cb530a3a013a810a
5f815f0a850a1ab37d58bf0bbf
08bf81e9bf93bf31bf18d83209d338c044cd6e0e2c64126f0172837271cb5382530a5383
53ae531a851a01a57e58bf0bbf
0bbf01e5837600230901098138c082c0482c862c7864126f49568156728272341a811a72
0272864912bb841131bf0abf
03bf94e9bfe9bfe9bf1ebf1ebf275923b632099538c044ef81ef7881786481646f816fad
84adea01ea560156882449ad2da3115831bf0abf
04bf02e992654ce61e75bf0d185523b66d0995bcc043cd2c812c7881786483646f64f001
f08b6f496f49642d6382e3314cbf0abf
01bf85e9e5e9652fc784c7693fc7698a69c7d2b200232eb60929bc84bc6343ef2c862c78
45784d78ed82ed6f6489644d45a3afa2114c31bf0abf
01e58175c783c769d5eb8ceb797679dab87908db67c4b66d876d9538b0447743ef84ef6e
2c78458e455a457864788ecfbe9fd4315831bf0abf
88e5750d3f5779da98d083d0689b3501358d5d0236c45567b6320995b04477cd92cdef6e
2c6e5ad95acf782c4517813e31bf2fbf0bbf
887569575bd0689bc5ba83ba8a2a8a878aca2a74db5955b284b23209d3b081b077017701
cd016e02ef876e2c6e4810a4d4bf01bf814cbf0abf
873f79b835c5ba2a9a829aa8410141868de1d104c690d881d85583552e6d958b9538b0c0
77cd03cd6377afcd84cd4321c1d483d4e9654c814cbf0abf
88575b9b742ad1418de181e15081509603968450c8d759d881d8b283b2326d0981099585
9538bcb0381f871f95c3995ca931bf81bfe981e9bf0bbf
8779b8c58ad1c6e750855096d7b119b104b184d7b119d855845523b2b66d016d83952995
2987296de09211d431bf01bf01e90cbf
8979d0c52aa88de15096b181b119041901b18796c80fd74a59b2b602b6016d86326d328f
ac0b318331bf31bf01bf81e9bf0cbf
88575b9b742ad1c68de186e1c850c850c850865096c850e1e70487045e8ca7912e672e85
2e8cac33473101318158bf02bf82e9bfe981e9bf0abf
8b3f799835c5742a8bd1a8dbc683c68dc68d818dc601c68cdbd1ca40a15da66697274711
31863158bf31bf31bf82bf4ce985e9bfe9bfe9bf0abf
8bc76957dab8359bc5a1748a2a052a018a01748b029ba6665b279447ec311ebf83bf581e
bf82bf4cbf02bf82e9bfe981e9bf0abf
881e75693f57795bb8d082d068350135029b0135013088b8985b7608b40d751e811ebf83
bf1e75bf81bf4c814cbf05bf81e9bf0bbf
83e9e52fc782c7693f823f5779817976027681da760276827957b482b4c7750175822fe5
bf82bf4cbf01bf814cbf81bfe981e9bf01bf01e90dbf

%
% Compression made this file 26.36% of the uncompressed size.
%


showpage

% stop using temporary dictionary
end

% restore original state
origstate restore

%%Trailer

%%EndDocument
 @endspecial 248 w(Multiprocessor)65 b(with)i(Release)f(Consistency)
4983 2787 y @beginspecial 276 @llx 376 @lly 336 @urx
416 @ury 85 @rwi @setspecial
%%BeginDocument: green-bullet-on-white.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/fred/TeX/STYLES/Prosper/img/green-bullet-on-white.ps
%%Creator: XV Version 3.10a+FLmask  Rev: 12/29/94  -  by John Bradley
%%BoundingBox: 276 376 336 416
%%Pages: 1
%%DocumentFonts:
%%EndComments
%%EndProlog

%%Page: 1 1

% remember original state
/origstate save def

% build a temporary dictionary
20 dict begin

% define space for color conversions
/grays 60 string def  % space for gray scale line
/npixls 0 def
/rgbindx 0 def

% lower left corner
276 376 translate

% size of image (on paper, in 1/72inch coords)
59.97600 40.03200 scale

% define 'colorimage' if it isn't defined
%   ('colortogray' and 'mergeprocs' come from xwd2ps
%     via xgrab)
/colorimage where   % do we know about 'colorimage'?
  { pop }           % yes: pop off the 'dict' returned
  {                 % no:  define one
    /colortogray {  % define an RGB->I function
      /rgbdata exch store    % call input 'rgbdata'
      rgbdata length 3 idiv
      /npixls exch store
      /rgbindx 0 store
      0 1 npixls 1 sub {
        grays exch
        rgbdata rgbindx       get 20 mul    % Red
        rgbdata rgbindx 1 add get 32 mul    % Green
        rgbdata rgbindx 2 add get 12 mul    % Blue
        add add 64 idiv      % I = .5G + .31R + .18B
        put
        /rgbindx rgbindx 3 add store
      } for
      grays 0 npixls getinterval
    } bind def

    % Utility procedure for colorimage operator.
    % This procedure takes two procedures off the
    % stack and merges them into a single procedure.

    /mergeprocs { % def
      dup length
      3 -1 roll
      dup
      length
      dup
      5 1 roll
      3 -1 roll
      add
      array cvx
      dup
      3 -1 roll
      0 exch
      putinterval
      dup
      4 2 roll
      putinterval
    } bind def

    /colorimage { % def
      pop pop     % remove 'false 3' operands
      {colortogray} mergeprocs
      image
    } bind def
  } ifelse          % end of 'false' case



% define the colormap
/cmap 723 string def


% load up the colormap
currentfile cmap readhexstring
041808 049008 8c948c 045204 4c544c 04c804 84e284 449644 c4cbc4 0c380e 
04ac07 cce6cc 345e2c e4e7e4 046604 2c3a2c 347234 e4fee2 048208 64cc60 
34922c 24b224 04e404 044604 647264 242623 049f07 8cae8c 04bc06 24c61c 
f4f8f3 1c541c 04d804 1c621c 1c7220 0c280d 14910f 045e04 047c04 ccdcd0 
14ac18 1c481c 747473 04d105 0c6c0b 24852a 1c381c f4f1f3 acafac f4fef5 
0c310c acc6ac 049708 a4a4a3 3c4a44 148314 144812 9cea94 04b405 149e14 
1cbc1c 044004 e4fef4 dcdddd 748274 5c5959 4cba54 145b11 145413 147412 
c4fec4 e4f1e7 146411 088a0a 243028 09c207 fcf8f3 147c13 14c80e acceac 
3c3939 04f405 044e07 07a608 14d00f 0c1f10 0c900b d4d3d4 ecfee3 1c291d 
0c6e14 bcbfbd d4f6d4 909a94 4c5a50 0cac08 24ba24 547e54 0cbc0a 0c5c16 
0c7c0b fcf1fb acb8ac 1c311c aca7a9 e2e2e2 a4e2a4 0cc80a 6c9a6c 143715 
0c650a 0c840b 07de06 14970c 0c980a 0cb40a 848583 ecf0f0 c3c6c3 0c540d 
0c740c cccccc 74ce6c 30a02c 04ec05 54aa5c 6cb66c 9cfa9c 2c862c 5c926c 
6ca674 b4deac 9cda9c 34aa2c 6c7e6c acfeac 448244 34d22c 7d7d7c 6c6d6c 
445644 4c4d4c 1c7a19 1c3e1c 3c3f3c 2c422c 7c9a84 54c254 dceadc 144014 
343231 bccebc bcbabc 447244 6c6664 9c9d9c 7caa7c 349a38 6c7a74 84b69c 
1c4e18 898a89 ccfadc 1c6c2c b8e2c0 1c8a24 a1aaa1 3c4e3c 5f5e5c d8fed8 
24be24 78d670 688668 148a14 14a618 145624 0c480e 2c292b 142916 1c921c 
d4dad9 243828 143017 b4d2bc b4b7b5 1c961c 8c868c 247e24 144e13 04fa04 
246224 fcfefc 0c4e0c ace2b4 3caa3c 244e24 0c180c 949394 545454 ece9ec 
343634 2cb127 6c736c 0ca00c 0cda08 0c5c0b 0ccf06 146a0c b4b2b4 646464 
b4c2b4 0c3f0c ecfdf9 e4dedc ccfdcc 2c2f2b 142214 146b16 c4c2c2 545b54 
2cb62c 74ba74 346634 b4fcb0 244224 444242 246a24 e4feec 0ce204 f4f9fc 
f4eefc 444744 54b654 fcf9fc 0c9114 dcd6d4 ecfeec 0c7b14 0cc614 0c6314 
0c8414 
pop pop   % lose return values from readhexstring


% rlecmapimage expects to have 'w h bits matrix' on stack
/rlecmapimage {
  /buffer 1 string def
  /rgbval 3 string def
  /block  384 string def

  % proc to read a block from file, and return RGB data
  { currentfile buffer readhexstring pop
    /bcount exch 0 get store
    bcount 128 ge
    {  % it's a non-run block
      0 1 bcount 128 sub
      { currentfile buffer readhexstring pop pop

        % look up value in color map
        /rgbval cmap buffer 0 get 3 mul 3 getinterval store

        % and put it in position i*3 in block
        block exch 3 mul rgbval putinterval
      } for
      block  0  bcount 127 sub 3 mul  getinterval
    }

    { % else it's a run block
      currentfile buffer readhexstring pop pop

      % look up value in colormap
      /rgbval cmap buffer 0 get 3 mul 3 getinterval store

      0 1 bcount { block exch 3 mul rgbval putinterval } for

      block 0 bcount 1 add 3 mul getinterval
    } ifelse
  } % end of proc
  false 3 colorimage
} bind def


60 40 8			% dimensions of data
[60 0 0 -40 0 40]		% mapping matrix
rlecmapimage

10bf8131bf05bf03e98165e902e9046587bf3158ec31bfe9658265e9bf09bf
10bf8131bf04bf81e9bf01bf02e98265bfe982e965e901e981bf318131ec82ecbfe982e9
65bf0abf
12bf82751ebf83bf1ebf318231ec3102318111318131bf81bfe901e981bf318131bf01bf
01e90bbf
0fbf02e901bf023101ec021101a981d6a981a9118111318131bf14bf
0fbf8165e901e988e5bfd4ecd66add07808c80149dc2137f46a911d431bfe981e9bf0fbf

0fbf01e982bfe9318331a49ce28fe2454d37562456dc71567bab87a9d4bf81bfe981e9bf
81bf318131bf0abf
10bf8ac775bf311bde43224d37568656cb535f1a733c893cae8506a91131bfe9bf01bf81
58bf0abf
0fbf911ebf31b761a0442245ed56721a530a3a4e3a813a4e864e73c94246e3bf10bf
07bf81e9bf82bfe9bf92bf1ebf31ec4f0c38e2ef8e4d49561a530a3a6283624b052b8a2b
ce4e60c2dfe331bf4cbf0cbf
0abf81e9bf82bfe9ec8eec83de1f21778e786f01341a0a3a1c851c4b052b20168b162054
aa93df11312fe965bf0abf
0ebf8d3111883d77cdcf78646f0134530a810a1c911c4ece20167c517c16542893a9ec31
e965bf0abf
08bf01e999bfe91ebf316cc07743cd45786f49561a530a3a624b6b2b707c510151877c70
4edcaba9bfe981e9bf0abf
0bbf01e985bf27d34352cf90cf0e4d2656011a530a1c62ee2b20167c5102518816cc1db9
d611bfe9bf0abf
07bf81e9bf01bf90e9bf4c86d3445277d92c786f49721a0a3a853a4b0520167c827c51bd
88bd5116e44b157a11bf0cbf
0dbf8d3f0fc33d4403cfbb0e3756011a0a860a624b2b20167c817c5102510116854b897b
a911bf0bbf
08bf82e9e5bf97bf75dab209bcc021ef254d2649561a533a1c4b052b70167c037c811620
85203a853911bf0bbf
0bbf0131869eb6d3b0bc7748884845646f561acb0a7382734b2b812b1683167c16cc01cc
012b844b2813d4bf0bbf
0abf0231955e236db0c04463cf45646f5634cb533a73624b2b2016821670548854ce2b20
4b28e831bf0bbf
0abf023183b5b6d3b089b044436e45786f49341a871a0a733a626b2b200120896b4e6b05
2b1c5f9decbf0bbf
09bf8131bf97bf31d82e09d3b044cd485a786f1201cb1a530a73621c052b852b054e4b1c
0585053a282d58bf0bbf
0bbf9431bf556709b03844cd482c7864125634cb1a5f0a7382734b0501050162011c854b
0aae2d58bf0bbf
0bbf0131934a236dd3b0bc7743485a786f1201341acb535f3a813a1c011c0173023a8453
3b1458bf0bbf
0bbf8431bf0455098309d338778277ef2c852c266f1201348134cb83cb530a3a013a810a
5f815f0a850a1ab37d58bf0bbf
08bf81e9bf93bf31bf18d83209d338c044cd6e0e2c64126f0172837271cb5382530a5383
53ae531a851a01a57e58bf0bbf
0bbf01e5837600230901098138c082c0482c862c7864126f49568156728272341a811a72
0272864912bb841131bf0abf
03bf94e9bfe9bfe9bf1ebf1ebf275923b632099538c044ef81ef7881786481646f816fad
84adea01ea560156882449ad2da3115831bf0abf
04bf02e992654ce61e75bf0d185523b66d0995bcc043cd2c812c7881786483646f64f001
f08b6f496f49642d6382e3314cbf0abf
01bf85e9e5e9652fc784c7693fc7698a69c7d2b200232eb60929bc84bc6343ef2c862c78
45784d78ed82ed6f6489644d45a3afa2114c31bf0abf
01e58175c783c769d5eb8ceb797679dab87908db67c4b66d876d9538b0447743ef84ef6e
2c78458e455a457864788ecfbe9fd4315831bf0abf
88e5750d3f5779da98d083d0689b3501358d5d0236c45567b6320995b04477cd92cdef6e
2c6e5ad95acf782c4517813e31bf2fbf0bbf
887569575bd0689bc5ba83ba8a2a8a878aca2a74db5955b284b23209d3b081b077017701
cd016e02ef876e2c6e4810a4d4bf01bf814cbf0abf
873f79b835c5ba2a9a829aa8410141868de1d104c690d881d85583552e6d958b9538b0c0
77cd03cd6377afcd84cd4321c1d483d4e9654c814cbf0abf
88575b9b742ad1418de181e15081509603968450c8d759d881d8b283b2326d0981099585
9538bcb0381f871f95c3995ca931bf81bfe981e9bf0bbf
8779b8c58ad1c6e750855096d7b119b104b184d7b119d855845523b2b66d016d83952995
2987296de09211d431bf01bf01e90cbf
8979d0c52aa88de15096b181b119041901b18796c80fd74a59b2b602b6016d86326d328f
ac0b318331bf31bf01bf81e9bf0cbf
88575b9b742ad1c68de186e1c850c850c850865096c850e1e70487045e8ca7912e672e85
2e8cac33473101318158bf02bf82e9bfe981e9bf0abf
8b3f799835c5742a8bd1a8dbc683c68dc68d818dc601c68cdbd1ca40a15da66697274711
31863158bf31bf31bf82bf4ce985e9bfe9bfe9bf0abf
8bc76957dab8359bc5a1748a2a052a018a01748b029ba6665b279447ec311ebf83bf581e
bf82bf4cbf02bf82e9bfe981e9bf0abf
881e75693f57795bb8d082d068350135029b0135013088b8985b7608b40d751e811ebf83
bf1e75bf81bf4c814cbf05bf81e9bf0bbf
83e9e52fc782c7693f823f5779817976027681da760276827957b482b4c7750175822fe5
bf82bf4cbf01bf814cbf81bfe981e9bf01bf01e90dbf

%
% Compression made this file 26.36% of the uncompressed size.
%


showpage

% stop using temporary dictionary
end

% restore original state
origstate restore

%%Trailer

%%EndDocument
 @endspecial 248 w(Multiple)g(types)g(of)h(processors)f(sim)n
(ulatenously)4983 3107 y @beginspecial 276 @llx 376 @lly
336 @urx 416 @ury 85 @rwi @setspecial
%%BeginDocument: green-bullet-on-white.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/fred/TeX/STYLES/Prosper/img/green-bullet-on-white.ps
%%Creator: XV Version 3.10a+FLmask  Rev: 12/29/94  -  by John Bradley
%%BoundingBox: 276 376 336 416
%%Pages: 1
%%DocumentFonts:
%%EndComments
%%EndProlog

%%Page: 1 1

% remember original state
/origstate save def

% build a temporary dictionary
20 dict begin

% define space for color conversions
/grays 60 string def  % space for gray scale line
/npixls 0 def
/rgbindx 0 def

% lower left corner
276 376 translate

% size of image (on paper, in 1/72inch coords)
59.97600 40.03200 scale

% define 'colorimage' if it isn't defined
%   ('colortogray' and 'mergeprocs' come from xwd2ps
%     via xgrab)
/colorimage where   % do we know about 'colorimage'?
  { pop }           % yes: pop off the 'dict' returned
  {                 % no:  define one
    /colortogray {  % define an RGB->I function
      /rgbdata exch store    % call input 'rgbdata'
      rgbdata length 3 idiv
      /npixls exch store
      /rgbindx 0 store
      0 1 npixls 1 sub {
        grays exch
        rgbdata rgbindx       get 20 mul    % Red
        rgbdata rgbindx 1 add get 32 mul    % Green
        rgbdata rgbindx 2 add get 12 mul    % Blue
        add add 64 idiv      % I = .5G + .31R + .18B
        put
        /rgbindx rgbindx 3 add store
      } for
      grays 0 npixls getinterval
    } bind def

    % Utility procedure for colorimage operator.
    % This procedure takes two procedures off the
    % stack and merges them into a single procedure.

    /mergeprocs { % def
      dup length
      3 -1 roll
      dup
      length
      dup
      5 1 roll
      3 -1 roll
      add
      array cvx
      dup
      3 -1 roll
      0 exch
      putinterval
      dup
      4 2 roll
      putinterval
    } bind def

    /colorimage { % def
      pop pop     % remove 'false 3' operands
      {colortogray} mergeprocs
      image
    } bind def
  } ifelse          % end of 'false' case



% define the colormap
/cmap 723 string def


% load up the colormap
currentfile cmap readhexstring
041808 049008 8c948c 045204 4c544c 04c804 84e284 449644 c4cbc4 0c380e 
04ac07 cce6cc 345e2c e4e7e4 046604 2c3a2c 347234 e4fee2 048208 64cc60 
34922c 24b224 04e404 044604 647264 242623 049f07 8cae8c 04bc06 24c61c 
f4f8f3 1c541c 04d804 1c621c 1c7220 0c280d 14910f 045e04 047c04 ccdcd0 
14ac18 1c481c 747473 04d105 0c6c0b 24852a 1c381c f4f1f3 acafac f4fef5 
0c310c acc6ac 049708 a4a4a3 3c4a44 148314 144812 9cea94 04b405 149e14 
1cbc1c 044004 e4fef4 dcdddd 748274 5c5959 4cba54 145b11 145413 147412 
c4fec4 e4f1e7 146411 088a0a 243028 09c207 fcf8f3 147c13 14c80e acceac 
3c3939 04f405 044e07 07a608 14d00f 0c1f10 0c900b d4d3d4 ecfee3 1c291d 
0c6e14 bcbfbd d4f6d4 909a94 4c5a50 0cac08 24ba24 547e54 0cbc0a 0c5c16 
0c7c0b fcf1fb acb8ac 1c311c aca7a9 e2e2e2 a4e2a4 0cc80a 6c9a6c 143715 
0c650a 0c840b 07de06 14970c 0c980a 0cb40a 848583 ecf0f0 c3c6c3 0c540d 
0c740c cccccc 74ce6c 30a02c 04ec05 54aa5c 6cb66c 9cfa9c 2c862c 5c926c 
6ca674 b4deac 9cda9c 34aa2c 6c7e6c acfeac 448244 34d22c 7d7d7c 6c6d6c 
445644 4c4d4c 1c7a19 1c3e1c 3c3f3c 2c422c 7c9a84 54c254 dceadc 144014 
343231 bccebc bcbabc 447244 6c6664 9c9d9c 7caa7c 349a38 6c7a74 84b69c 
1c4e18 898a89 ccfadc 1c6c2c b8e2c0 1c8a24 a1aaa1 3c4e3c 5f5e5c d8fed8 
24be24 78d670 688668 148a14 14a618 145624 0c480e 2c292b 142916 1c921c 
d4dad9 243828 143017 b4d2bc b4b7b5 1c961c 8c868c 247e24 144e13 04fa04 
246224 fcfefc 0c4e0c ace2b4 3caa3c 244e24 0c180c 949394 545454 ece9ec 
343634 2cb127 6c736c 0ca00c 0cda08 0c5c0b 0ccf06 146a0c b4b2b4 646464 
b4c2b4 0c3f0c ecfdf9 e4dedc ccfdcc 2c2f2b 142214 146b16 c4c2c2 545b54 
2cb62c 74ba74 346634 b4fcb0 244224 444242 246a24 e4feec 0ce204 f4f9fc 
f4eefc 444744 54b654 fcf9fc 0c9114 dcd6d4 ecfeec 0c7b14 0cc614 0c6314 
0c8414 
pop pop   % lose return values from readhexstring


% rlecmapimage expects to have 'w h bits matrix' on stack
/rlecmapimage {
  /buffer 1 string def
  /rgbval 3 string def
  /block  384 string def

  % proc to read a block from file, and return RGB data
  { currentfile buffer readhexstring pop
    /bcount exch 0 get store
    bcount 128 ge
    {  % it's a non-run block
      0 1 bcount 128 sub
      { currentfile buffer readhexstring pop pop

        % look up value in color map
        /rgbval cmap buffer 0 get 3 mul 3 getinterval store

        % and put it in position i*3 in block
        block exch 3 mul rgbval putinterval
      } for
      block  0  bcount 127 sub 3 mul  getinterval
    }

    { % else it's a run block
      currentfile buffer readhexstring pop pop

      % look up value in colormap
      /rgbval cmap buffer 0 get 3 mul 3 getinterval store

      0 1 bcount { block exch 3 mul rgbval putinterval } for

      block 0 bcount 1 add 3 mul getinterval
    } ifelse
  } % end of proc
  false 3 colorimage
} bind def


60 40 8			% dimensions of data
[60 0 0 -40 0 40]		% mapping matrix
rlecmapimage

10bf8131bf05bf03e98165e902e9046587bf3158ec31bfe9658265e9bf09bf
10bf8131bf04bf81e9bf01bf02e98265bfe982e965e901e981bf318131ec82ecbfe982e9
65bf0abf
12bf82751ebf83bf1ebf318231ec3102318111318131bf81bfe901e981bf318131bf01bf
01e90bbf
0fbf02e901bf023101ec021101a981d6a981a9118111318131bf14bf
0fbf8165e901e988e5bfd4ecd66add07808c80149dc2137f46a911d431bfe981e9bf0fbf

0fbf01e982bfe9318331a49ce28fe2454d37562456dc71567bab87a9d4bf81bfe981e9bf
81bf318131bf0abf
10bf8ac775bf311bde43224d37568656cb535f1a733c893cae8506a91131bfe9bf01bf81
58bf0abf
0fbf911ebf31b761a0442245ed56721a530a3a4e3a813a4e864e73c94246e3bf10bf
07bf81e9bf82bfe9bf92bf1ebf31ec4f0c38e2ef8e4d49561a530a3a6283624b052b8a2b
ce4e60c2dfe331bf4cbf0cbf
0abf81e9bf82bfe9ec8eec83de1f21778e786f01341a0a3a1c851c4b052b20168b162054
aa93df11312fe965bf0abf
0ebf8d3111883d77cdcf78646f0134530a810a1c911c4ece20167c517c16542893a9ec31
e965bf0abf
08bf01e999bfe91ebf316cc07743cd45786f49561a530a3a624b6b2b707c510151877c70
4edcaba9bfe981e9bf0abf
0bbf01e985bf27d34352cf90cf0e4d2656011a530a1c62ee2b20167c5102518816cc1db9
d611bfe9bf0abf
07bf81e9bf01bf90e9bf4c86d3445277d92c786f49721a0a3a853a4b0520167c827c51bd
88bd5116e44b157a11bf0cbf
0dbf8d3f0fc33d4403cfbb0e3756011a0a860a624b2b20167c817c5102510116854b897b
a911bf0bbf
08bf82e9e5bf97bf75dab209bcc021ef254d2649561a533a1c4b052b70167c037c811620
85203a853911bf0bbf
0bbf0131869eb6d3b0bc7748884845646f561acb0a7382734b2b812b1683167c16cc01cc
012b844b2813d4bf0bbf
0abf0231955e236db0c04463cf45646f5634cb533a73624b2b2016821670548854ce2b20
4b28e831bf0bbf
0abf023183b5b6d3b089b044436e45786f49341a871a0a733a626b2b200120896b4e6b05
2b1c5f9decbf0bbf
09bf8131bf97bf31d82e09d3b044cd485a786f1201cb1a530a73621c052b852b054e4b1c
0585053a282d58bf0bbf
0bbf9431bf556709b03844cd482c7864125634cb1a5f0a7382734b0501050162011c854b
0aae2d58bf0bbf
0bbf0131934a236dd3b0bc7743485a786f1201341acb535f3a813a1c011c0173023a8453
3b1458bf0bbf
0bbf8431bf0455098309d338778277ef2c852c266f1201348134cb83cb530a3a013a810a
5f815f0a850a1ab37d58bf0bbf
08bf81e9bf93bf31bf18d83209d338c044cd6e0e2c64126f0172837271cb5382530a5383
53ae531a851a01a57e58bf0bbf
0bbf01e5837600230901098138c082c0482c862c7864126f49568156728272341a811a72
0272864912bb841131bf0abf
03bf94e9bfe9bfe9bf1ebf1ebf275923b632099538c044ef81ef7881786481646f816fad
84adea01ea560156882449ad2da3115831bf0abf
04bf02e992654ce61e75bf0d185523b66d0995bcc043cd2c812c7881786483646f64f001
f08b6f496f49642d6382e3314cbf0abf
01bf85e9e5e9652fc784c7693fc7698a69c7d2b200232eb60929bc84bc6343ef2c862c78
45784d78ed82ed6f6489644d45a3afa2114c31bf0abf
01e58175c783c769d5eb8ceb797679dab87908db67c4b66d876d9538b0447743ef84ef6e
2c78458e455a457864788ecfbe9fd4315831bf0abf
88e5750d3f5779da98d083d0689b3501358d5d0236c45567b6320995b04477cd92cdef6e
2c6e5ad95acf782c4517813e31bf2fbf0bbf
887569575bd0689bc5ba83ba8a2a8a878aca2a74db5955b284b23209d3b081b077017701
cd016e02ef876e2c6e4810a4d4bf01bf814cbf0abf
873f79b835c5ba2a9a829aa8410141868de1d104c690d881d85583552e6d958b9538b0c0
77cd03cd6377afcd84cd4321c1d483d4e9654c814cbf0abf
88575b9b742ad1418de181e15081509603968450c8d759d881d8b283b2326d0981099585
9538bcb0381f871f95c3995ca931bf81bfe981e9bf0bbf
8779b8c58ad1c6e750855096d7b119b104b184d7b119d855845523b2b66d016d83952995
2987296de09211d431bf01bf01e90cbf
8979d0c52aa88de15096b181b119041901b18796c80fd74a59b2b602b6016d86326d328f
ac0b318331bf31bf01bf81e9bf0cbf
88575b9b742ad1c68de186e1c850c850c850865096c850e1e70487045e8ca7912e672e85
2e8cac33473101318158bf02bf82e9bfe981e9bf0abf
8b3f799835c5742a8bd1a8dbc683c68dc68d818dc601c68cdbd1ca40a15da66697274711
31863158bf31bf31bf82bf4ce985e9bfe9bfe9bf0abf
8bc76957dab8359bc5a1748a2a052a018a01748b029ba6665b279447ec311ebf83bf581e
bf82bf4cbf02bf82e9bfe981e9bf0abf
881e75693f57795bb8d082d068350135029b0135013088b8985b7608b40d751e811ebf83
bf1e75bf81bf4c814cbf05bf81e9bf0bbf
83e9e52fc782c7693f823f5779817976027681da760276827957b482b4c7750175822fe5
bf82bf4cbf01bf814cbf81bfe981e9bf01bf01e90dbf

%
% Compression made this file 26.36% of the uncompressed size.
%


showpage

% stop using temporary dictionary
end

% restore original state
origstate restore

%%Trailer

%%EndDocument
 @endspecial 248 w(SMTs)4983 3422 y @beginspecial 276
@llx 376 @lly 336 @urx 416 @ury 85 @rwi @setspecial
%%BeginDocument: green-bullet-on-white.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/fred/TeX/STYLES/Prosper/img/green-bullet-on-white.ps
%%Creator: XV Version 3.10a+FLmask  Rev: 12/29/94  -  by John Bradley
%%BoundingBox: 276 376 336 416
%%Pages: 1
%%DocumentFonts:
%%EndComments
%%EndProlog

%%Page: 1 1

% remember original state
/origstate save def

% build a temporary dictionary
20 dict begin

% define space for color conversions
/grays 60 string def  % space for gray scale line
/npixls 0 def
/rgbindx 0 def

% lower left corner
276 376 translate

% size of image (on paper, in 1/72inch coords)
59.97600 40.03200 scale

% define 'colorimage' if it isn't defined
%   ('colortogray' and 'mergeprocs' come from xwd2ps
%     via xgrab)
/colorimage where   % do we know about 'colorimage'?
  { pop }           % yes: pop off the 'dict' returned
  {                 % no:  define one
    /colortogray {  % define an RGB->I function
      /rgbdata exch store    % call input 'rgbdata'
      rgbdata length 3 idiv
      /npixls exch store
      /rgbindx 0 store
      0 1 npixls 1 sub {
        grays exch
        rgbdata rgbindx       get 20 mul    % Red
        rgbdata rgbindx 1 add get 32 mul    % Green
        rgbdata rgbindx 2 add get 12 mul    % Blue
        add add 64 idiv      % I = .5G + .31R + .18B
        put
        /rgbindx rgbindx 3 add store
      } for
      grays 0 npixls getinterval
    } bind def

    % Utility procedure for colorimage operator.
    % This procedure takes two procedures off the
    % stack and merges them into a single procedure.

    /mergeprocs { % def
      dup length
      3 -1 roll
      dup
      length
      dup
      5 1 roll
      3 -1 roll
      add
      array cvx
      dup
      3 -1 roll
      0 exch
      putinterval
      dup
      4 2 roll
      putinterval
    } bind def

    /colorimage { % def
      pop pop     % remove 'false 3' operands
      {colortogray} mergeprocs
      image
    } bind def
  } ifelse          % end of 'false' case



% define the colormap
/cmap 723 string def


% load up the colormap
currentfile cmap readhexstring
041808 049008 8c948c 045204 4c544c 04c804 84e284 449644 c4cbc4 0c380e 
04ac07 cce6cc 345e2c e4e7e4 046604 2c3a2c 347234 e4fee2 048208 64cc60 
34922c 24b224 04e404 044604 647264 242623 049f07 8cae8c 04bc06 24c61c 
f4f8f3 1c541c 04d804 1c621c 1c7220 0c280d 14910f 045e04 047c04 ccdcd0 
14ac18 1c481c 747473 04d105 0c6c0b 24852a 1c381c f4f1f3 acafac f4fef5 
0c310c acc6ac 049708 a4a4a3 3c4a44 148314 144812 9cea94 04b405 149e14 
1cbc1c 044004 e4fef4 dcdddd 748274 5c5959 4cba54 145b11 145413 147412 
c4fec4 e4f1e7 146411 088a0a 243028 09c207 fcf8f3 147c13 14c80e acceac 
3c3939 04f405 044e07 07a608 14d00f 0c1f10 0c900b d4d3d4 ecfee3 1c291d 
0c6e14 bcbfbd d4f6d4 909a94 4c5a50 0cac08 24ba24 547e54 0cbc0a 0c5c16 
0c7c0b fcf1fb acb8ac 1c311c aca7a9 e2e2e2 a4e2a4 0cc80a 6c9a6c 143715 
0c650a 0c840b 07de06 14970c 0c980a 0cb40a 848583 ecf0f0 c3c6c3 0c540d 
0c740c cccccc 74ce6c 30a02c 04ec05 54aa5c 6cb66c 9cfa9c 2c862c 5c926c 
6ca674 b4deac 9cda9c 34aa2c 6c7e6c acfeac 448244 34d22c 7d7d7c 6c6d6c 
445644 4c4d4c 1c7a19 1c3e1c 3c3f3c 2c422c 7c9a84 54c254 dceadc 144014 
343231 bccebc bcbabc 447244 6c6664 9c9d9c 7caa7c 349a38 6c7a74 84b69c 
1c4e18 898a89 ccfadc 1c6c2c b8e2c0 1c8a24 a1aaa1 3c4e3c 5f5e5c d8fed8 
24be24 78d670 688668 148a14 14a618 145624 0c480e 2c292b 142916 1c921c 
d4dad9 243828 143017 b4d2bc b4b7b5 1c961c 8c868c 247e24 144e13 04fa04 
246224 fcfefc 0c4e0c ace2b4 3caa3c 244e24 0c180c 949394 545454 ece9ec 
343634 2cb127 6c736c 0ca00c 0cda08 0c5c0b 0ccf06 146a0c b4b2b4 646464 
b4c2b4 0c3f0c ecfdf9 e4dedc ccfdcc 2c2f2b 142214 146b16 c4c2c2 545b54 
2cb62c 74ba74 346634 b4fcb0 244224 444242 246a24 e4feec 0ce204 f4f9fc 
f4eefc 444744 54b654 fcf9fc 0c9114 dcd6d4 ecfeec 0c7b14 0cc614 0c6314 
0c8414 
pop pop   % lose return values from readhexstring


% rlecmapimage expects to have 'w h bits matrix' on stack
/rlecmapimage {
  /buffer 1 string def
  /rgbval 3 string def
  /block  384 string def

  % proc to read a block from file, and return RGB data
  { currentfile buffer readhexstring pop
    /bcount exch 0 get store
    bcount 128 ge
    {  % it's a non-run block
      0 1 bcount 128 sub
      { currentfile buffer readhexstring pop pop

        % look up value in color map
        /rgbval cmap buffer 0 get 3 mul 3 getinterval store

        % and put it in position i*3 in block
        block exch 3 mul rgbval putinterval
      } for
      block  0  bcount 127 sub 3 mul  getinterval
    }

    { % else it's a run block
      currentfile buffer readhexstring pop pop

      % look up value in colormap
      /rgbval cmap buffer 0 get 3 mul 3 getinterval store

      0 1 bcount { block exch 3 mul rgbval putinterval } for

      block 0 bcount 1 add 3 mul getinterval
    } ifelse
  } % end of proc
  false 3 colorimage
} bind def


60 40 8			% dimensions of data
[60 0 0 -40 0 40]		% mapping matrix
rlecmapimage

10bf8131bf05bf03e98165e902e9046587bf3158ec31bfe9658265e9bf09bf
10bf8131bf04bf81e9bf01bf02e98265bfe982e965e901e981bf318131ec82ecbfe982e9
65bf0abf
12bf82751ebf83bf1ebf318231ec3102318111318131bf81bfe901e981bf318131bf01bf
01e90bbf
0fbf02e901bf023101ec021101a981d6a981a9118111318131bf14bf
0fbf8165e901e988e5bfd4ecd66add07808c80149dc2137f46a911d431bfe981e9bf0fbf

0fbf01e982bfe9318331a49ce28fe2454d37562456dc71567bab87a9d4bf81bfe981e9bf
81bf318131bf0abf
10bf8ac775bf311bde43224d37568656cb535f1a733c893cae8506a91131bfe9bf01bf81
58bf0abf
0fbf911ebf31b761a0442245ed56721a530a3a4e3a813a4e864e73c94246e3bf10bf
07bf81e9bf82bfe9bf92bf1ebf31ec4f0c38e2ef8e4d49561a530a3a6283624b052b8a2b
ce4e60c2dfe331bf4cbf0cbf
0abf81e9bf82bfe9ec8eec83de1f21778e786f01341a0a3a1c851c4b052b20168b162054
aa93df11312fe965bf0abf
0ebf8d3111883d77cdcf78646f0134530a810a1c911c4ece20167c517c16542893a9ec31
e965bf0abf
08bf01e999bfe91ebf316cc07743cd45786f49561a530a3a624b6b2b707c510151877c70
4edcaba9bfe981e9bf0abf
0bbf01e985bf27d34352cf90cf0e4d2656011a530a1c62ee2b20167c5102518816cc1db9
d611bfe9bf0abf
07bf81e9bf01bf90e9bf4c86d3445277d92c786f49721a0a3a853a4b0520167c827c51bd
88bd5116e44b157a11bf0cbf
0dbf8d3f0fc33d4403cfbb0e3756011a0a860a624b2b20167c817c5102510116854b897b
a911bf0bbf
08bf82e9e5bf97bf75dab209bcc021ef254d2649561a533a1c4b052b70167c037c811620
85203a853911bf0bbf
0bbf0131869eb6d3b0bc7748884845646f561acb0a7382734b2b812b1683167c16cc01cc
012b844b2813d4bf0bbf
0abf0231955e236db0c04463cf45646f5634cb533a73624b2b2016821670548854ce2b20
4b28e831bf0bbf
0abf023183b5b6d3b089b044436e45786f49341a871a0a733a626b2b200120896b4e6b05
2b1c5f9decbf0bbf
09bf8131bf97bf31d82e09d3b044cd485a786f1201cb1a530a73621c052b852b054e4b1c
0585053a282d58bf0bbf
0bbf9431bf556709b03844cd482c7864125634cb1a5f0a7382734b0501050162011c854b
0aae2d58bf0bbf
0bbf0131934a236dd3b0bc7743485a786f1201341acb535f3a813a1c011c0173023a8453
3b1458bf0bbf
0bbf8431bf0455098309d338778277ef2c852c266f1201348134cb83cb530a3a013a810a
5f815f0a850a1ab37d58bf0bbf
08bf81e9bf93bf31bf18d83209d338c044cd6e0e2c64126f0172837271cb5382530a5383
53ae531a851a01a57e58bf0bbf
0bbf01e5837600230901098138c082c0482c862c7864126f49568156728272341a811a72
0272864912bb841131bf0abf
03bf94e9bfe9bfe9bf1ebf1ebf275923b632099538c044ef81ef7881786481646f816fad
84adea01ea560156882449ad2da3115831bf0abf
04bf02e992654ce61e75bf0d185523b66d0995bcc043cd2c812c7881786483646f64f001
f08b6f496f49642d6382e3314cbf0abf
01bf85e9e5e9652fc784c7693fc7698a69c7d2b200232eb60929bc84bc6343ef2c862c78
45784d78ed82ed6f6489644d45a3afa2114c31bf0abf
01e58175c783c769d5eb8ceb797679dab87908db67c4b66d876d9538b0447743ef84ef6e
2c78458e455a457864788ecfbe9fd4315831bf0abf
88e5750d3f5779da98d083d0689b3501358d5d0236c45567b6320995b04477cd92cdef6e
2c6e5ad95acf782c4517813e31bf2fbf0bbf
887569575bd0689bc5ba83ba8a2a8a878aca2a74db5955b284b23209d3b081b077017701
cd016e02ef876e2c6e4810a4d4bf01bf814cbf0abf
873f79b835c5ba2a9a829aa8410141868de1d104c690d881d85583552e6d958b9538b0c0
77cd03cd6377afcd84cd4321c1d483d4e9654c814cbf0abf
88575b9b742ad1418de181e15081509603968450c8d759d881d8b283b2326d0981099585
9538bcb0381f871f95c3995ca931bf81bfe981e9bf0bbf
8779b8c58ad1c6e750855096d7b119b104b184d7b119d855845523b2b66d016d83952995
2987296de09211d431bf01bf01e90cbf
8979d0c52aa88de15096b181b119041901b18796c80fd74a59b2b602b6016d86326d328f
ac0b318331bf31bf01bf81e9bf0cbf
88575b9b742ad1c68de186e1c850c850c850865096c850e1e70487045e8ca7912e672e85
2e8cac33473101318158bf02bf82e9bfe981e9bf0abf
8b3f799835c5742a8bd1a8dbc683c68dc68d818dc601c68cdbd1ca40a15da66697274711
31863158bf31bf31bf82bf4ce985e9bfe9bfe9bf0abf
8bc76957dab8359bc5a1748a2a052a018a01748b029ba6665b279447ec311ebf83bf581e
bf82bf4cbf02bf82e9bfe981e9bf0abf
881e75693f57795bb8d082d068350135029b0135013088b8985b7608b40d751e811ebf83
bf1e75bf81bf4c814cbf05bf81e9bf0bbf
83e9e52fc782c7693f823f5779817976027681da760276827957b482b4c7750175822fe5
bf82bf4cbf01bf814cbf81bfe981e9bf01bf01e90dbf

%
% Compression made this file 26.36% of the uncompressed size.
%


showpage

% stop using temporary dictionary
end

% restore original state
origstate restore

%%Trailer

%%EndDocument
 @endspecial 248 w(Add)h(some)g(\223kind-of)f(OS\224:)h(TLB)-5
b(,)67 b(process.)40 b(.)g(.)4649 3787 y @beginspecial
276 @llx 376 @lly 336 @urx 416 @ury 113 @rwi @setspecial
%%BeginDocument: green-bullet-on-white.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/fred/TeX/STYLES/Prosper/img/green-bullet-on-white.ps
%%Creator: XV Version 3.10a+FLmask  Rev: 12/29/94  -  by John Bradley
%%BoundingBox: 276 376 336 416
%%Pages: 1
%%DocumentFonts:
%%EndComments
%%EndProlog

%%Page: 1 1

% remember original state
/origstate save def

% build a temporary dictionary
20 dict begin

% define space for color conversions
/grays 60 string def  % space for gray scale line
/npixls 0 def
/rgbindx 0 def

% lower left corner
276 376 translate

% size of image (on paper, in 1/72inch coords)
59.97600 40.03200 scale

% define 'colorimage' if it isn't defined
%   ('colortogray' and 'mergeprocs' come from xwd2ps
%     via xgrab)
/colorimage where   % do we know about 'colorimage'?
  { pop }           % yes: pop off the 'dict' returned
  {                 % no:  define one
    /colortogray {  % define an RGB->I function
      /rgbdata exch store    % call input 'rgbdata'
      rgbdata length 3 idiv
      /npixls exch store
      /rgbindx 0 store
      0 1 npixls 1 sub {
        grays exch
        rgbdata rgbindx       get 20 mul    % Red
        rgbdata rgbindx 1 add get 32 mul    % Green
        rgbdata rgbindx 2 add get 12 mul    % Blue
        add add 64 idiv      % I = .5G + .31R + .18B
        put
        /rgbindx rgbindx 3 add store
      } for
      grays 0 npixls getinterval
    } bind def

    % Utility procedure for colorimage operator.
    % This procedure takes two procedures off the
    % stack and merges them into a single procedure.

    /mergeprocs { % def
      dup length
      3 -1 roll
      dup
      length
      dup
      5 1 roll
      3 -1 roll
      add
      array cvx
      dup
      3 -1 roll
      0 exch
      putinterval
      dup
      4 2 roll
      putinterval
    } bind def

    /colorimage { % def
      pop pop     % remove 'false 3' operands
      {colortogray} mergeprocs
      image
    } bind def
  } ifelse          % end of 'false' case



% define the colormap
/cmap 723 string def


% load up the colormap
currentfile cmap readhexstring
041808 049008 8c948c 045204 4c544c 04c804 84e284 449644 c4cbc4 0c380e 
04ac07 cce6cc 345e2c e4e7e4 046604 2c3a2c 347234 e4fee2 048208 64cc60 
34922c 24b224 04e404 044604 647264 242623 049f07 8cae8c 04bc06 24c61c 
f4f8f3 1c541c 04d804 1c621c 1c7220 0c280d 14910f 045e04 047c04 ccdcd0 
14ac18 1c481c 747473 04d105 0c6c0b 24852a 1c381c f4f1f3 acafac f4fef5 
0c310c acc6ac 049708 a4a4a3 3c4a44 148314 144812 9cea94 04b405 149e14 
1cbc1c 044004 e4fef4 dcdddd 748274 5c5959 4cba54 145b11 145413 147412 
c4fec4 e4f1e7 146411 088a0a 243028 09c207 fcf8f3 147c13 14c80e acceac 
3c3939 04f405 044e07 07a608 14d00f 0c1f10 0c900b d4d3d4 ecfee3 1c291d 
0c6e14 bcbfbd d4f6d4 909a94 4c5a50 0cac08 24ba24 547e54 0cbc0a 0c5c16 
0c7c0b fcf1fb acb8ac 1c311c aca7a9 e2e2e2 a4e2a4 0cc80a 6c9a6c 143715 
0c650a 0c840b 07de06 14970c 0c980a 0cb40a 848583 ecf0f0 c3c6c3 0c540d 
0c740c cccccc 74ce6c 30a02c 04ec05 54aa5c 6cb66c 9cfa9c 2c862c 5c926c 
6ca674 b4deac 9cda9c 34aa2c 6c7e6c acfeac 448244 34d22c 7d7d7c 6c6d6c 
445644 4c4d4c 1c7a19 1c3e1c 3c3f3c 2c422c 7c9a84 54c254 dceadc 144014 
343231 bccebc bcbabc 447244 6c6664 9c9d9c 7caa7c 349a38 6c7a74 84b69c 
1c4e18 898a89 ccfadc 1c6c2c b8e2c0 1c8a24 a1aaa1 3c4e3c 5f5e5c d8fed8 
24be24 78d670 688668 148a14 14a618 145624 0c480e 2c292b 142916 1c921c 
d4dad9 243828 143017 b4d2bc b4b7b5 1c961c 8c868c 247e24 144e13 04fa04 
246224 fcfefc 0c4e0c ace2b4 3caa3c 244e24 0c180c 949394 545454 ece9ec 
343634 2cb127 6c736c 0ca00c 0cda08 0c5c0b 0ccf06 146a0c b4b2b4 646464 
b4c2b4 0c3f0c ecfdf9 e4dedc ccfdcc 2c2f2b 142214 146b16 c4c2c2 545b54 
2cb62c 74ba74 346634 b4fcb0 244224 444242 246a24 e4feec 0ce204 f4f9fc 
f4eefc 444744 54b654 fcf9fc 0c9114 dcd6d4 ecfeec 0c7b14 0cc614 0c6314 
0c8414 
pop pop   % lose return values from readhexstring


% rlecmapimage expects to have 'w h bits matrix' on stack
/rlecmapimage {
  /buffer 1 string def
  /rgbval 3 string def
  /block  384 string def

  % proc to read a block from file, and return RGB data
  { currentfile buffer readhexstring pop
    /bcount exch 0 get store
    bcount 128 ge
    {  % it's a non-run block
      0 1 bcount 128 sub
      { currentfile buffer readhexstring pop pop

        % look up value in color map
        /rgbval cmap buffer 0 get 3 mul 3 getinterval store

        % and put it in position i*3 in block
        block exch 3 mul rgbval putinterval
      } for
      block  0  bcount 127 sub 3 mul  getinterval
    }

    { % else it's a run block
      currentfile buffer readhexstring pop pop

      % look up value in colormap
      /rgbval cmap buffer 0 get 3 mul 3 getinterval store

      0 1 bcount { block exch 3 mul rgbval putinterval } for

      block 0 bcount 1 add 3 mul getinterval
    } ifelse
  } % end of proc
  false 3 colorimage
} bind def


60 40 8			% dimensions of data
[60 0 0 -40 0 40]		% mapping matrix
rlecmapimage

10bf8131bf05bf03e98165e902e9046587bf3158ec31bfe9658265e9bf09bf
10bf8131bf04bf81e9bf01bf02e98265bfe982e965e901e981bf318131ec82ecbfe982e9
65bf0abf
12bf82751ebf83bf1ebf318231ec3102318111318131bf81bfe901e981bf318131bf01bf
01e90bbf
0fbf02e901bf023101ec021101a981d6a981a9118111318131bf14bf
0fbf8165e901e988e5bfd4ecd66add07808c80149dc2137f46a911d431bfe981e9bf0fbf

0fbf01e982bfe9318331a49ce28fe2454d37562456dc71567bab87a9d4bf81bfe981e9bf
81bf318131bf0abf
10bf8ac775bf311bde43224d37568656cb535f1a733c893cae8506a91131bfe9bf01bf81
58bf0abf
0fbf911ebf31b761a0442245ed56721a530a3a4e3a813a4e864e73c94246e3bf10bf
07bf81e9bf82bfe9bf92bf1ebf31ec4f0c38e2ef8e4d49561a530a3a6283624b052b8a2b
ce4e60c2dfe331bf4cbf0cbf
0abf81e9bf82bfe9ec8eec83de1f21778e786f01341a0a3a1c851c4b052b20168b162054
aa93df11312fe965bf0abf
0ebf8d3111883d77cdcf78646f0134530a810a1c911c4ece20167c517c16542893a9ec31
e965bf0abf
08bf01e999bfe91ebf316cc07743cd45786f49561a530a3a624b6b2b707c510151877c70
4edcaba9bfe981e9bf0abf
0bbf01e985bf27d34352cf90cf0e4d2656011a530a1c62ee2b20167c5102518816cc1db9
d611bfe9bf0abf
07bf81e9bf01bf90e9bf4c86d3445277d92c786f49721a0a3a853a4b0520167c827c51bd
88bd5116e44b157a11bf0cbf
0dbf8d3f0fc33d4403cfbb0e3756011a0a860a624b2b20167c817c5102510116854b897b
a911bf0bbf
08bf82e9e5bf97bf75dab209bcc021ef254d2649561a533a1c4b052b70167c037c811620
85203a853911bf0bbf
0bbf0131869eb6d3b0bc7748884845646f561acb0a7382734b2b812b1683167c16cc01cc
012b844b2813d4bf0bbf
0abf0231955e236db0c04463cf45646f5634cb533a73624b2b2016821670548854ce2b20
4b28e831bf0bbf
0abf023183b5b6d3b089b044436e45786f49341a871a0a733a626b2b200120896b4e6b05
2b1c5f9decbf0bbf
09bf8131bf97bf31d82e09d3b044cd485a786f1201cb1a530a73621c052b852b054e4b1c
0585053a282d58bf0bbf
0bbf9431bf556709b03844cd482c7864125634cb1a5f0a7382734b0501050162011c854b
0aae2d58bf0bbf
0bbf0131934a236dd3b0bc7743485a786f1201341acb535f3a813a1c011c0173023a8453
3b1458bf0bbf
0bbf8431bf0455098309d338778277ef2c852c266f1201348134cb83cb530a3a013a810a
5f815f0a850a1ab37d58bf0bbf
08bf81e9bf93bf31bf18d83209d338c044cd6e0e2c64126f0172837271cb5382530a5383
53ae531a851a01a57e58bf0bbf
0bbf01e5837600230901098138c082c0482c862c7864126f49568156728272341a811a72
0272864912bb841131bf0abf
03bf94e9bfe9bfe9bf1ebf1ebf275923b632099538c044ef81ef7881786481646f816fad
84adea01ea560156882449ad2da3115831bf0abf
04bf02e992654ce61e75bf0d185523b66d0995bcc043cd2c812c7881786483646f64f001
f08b6f496f49642d6382e3314cbf0abf
01bf85e9e5e9652fc784c7693fc7698a69c7d2b200232eb60929bc84bc6343ef2c862c78
45784d78ed82ed6f6489644d45a3afa2114c31bf0abf
01e58175c783c769d5eb8ceb797679dab87908db67c4b66d876d9538b0447743ef84ef6e
2c78458e455a457864788ecfbe9fd4315831bf0abf
88e5750d3f5779da98d083d0689b3501358d5d0236c45567b6320995b04477cd92cdef6e
2c6e5ad95acf782c4517813e31bf2fbf0bbf
887569575bd0689bc5ba83ba8a2a8a878aca2a74db5955b284b23209d3b081b077017701
cd016e02ef876e2c6e4810a4d4bf01bf814cbf0abf
873f79b835c5ba2a9a829aa8410141868de1d104c690d881d85583552e6d958b9538b0c0
77cd03cd6377afcd84cd4321c1d483d4e9654c814cbf0abf
88575b9b742ad1418de181e15081509603968450c8d759d881d8b283b2326d0981099585
9538bcb0381f871f95c3995ca931bf81bfe981e9bf0bbf
8779b8c58ad1c6e750855096d7b119b104b184d7b119d855845523b2b66d016d83952995
2987296de09211d431bf01bf01e90cbf
8979d0c52aa88de15096b181b119041901b18796c80fd74a59b2b602b6016d86326d328f
ac0b318331bf31bf01bf81e9bf0cbf
88575b9b742ad1c68de186e1c850c850c850865096c850e1e70487045e8ca7912e672e85
2e8cac33473101318158bf02bf82e9bfe981e9bf0abf
8b3f799835c5742a8bd1a8dbc683c68dc68d818dc601c68cdbd1ca40a15da66697274711
31863158bf31bf31bf82bf4ce985e9bfe9bfe9bf0abf
8bc76957dab8359bc5a1748a2a052a018a01748b029ba6665b279447ec311ebf83bf581e
bf82bf4cbf02bf82e9bfe981e9bf0abf
881e75693f57795bb8d082d068350135029b0135013088b8985b7608b40d751e811ebf83
bf1e75bf81bf4c814cbf05bf81e9bf0bbf
83e9e52fc782c7693f823f5779817976027681da760276827957b482b4c7750175822fe5
bf82bf4cbf01bf814cbf81bfe981e9bf01bf01e90dbf

%
% Compression made this file 26.36% of the uncompressed size.
%


showpage

% stop using temporary dictionary
end

% restore original state
origstate restore

%%Trailer

%%EndDocument
 @endspecial 298 w(Results:)4983 4101 y @beginspecial
276 @llx 376 @lly 336 @urx 416 @ury 85 @rwi @setspecial
%%BeginDocument: green-bullet-on-white.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/fred/TeX/STYLES/Prosper/img/green-bullet-on-white.ps
%%Creator: XV Version 3.10a+FLmask  Rev: 12/29/94  -  by John Bradley
%%BoundingBox: 276 376 336 416
%%Pages: 1
%%DocumentFonts:
%%EndComments
%%EndProlog

%%Page: 1 1

% remember original state
/origstate save def

% build a temporary dictionary
20 dict begin

% define space for color conversions
/grays 60 string def  % space for gray scale line
/npixls 0 def
/rgbindx 0 def

% lower left corner
276 376 translate

% size of image (on paper, in 1/72inch coords)
59.97600 40.03200 scale

% define 'colorimage' if it isn't defined
%   ('colortogray' and 'mergeprocs' come from xwd2ps
%     via xgrab)
/colorimage where   % do we know about 'colorimage'?
  { pop }           % yes: pop off the 'dict' returned
  {                 % no:  define one
    /colortogray {  % define an RGB->I function
      /rgbdata exch store    % call input 'rgbdata'
      rgbdata length 3 idiv
      /npixls exch store
      /rgbindx 0 store
      0 1 npixls 1 sub {
        grays exch
        rgbdata rgbindx       get 20 mul    % Red
        rgbdata rgbindx 1 add get 32 mul    % Green
        rgbdata rgbindx 2 add get 12 mul    % Blue
        add add 64 idiv      % I = .5G + .31R + .18B
        put
        /rgbindx rgbindx 3 add store
      } for
      grays 0 npixls getinterval
    } bind def

    % Utility procedure for colorimage operator.
    % This procedure takes two procedures off the
    % stack and merges them into a single procedure.

    /mergeprocs { % def
      dup length
      3 -1 roll
      dup
      length
      dup
      5 1 roll
      3 -1 roll
      add
      array cvx
      dup
      3 -1 roll
      0 exch
      putinterval
      dup
      4 2 roll
      putinterval
    } bind def

    /colorimage { % def
      pop pop     % remove 'false 3' operands
      {colortogray} mergeprocs
      image
    } bind def
  } ifelse          % end of 'false' case



% define the colormap
/cmap 723 string def


% load up the colormap
currentfile cmap readhexstring
041808 049008 8c948c 045204 4c544c 04c804 84e284 449644 c4cbc4 0c380e 
04ac07 cce6cc 345e2c e4e7e4 046604 2c3a2c 347234 e4fee2 048208 64cc60 
34922c 24b224 04e404 044604 647264 242623 049f07 8cae8c 04bc06 24c61c 
f4f8f3 1c541c 04d804 1c621c 1c7220 0c280d 14910f 045e04 047c04 ccdcd0 
14ac18 1c481c 747473 04d105 0c6c0b 24852a 1c381c f4f1f3 acafac f4fef5 
0c310c acc6ac 049708 a4a4a3 3c4a44 148314 144812 9cea94 04b405 149e14 
1cbc1c 044004 e4fef4 dcdddd 748274 5c5959 4cba54 145b11 145413 147412 
c4fec4 e4f1e7 146411 088a0a 243028 09c207 fcf8f3 147c13 14c80e acceac 
3c3939 04f405 044e07 07a608 14d00f 0c1f10 0c900b d4d3d4 ecfee3 1c291d 
0c6e14 bcbfbd d4f6d4 909a94 4c5a50 0cac08 24ba24 547e54 0cbc0a 0c5c16 
0c7c0b fcf1fb acb8ac 1c311c aca7a9 e2e2e2 a4e2a4 0cc80a 6c9a6c 143715 
0c650a 0c840b 07de06 14970c 0c980a 0cb40a 848583 ecf0f0 c3c6c3 0c540d 
0c740c cccccc 74ce6c 30a02c 04ec05 54aa5c 6cb66c 9cfa9c 2c862c 5c926c 
6ca674 b4deac 9cda9c 34aa2c 6c7e6c acfeac 448244 34d22c 7d7d7c 6c6d6c 
445644 4c4d4c 1c7a19 1c3e1c 3c3f3c 2c422c 7c9a84 54c254 dceadc 144014 
343231 bccebc bcbabc 447244 6c6664 9c9d9c 7caa7c 349a38 6c7a74 84b69c 
1c4e18 898a89 ccfadc 1c6c2c b8e2c0 1c8a24 a1aaa1 3c4e3c 5f5e5c d8fed8 
24be24 78d670 688668 148a14 14a618 145624 0c480e 2c292b 142916 1c921c 
d4dad9 243828 143017 b4d2bc b4b7b5 1c961c 8c868c 247e24 144e13 04fa04 
246224 fcfefc 0c4e0c ace2b4 3caa3c 244e24 0c180c 949394 545454 ece9ec 
343634 2cb127 6c736c 0ca00c 0cda08 0c5c0b 0ccf06 146a0c b4b2b4 646464 
b4c2b4 0c3f0c ecfdf9 e4dedc ccfdcc 2c2f2b 142214 146b16 c4c2c2 545b54 
2cb62c 74ba74 346634 b4fcb0 244224 444242 246a24 e4feec 0ce204 f4f9fc 
f4eefc 444744 54b654 fcf9fc 0c9114 dcd6d4 ecfeec 0c7b14 0cc614 0c6314 
0c8414 
pop pop   % lose return values from readhexstring


% rlecmapimage expects to have 'w h bits matrix' on stack
/rlecmapimage {
  /buffer 1 string def
  /rgbval 3 string def
  /block  384 string def

  % proc to read a block from file, and return RGB data
  { currentfile buffer readhexstring pop
    /bcount exch 0 get store
    bcount 128 ge
    {  % it's a non-run block
      0 1 bcount 128 sub
      { currentfile buffer readhexstring pop pop

        % look up value in color map
        /rgbval cmap buffer 0 get 3 mul 3 getinterval store

        % and put it in position i*3 in block
        block exch 3 mul rgbval putinterval
      } for
      block  0  bcount 127 sub 3 mul  getinterval
    }

    { % else it's a run block
      currentfile buffer readhexstring pop pop

      % look up value in colormap
      /rgbval cmap buffer 0 get 3 mul 3 getinterval store

      0 1 bcount { block exch 3 mul rgbval putinterval } for

      block 0 bcount 1 add 3 mul getinterval
    } ifelse
  } % end of proc
  false 3 colorimage
} bind def


60 40 8			% dimensions of data
[60 0 0 -40 0 40]		% mapping matrix
rlecmapimage

10bf8131bf05bf03e98165e902e9046587bf3158ec31bfe9658265e9bf09bf
10bf8131bf04bf81e9bf01bf02e98265bfe982e965e901e981bf318131ec82ecbfe982e9
65bf0abf
12bf82751ebf83bf1ebf318231ec3102318111318131bf81bfe901e981bf318131bf01bf
01e90bbf
0fbf02e901bf023101ec021101a981d6a981a9118111318131bf14bf
0fbf8165e901e988e5bfd4ecd66add07808c80149dc2137f46a911d431bfe981e9bf0fbf

0fbf01e982bfe9318331a49ce28fe2454d37562456dc71567bab87a9d4bf81bfe981e9bf
81bf318131bf0abf
10bf8ac775bf311bde43224d37568656cb535f1a733c893cae8506a91131bfe9bf01bf81
58bf0abf
0fbf911ebf31b761a0442245ed56721a530a3a4e3a813a4e864e73c94246e3bf10bf
07bf81e9bf82bfe9bf92bf1ebf31ec4f0c38e2ef8e4d49561a530a3a6283624b052b8a2b
ce4e60c2dfe331bf4cbf0cbf
0abf81e9bf82bfe9ec8eec83de1f21778e786f01341a0a3a1c851c4b052b20168b162054
aa93df11312fe965bf0abf
0ebf8d3111883d77cdcf78646f0134530a810a1c911c4ece20167c517c16542893a9ec31
e965bf0abf
08bf01e999bfe91ebf316cc07743cd45786f49561a530a3a624b6b2b707c510151877c70
4edcaba9bfe981e9bf0abf
0bbf01e985bf27d34352cf90cf0e4d2656011a530a1c62ee2b20167c5102518816cc1db9
d611bfe9bf0abf
07bf81e9bf01bf90e9bf4c86d3445277d92c786f49721a0a3a853a4b0520167c827c51bd
88bd5116e44b157a11bf0cbf
0dbf8d3f0fc33d4403cfbb0e3756011a0a860a624b2b20167c817c5102510116854b897b
a911bf0bbf
08bf82e9e5bf97bf75dab209bcc021ef254d2649561a533a1c4b052b70167c037c811620
85203a853911bf0bbf
0bbf0131869eb6d3b0bc7748884845646f561acb0a7382734b2b812b1683167c16cc01cc
012b844b2813d4bf0bbf
0abf0231955e236db0c04463cf45646f5634cb533a73624b2b2016821670548854ce2b20
4b28e831bf0bbf
0abf023183b5b6d3b089b044436e45786f49341a871a0a733a626b2b200120896b4e6b05
2b1c5f9decbf0bbf
09bf8131bf97bf31d82e09d3b044cd485a786f1201cb1a530a73621c052b852b054e4b1c
0585053a282d58bf0bbf
0bbf9431bf556709b03844cd482c7864125634cb1a5f0a7382734b0501050162011c854b
0aae2d58bf0bbf
0bbf0131934a236dd3b0bc7743485a786f1201341acb535f3a813a1c011c0173023a8453
3b1458bf0bbf
0bbf8431bf0455098309d338778277ef2c852c266f1201348134cb83cb530a3a013a810a
5f815f0a850a1ab37d58bf0bbf
08bf81e9bf93bf31bf18d83209d338c044cd6e0e2c64126f0172837271cb5382530a5383
53ae531a851a01a57e58bf0bbf
0bbf01e5837600230901098138c082c0482c862c7864126f49568156728272341a811a72
0272864912bb841131bf0abf
03bf94e9bfe9bfe9bf1ebf1ebf275923b632099538c044ef81ef7881786481646f816fad
84adea01ea560156882449ad2da3115831bf0abf
04bf02e992654ce61e75bf0d185523b66d0995bcc043cd2c812c7881786483646f64f001
f08b6f496f49642d6382e3314cbf0abf
01bf85e9e5e9652fc784c7693fc7698a69c7d2b200232eb60929bc84bc6343ef2c862c78
45784d78ed82ed6f6489644d45a3afa2114c31bf0abf
01e58175c783c769d5eb8ceb797679dab87908db67c4b66d876d9538b0447743ef84ef6e
2c78458e455a457864788ecfbe9fd4315831bf0abf
88e5750d3f5779da98d083d0689b3501358d5d0236c45567b6320995b04477cd92cdef6e
2c6e5ad95acf782c4517813e31bf2fbf0bbf
887569575bd0689bc5ba83ba8a2a8a878aca2a74db5955b284b23209d3b081b077017701
cd016e02ef876e2c6e4810a4d4bf01bf814cbf0abf
873f79b835c5ba2a9a829aa8410141868de1d104c690d881d85583552e6d958b9538b0c0
77cd03cd6377afcd84cd4321c1d483d4e9654c814cbf0abf
88575b9b742ad1418de181e15081509603968450c8d759d881d8b283b2326d0981099585
9538bcb0381f871f95c3995ca931bf81bfe981e9bf0bbf
8779b8c58ad1c6e750855096d7b119b104b184d7b119d855845523b2b66d016d83952995
2987296de09211d431bf01bf01e90cbf
8979d0c52aa88de15096b181b119041901b18796c80fd74a59b2b602b6016d86326d328f
ac0b318331bf31bf01bf81e9bf0cbf
88575b9b742ad1c68de186e1c850c850c850865096c850e1e70487045e8ca7912e672e85
2e8cac33473101318158bf02bf82e9bfe981e9bf0abf
8b3f799835c5742a8bd1a8dbc683c68dc68d818dc601c68cdbd1ca40a15da66697274711
31863158bf31bf31bf82bf4ce985e9bfe9bfe9bf0abf
8bc76957dab8359bc5a1748a2a052a018a01748b029ba6665b279447ec311ebf83bf581e
bf82bf4cbf02bf82e9bfe981e9bf0abf
881e75693f57795bb8d082d068350135029b0135013088b8985b7608b40d751e811ebf83
bf1e75bf81bf4c814cbf05bf81e9bf0bbf
83e9e52fc782c7693f823f5779817976027681da760276827957b482b4c7750175822fe5
bf82bf4cbf01bf814cbf81bfe981e9bf01bf01e90dbf

%
% Compression made this file 26.36% of the uncompressed size.
%


showpage

% stop using temporary dictionary
end

% restore original state
origstate restore

%%Trailer

%%EndDocument
 @endspecial 248 w(Separ)n(ate)67 b(stats)f(gener)n(ation)h(and)g
(processing:)5210 4369 y @beginspecial 276 @llx 376 @lly
336 @urx 416 @ury 70 @rwi @setspecial
%%BeginDocument: green-bullet-on-white.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/fred/TeX/STYLES/Prosper/img/green-bullet-on-white.ps
%%Creator: XV Version 3.10a+FLmask  Rev: 12/29/94  -  by John Bradley
%%BoundingBox: 276 376 336 416
%%Pages: 1
%%DocumentFonts:
%%EndComments
%%EndProlog

%%Page: 1 1

% remember original state
/origstate save def

% build a temporary dictionary
20 dict begin

% define space for color conversions
/grays 60 string def  % space for gray scale line
/npixls 0 def
/rgbindx 0 def

% lower left corner
276 376 translate

% size of image (on paper, in 1/72inch coords)
59.97600 40.03200 scale

% define 'colorimage' if it isn't defined
%   ('colortogray' and 'mergeprocs' come from xwd2ps
%     via xgrab)
/colorimage where   % do we know about 'colorimage'?
  { pop }           % yes: pop off the 'dict' returned
  {                 % no:  define one
    /colortogray {  % define an RGB->I function
      /rgbdata exch store    % call input 'rgbdata'
      rgbdata length 3 idiv
      /npixls exch store
      /rgbindx 0 store
      0 1 npixls 1 sub {
        grays exch
        rgbdata rgbindx       get 20 mul    % Red
        rgbdata rgbindx 1 add get 32 mul    % Green
        rgbdata rgbindx 2 add get 12 mul    % Blue
        add add 64 idiv      % I = .5G + .31R + .18B
        put
        /rgbindx rgbindx 3 add store
      } for
      grays 0 npixls getinterval
    } bind def

    % Utility procedure for colorimage operator.
    % This procedure takes two procedures off the
    % stack and merges them into a single procedure.

    /mergeprocs { % def
      dup length
      3 -1 roll
      dup
      length
      dup
      5 1 roll
      3 -1 roll
      add
      array cvx
      dup
      3 -1 roll
      0 exch
      putinterval
      dup
      4 2 roll
      putinterval
    } bind def

    /colorimage { % def
      pop pop     % remove 'false 3' operands
      {colortogray} mergeprocs
      image
    } bind def
  } ifelse          % end of 'false' case



% define the colormap
/cmap 723 string def


% load up the colormap
currentfile cmap readhexstring
041808 049008 8c948c 045204 4c544c 04c804 84e284 449644 c4cbc4 0c380e 
04ac07 cce6cc 345e2c e4e7e4 046604 2c3a2c 347234 e4fee2 048208 64cc60 
34922c 24b224 04e404 044604 647264 242623 049f07 8cae8c 04bc06 24c61c 
f4f8f3 1c541c 04d804 1c621c 1c7220 0c280d 14910f 045e04 047c04 ccdcd0 
14ac18 1c481c 747473 04d105 0c6c0b 24852a 1c381c f4f1f3 acafac f4fef5 
0c310c acc6ac 049708 a4a4a3 3c4a44 148314 144812 9cea94 04b405 149e14 
1cbc1c 044004 e4fef4 dcdddd 748274 5c5959 4cba54 145b11 145413 147412 
c4fec4 e4f1e7 146411 088a0a 243028 09c207 fcf8f3 147c13 14c80e acceac 
3c3939 04f405 044e07 07a608 14d00f 0c1f10 0c900b d4d3d4 ecfee3 1c291d 
0c6e14 bcbfbd d4f6d4 909a94 4c5a50 0cac08 24ba24 547e54 0cbc0a 0c5c16 
0c7c0b fcf1fb acb8ac 1c311c aca7a9 e2e2e2 a4e2a4 0cc80a 6c9a6c 143715 
0c650a 0c840b 07de06 14970c 0c980a 0cb40a 848583 ecf0f0 c3c6c3 0c540d 
0c740c cccccc 74ce6c 30a02c 04ec05 54aa5c 6cb66c 9cfa9c 2c862c 5c926c 
6ca674 b4deac 9cda9c 34aa2c 6c7e6c acfeac 448244 34d22c 7d7d7c 6c6d6c 
445644 4c4d4c 1c7a19 1c3e1c 3c3f3c 2c422c 7c9a84 54c254 dceadc 144014 
343231 bccebc bcbabc 447244 6c6664 9c9d9c 7caa7c 349a38 6c7a74 84b69c 
1c4e18 898a89 ccfadc 1c6c2c b8e2c0 1c8a24 a1aaa1 3c4e3c 5f5e5c d8fed8 
24be24 78d670 688668 148a14 14a618 145624 0c480e 2c292b 142916 1c921c 
d4dad9 243828 143017 b4d2bc b4b7b5 1c961c 8c868c 247e24 144e13 04fa04 
246224 fcfefc 0c4e0c ace2b4 3caa3c 244e24 0c180c 949394 545454 ece9ec 
343634 2cb127 6c736c 0ca00c 0cda08 0c5c0b 0ccf06 146a0c b4b2b4 646464 
b4c2b4 0c3f0c ecfdf9 e4dedc ccfdcc 2c2f2b 142214 146b16 c4c2c2 545b54 
2cb62c 74ba74 346634 b4fcb0 244224 444242 246a24 e4feec 0ce204 f4f9fc 
f4eefc 444744 54b654 fcf9fc 0c9114 dcd6d4 ecfeec 0c7b14 0cc614 0c6314 
0c8414 
pop pop   % lose return values from readhexstring


% rlecmapimage expects to have 'w h bits matrix' on stack
/rlecmapimage {
  /buffer 1 string def
  /rgbval 3 string def
  /block  384 string def

  % proc to read a block from file, and return RGB data
  { currentfile buffer readhexstring pop
    /bcount exch 0 get store
    bcount 128 ge
    {  % it's a non-run block
      0 1 bcount 128 sub
      { currentfile buffer readhexstring pop pop

        % look up value in color map
        /rgbval cmap buffer 0 get 3 mul 3 getinterval store

        % and put it in position i*3 in block
        block exch 3 mul rgbval putinterval
      } for
      block  0  bcount 127 sub 3 mul  getinterval
    }

    { % else it's a run block
      currentfile buffer readhexstring pop pop

      % look up value in colormap
      /rgbval cmap buffer 0 get 3 mul 3 getinterval store

      0 1 bcount { block exch 3 mul rgbval putinterval } for

      block 0 bcount 1 add 3 mul getinterval
    } ifelse
  } % end of proc
  false 3 colorimage
} bind def


60 40 8			% dimensions of data
[60 0 0 -40 0 40]		% mapping matrix
rlecmapimage

10bf8131bf05bf03e98165e902e9046587bf3158ec31bfe9658265e9bf09bf
10bf8131bf04bf81e9bf01bf02e98265bfe982e965e901e981bf318131ec82ecbfe982e9
65bf0abf
12bf82751ebf83bf1ebf318231ec3102318111318131bf81bfe901e981bf318131bf01bf
01e90bbf
0fbf02e901bf023101ec021101a981d6a981a9118111318131bf14bf
0fbf8165e901e988e5bfd4ecd66add07808c80149dc2137f46a911d431bfe981e9bf0fbf

0fbf01e982bfe9318331a49ce28fe2454d37562456dc71567bab87a9d4bf81bfe981e9bf
81bf318131bf0abf
10bf8ac775bf311bde43224d37568656cb535f1a733c893cae8506a91131bfe9bf01bf81
58bf0abf
0fbf911ebf31b761a0442245ed56721a530a3a4e3a813a4e864e73c94246e3bf10bf
07bf81e9bf82bfe9bf92bf1ebf31ec4f0c38e2ef8e4d49561a530a3a6283624b052b8a2b
ce4e60c2dfe331bf4cbf0cbf
0abf81e9bf82bfe9ec8eec83de1f21778e786f01341a0a3a1c851c4b052b20168b162054
aa93df11312fe965bf0abf
0ebf8d3111883d77cdcf78646f0134530a810a1c911c4ece20167c517c16542893a9ec31
e965bf0abf
08bf01e999bfe91ebf316cc07743cd45786f49561a530a3a624b6b2b707c510151877c70
4edcaba9bfe981e9bf0abf
0bbf01e985bf27d34352cf90cf0e4d2656011a530a1c62ee2b20167c5102518816cc1db9
d611bfe9bf0abf
07bf81e9bf01bf90e9bf4c86d3445277d92c786f49721a0a3a853a4b0520167c827c51bd
88bd5116e44b157a11bf0cbf
0dbf8d3f0fc33d4403cfbb0e3756011a0a860a624b2b20167c817c5102510116854b897b
a911bf0bbf
08bf82e9e5bf97bf75dab209bcc021ef254d2649561a533a1c4b052b70167c037c811620
85203a853911bf0bbf
0bbf0131869eb6d3b0bc7748884845646f561acb0a7382734b2b812b1683167c16cc01cc
012b844b2813d4bf0bbf
0abf0231955e236db0c04463cf45646f5634cb533a73624b2b2016821670548854ce2b20
4b28e831bf0bbf
0abf023183b5b6d3b089b044436e45786f49341a871a0a733a626b2b200120896b4e6b05
2b1c5f9decbf0bbf
09bf8131bf97bf31d82e09d3b044cd485a786f1201cb1a530a73621c052b852b054e4b1c
0585053a282d58bf0bbf
0bbf9431bf556709b03844cd482c7864125634cb1a5f0a7382734b0501050162011c854b
0aae2d58bf0bbf
0bbf0131934a236dd3b0bc7743485a786f1201341acb535f3a813a1c011c0173023a8453
3b1458bf0bbf
0bbf8431bf0455098309d338778277ef2c852c266f1201348134cb83cb530a3a013a810a
5f815f0a850a1ab37d58bf0bbf
08bf81e9bf93bf31bf18d83209d338c044cd6e0e2c64126f0172837271cb5382530a5383
53ae531a851a01a57e58bf0bbf
0bbf01e5837600230901098138c082c0482c862c7864126f49568156728272341a811a72
0272864912bb841131bf0abf
03bf94e9bfe9bfe9bf1ebf1ebf275923b632099538c044ef81ef7881786481646f816fad
84adea01ea560156882449ad2da3115831bf0abf
04bf02e992654ce61e75bf0d185523b66d0995bcc043cd2c812c7881786483646f64f001
f08b6f496f49642d6382e3314cbf0abf
01bf85e9e5e9652fc784c7693fc7698a69c7d2b200232eb60929bc84bc6343ef2c862c78
45784d78ed82ed6f6489644d45a3afa2114c31bf0abf
01e58175c783c769d5eb8ceb797679dab87908db67c4b66d876d9538b0447743ef84ef6e
2c78458e455a457864788ecfbe9fd4315831bf0abf
88e5750d3f5779da98d083d0689b3501358d5d0236c45567b6320995b04477cd92cdef6e
2c6e5ad95acf782c4517813e31bf2fbf0bbf
887569575bd0689bc5ba83ba8a2a8a878aca2a74db5955b284b23209d3b081b077017701
cd016e02ef876e2c6e4810a4d4bf01bf814cbf0abf
873f79b835c5ba2a9a829aa8410141868de1d104c690d881d85583552e6d958b9538b0c0
77cd03cd6377afcd84cd4321c1d483d4e9654c814cbf0abf
88575b9b742ad1418de181e15081509603968450c8d759d881d8b283b2326d0981099585
9538bcb0381f871f95c3995ca931bf81bfe981e9bf0bbf
8779b8c58ad1c6e750855096d7b119b104b184d7b119d855845523b2b66d016d83952995
2987296de09211d431bf01bf01e90cbf
8979d0c52aa88de15096b181b119041901b18796c80fd74a59b2b602b6016d86326d328f
ac0b318331bf31bf01bf81e9bf0cbf
88575b9b742ad1c68de186e1c850c850c850865096c850e1e70487045e8ca7912e672e85
2e8cac33473101318158bf02bf82e9bfe981e9bf0abf
8b3f799835c5742a8bd1a8dbc683c68dc68d818dc601c68cdbd1ca40a15da66697274711
31863158bf31bf31bf82bf4ce985e9bfe9bfe9bf0abf
8bc76957dab8359bc5a1748a2a052a018a01748b029ba6665b279447ec311ebf83bf581e
bf82bf4cbf02bf82e9bfe981e9bf0abf
881e75693f57795bb8d082d068350135029b0135013088b8985b7608b40d751e811ebf83
bf1e75bf81bf4c814cbf05bf81e9bf0bbf
83e9e52fc782c7693f823f5779817976027681da760276827957b482b4c7750175822fe5
bf82bf4cbf01bf814cbf81bfe981e9bf01bf01e90dbf

%
% Compression made this file 26.36% of the uncompressed size.
%


showpage

% stop using temporary dictionary
end

% restore original state
origstate restore

%%Trailer

%%EndDocument
 @endspecial 225 w(The)g(sim)n(ulator)e(outputs)i(close)f(to)h(r)n(a)-5
b(w)67 b(data)5210 4633 y @beginspecial 276 @llx 376
@lly 336 @urx 416 @ury 70 @rwi @setspecial
%%BeginDocument: green-bullet-on-white.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/fred/TeX/STYLES/Prosper/img/green-bullet-on-white.ps
%%Creator: XV Version 3.10a+FLmask  Rev: 12/29/94  -  by John Bradley
%%BoundingBox: 276 376 336 416
%%Pages: 1
%%DocumentFonts:
%%EndComments
%%EndProlog

%%Page: 1 1

% remember original state
/origstate save def

% build a temporary dictionary
20 dict begin

% define space for color conversions
/grays 60 string def  % space for gray scale line
/npixls 0 def
/rgbindx 0 def

% lower left corner
276 376 translate

% size of image (on paper, in 1/72inch coords)
59.97600 40.03200 scale

% define 'colorimage' if it isn't defined
%   ('colortogray' and 'mergeprocs' come from xwd2ps
%     via xgrab)
/colorimage where   % do we know about 'colorimage'?
  { pop }           % yes: pop off the 'dict' returned
  {                 % no:  define one
    /colortogray {  % define an RGB->I function
      /rgbdata exch store    % call input 'rgbdata'
      rgbdata length 3 idiv
      /npixls exch store
      /rgbindx 0 store
      0 1 npixls 1 sub {
        grays exch
        rgbdata rgbindx       get 20 mul    % Red
        rgbdata rgbindx 1 add get 32 mul    % Green
        rgbdata rgbindx 2 add get 12 mul    % Blue
        add add 64 idiv      % I = .5G + .31R + .18B
        put
        /rgbindx rgbindx 3 add store
      } for
      grays 0 npixls getinterval
    } bind def

    % Utility procedure for colorimage operator.
    % This procedure takes two procedures off the
    % stack and merges them into a single procedure.

    /mergeprocs { % def
      dup length
      3 -1 roll
      dup
      length
      dup
      5 1 roll
      3 -1 roll
      add
      array cvx
      dup
      3 -1 roll
      0 exch
      putinterval
      dup
      4 2 roll
      putinterval
    } bind def

    /colorimage { % def
      pop pop     % remove 'false 3' operands
      {colortogray} mergeprocs
      image
    } bind def
  } ifelse          % end of 'false' case



% define the colormap
/cmap 723 string def


% load up the colormap
currentfile cmap readhexstring
041808 049008 8c948c 045204 4c544c 04c804 84e284 449644 c4cbc4 0c380e 
04ac07 cce6cc 345e2c e4e7e4 046604 2c3a2c 347234 e4fee2 048208 64cc60 
34922c 24b224 04e404 044604 647264 242623 049f07 8cae8c 04bc06 24c61c 
f4f8f3 1c541c 04d804 1c621c 1c7220 0c280d 14910f 045e04 047c04 ccdcd0 
14ac18 1c481c 747473 04d105 0c6c0b 24852a 1c381c f4f1f3 acafac f4fef5 
0c310c acc6ac 049708 a4a4a3 3c4a44 148314 144812 9cea94 04b405 149e14 
1cbc1c 044004 e4fef4 dcdddd 748274 5c5959 4cba54 145b11 145413 147412 
c4fec4 e4f1e7 146411 088a0a 243028 09c207 fcf8f3 147c13 14c80e acceac 
3c3939 04f405 044e07 07a608 14d00f 0c1f10 0c900b d4d3d4 ecfee3 1c291d 
0c6e14 bcbfbd d4f6d4 909a94 4c5a50 0cac08 24ba24 547e54 0cbc0a 0c5c16 
0c7c0b fcf1fb acb8ac 1c311c aca7a9 e2e2e2 a4e2a4 0cc80a 6c9a6c 143715 
0c650a 0c840b 07de06 14970c 0c980a 0cb40a 848583 ecf0f0 c3c6c3 0c540d 
0c740c cccccc 74ce6c 30a02c 04ec05 54aa5c 6cb66c 9cfa9c 2c862c 5c926c 
6ca674 b4deac 9cda9c 34aa2c 6c7e6c acfeac 448244 34d22c 7d7d7c 6c6d6c 
445644 4c4d4c 1c7a19 1c3e1c 3c3f3c 2c422c 7c9a84 54c254 dceadc 144014 
343231 bccebc bcbabc 447244 6c6664 9c9d9c 7caa7c 349a38 6c7a74 84b69c 
1c4e18 898a89 ccfadc 1c6c2c b8e2c0 1c8a24 a1aaa1 3c4e3c 5f5e5c d8fed8 
24be24 78d670 688668 148a14 14a618 145624 0c480e 2c292b 142916 1c921c 
d4dad9 243828 143017 b4d2bc b4b7b5 1c961c 8c868c 247e24 144e13 04fa04 
246224 fcfefc 0c4e0c ace2b4 3caa3c 244e24 0c180c 949394 545454 ece9ec 
343634 2cb127 6c736c 0ca00c 0cda08 0c5c0b 0ccf06 146a0c b4b2b4 646464 
b4c2b4 0c3f0c ecfdf9 e4dedc ccfdcc 2c2f2b 142214 146b16 c4c2c2 545b54 
2cb62c 74ba74 346634 b4fcb0 244224 444242 246a24 e4feec 0ce204 f4f9fc 
f4eefc 444744 54b654 fcf9fc 0c9114 dcd6d4 ecfeec 0c7b14 0cc614 0c6314 
0c8414 
pop pop   % lose return values from readhexstring


% rlecmapimage expects to have 'w h bits matrix' on stack
/rlecmapimage {
  /buffer 1 string def
  /rgbval 3 string def
  /block  384 string def

  % proc to read a block from file, and return RGB data
  { currentfile buffer readhexstring pop
    /bcount exch 0 get store
    bcount 128 ge
    {  % it's a non-run block
      0 1 bcount 128 sub
      { currentfile buffer readhexstring pop pop

        % look up value in color map
        /rgbval cmap buffer 0 get 3 mul 3 getinterval store

        % and put it in position i*3 in block
        block exch 3 mul rgbval putinterval
      } for
      block  0  bcount 127 sub 3 mul  getinterval
    }

    { % else it's a run block
      currentfile buffer readhexstring pop pop

      % look up value in colormap
      /rgbval cmap buffer 0 get 3 mul 3 getinterval store

      0 1 bcount { block exch 3 mul rgbval putinterval } for

      block 0 bcount 1 add 3 mul getinterval
    } ifelse
  } % end of proc
  false 3 colorimage
} bind def


60 40 8			% dimensions of data
[60 0 0 -40 0 40]		% mapping matrix
rlecmapimage

10bf8131bf05bf03e98165e902e9046587bf3158ec31bfe9658265e9bf09bf
10bf8131bf04bf81e9bf01bf02e98265bfe982e965e901e981bf318131ec82ecbfe982e9
65bf0abf
12bf82751ebf83bf1ebf318231ec3102318111318131bf81bfe901e981bf318131bf01bf
01e90bbf
0fbf02e901bf023101ec021101a981d6a981a9118111318131bf14bf
0fbf8165e901e988e5bfd4ecd66add07808c80149dc2137f46a911d431bfe981e9bf0fbf

0fbf01e982bfe9318331a49ce28fe2454d37562456dc71567bab87a9d4bf81bfe981e9bf
81bf318131bf0abf
10bf8ac775bf311bde43224d37568656cb535f1a733c893cae8506a91131bfe9bf01bf81
58bf0abf
0fbf911ebf31b761a0442245ed56721a530a3a4e3a813a4e864e73c94246e3bf10bf
07bf81e9bf82bfe9bf92bf1ebf31ec4f0c38e2ef8e4d49561a530a3a6283624b052b8a2b
ce4e60c2dfe331bf4cbf0cbf
0abf81e9bf82bfe9ec8eec83de1f21778e786f01341a0a3a1c851c4b052b20168b162054
aa93df11312fe965bf0abf
0ebf8d3111883d77cdcf78646f0134530a810a1c911c4ece20167c517c16542893a9ec31
e965bf0abf
08bf01e999bfe91ebf316cc07743cd45786f49561a530a3a624b6b2b707c510151877c70
4edcaba9bfe981e9bf0abf
0bbf01e985bf27d34352cf90cf0e4d2656011a530a1c62ee2b20167c5102518816cc1db9
d611bfe9bf0abf
07bf81e9bf01bf90e9bf4c86d3445277d92c786f49721a0a3a853a4b0520167c827c51bd
88bd5116e44b157a11bf0cbf
0dbf8d3f0fc33d4403cfbb0e3756011a0a860a624b2b20167c817c5102510116854b897b
a911bf0bbf
08bf82e9e5bf97bf75dab209bcc021ef254d2649561a533a1c4b052b70167c037c811620
85203a853911bf0bbf
0bbf0131869eb6d3b0bc7748884845646f561acb0a7382734b2b812b1683167c16cc01cc
012b844b2813d4bf0bbf
0abf0231955e236db0c04463cf45646f5634cb533a73624b2b2016821670548854ce2b20
4b28e831bf0bbf
0abf023183b5b6d3b089b044436e45786f49341a871a0a733a626b2b200120896b4e6b05
2b1c5f9decbf0bbf
09bf8131bf97bf31d82e09d3b044cd485a786f1201cb1a530a73621c052b852b054e4b1c
0585053a282d58bf0bbf
0bbf9431bf556709b03844cd482c7864125634cb1a5f0a7382734b0501050162011c854b
0aae2d58bf0bbf
0bbf0131934a236dd3b0bc7743485a786f1201341acb535f3a813a1c011c0173023a8453
3b1458bf0bbf
0bbf8431bf0455098309d338778277ef2c852c266f1201348134cb83cb530a3a013a810a
5f815f0a850a1ab37d58bf0bbf
08bf81e9bf93bf31bf18d83209d338c044cd6e0e2c64126f0172837271cb5382530a5383
53ae531a851a01a57e58bf0bbf
0bbf01e5837600230901098138c082c0482c862c7864126f49568156728272341a811a72
0272864912bb841131bf0abf
03bf94e9bfe9bfe9bf1ebf1ebf275923b632099538c044ef81ef7881786481646f816fad
84adea01ea560156882449ad2da3115831bf0abf
04bf02e992654ce61e75bf0d185523b66d0995bcc043cd2c812c7881786483646f64f001
f08b6f496f49642d6382e3314cbf0abf
01bf85e9e5e9652fc784c7693fc7698a69c7d2b200232eb60929bc84bc6343ef2c862c78
45784d78ed82ed6f6489644d45a3afa2114c31bf0abf
01e58175c783c769d5eb8ceb797679dab87908db67c4b66d876d9538b0447743ef84ef6e
2c78458e455a457864788ecfbe9fd4315831bf0abf
88e5750d3f5779da98d083d0689b3501358d5d0236c45567b6320995b04477cd92cdef6e
2c6e5ad95acf782c4517813e31bf2fbf0bbf
887569575bd0689bc5ba83ba8a2a8a878aca2a74db5955b284b23209d3b081b077017701
cd016e02ef876e2c6e4810a4d4bf01bf814cbf0abf
873f79b835c5ba2a9a829aa8410141868de1d104c690d881d85583552e6d958b9538b0c0
77cd03cd6377afcd84cd4321c1d483d4e9654c814cbf0abf
88575b9b742ad1418de181e15081509603968450c8d759d881d8b283b2326d0981099585
9538bcb0381f871f95c3995ca931bf81bfe981e9bf0bbf
8779b8c58ad1c6e750855096d7b119b104b184d7b119d855845523b2b66d016d83952995
2987296de09211d431bf01bf01e90cbf
8979d0c52aa88de15096b181b119041901b18796c80fd74a59b2b602b6016d86326d328f
ac0b318331bf31bf01bf81e9bf0cbf
88575b9b742ad1c68de186e1c850c850c850865096c850e1e70487045e8ca7912e672e85
2e8cac33473101318158bf02bf82e9bfe981e9bf0abf
8b3f799835c5742a8bd1a8dbc683c68dc68d818dc601c68cdbd1ca40a15da66697274711
31863158bf31bf31bf82bf4ce985e9bfe9bfe9bf0abf
8bc76957dab8359bc5a1748a2a052a018a01748b029ba6665b279447ec311ebf83bf581e
bf82bf4cbf02bf82e9bfe981e9bf0abf
881e75693f57795bb8d082d068350135029b0135013088b8985b7608b40d751e811ebf83
bf1e75bf81bf4c814cbf05bf81e9bf0bbf
83e9e52fc782c7693f823f5779817976027681da760276827957b482b4c7750175822fe5
bf82bf4cbf01bf814cbf81bfe981e9bf01bf01e90dbf

%
% Compression made this file 26.36% of the uncompressed size.
%


showpage

% stop using temporary dictionary
end

% restore original state
origstate restore

%%Trailer

%%EndDocument
 @endspecial 225 w(P)-12 b(er)t(l)66 b(scr)t(ipts)f(process)h(the)h
(data)4983 4953 y @beginspecial 276 @llx 376 @lly 336
@urx 416 @ury 85 @rwi @setspecial
%%BeginDocument: green-bullet-on-white.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/fred/TeX/STYLES/Prosper/img/green-bullet-on-white.ps
%%Creator: XV Version 3.10a+FLmask  Rev: 12/29/94  -  by John Bradley
%%BoundingBox: 276 376 336 416
%%Pages: 1
%%DocumentFonts:
%%EndComments
%%EndProlog

%%Page: 1 1

% remember original state
/origstate save def

% build a temporary dictionary
20 dict begin

% define space for color conversions
/grays 60 string def  % space for gray scale line
/npixls 0 def
/rgbindx 0 def

% lower left corner
276 376 translate

% size of image (on paper, in 1/72inch coords)
59.97600 40.03200 scale

% define 'colorimage' if it isn't defined
%   ('colortogray' and 'mergeprocs' come from xwd2ps
%     via xgrab)
/colorimage where   % do we know about 'colorimage'?
  { pop }           % yes: pop off the 'dict' returned
  {                 % no:  define one
    /colortogray {  % define an RGB->I function
      /rgbdata exch store    % call input 'rgbdata'
      rgbdata length 3 idiv
      /npixls exch store
      /rgbindx 0 store
      0 1 npixls 1 sub {
        grays exch
        rgbdata rgbindx       get 20 mul    % Red
        rgbdata rgbindx 1 add get 32 mul    % Green
        rgbdata rgbindx 2 add get 12 mul    % Blue
        add add 64 idiv      % I = .5G + .31R + .18B
        put
        /rgbindx rgbindx 3 add store
      } for
      grays 0 npixls getinterval
    } bind def

    % Utility procedure for colorimage operator.
    % This procedure takes two procedures off the
    % stack and merges them into a single procedure.

    /mergeprocs { % def
      dup length
      3 -1 roll
      dup
      length
      dup
      5 1 roll
      3 -1 roll
      add
      array cvx
      dup
      3 -1 roll
      0 exch
      putinterval
      dup
      4 2 roll
      putinterval
    } bind def

    /colorimage { % def
      pop pop     % remove 'false 3' operands
      {colortogray} mergeprocs
      image
    } bind def
  } ifelse          % end of 'false' case



% define the colormap
/cmap 723 string def


% load up the colormap
currentfile cmap readhexstring
041808 049008 8c948c 045204 4c544c 04c804 84e284 449644 c4cbc4 0c380e 
04ac07 cce6cc 345e2c e4e7e4 046604 2c3a2c 347234 e4fee2 048208 64cc60 
34922c 24b224 04e404 044604 647264 242623 049f07 8cae8c 04bc06 24c61c 
f4f8f3 1c541c 04d804 1c621c 1c7220 0c280d 14910f 045e04 047c04 ccdcd0 
14ac18 1c481c 747473 04d105 0c6c0b 24852a 1c381c f4f1f3 acafac f4fef5 
0c310c acc6ac 049708 a4a4a3 3c4a44 148314 144812 9cea94 04b405 149e14 
1cbc1c 044004 e4fef4 dcdddd 748274 5c5959 4cba54 145b11 145413 147412 
c4fec4 e4f1e7 146411 088a0a 243028 09c207 fcf8f3 147c13 14c80e acceac 
3c3939 04f405 044e07 07a608 14d00f 0c1f10 0c900b d4d3d4 ecfee3 1c291d 
0c6e14 bcbfbd d4f6d4 909a94 4c5a50 0cac08 24ba24 547e54 0cbc0a 0c5c16 
0c7c0b fcf1fb acb8ac 1c311c aca7a9 e2e2e2 a4e2a4 0cc80a 6c9a6c 143715 
0c650a 0c840b 07de06 14970c 0c980a 0cb40a 848583 ecf0f0 c3c6c3 0c540d 
0c740c cccccc 74ce6c 30a02c 04ec05 54aa5c 6cb66c 9cfa9c 2c862c 5c926c 
6ca674 b4deac 9cda9c 34aa2c 6c7e6c acfeac 448244 34d22c 7d7d7c 6c6d6c 
445644 4c4d4c 1c7a19 1c3e1c 3c3f3c 2c422c 7c9a84 54c254 dceadc 144014 
343231 bccebc bcbabc 447244 6c6664 9c9d9c 7caa7c 349a38 6c7a74 84b69c 
1c4e18 898a89 ccfadc 1c6c2c b8e2c0 1c8a24 a1aaa1 3c4e3c 5f5e5c d8fed8 
24be24 78d670 688668 148a14 14a618 145624 0c480e 2c292b 142916 1c921c 
d4dad9 243828 143017 b4d2bc b4b7b5 1c961c 8c868c 247e24 144e13 04fa04 
246224 fcfefc 0c4e0c ace2b4 3caa3c 244e24 0c180c 949394 545454 ece9ec 
343634 2cb127 6c736c 0ca00c 0cda08 0c5c0b 0ccf06 146a0c b4b2b4 646464 
b4c2b4 0c3f0c ecfdf9 e4dedc ccfdcc 2c2f2b 142214 146b16 c4c2c2 545b54 
2cb62c 74ba74 346634 b4fcb0 244224 444242 246a24 e4feec 0ce204 f4f9fc 
f4eefc 444744 54b654 fcf9fc 0c9114 dcd6d4 ecfeec 0c7b14 0cc614 0c6314 
0c8414 
pop pop   % lose return values from readhexstring


% rlecmapimage expects to have 'w h bits matrix' on stack
/rlecmapimage {
  /buffer 1 string def
  /rgbval 3 string def
  /block  384 string def

  % proc to read a block from file, and return RGB data
  { currentfile buffer readhexstring pop
    /bcount exch 0 get store
    bcount 128 ge
    {  % it's a non-run block
      0 1 bcount 128 sub
      { currentfile buffer readhexstring pop pop

        % look up value in color map
        /rgbval cmap buffer 0 get 3 mul 3 getinterval store

        % and put it in position i*3 in block
        block exch 3 mul rgbval putinterval
      } for
      block  0  bcount 127 sub 3 mul  getinterval
    }

    { % else it's a run block
      currentfile buffer readhexstring pop pop

      % look up value in colormap
      /rgbval cmap buffer 0 get 3 mul 3 getinterval store

      0 1 bcount { block exch 3 mul rgbval putinterval } for

      block 0 bcount 1 add 3 mul getinterval
    } ifelse
  } % end of proc
  false 3 colorimage
} bind def


60 40 8			% dimensions of data
[60 0 0 -40 0 40]		% mapping matrix
rlecmapimage

10bf8131bf05bf03e98165e902e9046587bf3158ec31bfe9658265e9bf09bf
10bf8131bf04bf81e9bf01bf02e98265bfe982e965e901e981bf318131ec82ecbfe982e9
65bf0abf
12bf82751ebf83bf1ebf318231ec3102318111318131bf81bfe901e981bf318131bf01bf
01e90bbf
0fbf02e901bf023101ec021101a981d6a981a9118111318131bf14bf
0fbf8165e901e988e5bfd4ecd66add07808c80149dc2137f46a911d431bfe981e9bf0fbf

0fbf01e982bfe9318331a49ce28fe2454d37562456dc71567bab87a9d4bf81bfe981e9bf
81bf318131bf0abf
10bf8ac775bf311bde43224d37568656cb535f1a733c893cae8506a91131bfe9bf01bf81
58bf0abf
0fbf911ebf31b761a0442245ed56721a530a3a4e3a813a4e864e73c94246e3bf10bf
07bf81e9bf82bfe9bf92bf1ebf31ec4f0c38e2ef8e4d49561a530a3a6283624b052b8a2b
ce4e60c2dfe331bf4cbf0cbf
0abf81e9bf82bfe9ec8eec83de1f21778e786f01341a0a3a1c851c4b052b20168b162054
aa93df11312fe965bf0abf
0ebf8d3111883d77cdcf78646f0134530a810a1c911c4ece20167c517c16542893a9ec31
e965bf0abf
08bf01e999bfe91ebf316cc07743cd45786f49561a530a3a624b6b2b707c510151877c70
4edcaba9bfe981e9bf0abf
0bbf01e985bf27d34352cf90cf0e4d2656011a530a1c62ee2b20167c5102518816cc1db9
d611bfe9bf0abf
07bf81e9bf01bf90e9bf4c86d3445277d92c786f49721a0a3a853a4b0520167c827c51bd
88bd5116e44b157a11bf0cbf
0dbf8d3f0fc33d4403cfbb0e3756011a0a860a624b2b20167c817c5102510116854b897b
a911bf0bbf
08bf82e9e5bf97bf75dab209bcc021ef254d2649561a533a1c4b052b70167c037c811620
85203a853911bf0bbf
0bbf0131869eb6d3b0bc7748884845646f561acb0a7382734b2b812b1683167c16cc01cc
012b844b2813d4bf0bbf
0abf0231955e236db0c04463cf45646f5634cb533a73624b2b2016821670548854ce2b20
4b28e831bf0bbf
0abf023183b5b6d3b089b044436e45786f49341a871a0a733a626b2b200120896b4e6b05
2b1c5f9decbf0bbf
09bf8131bf97bf31d82e09d3b044cd485a786f1201cb1a530a73621c052b852b054e4b1c
0585053a282d58bf0bbf
0bbf9431bf556709b03844cd482c7864125634cb1a5f0a7382734b0501050162011c854b
0aae2d58bf0bbf
0bbf0131934a236dd3b0bc7743485a786f1201341acb535f3a813a1c011c0173023a8453
3b1458bf0bbf
0bbf8431bf0455098309d338778277ef2c852c266f1201348134cb83cb530a3a013a810a
5f815f0a850a1ab37d58bf0bbf
08bf81e9bf93bf31bf18d83209d338c044cd6e0e2c64126f0172837271cb5382530a5383
53ae531a851a01a57e58bf0bbf
0bbf01e5837600230901098138c082c0482c862c7864126f49568156728272341a811a72
0272864912bb841131bf0abf
03bf94e9bfe9bfe9bf1ebf1ebf275923b632099538c044ef81ef7881786481646f816fad
84adea01ea560156882449ad2da3115831bf0abf
04bf02e992654ce61e75bf0d185523b66d0995bcc043cd2c812c7881786483646f64f001
f08b6f496f49642d6382e3314cbf0abf
01bf85e9e5e9652fc784c7693fc7698a69c7d2b200232eb60929bc84bc6343ef2c862c78
45784d78ed82ed6f6489644d45a3afa2114c31bf0abf
01e58175c783c769d5eb8ceb797679dab87908db67c4b66d876d9538b0447743ef84ef6e
2c78458e455a457864788ecfbe9fd4315831bf0abf
88e5750d3f5779da98d083d0689b3501358d5d0236c45567b6320995b04477cd92cdef6e
2c6e5ad95acf782c4517813e31bf2fbf0bbf
887569575bd0689bc5ba83ba8a2a8a878aca2a74db5955b284b23209d3b081b077017701
cd016e02ef876e2c6e4810a4d4bf01bf814cbf0abf
873f79b835c5ba2a9a829aa8410141868de1d104c690d881d85583552e6d958b9538b0c0
77cd03cd6377afcd84cd4321c1d483d4e9654c814cbf0abf
88575b9b742ad1418de181e15081509603968450c8d759d881d8b283b2326d0981099585
9538bcb0381f871f95c3995ca931bf81bfe981e9bf0bbf
8779b8c58ad1c6e750855096d7b119b104b184d7b119d855845523b2b66d016d83952995
2987296de09211d431bf01bf01e90cbf
8979d0c52aa88de15096b181b119041901b18796c80fd74a59b2b602b6016d86326d328f
ac0b318331bf31bf01bf81e9bf0cbf
88575b9b742ad1c68de186e1c850c850c850865096c850e1e70487045e8ca7912e672e85
2e8cac33473101318158bf02bf82e9bfe981e9bf0abf
8b3f799835c5742a8bd1a8dbc683c68dc68d818dc601c68cdbd1ca40a15da66697274711
31863158bf31bf31bf82bf4ce985e9bfe9bfe9bf0abf
8bc76957dab8359bc5a1748a2a052a018a01748b029ba6665b279447ec311ebf83bf581e
bf82bf4cbf02bf82e9bfe981e9bf0abf
881e75693f57795bb8d082d068350135029b0135013088b8985b7608b40d751e811ebf83
bf1e75bf81bf4c814cbf05bf81e9bf0bbf
83e9e52fc782c7693f823f5779817976027681da760276827957b482b4c7750175822fe5
bf82bf4cbf01bf814cbf81bfe981e9bf01bf01e90dbf

%
% Compression made this file 26.36% of the uncompressed size.
%


showpage

% stop using temporary dictionary
end

% restore original state
origstate restore

%%Trailer

%%EndDocument
 @endspecial 248 w(Pro\002le)f(applications)f(at)i(inst.)82
b(le)-7 b(v)h(el)10245 5222 y
 0 setgray
 10245 5222 a 4500 6000
a
 tx@Dict begin -90 Rot  end
 4500 6000 a eop
%%Page: 5 5
5 4 bop 4500 6000 a
 tx@Dict begin 90 Rot  end
 4500 6000 a 5981 1792 a @beginspecial
-168 @llx 371 @lly 782 @urx 421 @ury 2834 @rwi 283 @rhi
@setspecial
%%BeginDocument: barre-rico.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /ufs/goualard/TEMP/barre_hor.ps
%%Creator: XV Version 3.10a  Rev: 12/29/94 (PNG patch 1.2)  -  by John Bradley
%%BoundingBox: -168 371 782 421
%%Pages: 1
%%DocumentFonts:
%%EndComments
%%EndProlog

%%Page: 1 1

% remember original state
/origstate save def

% build a temporary dictionary
20 dict begin

% define space for color conversions
/grays 950 string def  % space for gray scale line
/npixls 0 def
/rgbindx 0 def

% lower left corner
-168 371 translate

% size of image (on paper, in 1/72inch coords)
949.96800 49.96800 scale

% define 'colorimage' if it isn't defined
%   ('colortogray' and 'mergeprocs' come from xwd2ps
%     via xgrab)
/colorimage where   % do we know about 'colorimage'?
  { pop }           % yes: pop off the 'dict' returned
  {                 % no:  define one
    /colortogray {  % define an RGB->I function
      /rgbdata exch store    % call input 'rgbdata'
      rgbdata length 3 idiv
      /npixls exch store
      /rgbindx 0 store
      0 1 npixls 1 sub {
        grays exch
        rgbdata rgbindx       get 20 mul    % Red
        rgbdata rgbindx 1 add get 32 mul    % Green
        rgbdata rgbindx 2 add get 12 mul    % Blue
        add add 64 idiv      % I = .5G + .31R + .18B
        put
        /rgbindx rgbindx 3 add store
      } for
      grays 0 npixls getinterval
    } bind def

    % Utility procedure for colorimage operator.
    % This procedure takes two procedures off the
    % stack and merges them into a single procedure.

    /mergeprocs { % def
      dup length
      3 -1 roll
      dup
      length
      dup
      5 1 roll
      3 -1 roll
      add
      array cvx
      dup
      3 -1 roll
      0 exch
      putinterval
      dup
      4 2 roll
      putinterval
    } bind def

    /colorimage { % def
      pop pop     % remove 'false 3' operands
      {colortogray} mergeprocs
      image
    } bind def
  } ifelse          % end of 'false' case



% define the colormap
/cmap 117 string def


% load up the colormap
currentfile cmap readhexstring
bcfe04 dcfe84 ccfe44 ecfec4 c4fe24 d4fe64 f4fee4 e4fea4 bcfe14 ccfe54 
f4fed4 c4fe34 d4fe74 fcfef4 ecfeb4 e4fe94 f4fecc fcfee4 ecfeac c4fe1c 
d4fe54 ccfe3c dcfe74 bcfe0c dcfe8c ccfe4c ecfecc c4fe2c d4fe6c e4feac 
bcfe1c f4fedc c4fe3c fcfefc ecfebc e4fe9c fcfeec d4fe5c dcfe7c 
pop pop   % lose return values from readhexstring


% rlecmapimage expects to have 'w h bits matrix' on stack
/rlecmapimage {
  /buffer 1 string def
  /rgbval 3 string def
  /block  384 string def

  % proc to read a block from file, and return RGB data
  { currentfile buffer readhexstring pop
    /bcount exch 0 get store
    bcount 128 ge
    {  % it's a non-run block
      0 1 bcount 128 sub
      { currentfile buffer readhexstring pop pop

        % look up value in color map
        /rgbval cmap buffer 0 get 3 mul 3 getinterval store

        % and put it in position i*3 in block
        block exch 3 mul rgbval putinterval
      } for
      block  0  bcount 127 sub 3 mul  getinterval
    }

    { % else it's a run block
      currentfile buffer readhexstring pop pop

      % look up value in colormap
      /rgbval cmap buffer 0 get 3 mul 3 getinterval store

      0 1 bcount { block exch 3 mul rgbval putinterval } for

      block 0 bcount 1 add 3 mul getinterval
    } ifelse
  } % end of proc
  false 3 colorimage
} bind def


950 50 8			% dimensions of data
[950 0 0 -50 0 50]		% mapping matrix
rlecmapimage

7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f210221870d1f220e220311212a21
7f217f217f217f217f217f2175218211030e820e220e820e220e860e220e23050b048404
090e24212a21
7f217f217f217f217f217f2171218e110312260b041e131e131e131e131e871e17001702
1d24212c21
7f217f217f217f217f217f216921830d1f220e870e221226200408000b00841702070d21
0521842403100d212321
7f217f217f217f217f217f2121218524220f231f213a218f0d0a220e220e23051b041e13
1e0817000c008408190706210421851103221f0d212521
7f217f217f217f217f217f211e2189240e1c1b17000825242136218a0d1026021b041e13
081700110085172001030d210421840316030d212821
7f217f217f217f217f21342186111a120f070a215721860d1110220e220e860e12182504
17000300821b1f212521851f0e2326230e080e841d010908001100820820090209840c1d
1a06210521841026230d212a21
7f217f217f217f21792186241f10220e220e820e220e820e220e820e220e820e220e820e
220e830e070f01010182070a2117218b0610231c1508001708090a2151218e0d1f101d01
14201b1e131e131e08000700820c0d211021840d100311210921881103220e07050b0800
8400171e081e821e081e851e081e0817001000851e2009181a210b21850d22261d24212c
21
7f217f217f217f21472184241f10220e820e220e820e220e820e220e820e220e820e220e
820e220e810e2283221f0d210e219a241f10070f1c09151e041e131e131e131e131e131e
131e131e131e821e080002008b17081410210d1110220e220e820e220e820e220e010e81
2301880126012616191b08000500820422212f2182240d211921890d0a0e072625150417
00100082201a210921890d1110220e23011620048304051f210421891103231c15131e08
1700190082171e090309820c1a210e21841f0e0a0d212e21
7f217f217f217f213f2190241f100e070f011c1920041e131e081e0882081e0882081e08
82081e0882081e0803088304250a2107218b241f030e12181619151e08001d00811e268c
2614201b041e131e131e131e088108178117000f0082091f211521840d0610220e0f0e88
120f012625020c11211321890d0a22121809040817001300831e050a2105218a0d1f101d
0114201b1e170004008408260e220e860e230c020417001800821e2009020982181a2114
21810d213321
7f211221842422121f217f217f217f211221850d0a220e220e820e220e820e220e820e22
0e010e881d0f1605090b041e178117001a008f1e22210d1110221d0f0116190b041e1781
1700220001171f00820b2221102189111022120f0125151b1e011e81081e821e081e821e
081e821e081e821e081e821e1700030082171c0e110e861d01251b1e170015008220181d
021d81220e020e86070119150417000b0086081e131e08170019008308091d210c21830d
1f24214121
7f210721830d0a220e040e83230504088308052421492185240a22230f01130182070a21
7f2106218c240a03220e220e220e220e1d0f840f01231f217f210a2199240a221d0f0116
191b1e131e131e131e131e131e131e131e17002300810b16871609200413081700490087
171e051d1f10220e0a0e8712232625201b1e178117001b000108011e81081e821e081e82
1e081e821e081e821e081e831e0817000c0085171e201e08000300831720090c840c090b
1b1e871e081e081e0817001f0083081e201e821e20090809820c03210b21860d0a222307
0d210521010d3a21
7f21042188112218141b13081e088108178117000300821b1f2140218b241f100e070f1c
25021b1317811700140083081410217f218c241f10070f05021b04131e131e011e810817
811700010093170207220e220e220e220e220e220e22120f18018301231f216e218c0d0a
22120f0116191b130817004c000117811e208120090509822008002c008308200c188518
0c09021b1e821e081e821e081e821e081e811e08810817811700400081171e871e09181a
061c08000300851e200b1e1700250083171e200983091806211721820d110a010a841d26
1918214421
6c219a1103220e220e220e220e220e220e220e220e220e22120f050b08000d0093091d22
0e220e220e220e220e220e220e2203112127218c241f100e070f0105021b1e08001e0082
0422216a2189241f10220e230f1826018201260182012601890126160509150408170011
0085131e131e131e821e131e831e131e0882081700020083082524215e2183240a220e82
0e220e8b0e22120f011605190b1308178117004d008817081e2009181d06210821810900
22000408071e0117510085080b09181a21022182060900040082081700120082171e000f
00011e83091806210d21821a031d8e1d221d221d0e22030a110d240d240d810d21012182
2406214521
68219711030f252004131e131e131e131e131e131e131e131e131e821e08001100011e83
131e131e821e131e821e131e821e131e811e1383131c1f211e218d0d1110221d0f260519
0b041e17002500821b0c0103018426161c05250b258405160f1d0e210e82070f26012681
0126822601268426010f1f2117218a241f100e070f1609150408820817003900821b1f21
56218a0a0f0c2514190215041e0801088217081701173400011781001781170016000117
011e85200c181d06210e218105000d0083171e08000c00011781081e041e020802171e00
82081e208120090d0982201e001b00850820090c1a210721821817000b008b081e200920
1920192009200986090c1d1a060900030083171e20090209010c83181a0621082187060a
0e1d071d0e1d821d0f1802180107841d220a24215221
1d21830d1f220e820e220e820e220e820e220e860e220e221024212321840d10230f010a
01852616091b08003b00820812210421830d1f102281220e820e220e820e220e820e220e
820e220e820e220e890e1d0f011609201b1317811700470081081e821e081e821e081e82
1e081e821e081e821e081e821e081e821e081e821e081e821e081e821e081e841e081e08
000a0083170b260182012601820126018201260182012601820126018a01260126160525
19151b088108004200820c0d21032196240a03220e220e220e220e220e220e220e220e22
0e1d0f810f01150182231f210921840d0610220e0e0e8418140417002100821720090409
822017002c008317081e208520090c1d1a211621821a201e811e20832009200982092009
86092009181a0c003400011e8520090c181a211221831a0c200982092009820920091109
830c1a06210a2182062000080087082009181a0621060206812106810621052183061d0c
0984090c181d1a011a02060e21820d062482240d216021
1c21970d0702041e131e131e131e131e131e131e0420050f100d211f21840d231b17004d
00a008182212230f011609151b131e131e131e131e131e131e131e131e131e130817001b
0083170017007f0041008c201a241f10070f1c021b04131e821e131e821e131e821e131e
821e131e011e810817811700160001178205112101218a111022120f181614151b1e821e
081e821e081e821e081e821e081e821e0817811700250082090621032182060900260088
17081e20090c1d1a212e2183062017001f008317081e208120090a09830c181a21442183
240917008300081e2001208409181a0621142183061a1d1a841a062106217721
1b21830d071b000f008517080b05230e8f0e220e220e220e220e220e220e220e22842210
110d210821830d231e004f00841e041e08178117007f0065008117000e000108011e8720
0c16090b1e08003000880401181614201b1e178117003a00822006210421820620001f00
81171e861e20090c1d1a213521820609001700011788081e20090c181a0621492184060a
101a1086101a10110d210d880d061a180c09181a0601067f211b21
1b21820a1900140081081e821e131e821e131e821e131e821e131e8d1e131e13040b1925
1812221f0d210321820a20007f007f0033000108160081081e031e820817003600811700
40008308091a2106218203091e031e8120091609830c1d1a213d21821f01091409840c18
1a06214e21010d0124010685240624060d210321850a26012206217f211f21
1b21831020170029008c1708040b021925051626051e007f002f000d1782081e20812009
1e0982201e00370081171e811e208120090c0982181d0683061808007900011781081e07
1e8120090e09820c1d217f216721820611217f212221
1b21830d0e0c090c0982201e004d00820817002a000217011e8120090c09811e00380082
17081e851e090c181a068306210621822106218221062182210621822106212521821a0c
09010982201e002700011781081e811e2085200c181d06211321821a200022000117011e
82091e0035008317081e20812009090982201e0002008608091a062106217f215521810d
217f215321
2d21851a0c201e17004300850820090c1a068206200022008317081e208620090c181d1a
210f21821d08002e000117021e0120840c181a06214221821d0c09250983181d06211c21
821a20001c008817081e2009181d062101218109002d0081171e871e20090c181a06210e
21851d09200c1a217f215a2182110d215321810d217d21
30218306180c090f0983201e08002500811e09820920090109830c1a062104218203201e
081e01201309810c1d821d1a21182182062000260081171e011e8620090c181a06217f21
1521830d1d0c091909840c181d06210721821a191e091e83200920098209200982092009
8209200982092009820920098209200982092009820920098209200985090c181a06217f
217621810d215121860d1026142510217c21
462185061d0c2017002000820906214e21820618098209200981092082201e178217081e
011e01201309840c181a06217f217f217f217f214421810d2401248306240d217d21
4a21841d201e0800150081081e041e820906217f217f217f217f217f217f214521
4e2185061a18201e000b0085171e091d06217f217f217f217f217f217f214e21
5221821a0c090909830c1d06217f217f217f217f217f217f215121
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521

%
% Compression made this file 2.88% of the uncompressed size.
%


showpage

% stop using temporary dictionary
end

% restore original state
origstate restore

%%Trailer

%%EndDocument
 @endspecial 5001 5222 a @beginspecial @setspecial
 tx@Dict begin STP newpath 1.0 SLW 0.5451 0.39608 0.03137 setrgbcolor
 /ArrowA { moveto } def /ArrowB { } def [ 341.43292 -28.45274 -22.76227
-28.45274  /Lineto /lineto load def false Line  gsave 1.0 SLW 0.5451
0.39608 0.03137 setrgbcolor 0 setlinecap stroke  grestore end
 
@endspecial
621 x Fi(SESC)20 b(\(IA)n(COMA)e(g)o(roup\))2960 b(Joe)20
b(Renau,)h(Basilio)e(F)m(r)o(aguela,)h(and)g(Liu)g(W)n(ei)39
b(\226)20 b(page)40 b(5/23)4266 1057 y
 gsave currentpoint currentpoint translate 270 neg rotate neg exch
neg exch translate
 4266 1057 a @beginspecial
276 @llx 366 @lly 336 @urx 426 @ury 141 @rwi 141 @rhi
@setspecial
%%BeginDocument: angleHG.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/rico/texte/texstyle/Prosper-beta/img/angleHG.ps
%%Creator: XV Version 3.10a  Rev: 12/29/94 (PNG patch 1.2)  -  by John Bradley
%%BoundingBox: 276 366 336 426
%%Pages: 1
%%DocumentFonts:
%%EndComments
%%EndProlog

%%Page: 1 1

% remember original state
/origstate save def

% build a temporary dictionary
20 dict begin

% define string to hold a scanline's worth of data
/pix 180 string def

% define space for color conversions
/grays 60 string def  % space for gray scale line
/npixls 0 def
/rgbindx 0 def

% print in landscape mode
90 rotate 0 -612 translate

% lower left corner
366 276 translate

% size of image (on paper, in 1/72inch coords)
59.97600 59.97600 scale

% define 'colorimage' if it isn't defined
%   ('colortogray' and 'mergeprocs' come from xwd2ps
%     via xgrab)
/colorimage where   % do we know about 'colorimage'?
  { pop }           % yes: pop off the 'dict' returned
  {                 % no:  define one
    /colortogray {  % define an RGB->I function
      /rgbdata exch store    % call input 'rgbdata'
      rgbdata length 3 idiv
      /npixls exch store
      /rgbindx 0 store
      0 1 npixls 1 sub {
        grays exch
        rgbdata rgbindx       get 20 mul    % Red
        rgbdata rgbindx 1 add get 32 mul    % Green
        rgbdata rgbindx 2 add get 12 mul    % Blue
        add add 64 idiv      % I = .5G + .31R + .18B
        put
        /rgbindx rgbindx 3 add store
      } for
      grays 0 npixls getinterval
    } bind def

    % Utility procedure for colorimage operator.
    % This procedure takes two procedures off the
    % stack and merges them into a single procedure.

    /mergeprocs { % def
      dup length
      3 -1 roll
      dup
      length
      dup
      5 1 roll
      3 -1 roll
      add
      array cvx
      dup
      3 -1 roll
      0 exch
      putinterval
      dup
      4 2 roll
      putinterval
    } bind def

    /colorimage { % def
      pop pop     % remove 'false 3' operands
      {colortogray} mergeprocs
      image
    } bind def
  } ifelse          % end of 'false' case



60 60 8			% dimensions of data
[60 0 0 -60 0 60]		% mapping matrix
{currentfile pix readhexstring pop}
false 3 colorimage

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffafee3effeaaffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffafee3e3fe64ffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffe3fe64fafee3ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffe9fe88f1feb3ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffe8fe86dffe55fefefeffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffebfe96dafe37fefefeffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffedfe9edefe48f7fed5ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffedfe9ee2fe60eefea5f5fecaecfe95ecfe97ecfe98
ecfe99ecfe9bf6feceffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffeffeaadffe4fe0fe55dcfe3f
dbfe3cdbfe3ddbfe3dddfe48defe4cdcfe43d9fe32d6fe20e2fe5fe3fe67defe4ddefe4d
defe4edefe4edbfe3bdbfe3cdcfe3ddcfe3fdcfe40dcfe42ddfe43ddfe45ddfe46ddfe48
ddfe46e2fe63e5fe72e5fe74e6fe76e6fe77e6fe79e7fe7ae9fe86e8fe85ebfe94ecfe97
ecfe99ecfe9cedfe9eeffeacf2febcf3febef3fec1f4fec4f9fedfffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffeffeaaf1feb3f5fec7e9fe87
e7fe7be7fe7be7fe7be2fe60e1fe5bd6fe1dd8fe2adafe33e1fe5bdffe54defe4edffe50
dffe51dffe53e0fe54ddfe49ddfe4bdefe4cdefe4edefe50dffe52dffe54e5fe73eafe93
e9fe89e6fe7ae4fe6ce4fe6ee8fe84e8fe85e9fe87e9fe8ae8fe84e7fe7ce8fe81e9fe8a
f0feb0f8fedbf9fedff1feb8f1febaeafe8bfbfeeafbfeebfdfef5ffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff5fecddffe52e1fe5df5fec9f5fec9f5fecaf5feca
f5fecbf5feccf5feccf5fecdf6fecef6fecef6fecef6fecff6fed0f6fed1eefea5e9fe8a
f6fed1f7fed7f7fed8f7fed9f6fecdfafee8fcfef1fcfef2fdfef7fcfef3fdfef7fefefc
fefefcfefefdf9fee0f6fecff5feccf4fec2ffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff5fecde3fe64e5fe74ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffdfef5fefefdfefefdfefefcfefefcfffffffefef9
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff5fecde5fe74dffe53ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff6fecee6fe79e5fe6ff8fed8ffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff6fecee6fe7aebfe95effeaaffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff6fecee6fe7aedfe9eeefea2ffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff6fecee6fe7bedfe9eeefea3ffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff6fecfe6fe78ecfe9eeefea5ffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffefefe
fefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff6fed0e2fe63e0fe59dffe55ffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffefefe
fefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffedfe9fe2fe5fd8fe2ad8fe2dffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffecfe9adffe53d6fe1cdefe4cf6fecfffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffedfe9cd8fe2cd6fe20defe4bf6fed0ffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffefefdffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffedfe9dd8fe27d7fe22defe4ef6fed0ffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffedfe9dd7fe26d6fe20e0fe5bf6fed2ffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff3febdd7fe22d7fe22e1fe5ef7fed3ffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff4fec6d6fe20d7fe21e0fe57f7fed4ffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff4fec6d6fe20d6fe1fe0fe59f7fed5ffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff4fec6d6fe1ed6fe1ee5fe73f7fed6ffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff4fec6d6fe1dd9fe32e0fe56ffffffffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff5fecce0fe55defe48e8fe81ffffffffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffbfeede7fe7fe0fe56e9fe85ffffffffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff7fed8e8fe84e7fe7ef1feb4ffffffffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff2feb8edfea0effea6f1feb6ffffffffffffffffff
fffffffefefefefefeffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffefefceffeabf0feafeffea7f2feb7ffffffffffffffffff
fffffffefefefefefefefefeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffefefcf5fecaecfe9de7fe7af8feddffffffffffffffffff
fffffffefefefefefefefefefefefeffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffefefcf5fecce8fe85e8fe80ffffffffffffffffffffffff
fffffffefefefefefefefefeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffff8fedefdfef8fdfefbf3fec0e9fe89ecfe96ffffffffffffffffffffffff
fefefefefefefefefefefefeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffdfef6fefefafefefaf4fec2e9fe89ecfe96ffffffffffffffffffffffff
fefefefefefefefefefefefeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffdfef6fefefefefefdf4fec2e8fe85edfe9dffffffffffffffffffffffff
fefefefefefefefefefefefeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffefef9fefefdfefefce7fe7be5fe76f2feb7ffffffffffffffffffffffff
fffffffffffffefefefefefeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffdfef6fdfefafefefbe2fe65e5fe75f6fed0ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffdfef9fefefce6fe79e6fe77fafee6ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffcfef6fefefbecfe9be7fe7efbfeecffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffdfef5fdfef7f7fed5e9fe8dfcfef2ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffcfeeffbfeebedfea1fdfef7ffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffefefeffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffefefdfbfee9effeabffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffefefefefefeffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffbfeeceffea6ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff9fee3f3fec1ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffeefea2f8fedaffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff1feb2fafee4ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffcfef0fefefaffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff


showpage

% stop using temporary dictionary
end

% restore original state
origstate restore

%%Trailer

%%EndDocument
 @endspecial 4511 1057 a
 currentpoint grestore moveto
 4511 1057 a 4130 5844 a
 currentpoint currentpoint translate 0.76611 0.76611 scale neg exch
neg exch translate
 4130
5844 a 4130 5844 a
 gsave currentpoint currentpoint translate 0 neg rotate neg exch neg
exch translate
 4130 5844 a @beginspecial 0 @llx 0
@lly 37 @urx 42 @ury 370 @rwi @setspecial
%%BeginDocument: figs/uiuc.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: uiuc.eps
%%Creator: fig2dev Version 3.2 Patchlevel 3d
%%CreationDate: Sun Feb 10 22:03:46 2002
%%For: renau@nether.cs.uiuc.edu (Jose Renau)
%%BoundingBox: 0 0 37 42
%%Magnification: 1.0000
%%EndComments
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def
/col32 {0.200 0.200 0.400 srgb} bind def
/col33 {0.800 0.400 0.000 srgb} bind def

end
save
newpath 0 42 moveto 0 0 lineto 37 0 lineto 37 42 lineto closepath clip newpath
-273.7 413.7 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
 0.06000 0.06000 sc
%
% Fig objects follow
%
%  polyline 
% Polyline
n 5070 6872 m 5070 6227 l 4584 6227 l 4584 6872 l
 5070 6872 l  cp gs col32 1.00 shd ef gr 
%  polyline 
% Polyline
15.000 slw
n 5070 6872 m 5070 6227 l 4584 6227 l 4584 6872 l
 5070 6872 l  cp gs col32 s gr 
%  polyline 
% Polyline
0.000 slw
n 5056 6858 m 5056 6243 l 4598 6243 l 4598 6858 l
 5056 6858 l  cp gs col32 1.00 shd ef gr 
%  polyline 
% Polyline
7.500 slw
n 5056 6858 m 5056 6243 l 4598 6243 l 4598 6858 l
 5056 6858 l  cp gs col33 s gr 
%  spline 
% Polyline
2 slj
0.000 slw
n 4944 6783 m 4944 6781 l 4944 6773 l 4944 6759 l 4944 6751 l 4944 6749 l
 4943 6749 l 4935 6748 l 4924 6746 l 4914 6744 l 4906 6742 l
 4900 6741 l 4896 6739 l 4892 6738 l 4887 6735 l 4884 6732 l
 4880 6728 l 4877 6722 l 4875 6716 l 4873 6709 l 4872 6702 l
 4871 6693 l 4870 6683 l 4869 6670 l 4869 6654 l 4868 6637 l
 4868 6621 l 4868 6609 l 4868 6604 l 4868 6603 l 4868 6602 l
 4868 6597 l 4868 6585 l 4868 6567 l 4868 6544 l 4868 6521 l
 4868 6503 l 4868 6491 l 4868 6486 l 4868 6485 l 4868 6483 l
 4868 6474 l 4868 6457 l 4869 6438 l 4869 6420 l 4870 6406 l
 4870 6395 l 4871 6387 l 4873 6381 l 4874 6375 l 4876 6371 l
 4879 6367 l 4882 6365 l 4885 6363 l 4889 6362 l 4892 6361 l
 4898 6359 l 4905 6358 l 4915 6356 l 4925 6354 l 4933 6352 l
 4934 6352 l 4934 6350 l 4934 6343 l 4934 6331 l 4934 6324 l
 4934 6322 l 4933 6322 l 4928 6322 l 4916 6322 l 4896 6322 l
 4869 6322 l 4837 6322 l 4806 6322 l 4779 6322 l 4759 6322 l
 4747 6322 l 4742 6322 l 4741 6322 l 4740 6322 l 4737 6322 l
 4732 6322 l 4729 6322 l 4726 6322 l 4724 6322 l 4721 6323 l
 4718 6324 l 4716 6325 l 4714 6326 l 4712 6327 l 4710 6329 l
 4707 6332 l 4705 6334 l 4703 6336 l 4701 6338 l 4700 6339 l
 4699 6341 l 4698 6342 l 4697 6344 l 4696 6346 l 4696 6347 l
 4695 6349 l 4695 6351 l 4695 6353 l 4694 6356 l 4694 6358 l
 4694 6359 l 4694 6360 l 4694 6362 l 4694 6365 l 4694 6367 l
 4695 6369 l 4695 6370 l 4696 6372 l 4697 6374 l 4697 6375 l
 4698 6377 l 4699 6378 l 4701 6379 l 4702 6381 l 4704 6383 l
 4706 6385 l 4708 6386 l 4709 6388 l 4710 6389 l 4712 6389 l
 4713 6390 l 4715 6391 l 4716 6391 l 4718 6391 l 4720 6391 l
 4721 6391 l 4724 6391 l 4726 6391 l 4727 6391 l 4729 6391 l
 4732 6390 l 4735 6390 l 4737 6389 l 4740 6388 l 4742 6387 l
 4744 6385 l 4747 6383 l 4748 6381 l 4749 6379 l 4750 6376 l
 4751 6372 l 4752 6369 l 4752 6368 l 4752 6366 l 4752 6364 l
 4752 6362 l 4752 6361 l 4752 6359 l 4752 6358 l 4751 6357 l
 4751 6356 l 4750 6355 l 4749 6354 l 4749 6353 l 4748 6352 l
 4747 6351 l 4746 6350 l 4745 6349 l 4744 6348 l 4743 6348 l
 4742 6347 l 4741 6346 l 4740 6346 l 4739 6346 l 4738 6346 l
 4736 6345 l 4735 6345 l 4733 6345 l 4732 6345 l 4730 6345 l
 4729 6345 l 4728 6346 l 4727 6346 l 4725 6346 l 4724 6347 l
 4724 6348 l 4723 6348 l 4722 6349 l 4721 6351 l 4720 6352 l
 4719 6353 l 4718 6354 l 4718 6355 l 4717 6356 l 4717 6357 l
 4717 6358 l 4716 6359 l 4717 6360 l 4717 6361 l 4717 6362 l
 4717 6363 l 4718 6364 l 4718 6365 l 4719 6366 l 4719 6367 l
 4720 6367 l 4720 6368 l 4721 6368 l 4722 6369 l 4723 6369 l
 4723 6368 l 4724 6368 l 4725 6368 l 4726 6367 l 4727 6367 l
 4727 6366 l 4728 6366 l 4728 6365 l 4729 6365 l 4729 6364 l
 4729 6363 l 4729 6362 l 4729 6361 l 4728 6360 l 4728 6359 l
 4729 6359 l 4729 6358 l 4730 6357 l 4731 6357 l 4731 6356 l
 4732 6356 l 4733 6356 l 4734 6356 l 4735 6356 l 4735 6357 l
 4736 6357 l 4737 6357 l 4738 6357 l 4738 6358 l 4739 6358 l
 4739 6359 l 4739 6360 l 4740 6360 l 4740 6361 l 4740 6362 l
 4741 6362 l 4741 6363 l 4741 6364 l 4740 6364 l 4740 6365 l
 4740 6366 l 4740 6368 l 4739 6371 l 4739 6373 l 4738 6374 l
 4737 6375 l 4736 6376 l 4735 6377 l 4733 6378 l 4732 6379 l
 4731 6379 l 4729 6379 l 4727 6380 l 4725 6380 l 4724 6380 l
 4722 6380 l 4721 6380 l 4720 6380 l 4719 6380 l 4718 6380 l
 4717 6379 l 4716 6379 l 4715 6379 l 4715 6378 l 4714 6377 l
 4713 6376 l 4712 6375 l 4711 6374 l 4710 6373 l 4710 6372 l
 4709 6372 l 4708 6371 l 4708 6370 l 4707 6369 l 4707 6368 l
 4707 6367 l 4706 6365 l 4706 6363 l 4706 6361 l 4706 6359 l
 4706 6357 l 4706 6355 l 4706 6353 l 4706 6352 l 4707 6351 l
 4707 6350 l 4707 6348 l 4708 6347 l 4709 6346 l 4709 6345 l
 4710 6344 l 4712 6343 l 4713 6342 l 4715 6340 l 4717 6339 l
 4718 6337 l 4720 6337 l 4721 6336 l 4723 6335 l 4725 6334 l
 4727 6334 l 4729 6334 l 4731 6333 l 4734 6333 l 4738 6333 l
 4740 6333 l 4741 6333 l 4742 6333 l 4744 6333 l 4747 6333 l
 4753 6333 l 4759 6333 l 4767 6333 l 4776 6333 l 4785 6333 l
 4794 6333 l 4802 6333 l 4809 6333 l 4815 6333 l 4822 6333 l
 4827 6333 l 4828 6333 l 4828 6334 l 4828 6337 l 4828 6341 l
 4828 6344 l 4828 6345 l 4826 6345 l 4816 6345 l 4797 6345 l
 4779 6345 l 4769 6345 l 4767 6345 l 4766 6345 l 4765 6345 l
 4764 6346 l 4763 6346 l 4762 6347 l 4762 6348 l 4761 6349 l
 4761 6350 l 4761 6351 l 4761 6352 l 4761 6353 l 4761 6354 l
 4761 6355 l 4762 6356 l 4762 6357 l 4763 6358 l 4764 6359 l
 4765 6359 l 4766 6359 l 4767 6359 l 4769 6359 l 4779 6359 l
 4798 6359 l 4816 6359 l 4826 6359 l 4828 6359 l 4828 6360 l
 4828 6362 l 4828 6367 l 4828 6369 l 4828 6370 l 4826 6370 l
 4817 6370 l 4799 6370 l 4782 6370 l 4773 6370 l 4771 6370 l
 4770 6370 l 4769 6370 l 4768 6370 l 4767 6371 l 4766 6371 l
 4766 6372 l 4765 6373 l 4765 6374 l 4765 6375 l 4765 6376 l
 4765 6377 l 4766 6378 l 4766 6379 l 4767 6380 l 4768 6381 l
 4769 6381 l 4770 6381 l 4771 6381 l 4773 6381 l 4782 6381 l
 4800 6381 l 4817 6381 l 4826 6381 l 4828 6381 l 4828 6384 l
 4828 6391 l 4828 6404 l 4828 6423 l 4828 6449 l 4828 6480 l
 4828 6516 l 4828 6554 l 4828 6592 l 4828 6628 l 4828 6659 l
 4828 6685 l 4828 6704 l 4828 6717 l 4828 6724 l 4828 6727 l
 4827 6727 l 4819 6727 l 4802 6727 l 4780 6727 l 4757 6727 l
 4740 6727 l 4732 6727 l 4731 6727 l 4730 6727 l 4729 6727 l
 4728 6727 l 4727 6728 l 4726 6728 l 4726 6729 l 4726 6730 l
 4725 6730 l 4725 6731 l 4725 6732 l 4725 6733 l 4725 6734 l
 4725 6735 l 4725 6736 l 4725 6737 l 4726 6738 l 4726 6739 l
 4727 6739 l 4727 6740 l 4728 6740 l 4729 6740 l 4730 6740 l
 4731 6740 l 4732 6740 l 4740 6740 l 4757 6740 l 4780 6740 l
 4802 6740 l 4819 6740 l 4827 6740 l 4828 6740 l 4828 6741 l
 4828 6745 l 4828 6750 l 4828 6754 l 4828 6755 l 4827 6755 l
 4822 6755 l 4811 6755 l 4792 6755 l 4770 6755 l 4748 6755 l
 4729 6755 l 4718 6755 l 4713 6755 l 4712 6755 l 4710 6755 l
 4707 6755 l 4706 6756 l 4704 6756 l 4703 6757 l 4702 6758 l
 4701 6759 l 4700 6760 l 4699 6761 l 4699 6763 l 4698 6764 l
 4698 6767 l 4698 6769 l 4698 6770 l 4698 6773 l 4698 6779 l
 4698 6782 l 4698 6783 l 4699 6783 l 4703 6783 l 4713 6783 l
 4730 6783 l 4755 6783 l 4786 6783 l 4821 6783 l 4856 6783 l
 4887 6783 l 4912 6783 l 4929 6783 l 4939 6783 l 4943 6783 l

 4944 6783 l  cp gs col7 1.00 shd ef gr 
%  spline 
% Polyline
n 4783 6706 m 4783 6705 l 4783 6702 l 4783 6693 l 4783 6678 l 4783 6656 l
 4783 6626 l 4783 6592 l 4783 6555 l 4783 6517 l 4783 6483 l
 4783 6453 l 4783 6431 l 4783 6416 l 4783 6407 l 4783 6404 l
 4783 6403 l 4783 6402 l 4783 6401 l 4783 6400 l 4782 6400 l
 4782 6399 l 4781 6399 l 4781 6398 l 4780 6398 l 4779 6398 l
 4778 6398 l 4777 6398 l 4776 6398 l 4775 6398 l 4774 6399 l
 4773 6399 l 4773 6400 l 4772 6401 l 4772 6402 l 4772 6403 l
 4772 6404 l 4772 6407 l 4772 6416 l 4772 6431 l 4772 6453 l
 4772 6483 l 4772 6517 l 4772 6555 l 4772 6592 l 4772 6626 l
 4772 6656 l 4772 6678 l 4772 6693 l 4772 6702 l 4772 6705 l
 4772 6706 l 4772 6707 l 4772 6708 l 4773 6709 l 4773 6710 l
 4774 6711 l 4775 6712 l 4776 6712 l 4777 6712 l 4778 6712 l
 4779 6712 l 4780 6712 l 4781 6712 l 4781 6711 l 4782 6711 l
 4782 6710 l 4783 6709 l 4783 6708 l 4783 6707 l
 4783 6706 l  cp gs col7 1.00 shd ef gr 
%  spline 
% Polyline
n 4813 6705 m 4813 6704 l 4813 6701 l 4813 6692 l 4813 6677 l 4813 6655 l
 4813 6626 l 4813 6592 l 4813 6555 l 4813 6518 l 4813 6484 l
 4813 6455 l 4813 6433 l 4813 6418 l 4813 6409 l 4813 6406 l
 4813 6405 l 4813 6404 l 4813 6402 l 4813 6401 l 4812 6400 l
 4811 6399 l 4811 6398 l 4810 6398 l 4809 6398 l 4808 6397 l
 4807 6397 l 4806 6397 l 4805 6397 l 4804 6397 l 4803 6397 l
 4802 6397 l 4801 6398 l 4800 6398 l 4799 6399 l 4799 6400 l
 4798 6401 l 4798 6402 l 4798 6404 l 4798 6405 l 4798 6406 l
 4798 6409 l 4798 6418 l 4798 6433 l 4798 6455 l 4798 6484 l
 4798 6518 l 4798 6555 l 4798 6592 l 4798 6626 l 4798 6655 l
 4798 6677 l 4798 6692 l 4798 6701 l 4798 6704 l 4798 6705 l
 4798 6706 l 4798 6707 l 4798 6708 l 4799 6709 l 4799 6710 l
 4799 6711 l 4800 6711 l 4801 6712 l 4802 6713 l 4803 6713 l
 4804 6713 l 4805 6713 l 4806 6713 l 4807 6713 l 4808 6713 l
 4809 6712 l 4810 6712 l 4811 6711 l 4812 6710 l 4812 6709 l
 4813 6708 l 4813 6707 l 4813 6706 l
 4813 6705 l  cp gs col7 1.00 shd ef gr 
%  polyline 
% Polyline
0 slj
n 5136 6864 m 5124 6864 l 5124 6894 l 5119 6894 l 5119 6864 l 5108 6864 l
 5108 6860 l 5136 6860 l
 5136 6864 l  cp gs col32 1.00 shd ef gr 
%  polyline 
% Polyline
n 5172 6894 m 5167 6894 l 5167 6867 l 5157 6880 l 5156 6880 l 5146 6867 l
 5145 6867 l 5145 6894 l 5141 6894 l 5141 6860 l 5145 6860 l
 5156 6874 l 5168 6860 l 5172 6860 l
 5172 6894 l  cp gs col32 1.00 shd ef gr 
$F2psEnd
rs

%%EndDocument
 @endspecial 4769 5844 a
 currentpoint grestore moveto
 4769 5844 a 4130 5844 a
 currentpoint currentpoint translate 1 0.76611 div 1 0.76611 div scale
neg exch neg exch translate
 4130
5844 a 5001 3450 a
SDict begin H.S end
 5001 3450 a 5001 3450 a
SDict begin H.R end
 5001 3450
a 5001 3450 a
SDict begin [ /View [/XYZ H.V] /Dest (page.1) cvn H.B /DEST pdfmark
end
 5001 3450 a 5001 3450 a
SDict begin [ {ThisPage} << /Trans << /S /Replace >> >> /PUT pdfmark
end
 5001 3450 a 5001
3450 a
SDict begin [ /Page 5/View [ /XYZ null null null ] /Title (Mottos)
/OUT pdfmark end
 5001 3450 a 9034 1453 a Fm(M)18 b Fn(O)7 b(T)18
b(T)7 b(O)18 b(S)4581 1980 y
 0. 0. 1. setrgbcolor
 4581 1980 a 4649 2157 a
@beginspecial 276 @llx 376 @lly 336 @urx 416 @ury 113
@rwi @setspecial
%%BeginDocument: green-bullet-on-white.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/fred/TeX/STYLES/Prosper/img/green-bullet-on-white.ps
%%Creator: XV Version 3.10a+FLmask  Rev: 12/29/94  -  by John Bradley
%%BoundingBox: 276 376 336 416
%%Pages: 1
%%DocumentFonts:
%%EndComments
%%EndProlog

%%Page: 1 1

% remember original state
/origstate save def

% build a temporary dictionary
20 dict begin

% define space for color conversions
/grays 60 string def  % space for gray scale line
/npixls 0 def
/rgbindx 0 def

% lower left corner
276 376 translate

% size of image (on paper, in 1/72inch coords)
59.97600 40.03200 scale

% define 'colorimage' if it isn't defined
%   ('colortogray' and 'mergeprocs' come from xwd2ps
%     via xgrab)
/colorimage where   % do we know about 'colorimage'?
  { pop }           % yes: pop off the 'dict' returned
  {                 % no:  define one
    /colortogray {  % define an RGB->I function
      /rgbdata exch store    % call input 'rgbdata'
      rgbdata length 3 idiv
      /npixls exch store
      /rgbindx 0 store
      0 1 npixls 1 sub {
        grays exch
        rgbdata rgbindx       get 20 mul    % Red
        rgbdata rgbindx 1 add get 32 mul    % Green
        rgbdata rgbindx 2 add get 12 mul    % Blue
        add add 64 idiv      % I = .5G + .31R + .18B
        put
        /rgbindx rgbindx 3 add store
      } for
      grays 0 npixls getinterval
    } bind def

    % Utility procedure for colorimage operator.
    % This procedure takes two procedures off the
    % stack and merges them into a single procedure.

    /mergeprocs { % def
      dup length
      3 -1 roll
      dup
      length
      dup
      5 1 roll
      3 -1 roll
      add
      array cvx
      dup
      3 -1 roll
      0 exch
      putinterval
      dup
      4 2 roll
      putinterval
    } bind def

    /colorimage { % def
      pop pop     % remove 'false 3' operands
      {colortogray} mergeprocs
      image
    } bind def
  } ifelse          % end of 'false' case



% define the colormap
/cmap 723 string def


% load up the colormap
currentfile cmap readhexstring
041808 049008 8c948c 045204 4c544c 04c804 84e284 449644 c4cbc4 0c380e 
04ac07 cce6cc 345e2c e4e7e4 046604 2c3a2c 347234 e4fee2 048208 64cc60 
34922c 24b224 04e404 044604 647264 242623 049f07 8cae8c 04bc06 24c61c 
f4f8f3 1c541c 04d804 1c621c 1c7220 0c280d 14910f 045e04 047c04 ccdcd0 
14ac18 1c481c 747473 04d105 0c6c0b 24852a 1c381c f4f1f3 acafac f4fef5 
0c310c acc6ac 049708 a4a4a3 3c4a44 148314 144812 9cea94 04b405 149e14 
1cbc1c 044004 e4fef4 dcdddd 748274 5c5959 4cba54 145b11 145413 147412 
c4fec4 e4f1e7 146411 088a0a 243028 09c207 fcf8f3 147c13 14c80e acceac 
3c3939 04f405 044e07 07a608 14d00f 0c1f10 0c900b d4d3d4 ecfee3 1c291d 
0c6e14 bcbfbd d4f6d4 909a94 4c5a50 0cac08 24ba24 547e54 0cbc0a 0c5c16 
0c7c0b fcf1fb acb8ac 1c311c aca7a9 e2e2e2 a4e2a4 0cc80a 6c9a6c 143715 
0c650a 0c840b 07de06 14970c 0c980a 0cb40a 848583 ecf0f0 c3c6c3 0c540d 
0c740c cccccc 74ce6c 30a02c 04ec05 54aa5c 6cb66c 9cfa9c 2c862c 5c926c 
6ca674 b4deac 9cda9c 34aa2c 6c7e6c acfeac 448244 34d22c 7d7d7c 6c6d6c 
445644 4c4d4c 1c7a19 1c3e1c 3c3f3c 2c422c 7c9a84 54c254 dceadc 144014 
343231 bccebc bcbabc 447244 6c6664 9c9d9c 7caa7c 349a38 6c7a74 84b69c 
1c4e18 898a89 ccfadc 1c6c2c b8e2c0 1c8a24 a1aaa1 3c4e3c 5f5e5c d8fed8 
24be24 78d670 688668 148a14 14a618 145624 0c480e 2c292b 142916 1c921c 
d4dad9 243828 143017 b4d2bc b4b7b5 1c961c 8c868c 247e24 144e13 04fa04 
246224 fcfefc 0c4e0c ace2b4 3caa3c 244e24 0c180c 949394 545454 ece9ec 
343634 2cb127 6c736c 0ca00c 0cda08 0c5c0b 0ccf06 146a0c b4b2b4 646464 
b4c2b4 0c3f0c ecfdf9 e4dedc ccfdcc 2c2f2b 142214 146b16 c4c2c2 545b54 
2cb62c 74ba74 346634 b4fcb0 244224 444242 246a24 e4feec 0ce204 f4f9fc 
f4eefc 444744 54b654 fcf9fc 0c9114 dcd6d4 ecfeec 0c7b14 0cc614 0c6314 
0c8414 
pop pop   % lose return values from readhexstring


% rlecmapimage expects to have 'w h bits matrix' on stack
/rlecmapimage {
  /buffer 1 string def
  /rgbval 3 string def
  /block  384 string def

  % proc to read a block from file, and return RGB data
  { currentfile buffer readhexstring pop
    /bcount exch 0 get store
    bcount 128 ge
    {  % it's a non-run block
      0 1 bcount 128 sub
      { currentfile buffer readhexstring pop pop

        % look up value in color map
        /rgbval cmap buffer 0 get 3 mul 3 getinterval store

        % and put it in position i*3 in block
        block exch 3 mul rgbval putinterval
      } for
      block  0  bcount 127 sub 3 mul  getinterval
    }

    { % else it's a run block
      currentfile buffer readhexstring pop pop

      % look up value in colormap
      /rgbval cmap buffer 0 get 3 mul 3 getinterval store

      0 1 bcount { block exch 3 mul rgbval putinterval } for

      block 0 bcount 1 add 3 mul getinterval
    } ifelse
  } % end of proc
  false 3 colorimage
} bind def


60 40 8			% dimensions of data
[60 0 0 -40 0 40]		% mapping matrix
rlecmapimage

10bf8131bf05bf03e98165e902e9046587bf3158ec31bfe9658265e9bf09bf
10bf8131bf04bf81e9bf01bf02e98265bfe982e965e901e981bf318131ec82ecbfe982e9
65bf0abf
12bf82751ebf83bf1ebf318231ec3102318111318131bf81bfe901e981bf318131bf01bf
01e90bbf
0fbf02e901bf023101ec021101a981d6a981a9118111318131bf14bf
0fbf8165e901e988e5bfd4ecd66add07808c80149dc2137f46a911d431bfe981e9bf0fbf

0fbf01e982bfe9318331a49ce28fe2454d37562456dc71567bab87a9d4bf81bfe981e9bf
81bf318131bf0abf
10bf8ac775bf311bde43224d37568656cb535f1a733c893cae8506a91131bfe9bf01bf81
58bf0abf
0fbf911ebf31b761a0442245ed56721a530a3a4e3a813a4e864e73c94246e3bf10bf
07bf81e9bf82bfe9bf92bf1ebf31ec4f0c38e2ef8e4d49561a530a3a6283624b052b8a2b
ce4e60c2dfe331bf4cbf0cbf
0abf81e9bf82bfe9ec8eec83de1f21778e786f01341a0a3a1c851c4b052b20168b162054
aa93df11312fe965bf0abf
0ebf8d3111883d77cdcf78646f0134530a810a1c911c4ece20167c517c16542893a9ec31
e965bf0abf
08bf01e999bfe91ebf316cc07743cd45786f49561a530a3a624b6b2b707c510151877c70
4edcaba9bfe981e9bf0abf
0bbf01e985bf27d34352cf90cf0e4d2656011a530a1c62ee2b20167c5102518816cc1db9
d611bfe9bf0abf
07bf81e9bf01bf90e9bf4c86d3445277d92c786f49721a0a3a853a4b0520167c827c51bd
88bd5116e44b157a11bf0cbf
0dbf8d3f0fc33d4403cfbb0e3756011a0a860a624b2b20167c817c5102510116854b897b
a911bf0bbf
08bf82e9e5bf97bf75dab209bcc021ef254d2649561a533a1c4b052b70167c037c811620
85203a853911bf0bbf
0bbf0131869eb6d3b0bc7748884845646f561acb0a7382734b2b812b1683167c16cc01cc
012b844b2813d4bf0bbf
0abf0231955e236db0c04463cf45646f5634cb533a73624b2b2016821670548854ce2b20
4b28e831bf0bbf
0abf023183b5b6d3b089b044436e45786f49341a871a0a733a626b2b200120896b4e6b05
2b1c5f9decbf0bbf
09bf8131bf97bf31d82e09d3b044cd485a786f1201cb1a530a73621c052b852b054e4b1c
0585053a282d58bf0bbf
0bbf9431bf556709b03844cd482c7864125634cb1a5f0a7382734b0501050162011c854b
0aae2d58bf0bbf
0bbf0131934a236dd3b0bc7743485a786f1201341acb535f3a813a1c011c0173023a8453
3b1458bf0bbf
0bbf8431bf0455098309d338778277ef2c852c266f1201348134cb83cb530a3a013a810a
5f815f0a850a1ab37d58bf0bbf
08bf81e9bf93bf31bf18d83209d338c044cd6e0e2c64126f0172837271cb5382530a5383
53ae531a851a01a57e58bf0bbf
0bbf01e5837600230901098138c082c0482c862c7864126f49568156728272341a811a72
0272864912bb841131bf0abf
03bf94e9bfe9bfe9bf1ebf1ebf275923b632099538c044ef81ef7881786481646f816fad
84adea01ea560156882449ad2da3115831bf0abf
04bf02e992654ce61e75bf0d185523b66d0995bcc043cd2c812c7881786483646f64f001
f08b6f496f49642d6382e3314cbf0abf
01bf85e9e5e9652fc784c7693fc7698a69c7d2b200232eb60929bc84bc6343ef2c862c78
45784d78ed82ed6f6489644d45a3afa2114c31bf0abf
01e58175c783c769d5eb8ceb797679dab87908db67c4b66d876d9538b0447743ef84ef6e
2c78458e455a457864788ecfbe9fd4315831bf0abf
88e5750d3f5779da98d083d0689b3501358d5d0236c45567b6320995b04477cd92cdef6e
2c6e5ad95acf782c4517813e31bf2fbf0bbf
887569575bd0689bc5ba83ba8a2a8a878aca2a74db5955b284b23209d3b081b077017701
cd016e02ef876e2c6e4810a4d4bf01bf814cbf0abf
873f79b835c5ba2a9a829aa8410141868de1d104c690d881d85583552e6d958b9538b0c0
77cd03cd6377afcd84cd4321c1d483d4e9654c814cbf0abf
88575b9b742ad1418de181e15081509603968450c8d759d881d8b283b2326d0981099585
9538bcb0381f871f95c3995ca931bf81bfe981e9bf0bbf
8779b8c58ad1c6e750855096d7b119b104b184d7b119d855845523b2b66d016d83952995
2987296de09211d431bf01bf01e90cbf
8979d0c52aa88de15096b181b119041901b18796c80fd74a59b2b602b6016d86326d328f
ac0b318331bf31bf01bf81e9bf0cbf
88575b9b742ad1c68de186e1c850c850c850865096c850e1e70487045e8ca7912e672e85
2e8cac33473101318158bf02bf82e9bfe981e9bf0abf
8b3f799835c5742a8bd1a8dbc683c68dc68d818dc601c68cdbd1ca40a15da66697274711
31863158bf31bf31bf82bf4ce985e9bfe9bfe9bf0abf
8bc76957dab8359bc5a1748a2a052a018a01748b029ba6665b279447ec311ebf83bf581e
bf82bf4cbf02bf82e9bfe981e9bf0abf
881e75693f57795bb8d082d068350135029b0135013088b8985b7608b40d751e811ebf83
bf1e75bf81bf4c814cbf05bf81e9bf0bbf
83e9e52fc782c7693f823f5779817976027681da760276827957b482b4c7750175822fe5
bf82bf4cbf01bf814cbf81bfe981e9bf01bf01e90dbf

%
% Compression made this file 26.36% of the uncompressed size.
%


showpage

% stop using temporary dictionary
end

% restore original state
origstate restore

%%Trailer

%%EndDocument
 @endspecial 298 w Fg(Build)65 b(the)j(f)-7 b(astest)66
b(possib)-5 b(le)65 b(sim)n(ulator)8645 2157 y
 0 setgray
 8645 2157
a 4983 2472 a @beginspecial 276 @llx 376 @lly 336 @urx
416 @ury 85 @rwi @setspecial
%%BeginDocument: green-bullet-on-white.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/fred/TeX/STYLES/Prosper/img/green-bullet-on-white.ps
%%Creator: XV Version 3.10a+FLmask  Rev: 12/29/94  -  by John Bradley
%%BoundingBox: 276 376 336 416
%%Pages: 1
%%DocumentFonts:
%%EndComments
%%EndProlog

%%Page: 1 1

% remember original state
/origstate save def

% build a temporary dictionary
20 dict begin

% define space for color conversions
/grays 60 string def  % space for gray scale line
/npixls 0 def
/rgbindx 0 def

% lower left corner
276 376 translate

% size of image (on paper, in 1/72inch coords)
59.97600 40.03200 scale

% define 'colorimage' if it isn't defined
%   ('colortogray' and 'mergeprocs' come from xwd2ps
%     via xgrab)
/colorimage where   % do we know about 'colorimage'?
  { pop }           % yes: pop off the 'dict' returned
  {                 % no:  define one
    /colortogray {  % define an RGB->I function
      /rgbdata exch store    % call input 'rgbdata'
      rgbdata length 3 idiv
      /npixls exch store
      /rgbindx 0 store
      0 1 npixls 1 sub {
        grays exch
        rgbdata rgbindx       get 20 mul    % Red
        rgbdata rgbindx 1 add get 32 mul    % Green
        rgbdata rgbindx 2 add get 12 mul    % Blue
        add add 64 idiv      % I = .5G + .31R + .18B
        put
        /rgbindx rgbindx 3 add store
      } for
      grays 0 npixls getinterval
    } bind def

    % Utility procedure for colorimage operator.
    % This procedure takes two procedures off the
    % stack and merges them into a single procedure.

    /mergeprocs { % def
      dup length
      3 -1 roll
      dup
      length
      dup
      5 1 roll
      3 -1 roll
      add
      array cvx
      dup
      3 -1 roll
      0 exch
      putinterval
      dup
      4 2 roll
      putinterval
    } bind def

    /colorimage { % def
      pop pop     % remove 'false 3' operands
      {colortogray} mergeprocs
      image
    } bind def
  } ifelse          % end of 'false' case



% define the colormap
/cmap 723 string def


% load up the colormap
currentfile cmap readhexstring
041808 049008 8c948c 045204 4c544c 04c804 84e284 449644 c4cbc4 0c380e 
04ac07 cce6cc 345e2c e4e7e4 046604 2c3a2c 347234 e4fee2 048208 64cc60 
34922c 24b224 04e404 044604 647264 242623 049f07 8cae8c 04bc06 24c61c 
f4f8f3 1c541c 04d804 1c621c 1c7220 0c280d 14910f 045e04 047c04 ccdcd0 
14ac18 1c481c 747473 04d105 0c6c0b 24852a 1c381c f4f1f3 acafac f4fef5 
0c310c acc6ac 049708 a4a4a3 3c4a44 148314 144812 9cea94 04b405 149e14 
1cbc1c 044004 e4fef4 dcdddd 748274 5c5959 4cba54 145b11 145413 147412 
c4fec4 e4f1e7 146411 088a0a 243028 09c207 fcf8f3 147c13 14c80e acceac 
3c3939 04f405 044e07 07a608 14d00f 0c1f10 0c900b d4d3d4 ecfee3 1c291d 
0c6e14 bcbfbd d4f6d4 909a94 4c5a50 0cac08 24ba24 547e54 0cbc0a 0c5c16 
0c7c0b fcf1fb acb8ac 1c311c aca7a9 e2e2e2 a4e2a4 0cc80a 6c9a6c 143715 
0c650a 0c840b 07de06 14970c 0c980a 0cb40a 848583 ecf0f0 c3c6c3 0c540d 
0c740c cccccc 74ce6c 30a02c 04ec05 54aa5c 6cb66c 9cfa9c 2c862c 5c926c 
6ca674 b4deac 9cda9c 34aa2c 6c7e6c acfeac 448244 34d22c 7d7d7c 6c6d6c 
445644 4c4d4c 1c7a19 1c3e1c 3c3f3c 2c422c 7c9a84 54c254 dceadc 144014 
343231 bccebc bcbabc 447244 6c6664 9c9d9c 7caa7c 349a38 6c7a74 84b69c 
1c4e18 898a89 ccfadc 1c6c2c b8e2c0 1c8a24 a1aaa1 3c4e3c 5f5e5c d8fed8 
24be24 78d670 688668 148a14 14a618 145624 0c480e 2c292b 142916 1c921c 
d4dad9 243828 143017 b4d2bc b4b7b5 1c961c 8c868c 247e24 144e13 04fa04 
246224 fcfefc 0c4e0c ace2b4 3caa3c 244e24 0c180c 949394 545454 ece9ec 
343634 2cb127 6c736c 0ca00c 0cda08 0c5c0b 0ccf06 146a0c b4b2b4 646464 
b4c2b4 0c3f0c ecfdf9 e4dedc ccfdcc 2c2f2b 142214 146b16 c4c2c2 545b54 
2cb62c 74ba74 346634 b4fcb0 244224 444242 246a24 e4feec 0ce204 f4f9fc 
f4eefc 444744 54b654 fcf9fc 0c9114 dcd6d4 ecfeec 0c7b14 0cc614 0c6314 
0c8414 
pop pop   % lose return values from readhexstring


% rlecmapimage expects to have 'w h bits matrix' on stack
/rlecmapimage {
  /buffer 1 string def
  /rgbval 3 string def
  /block  384 string def

  % proc to read a block from file, and return RGB data
  { currentfile buffer readhexstring pop
    /bcount exch 0 get store
    bcount 128 ge
    {  % it's a non-run block
      0 1 bcount 128 sub
      { currentfile buffer readhexstring pop pop

        % look up value in color map
        /rgbval cmap buffer 0 get 3 mul 3 getinterval store

        % and put it in position i*3 in block
        block exch 3 mul rgbval putinterval
      } for
      block  0  bcount 127 sub 3 mul  getinterval
    }

    { % else it's a run block
      currentfile buffer readhexstring pop pop

      % look up value in colormap
      /rgbval cmap buffer 0 get 3 mul 3 getinterval store

      0 1 bcount { block exch 3 mul rgbval putinterval } for

      block 0 bcount 1 add 3 mul getinterval
    } ifelse
  } % end of proc
  false 3 colorimage
} bind def


60 40 8			% dimensions of data
[60 0 0 -40 0 40]		% mapping matrix
rlecmapimage

10bf8131bf05bf03e98165e902e9046587bf3158ec31bfe9658265e9bf09bf
10bf8131bf04bf81e9bf01bf02e98265bfe982e965e901e981bf318131ec82ecbfe982e9
65bf0abf
12bf82751ebf83bf1ebf318231ec3102318111318131bf81bfe901e981bf318131bf01bf
01e90bbf
0fbf02e901bf023101ec021101a981d6a981a9118111318131bf14bf
0fbf8165e901e988e5bfd4ecd66add07808c80149dc2137f46a911d431bfe981e9bf0fbf

0fbf01e982bfe9318331a49ce28fe2454d37562456dc71567bab87a9d4bf81bfe981e9bf
81bf318131bf0abf
10bf8ac775bf311bde43224d37568656cb535f1a733c893cae8506a91131bfe9bf01bf81
58bf0abf
0fbf911ebf31b761a0442245ed56721a530a3a4e3a813a4e864e73c94246e3bf10bf
07bf81e9bf82bfe9bf92bf1ebf31ec4f0c38e2ef8e4d49561a530a3a6283624b052b8a2b
ce4e60c2dfe331bf4cbf0cbf
0abf81e9bf82bfe9ec8eec83de1f21778e786f01341a0a3a1c851c4b052b20168b162054
aa93df11312fe965bf0abf
0ebf8d3111883d77cdcf78646f0134530a810a1c911c4ece20167c517c16542893a9ec31
e965bf0abf
08bf01e999bfe91ebf316cc07743cd45786f49561a530a3a624b6b2b707c510151877c70
4edcaba9bfe981e9bf0abf
0bbf01e985bf27d34352cf90cf0e4d2656011a530a1c62ee2b20167c5102518816cc1db9
d611bfe9bf0abf
07bf81e9bf01bf90e9bf4c86d3445277d92c786f49721a0a3a853a4b0520167c827c51bd
88bd5116e44b157a11bf0cbf
0dbf8d3f0fc33d4403cfbb0e3756011a0a860a624b2b20167c817c5102510116854b897b
a911bf0bbf
08bf82e9e5bf97bf75dab209bcc021ef254d2649561a533a1c4b052b70167c037c811620
85203a853911bf0bbf
0bbf0131869eb6d3b0bc7748884845646f561acb0a7382734b2b812b1683167c16cc01cc
012b844b2813d4bf0bbf
0abf0231955e236db0c04463cf45646f5634cb533a73624b2b2016821670548854ce2b20
4b28e831bf0bbf
0abf023183b5b6d3b089b044436e45786f49341a871a0a733a626b2b200120896b4e6b05
2b1c5f9decbf0bbf
09bf8131bf97bf31d82e09d3b044cd485a786f1201cb1a530a73621c052b852b054e4b1c
0585053a282d58bf0bbf
0bbf9431bf556709b03844cd482c7864125634cb1a5f0a7382734b0501050162011c854b
0aae2d58bf0bbf
0bbf0131934a236dd3b0bc7743485a786f1201341acb535f3a813a1c011c0173023a8453
3b1458bf0bbf
0bbf8431bf0455098309d338778277ef2c852c266f1201348134cb83cb530a3a013a810a
5f815f0a850a1ab37d58bf0bbf
08bf81e9bf93bf31bf18d83209d338c044cd6e0e2c64126f0172837271cb5382530a5383
53ae531a851a01a57e58bf0bbf
0bbf01e5837600230901098138c082c0482c862c7864126f49568156728272341a811a72
0272864912bb841131bf0abf
03bf94e9bfe9bfe9bf1ebf1ebf275923b632099538c044ef81ef7881786481646f816fad
84adea01ea560156882449ad2da3115831bf0abf
04bf02e992654ce61e75bf0d185523b66d0995bcc043cd2c812c7881786483646f64f001
f08b6f496f49642d6382e3314cbf0abf
01bf85e9e5e9652fc784c7693fc7698a69c7d2b200232eb60929bc84bc6343ef2c862c78
45784d78ed82ed6f6489644d45a3afa2114c31bf0abf
01e58175c783c769d5eb8ceb797679dab87908db67c4b66d876d9538b0447743ef84ef6e
2c78458e455a457864788ecfbe9fd4315831bf0abf
88e5750d3f5779da98d083d0689b3501358d5d0236c45567b6320995b04477cd92cdef6e
2c6e5ad95acf782c4517813e31bf2fbf0bbf
887569575bd0689bc5ba83ba8a2a8a878aca2a74db5955b284b23209d3b081b077017701
cd016e02ef876e2c6e4810a4d4bf01bf814cbf0abf
873f79b835c5ba2a9a829aa8410141868de1d104c690d881d85583552e6d958b9538b0c0
77cd03cd6377afcd84cd4321c1d483d4e9654c814cbf0abf
88575b9b742ad1418de181e15081509603968450c8d759d881d8b283b2326d0981099585
9538bcb0381f871f95c3995ca931bf81bfe981e9bf0bbf
8779b8c58ad1c6e750855096d7b119b104b184d7b119d855845523b2b66d016d83952995
2987296de09211d431bf01bf01e90cbf
8979d0c52aa88de15096b181b119041901b18796c80fd74a59b2b602b6016d86326d328f
ac0b318331bf31bf01bf81e9bf0cbf
88575b9b742ad1c68de186e1c850c850c850865096c850e1e70487045e8ca7912e672e85
2e8cac33473101318158bf02bf82e9bfe981e9bf0abf
8b3f799835c5742a8bd1a8dbc683c68dc68d818dc601c68cdbd1ca40a15da66697274711
31863158bf31bf31bf82bf4ce985e9bfe9bfe9bf0abf
8bc76957dab8359bc5a1748a2a052a018a01748b029ba6665b279447ec311ebf83bf581e
bf82bf4cbf02bf82e9bfe981e9bf0abf
881e75693f57795bb8d082d068350135029b0135013088b8985b7608b40d751e811ebf83
bf1e75bf81bf4c814cbf05bf81e9bf0bbf
83e9e52fc782c7693f823f5779817976027681da760276827957b482b4c7750175822fe5
bf82bf4cbf01bf814cbf81bfe981e9bf01bf01e90dbf

%
% Compression made this file 26.36% of the uncompressed size.
%


showpage

% stop using temporary dictionary
end

% restore original state
origstate restore

%%Trailer

%%EndDocument
 @endspecial 248 w Fg(Ev)-6 b(er)7 b(y)67 b(addition)f(is)g(e)-7
b(v)h(aluated)4983 2787 y @beginspecial 276 @llx 376
@lly 336 @urx 416 @ury 85 @rwi @setspecial
%%BeginDocument: green-bullet-on-white.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/fred/TeX/STYLES/Prosper/img/green-bullet-on-white.ps
%%Creator: XV Version 3.10a+FLmask  Rev: 12/29/94  -  by John Bradley
%%BoundingBox: 276 376 336 416
%%Pages: 1
%%DocumentFonts:
%%EndComments
%%EndProlog

%%Page: 1 1

% remember original state
/origstate save def

% build a temporary dictionary
20 dict begin

% define space for color conversions
/grays 60 string def  % space for gray scale line
/npixls 0 def
/rgbindx 0 def

% lower left corner
276 376 translate

% size of image (on paper, in 1/72inch coords)
59.97600 40.03200 scale

% define 'colorimage' if it isn't defined
%   ('colortogray' and 'mergeprocs' come from xwd2ps
%     via xgrab)
/colorimage where   % do we know about 'colorimage'?
  { pop }           % yes: pop off the 'dict' returned
  {                 % no:  define one
    /colortogray {  % define an RGB->I function
      /rgbdata exch store    % call input 'rgbdata'
      rgbdata length 3 idiv
      /npixls exch store
      /rgbindx 0 store
      0 1 npixls 1 sub {
        grays exch
        rgbdata rgbindx       get 20 mul    % Red
        rgbdata rgbindx 1 add get 32 mul    % Green
        rgbdata rgbindx 2 add get 12 mul    % Blue
        add add 64 idiv      % I = .5G + .31R + .18B
        put
        /rgbindx rgbindx 3 add store
      } for
      grays 0 npixls getinterval
    } bind def

    % Utility procedure for colorimage operator.
    % This procedure takes two procedures off the
    % stack and merges them into a single procedure.

    /mergeprocs { % def
      dup length
      3 -1 roll
      dup
      length
      dup
      5 1 roll
      3 -1 roll
      add
      array cvx
      dup
      3 -1 roll
      0 exch
      putinterval
      dup
      4 2 roll
      putinterval
    } bind def

    /colorimage { % def
      pop pop     % remove 'false 3' operands
      {colortogray} mergeprocs
      image
    } bind def
  } ifelse          % end of 'false' case



% define the colormap
/cmap 723 string def


% load up the colormap
currentfile cmap readhexstring
041808 049008 8c948c 045204 4c544c 04c804 84e284 449644 c4cbc4 0c380e 
04ac07 cce6cc 345e2c e4e7e4 046604 2c3a2c 347234 e4fee2 048208 64cc60 
34922c 24b224 04e404 044604 647264 242623 049f07 8cae8c 04bc06 24c61c 
f4f8f3 1c541c 04d804 1c621c 1c7220 0c280d 14910f 045e04 047c04 ccdcd0 
14ac18 1c481c 747473 04d105 0c6c0b 24852a 1c381c f4f1f3 acafac f4fef5 
0c310c acc6ac 049708 a4a4a3 3c4a44 148314 144812 9cea94 04b405 149e14 
1cbc1c 044004 e4fef4 dcdddd 748274 5c5959 4cba54 145b11 145413 147412 
c4fec4 e4f1e7 146411 088a0a 243028 09c207 fcf8f3 147c13 14c80e acceac 
3c3939 04f405 044e07 07a608 14d00f 0c1f10 0c900b d4d3d4 ecfee3 1c291d 
0c6e14 bcbfbd d4f6d4 909a94 4c5a50 0cac08 24ba24 547e54 0cbc0a 0c5c16 
0c7c0b fcf1fb acb8ac 1c311c aca7a9 e2e2e2 a4e2a4 0cc80a 6c9a6c 143715 
0c650a 0c840b 07de06 14970c 0c980a 0cb40a 848583 ecf0f0 c3c6c3 0c540d 
0c740c cccccc 74ce6c 30a02c 04ec05 54aa5c 6cb66c 9cfa9c 2c862c 5c926c 
6ca674 b4deac 9cda9c 34aa2c 6c7e6c acfeac 448244 34d22c 7d7d7c 6c6d6c 
445644 4c4d4c 1c7a19 1c3e1c 3c3f3c 2c422c 7c9a84 54c254 dceadc 144014 
343231 bccebc bcbabc 447244 6c6664 9c9d9c 7caa7c 349a38 6c7a74 84b69c 
1c4e18 898a89 ccfadc 1c6c2c b8e2c0 1c8a24 a1aaa1 3c4e3c 5f5e5c d8fed8 
24be24 78d670 688668 148a14 14a618 145624 0c480e 2c292b 142916 1c921c 
d4dad9 243828 143017 b4d2bc b4b7b5 1c961c 8c868c 247e24 144e13 04fa04 
246224 fcfefc 0c4e0c ace2b4 3caa3c 244e24 0c180c 949394 545454 ece9ec 
343634 2cb127 6c736c 0ca00c 0cda08 0c5c0b 0ccf06 146a0c b4b2b4 646464 
b4c2b4 0c3f0c ecfdf9 e4dedc ccfdcc 2c2f2b 142214 146b16 c4c2c2 545b54 
2cb62c 74ba74 346634 b4fcb0 244224 444242 246a24 e4feec 0ce204 f4f9fc 
f4eefc 444744 54b654 fcf9fc 0c9114 dcd6d4 ecfeec 0c7b14 0cc614 0c6314 
0c8414 
pop pop   % lose return values from readhexstring


% rlecmapimage expects to have 'w h bits matrix' on stack
/rlecmapimage {
  /buffer 1 string def
  /rgbval 3 string def
  /block  384 string def

  % proc to read a block from file, and return RGB data
  { currentfile buffer readhexstring pop
    /bcount exch 0 get store
    bcount 128 ge
    {  % it's a non-run block
      0 1 bcount 128 sub
      { currentfile buffer readhexstring pop pop

        % look up value in color map
        /rgbval cmap buffer 0 get 3 mul 3 getinterval store

        % and put it in position i*3 in block
        block exch 3 mul rgbval putinterval
      } for
      block  0  bcount 127 sub 3 mul  getinterval
    }

    { % else it's a run block
      currentfile buffer readhexstring pop pop

      % look up value in colormap
      /rgbval cmap buffer 0 get 3 mul 3 getinterval store

      0 1 bcount { block exch 3 mul rgbval putinterval } for

      block 0 bcount 1 add 3 mul getinterval
    } ifelse
  } % end of proc
  false 3 colorimage
} bind def


60 40 8			% dimensions of data
[60 0 0 -40 0 40]		% mapping matrix
rlecmapimage

10bf8131bf05bf03e98165e902e9046587bf3158ec31bfe9658265e9bf09bf
10bf8131bf04bf81e9bf01bf02e98265bfe982e965e901e981bf318131ec82ecbfe982e9
65bf0abf
12bf82751ebf83bf1ebf318231ec3102318111318131bf81bfe901e981bf318131bf01bf
01e90bbf
0fbf02e901bf023101ec021101a981d6a981a9118111318131bf14bf
0fbf8165e901e988e5bfd4ecd66add07808c80149dc2137f46a911d431bfe981e9bf0fbf

0fbf01e982bfe9318331a49ce28fe2454d37562456dc71567bab87a9d4bf81bfe981e9bf
81bf318131bf0abf
10bf8ac775bf311bde43224d37568656cb535f1a733c893cae8506a91131bfe9bf01bf81
58bf0abf
0fbf911ebf31b761a0442245ed56721a530a3a4e3a813a4e864e73c94246e3bf10bf
07bf81e9bf82bfe9bf92bf1ebf31ec4f0c38e2ef8e4d49561a530a3a6283624b052b8a2b
ce4e60c2dfe331bf4cbf0cbf
0abf81e9bf82bfe9ec8eec83de1f21778e786f01341a0a3a1c851c4b052b20168b162054
aa93df11312fe965bf0abf
0ebf8d3111883d77cdcf78646f0134530a810a1c911c4ece20167c517c16542893a9ec31
e965bf0abf
08bf01e999bfe91ebf316cc07743cd45786f49561a530a3a624b6b2b707c510151877c70
4edcaba9bfe981e9bf0abf
0bbf01e985bf27d34352cf90cf0e4d2656011a530a1c62ee2b20167c5102518816cc1db9
d611bfe9bf0abf
07bf81e9bf01bf90e9bf4c86d3445277d92c786f49721a0a3a853a4b0520167c827c51bd
88bd5116e44b157a11bf0cbf
0dbf8d3f0fc33d4403cfbb0e3756011a0a860a624b2b20167c817c5102510116854b897b
a911bf0bbf
08bf82e9e5bf97bf75dab209bcc021ef254d2649561a533a1c4b052b70167c037c811620
85203a853911bf0bbf
0bbf0131869eb6d3b0bc7748884845646f561acb0a7382734b2b812b1683167c16cc01cc
012b844b2813d4bf0bbf
0abf0231955e236db0c04463cf45646f5634cb533a73624b2b2016821670548854ce2b20
4b28e831bf0bbf
0abf023183b5b6d3b089b044436e45786f49341a871a0a733a626b2b200120896b4e6b05
2b1c5f9decbf0bbf
09bf8131bf97bf31d82e09d3b044cd485a786f1201cb1a530a73621c052b852b054e4b1c
0585053a282d58bf0bbf
0bbf9431bf556709b03844cd482c7864125634cb1a5f0a7382734b0501050162011c854b
0aae2d58bf0bbf
0bbf0131934a236dd3b0bc7743485a786f1201341acb535f3a813a1c011c0173023a8453
3b1458bf0bbf
0bbf8431bf0455098309d338778277ef2c852c266f1201348134cb83cb530a3a013a810a
5f815f0a850a1ab37d58bf0bbf
08bf81e9bf93bf31bf18d83209d338c044cd6e0e2c64126f0172837271cb5382530a5383
53ae531a851a01a57e58bf0bbf
0bbf01e5837600230901098138c082c0482c862c7864126f49568156728272341a811a72
0272864912bb841131bf0abf
03bf94e9bfe9bfe9bf1ebf1ebf275923b632099538c044ef81ef7881786481646f816fad
84adea01ea560156882449ad2da3115831bf0abf
04bf02e992654ce61e75bf0d185523b66d0995bcc043cd2c812c7881786483646f64f001
f08b6f496f49642d6382e3314cbf0abf
01bf85e9e5e9652fc784c7693fc7698a69c7d2b200232eb60929bc84bc6343ef2c862c78
45784d78ed82ed6f6489644d45a3afa2114c31bf0abf
01e58175c783c769d5eb8ceb797679dab87908db67c4b66d876d9538b0447743ef84ef6e
2c78458e455a457864788ecfbe9fd4315831bf0abf
88e5750d3f5779da98d083d0689b3501358d5d0236c45567b6320995b04477cd92cdef6e
2c6e5ad95acf782c4517813e31bf2fbf0bbf
887569575bd0689bc5ba83ba8a2a8a878aca2a74db5955b284b23209d3b081b077017701
cd016e02ef876e2c6e4810a4d4bf01bf814cbf0abf
873f79b835c5ba2a9a829aa8410141868de1d104c690d881d85583552e6d958b9538b0c0
77cd03cd6377afcd84cd4321c1d483d4e9654c814cbf0abf
88575b9b742ad1418de181e15081509603968450c8d759d881d8b283b2326d0981099585
9538bcb0381f871f95c3995ca931bf81bfe981e9bf0bbf
8779b8c58ad1c6e750855096d7b119b104b184d7b119d855845523b2b66d016d83952995
2987296de09211d431bf01bf01e90cbf
8979d0c52aa88de15096b181b119041901b18796c80fd74a59b2b602b6016d86326d328f
ac0b318331bf31bf01bf81e9bf0cbf
88575b9b742ad1c68de186e1c850c850c850865096c850e1e70487045e8ca7912e672e85
2e8cac33473101318158bf02bf82e9bfe981e9bf0abf
8b3f799835c5742a8bd1a8dbc683c68dc68d818dc601c68cdbd1ca40a15da66697274711
31863158bf31bf31bf82bf4ce985e9bfe9bfe9bf0abf
8bc76957dab8359bc5a1748a2a052a018a01748b029ba6665b279447ec311ebf83bf581e
bf82bf4cbf02bf82e9bfe981e9bf0abf
881e75693f57795bb8d082d068350135029b0135013088b8985b7608b40d751e811ebf83
bf1e75bf81bf4c814cbf05bf81e9bf0bbf
83e9e52fc782c7693f823f5779817976027681da760276827957b482b4c7750175822fe5
bf82bf4cbf01bf814cbf81bfe981e9bf01bf01e90dbf

%
% Compression made this file 26.36% of the uncompressed size.
%


showpage

% stop using temporary dictionary
end

% restore original state
origstate restore

%%Trailer

%%EndDocument
 @endspecial 248 w(Exploit)66 b(the)h(most)f(common)g(patter)6
b(n)4983 3107 y @beginspecial 276 @llx 376 @lly 336 @urx
416 @ury 85 @rwi @setspecial
%%BeginDocument: green-bullet-on-white.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/fred/TeX/STYLES/Prosper/img/green-bullet-on-white.ps
%%Creator: XV Version 3.10a+FLmask  Rev: 12/29/94  -  by John Bradley
%%BoundingBox: 276 376 336 416
%%Pages: 1
%%DocumentFonts:
%%EndComments
%%EndProlog

%%Page: 1 1

% remember original state
/origstate save def

% build a temporary dictionary
20 dict begin

% define space for color conversions
/grays 60 string def  % space for gray scale line
/npixls 0 def
/rgbindx 0 def

% lower left corner
276 376 translate

% size of image (on paper, in 1/72inch coords)
59.97600 40.03200 scale

% define 'colorimage' if it isn't defined
%   ('colortogray' and 'mergeprocs' come from xwd2ps
%     via xgrab)
/colorimage where   % do we know about 'colorimage'?
  { pop }           % yes: pop off the 'dict' returned
  {                 % no:  define one
    /colortogray {  % define an RGB->I function
      /rgbdata exch store    % call input 'rgbdata'
      rgbdata length 3 idiv
      /npixls exch store
      /rgbindx 0 store
      0 1 npixls 1 sub {
        grays exch
        rgbdata rgbindx       get 20 mul    % Red
        rgbdata rgbindx 1 add get 32 mul    % Green
        rgbdata rgbindx 2 add get 12 mul    % Blue
        add add 64 idiv      % I = .5G + .31R + .18B
        put
        /rgbindx rgbindx 3 add store
      } for
      grays 0 npixls getinterval
    } bind def

    % Utility procedure for colorimage operator.
    % This procedure takes two procedures off the
    % stack and merges them into a single procedure.

    /mergeprocs { % def
      dup length
      3 -1 roll
      dup
      length
      dup
      5 1 roll
      3 -1 roll
      add
      array cvx
      dup
      3 -1 roll
      0 exch
      putinterval
      dup
      4 2 roll
      putinterval
    } bind def

    /colorimage { % def
      pop pop     % remove 'false 3' operands
      {colortogray} mergeprocs
      image
    } bind def
  } ifelse          % end of 'false' case



% define the colormap
/cmap 723 string def


% load up the colormap
currentfile cmap readhexstring
041808 049008 8c948c 045204 4c544c 04c804 84e284 449644 c4cbc4 0c380e 
04ac07 cce6cc 345e2c e4e7e4 046604 2c3a2c 347234 e4fee2 048208 64cc60 
34922c 24b224 04e404 044604 647264 242623 049f07 8cae8c 04bc06 24c61c 
f4f8f3 1c541c 04d804 1c621c 1c7220 0c280d 14910f 045e04 047c04 ccdcd0 
14ac18 1c481c 747473 04d105 0c6c0b 24852a 1c381c f4f1f3 acafac f4fef5 
0c310c acc6ac 049708 a4a4a3 3c4a44 148314 144812 9cea94 04b405 149e14 
1cbc1c 044004 e4fef4 dcdddd 748274 5c5959 4cba54 145b11 145413 147412 
c4fec4 e4f1e7 146411 088a0a 243028 09c207 fcf8f3 147c13 14c80e acceac 
3c3939 04f405 044e07 07a608 14d00f 0c1f10 0c900b d4d3d4 ecfee3 1c291d 
0c6e14 bcbfbd d4f6d4 909a94 4c5a50 0cac08 24ba24 547e54 0cbc0a 0c5c16 
0c7c0b fcf1fb acb8ac 1c311c aca7a9 e2e2e2 a4e2a4 0cc80a 6c9a6c 143715 
0c650a 0c840b 07de06 14970c 0c980a 0cb40a 848583 ecf0f0 c3c6c3 0c540d 
0c740c cccccc 74ce6c 30a02c 04ec05 54aa5c 6cb66c 9cfa9c 2c862c 5c926c 
6ca674 b4deac 9cda9c 34aa2c 6c7e6c acfeac 448244 34d22c 7d7d7c 6c6d6c 
445644 4c4d4c 1c7a19 1c3e1c 3c3f3c 2c422c 7c9a84 54c254 dceadc 144014 
343231 bccebc bcbabc 447244 6c6664 9c9d9c 7caa7c 349a38 6c7a74 84b69c 
1c4e18 898a89 ccfadc 1c6c2c b8e2c0 1c8a24 a1aaa1 3c4e3c 5f5e5c d8fed8 
24be24 78d670 688668 148a14 14a618 145624 0c480e 2c292b 142916 1c921c 
d4dad9 243828 143017 b4d2bc b4b7b5 1c961c 8c868c 247e24 144e13 04fa04 
246224 fcfefc 0c4e0c ace2b4 3caa3c 244e24 0c180c 949394 545454 ece9ec 
343634 2cb127 6c736c 0ca00c 0cda08 0c5c0b 0ccf06 146a0c b4b2b4 646464 
b4c2b4 0c3f0c ecfdf9 e4dedc ccfdcc 2c2f2b 142214 146b16 c4c2c2 545b54 
2cb62c 74ba74 346634 b4fcb0 244224 444242 246a24 e4feec 0ce204 f4f9fc 
f4eefc 444744 54b654 fcf9fc 0c9114 dcd6d4 ecfeec 0c7b14 0cc614 0c6314 
0c8414 
pop pop   % lose return values from readhexstring


% rlecmapimage expects to have 'w h bits matrix' on stack
/rlecmapimage {
  /buffer 1 string def
  /rgbval 3 string def
  /block  384 string def

  % proc to read a block from file, and return RGB data
  { currentfile buffer readhexstring pop
    /bcount exch 0 get store
    bcount 128 ge
    {  % it's a non-run block
      0 1 bcount 128 sub
      { currentfile buffer readhexstring pop pop

        % look up value in color map
        /rgbval cmap buffer 0 get 3 mul 3 getinterval store

        % and put it in position i*3 in block
        block exch 3 mul rgbval putinterval
      } for
      block  0  bcount 127 sub 3 mul  getinterval
    }

    { % else it's a run block
      currentfile buffer readhexstring pop pop

      % look up value in colormap
      /rgbval cmap buffer 0 get 3 mul 3 getinterval store

      0 1 bcount { block exch 3 mul rgbval putinterval } for

      block 0 bcount 1 add 3 mul getinterval
    } ifelse
  } % end of proc
  false 3 colorimage
} bind def


60 40 8			% dimensions of data
[60 0 0 -40 0 40]		% mapping matrix
rlecmapimage

10bf8131bf05bf03e98165e902e9046587bf3158ec31bfe9658265e9bf09bf
10bf8131bf04bf81e9bf01bf02e98265bfe982e965e901e981bf318131ec82ecbfe982e9
65bf0abf
12bf82751ebf83bf1ebf318231ec3102318111318131bf81bfe901e981bf318131bf01bf
01e90bbf
0fbf02e901bf023101ec021101a981d6a981a9118111318131bf14bf
0fbf8165e901e988e5bfd4ecd66add07808c80149dc2137f46a911d431bfe981e9bf0fbf

0fbf01e982bfe9318331a49ce28fe2454d37562456dc71567bab87a9d4bf81bfe981e9bf
81bf318131bf0abf
10bf8ac775bf311bde43224d37568656cb535f1a733c893cae8506a91131bfe9bf01bf81
58bf0abf
0fbf911ebf31b761a0442245ed56721a530a3a4e3a813a4e864e73c94246e3bf10bf
07bf81e9bf82bfe9bf92bf1ebf31ec4f0c38e2ef8e4d49561a530a3a6283624b052b8a2b
ce4e60c2dfe331bf4cbf0cbf
0abf81e9bf82bfe9ec8eec83de1f21778e786f01341a0a3a1c851c4b052b20168b162054
aa93df11312fe965bf0abf
0ebf8d3111883d77cdcf78646f0134530a810a1c911c4ece20167c517c16542893a9ec31
e965bf0abf
08bf01e999bfe91ebf316cc07743cd45786f49561a530a3a624b6b2b707c510151877c70
4edcaba9bfe981e9bf0abf
0bbf01e985bf27d34352cf90cf0e4d2656011a530a1c62ee2b20167c5102518816cc1db9
d611bfe9bf0abf
07bf81e9bf01bf90e9bf4c86d3445277d92c786f49721a0a3a853a4b0520167c827c51bd
88bd5116e44b157a11bf0cbf
0dbf8d3f0fc33d4403cfbb0e3756011a0a860a624b2b20167c817c5102510116854b897b
a911bf0bbf
08bf82e9e5bf97bf75dab209bcc021ef254d2649561a533a1c4b052b70167c037c811620
85203a853911bf0bbf
0bbf0131869eb6d3b0bc7748884845646f561acb0a7382734b2b812b1683167c16cc01cc
012b844b2813d4bf0bbf
0abf0231955e236db0c04463cf45646f5634cb533a73624b2b2016821670548854ce2b20
4b28e831bf0bbf
0abf023183b5b6d3b089b044436e45786f49341a871a0a733a626b2b200120896b4e6b05
2b1c5f9decbf0bbf
09bf8131bf97bf31d82e09d3b044cd485a786f1201cb1a530a73621c052b852b054e4b1c
0585053a282d58bf0bbf
0bbf9431bf556709b03844cd482c7864125634cb1a5f0a7382734b0501050162011c854b
0aae2d58bf0bbf
0bbf0131934a236dd3b0bc7743485a786f1201341acb535f3a813a1c011c0173023a8453
3b1458bf0bbf
0bbf8431bf0455098309d338778277ef2c852c266f1201348134cb83cb530a3a013a810a
5f815f0a850a1ab37d58bf0bbf
08bf81e9bf93bf31bf18d83209d338c044cd6e0e2c64126f0172837271cb5382530a5383
53ae531a851a01a57e58bf0bbf
0bbf01e5837600230901098138c082c0482c862c7864126f49568156728272341a811a72
0272864912bb841131bf0abf
03bf94e9bfe9bfe9bf1ebf1ebf275923b632099538c044ef81ef7881786481646f816fad
84adea01ea560156882449ad2da3115831bf0abf
04bf02e992654ce61e75bf0d185523b66d0995bcc043cd2c812c7881786483646f64f001
f08b6f496f49642d6382e3314cbf0abf
01bf85e9e5e9652fc784c7693fc7698a69c7d2b200232eb60929bc84bc6343ef2c862c78
45784d78ed82ed6f6489644d45a3afa2114c31bf0abf
01e58175c783c769d5eb8ceb797679dab87908db67c4b66d876d9538b0447743ef84ef6e
2c78458e455a457864788ecfbe9fd4315831bf0abf
88e5750d3f5779da98d083d0689b3501358d5d0236c45567b6320995b04477cd92cdef6e
2c6e5ad95acf782c4517813e31bf2fbf0bbf
887569575bd0689bc5ba83ba8a2a8a878aca2a74db5955b284b23209d3b081b077017701
cd016e02ef876e2c6e4810a4d4bf01bf814cbf0abf
873f79b835c5ba2a9a829aa8410141868de1d104c690d881d85583552e6d958b9538b0c0
77cd03cd6377afcd84cd4321c1d483d4e9654c814cbf0abf
88575b9b742ad1418de181e15081509603968450c8d759d881d8b283b2326d0981099585
9538bcb0381f871f95c3995ca931bf81bfe981e9bf0bbf
8779b8c58ad1c6e750855096d7b119b104b184d7b119d855845523b2b66d016d83952995
2987296de09211d431bf01bf01e90cbf
8979d0c52aa88de15096b181b119041901b18796c80fd74a59b2b602b6016d86326d328f
ac0b318331bf31bf01bf81e9bf0cbf
88575b9b742ad1c68de186e1c850c850c850865096c850e1e70487045e8ca7912e672e85
2e8cac33473101318158bf02bf82e9bfe981e9bf0abf
8b3f799835c5742a8bd1a8dbc683c68dc68d818dc601c68cdbd1ca40a15da66697274711
31863158bf31bf31bf82bf4ce985e9bfe9bfe9bf0abf
8bc76957dab8359bc5a1748a2a052a018a01748b029ba6665b279447ec311ebf83bf581e
bf82bf4cbf02bf82e9bfe981e9bf0abf
881e75693f57795bb8d082d068350135029b0135013088b8985b7608b40d751e811ebf83
bf1e75bf81bf4c814cbf05bf81e9bf0bbf
83e9e52fc782c7693f823f5779817976027681da760276827957b482b4c7750175822fe5
bf82bf4cbf01bf814cbf81bfe981e9bf01bf01e90dbf

%
% Compression made this file 26.36% of the uncompressed size.
%


showpage

% stop using temporary dictionary
end

% restore original state
origstate restore

%%Trailer

%%EndDocument
 @endspecial 248 w(Chec)-5 b(ks)66 b(only)g(in)h(deb)-5
b(ug)67 b(mode)4581 3262 y
 0. 0. 1. setrgbcolor
 4581 3262 a 4649 3475 a @beginspecial
276 @llx 376 @lly 336 @urx 416 @ury 113 @rwi @setspecial
%%BeginDocument: green-bullet-on-white.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/fred/TeX/STYLES/Prosper/img/green-bullet-on-white.ps
%%Creator: XV Version 3.10a+FLmask  Rev: 12/29/94  -  by John Bradley
%%BoundingBox: 276 376 336 416
%%Pages: 1
%%DocumentFonts:
%%EndComments
%%EndProlog

%%Page: 1 1

% remember original state
/origstate save def

% build a temporary dictionary
20 dict begin

% define space for color conversions
/grays 60 string def  % space for gray scale line
/npixls 0 def
/rgbindx 0 def

% lower left corner
276 376 translate

% size of image (on paper, in 1/72inch coords)
59.97600 40.03200 scale

% define 'colorimage' if it isn't defined
%   ('colortogray' and 'mergeprocs' come from xwd2ps
%     via xgrab)
/colorimage where   % do we know about 'colorimage'?
  { pop }           % yes: pop off the 'dict' returned
  {                 % no:  define one
    /colortogray {  % define an RGB->I function
      /rgbdata exch store    % call input 'rgbdata'
      rgbdata length 3 idiv
      /npixls exch store
      /rgbindx 0 store
      0 1 npixls 1 sub {
        grays exch
        rgbdata rgbindx       get 20 mul    % Red
        rgbdata rgbindx 1 add get 32 mul    % Green
        rgbdata rgbindx 2 add get 12 mul    % Blue
        add add 64 idiv      % I = .5G + .31R + .18B
        put
        /rgbindx rgbindx 3 add store
      } for
      grays 0 npixls getinterval
    } bind def

    % Utility procedure for colorimage operator.
    % This procedure takes two procedures off the
    % stack and merges them into a single procedure.

    /mergeprocs { % def
      dup length
      3 -1 roll
      dup
      length
      dup
      5 1 roll
      3 -1 roll
      add
      array cvx
      dup
      3 -1 roll
      0 exch
      putinterval
      dup
      4 2 roll
      putinterval
    } bind def

    /colorimage { % def
      pop pop     % remove 'false 3' operands
      {colortogray} mergeprocs
      image
    } bind def
  } ifelse          % end of 'false' case



% define the colormap
/cmap 723 string def


% load up the colormap
currentfile cmap readhexstring
041808 049008 8c948c 045204 4c544c 04c804 84e284 449644 c4cbc4 0c380e 
04ac07 cce6cc 345e2c e4e7e4 046604 2c3a2c 347234 e4fee2 048208 64cc60 
34922c 24b224 04e404 044604 647264 242623 049f07 8cae8c 04bc06 24c61c 
f4f8f3 1c541c 04d804 1c621c 1c7220 0c280d 14910f 045e04 047c04 ccdcd0 
14ac18 1c481c 747473 04d105 0c6c0b 24852a 1c381c f4f1f3 acafac f4fef5 
0c310c acc6ac 049708 a4a4a3 3c4a44 148314 144812 9cea94 04b405 149e14 
1cbc1c 044004 e4fef4 dcdddd 748274 5c5959 4cba54 145b11 145413 147412 
c4fec4 e4f1e7 146411 088a0a 243028 09c207 fcf8f3 147c13 14c80e acceac 
3c3939 04f405 044e07 07a608 14d00f 0c1f10 0c900b d4d3d4 ecfee3 1c291d 
0c6e14 bcbfbd d4f6d4 909a94 4c5a50 0cac08 24ba24 547e54 0cbc0a 0c5c16 
0c7c0b fcf1fb acb8ac 1c311c aca7a9 e2e2e2 a4e2a4 0cc80a 6c9a6c 143715 
0c650a 0c840b 07de06 14970c 0c980a 0cb40a 848583 ecf0f0 c3c6c3 0c540d 
0c740c cccccc 74ce6c 30a02c 04ec05 54aa5c 6cb66c 9cfa9c 2c862c 5c926c 
6ca674 b4deac 9cda9c 34aa2c 6c7e6c acfeac 448244 34d22c 7d7d7c 6c6d6c 
445644 4c4d4c 1c7a19 1c3e1c 3c3f3c 2c422c 7c9a84 54c254 dceadc 144014 
343231 bccebc bcbabc 447244 6c6664 9c9d9c 7caa7c 349a38 6c7a74 84b69c 
1c4e18 898a89 ccfadc 1c6c2c b8e2c0 1c8a24 a1aaa1 3c4e3c 5f5e5c d8fed8 
24be24 78d670 688668 148a14 14a618 145624 0c480e 2c292b 142916 1c921c 
d4dad9 243828 143017 b4d2bc b4b7b5 1c961c 8c868c 247e24 144e13 04fa04 
246224 fcfefc 0c4e0c ace2b4 3caa3c 244e24 0c180c 949394 545454 ece9ec 
343634 2cb127 6c736c 0ca00c 0cda08 0c5c0b 0ccf06 146a0c b4b2b4 646464 
b4c2b4 0c3f0c ecfdf9 e4dedc ccfdcc 2c2f2b 142214 146b16 c4c2c2 545b54 
2cb62c 74ba74 346634 b4fcb0 244224 444242 246a24 e4feec 0ce204 f4f9fc 
f4eefc 444744 54b654 fcf9fc 0c9114 dcd6d4 ecfeec 0c7b14 0cc614 0c6314 
0c8414 
pop pop   % lose return values from readhexstring


% rlecmapimage expects to have 'w h bits matrix' on stack
/rlecmapimage {
  /buffer 1 string def
  /rgbval 3 string def
  /block  384 string def

  % proc to read a block from file, and return RGB data
  { currentfile buffer readhexstring pop
    /bcount exch 0 get store
    bcount 128 ge
    {  % it's a non-run block
      0 1 bcount 128 sub
      { currentfile buffer readhexstring pop pop

        % look up value in color map
        /rgbval cmap buffer 0 get 3 mul 3 getinterval store

        % and put it in position i*3 in block
        block exch 3 mul rgbval putinterval
      } for
      block  0  bcount 127 sub 3 mul  getinterval
    }

    { % else it's a run block
      currentfile buffer readhexstring pop pop

      % look up value in colormap
      /rgbval cmap buffer 0 get 3 mul 3 getinterval store

      0 1 bcount { block exch 3 mul rgbval putinterval } for

      block 0 bcount 1 add 3 mul getinterval
    } ifelse
  } % end of proc
  false 3 colorimage
} bind def


60 40 8			% dimensions of data
[60 0 0 -40 0 40]		% mapping matrix
rlecmapimage

10bf8131bf05bf03e98165e902e9046587bf3158ec31bfe9658265e9bf09bf
10bf8131bf04bf81e9bf01bf02e98265bfe982e965e901e981bf318131ec82ecbfe982e9
65bf0abf
12bf82751ebf83bf1ebf318231ec3102318111318131bf81bfe901e981bf318131bf01bf
01e90bbf
0fbf02e901bf023101ec021101a981d6a981a9118111318131bf14bf
0fbf8165e901e988e5bfd4ecd66add07808c80149dc2137f46a911d431bfe981e9bf0fbf

0fbf01e982bfe9318331a49ce28fe2454d37562456dc71567bab87a9d4bf81bfe981e9bf
81bf318131bf0abf
10bf8ac775bf311bde43224d37568656cb535f1a733c893cae8506a91131bfe9bf01bf81
58bf0abf
0fbf911ebf31b761a0442245ed56721a530a3a4e3a813a4e864e73c94246e3bf10bf
07bf81e9bf82bfe9bf92bf1ebf31ec4f0c38e2ef8e4d49561a530a3a6283624b052b8a2b
ce4e60c2dfe331bf4cbf0cbf
0abf81e9bf82bfe9ec8eec83de1f21778e786f01341a0a3a1c851c4b052b20168b162054
aa93df11312fe965bf0abf
0ebf8d3111883d77cdcf78646f0134530a810a1c911c4ece20167c517c16542893a9ec31
e965bf0abf
08bf01e999bfe91ebf316cc07743cd45786f49561a530a3a624b6b2b707c510151877c70
4edcaba9bfe981e9bf0abf
0bbf01e985bf27d34352cf90cf0e4d2656011a530a1c62ee2b20167c5102518816cc1db9
d611bfe9bf0abf
07bf81e9bf01bf90e9bf4c86d3445277d92c786f49721a0a3a853a4b0520167c827c51bd
88bd5116e44b157a11bf0cbf
0dbf8d3f0fc33d4403cfbb0e3756011a0a860a624b2b20167c817c5102510116854b897b
a911bf0bbf
08bf82e9e5bf97bf75dab209bcc021ef254d2649561a533a1c4b052b70167c037c811620
85203a853911bf0bbf
0bbf0131869eb6d3b0bc7748884845646f561acb0a7382734b2b812b1683167c16cc01cc
012b844b2813d4bf0bbf
0abf0231955e236db0c04463cf45646f5634cb533a73624b2b2016821670548854ce2b20
4b28e831bf0bbf
0abf023183b5b6d3b089b044436e45786f49341a871a0a733a626b2b200120896b4e6b05
2b1c5f9decbf0bbf
09bf8131bf97bf31d82e09d3b044cd485a786f1201cb1a530a73621c052b852b054e4b1c
0585053a282d58bf0bbf
0bbf9431bf556709b03844cd482c7864125634cb1a5f0a7382734b0501050162011c854b
0aae2d58bf0bbf
0bbf0131934a236dd3b0bc7743485a786f1201341acb535f3a813a1c011c0173023a8453
3b1458bf0bbf
0bbf8431bf0455098309d338778277ef2c852c266f1201348134cb83cb530a3a013a810a
5f815f0a850a1ab37d58bf0bbf
08bf81e9bf93bf31bf18d83209d338c044cd6e0e2c64126f0172837271cb5382530a5383
53ae531a851a01a57e58bf0bbf
0bbf01e5837600230901098138c082c0482c862c7864126f49568156728272341a811a72
0272864912bb841131bf0abf
03bf94e9bfe9bfe9bf1ebf1ebf275923b632099538c044ef81ef7881786481646f816fad
84adea01ea560156882449ad2da3115831bf0abf
04bf02e992654ce61e75bf0d185523b66d0995bcc043cd2c812c7881786483646f64f001
f08b6f496f49642d6382e3314cbf0abf
01bf85e9e5e9652fc784c7693fc7698a69c7d2b200232eb60929bc84bc6343ef2c862c78
45784d78ed82ed6f6489644d45a3afa2114c31bf0abf
01e58175c783c769d5eb8ceb797679dab87908db67c4b66d876d9538b0447743ef84ef6e
2c78458e455a457864788ecfbe9fd4315831bf0abf
88e5750d3f5779da98d083d0689b3501358d5d0236c45567b6320995b04477cd92cdef6e
2c6e5ad95acf782c4517813e31bf2fbf0bbf
887569575bd0689bc5ba83ba8a2a8a878aca2a74db5955b284b23209d3b081b077017701
cd016e02ef876e2c6e4810a4d4bf01bf814cbf0abf
873f79b835c5ba2a9a829aa8410141868de1d104c690d881d85583552e6d958b9538b0c0
77cd03cd6377afcd84cd4321c1d483d4e9654c814cbf0abf
88575b9b742ad1418de181e15081509603968450c8d759d881d8b283b2326d0981099585
9538bcb0381f871f95c3995ca931bf81bfe981e9bf0bbf
8779b8c58ad1c6e750855096d7b119b104b184d7b119d855845523b2b66d016d83952995
2987296de09211d431bf01bf01e90cbf
8979d0c52aa88de15096b181b119041901b18796c80fd74a59b2b602b6016d86326d328f
ac0b318331bf31bf01bf81e9bf0cbf
88575b9b742ad1c68de186e1c850c850c850865096c850e1e70487045e8ca7912e672e85
2e8cac33473101318158bf02bf82e9bfe981e9bf0abf
8b3f799835c5742a8bd1a8dbc683c68dc68d818dc601c68cdbd1ca40a15da66697274711
31863158bf31bf31bf82bf4ce985e9bfe9bfe9bf0abf
8bc76957dab8359bc5a1748a2a052a018a01748b029ba6665b279447ec311ebf83bf581e
bf82bf4cbf02bf82e9bfe981e9bf0abf
881e75693f57795bb8d082d068350135029b0135013088b8985b7608b40d751e811ebf83
bf1e75bf81bf4c814cbf05bf81e9bf0bbf
83e9e52fc782c7693f823f5779817976027681da760276827957b482b4c7750175822fe5
bf82bf4cbf01bf814cbf81bfe981e9bf01bf01e90dbf

%
% Compression made this file 26.36% of the uncompressed size.
%


showpage

% stop using temporary dictionary
end

% restore original state
origstate restore

%%Trailer

%%EndDocument
 @endspecial 298 w Fg(Mak)-5 b(e)66 b(the)h(code)g(easy)f(to)h
(understand)g(and)g(e)-7 b(xtend)9893 3475 y
 0 setgray
 9893 3475
a 4983 3796 a @beginspecial 276 @llx 376 @lly 336 @urx
416 @ury 85 @rwi @setspecial
%%BeginDocument: green-bullet-on-white.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/fred/TeX/STYLES/Prosper/img/green-bullet-on-white.ps
%%Creator: XV Version 3.10a+FLmask  Rev: 12/29/94  -  by John Bradley
%%BoundingBox: 276 376 336 416
%%Pages: 1
%%DocumentFonts:
%%EndComments
%%EndProlog

%%Page: 1 1

% remember original state
/origstate save def

% build a temporary dictionary
20 dict begin

% define space for color conversions
/grays 60 string def  % space for gray scale line
/npixls 0 def
/rgbindx 0 def

% lower left corner
276 376 translate

% size of image (on paper, in 1/72inch coords)
59.97600 40.03200 scale

% define 'colorimage' if it isn't defined
%   ('colortogray' and 'mergeprocs' come from xwd2ps
%     via xgrab)
/colorimage where   % do we know about 'colorimage'?
  { pop }           % yes: pop off the 'dict' returned
  {                 % no:  define one
    /colortogray {  % define an RGB->I function
      /rgbdata exch store    % call input 'rgbdata'
      rgbdata length 3 idiv
      /npixls exch store
      /rgbindx 0 store
      0 1 npixls 1 sub {
        grays exch
        rgbdata rgbindx       get 20 mul    % Red
        rgbdata rgbindx 1 add get 32 mul    % Green
        rgbdata rgbindx 2 add get 12 mul    % Blue
        add add 64 idiv      % I = .5G + .31R + .18B
        put
        /rgbindx rgbindx 3 add store
      } for
      grays 0 npixls getinterval
    } bind def

    % Utility procedure for colorimage operator.
    % This procedure takes two procedures off the
    % stack and merges them into a single procedure.

    /mergeprocs { % def
      dup length
      3 -1 roll
      dup
      length
      dup
      5 1 roll
      3 -1 roll
      add
      array cvx
      dup
      3 -1 roll
      0 exch
      putinterval
      dup
      4 2 roll
      putinterval
    } bind def

    /colorimage { % def
      pop pop     % remove 'false 3' operands
      {colortogray} mergeprocs
      image
    } bind def
  } ifelse          % end of 'false' case



% define the colormap
/cmap 723 string def


% load up the colormap
currentfile cmap readhexstring
041808 049008 8c948c 045204 4c544c 04c804 84e284 449644 c4cbc4 0c380e 
04ac07 cce6cc 345e2c e4e7e4 046604 2c3a2c 347234 e4fee2 048208 64cc60 
34922c 24b224 04e404 044604 647264 242623 049f07 8cae8c 04bc06 24c61c 
f4f8f3 1c541c 04d804 1c621c 1c7220 0c280d 14910f 045e04 047c04 ccdcd0 
14ac18 1c481c 747473 04d105 0c6c0b 24852a 1c381c f4f1f3 acafac f4fef5 
0c310c acc6ac 049708 a4a4a3 3c4a44 148314 144812 9cea94 04b405 149e14 
1cbc1c 044004 e4fef4 dcdddd 748274 5c5959 4cba54 145b11 145413 147412 
c4fec4 e4f1e7 146411 088a0a 243028 09c207 fcf8f3 147c13 14c80e acceac 
3c3939 04f405 044e07 07a608 14d00f 0c1f10 0c900b d4d3d4 ecfee3 1c291d 
0c6e14 bcbfbd d4f6d4 909a94 4c5a50 0cac08 24ba24 547e54 0cbc0a 0c5c16 
0c7c0b fcf1fb acb8ac 1c311c aca7a9 e2e2e2 a4e2a4 0cc80a 6c9a6c 143715 
0c650a 0c840b 07de06 14970c 0c980a 0cb40a 848583 ecf0f0 c3c6c3 0c540d 
0c740c cccccc 74ce6c 30a02c 04ec05 54aa5c 6cb66c 9cfa9c 2c862c 5c926c 
6ca674 b4deac 9cda9c 34aa2c 6c7e6c acfeac 448244 34d22c 7d7d7c 6c6d6c 
445644 4c4d4c 1c7a19 1c3e1c 3c3f3c 2c422c 7c9a84 54c254 dceadc 144014 
343231 bccebc bcbabc 447244 6c6664 9c9d9c 7caa7c 349a38 6c7a74 84b69c 
1c4e18 898a89 ccfadc 1c6c2c b8e2c0 1c8a24 a1aaa1 3c4e3c 5f5e5c d8fed8 
24be24 78d670 688668 148a14 14a618 145624 0c480e 2c292b 142916 1c921c 
d4dad9 243828 143017 b4d2bc b4b7b5 1c961c 8c868c 247e24 144e13 04fa04 
246224 fcfefc 0c4e0c ace2b4 3caa3c 244e24 0c180c 949394 545454 ece9ec 
343634 2cb127 6c736c 0ca00c 0cda08 0c5c0b 0ccf06 146a0c b4b2b4 646464 
b4c2b4 0c3f0c ecfdf9 e4dedc ccfdcc 2c2f2b 142214 146b16 c4c2c2 545b54 
2cb62c 74ba74 346634 b4fcb0 244224 444242 246a24 e4feec 0ce204 f4f9fc 
f4eefc 444744 54b654 fcf9fc 0c9114 dcd6d4 ecfeec 0c7b14 0cc614 0c6314 
0c8414 
pop pop   % lose return values from readhexstring


% rlecmapimage expects to have 'w h bits matrix' on stack
/rlecmapimage {
  /buffer 1 string def
  /rgbval 3 string def
  /block  384 string def

  % proc to read a block from file, and return RGB data
  { currentfile buffer readhexstring pop
    /bcount exch 0 get store
    bcount 128 ge
    {  % it's a non-run block
      0 1 bcount 128 sub
      { currentfile buffer readhexstring pop pop

        % look up value in color map
        /rgbval cmap buffer 0 get 3 mul 3 getinterval store

        % and put it in position i*3 in block
        block exch 3 mul rgbval putinterval
      } for
      block  0  bcount 127 sub 3 mul  getinterval
    }

    { % else it's a run block
      currentfile buffer readhexstring pop pop

      % look up value in colormap
      /rgbval cmap buffer 0 get 3 mul 3 getinterval store

      0 1 bcount { block exch 3 mul rgbval putinterval } for

      block 0 bcount 1 add 3 mul getinterval
    } ifelse
  } % end of proc
  false 3 colorimage
} bind def


60 40 8			% dimensions of data
[60 0 0 -40 0 40]		% mapping matrix
rlecmapimage

10bf8131bf05bf03e98165e902e9046587bf3158ec31bfe9658265e9bf09bf
10bf8131bf04bf81e9bf01bf02e98265bfe982e965e901e981bf318131ec82ecbfe982e9
65bf0abf
12bf82751ebf83bf1ebf318231ec3102318111318131bf81bfe901e981bf318131bf01bf
01e90bbf
0fbf02e901bf023101ec021101a981d6a981a9118111318131bf14bf
0fbf8165e901e988e5bfd4ecd66add07808c80149dc2137f46a911d431bfe981e9bf0fbf

0fbf01e982bfe9318331a49ce28fe2454d37562456dc71567bab87a9d4bf81bfe981e9bf
81bf318131bf0abf
10bf8ac775bf311bde43224d37568656cb535f1a733c893cae8506a91131bfe9bf01bf81
58bf0abf
0fbf911ebf31b761a0442245ed56721a530a3a4e3a813a4e864e73c94246e3bf10bf
07bf81e9bf82bfe9bf92bf1ebf31ec4f0c38e2ef8e4d49561a530a3a6283624b052b8a2b
ce4e60c2dfe331bf4cbf0cbf
0abf81e9bf82bfe9ec8eec83de1f21778e786f01341a0a3a1c851c4b052b20168b162054
aa93df11312fe965bf0abf
0ebf8d3111883d77cdcf78646f0134530a810a1c911c4ece20167c517c16542893a9ec31
e965bf0abf
08bf01e999bfe91ebf316cc07743cd45786f49561a530a3a624b6b2b707c510151877c70
4edcaba9bfe981e9bf0abf
0bbf01e985bf27d34352cf90cf0e4d2656011a530a1c62ee2b20167c5102518816cc1db9
d611bfe9bf0abf
07bf81e9bf01bf90e9bf4c86d3445277d92c786f49721a0a3a853a4b0520167c827c51bd
88bd5116e44b157a11bf0cbf
0dbf8d3f0fc33d4403cfbb0e3756011a0a860a624b2b20167c817c5102510116854b897b
a911bf0bbf
08bf82e9e5bf97bf75dab209bcc021ef254d2649561a533a1c4b052b70167c037c811620
85203a853911bf0bbf
0bbf0131869eb6d3b0bc7748884845646f561acb0a7382734b2b812b1683167c16cc01cc
012b844b2813d4bf0bbf
0abf0231955e236db0c04463cf45646f5634cb533a73624b2b2016821670548854ce2b20
4b28e831bf0bbf
0abf023183b5b6d3b089b044436e45786f49341a871a0a733a626b2b200120896b4e6b05
2b1c5f9decbf0bbf
09bf8131bf97bf31d82e09d3b044cd485a786f1201cb1a530a73621c052b852b054e4b1c
0585053a282d58bf0bbf
0bbf9431bf556709b03844cd482c7864125634cb1a5f0a7382734b0501050162011c854b
0aae2d58bf0bbf
0bbf0131934a236dd3b0bc7743485a786f1201341acb535f3a813a1c011c0173023a8453
3b1458bf0bbf
0bbf8431bf0455098309d338778277ef2c852c266f1201348134cb83cb530a3a013a810a
5f815f0a850a1ab37d58bf0bbf
08bf81e9bf93bf31bf18d83209d338c044cd6e0e2c64126f0172837271cb5382530a5383
53ae531a851a01a57e58bf0bbf
0bbf01e5837600230901098138c082c0482c862c7864126f49568156728272341a811a72
0272864912bb841131bf0abf
03bf94e9bfe9bfe9bf1ebf1ebf275923b632099538c044ef81ef7881786481646f816fad
84adea01ea560156882449ad2da3115831bf0abf
04bf02e992654ce61e75bf0d185523b66d0995bcc043cd2c812c7881786483646f64f001
f08b6f496f49642d6382e3314cbf0abf
01bf85e9e5e9652fc784c7693fc7698a69c7d2b200232eb60929bc84bc6343ef2c862c78
45784d78ed82ed6f6489644d45a3afa2114c31bf0abf
01e58175c783c769d5eb8ceb797679dab87908db67c4b66d876d9538b0447743ef84ef6e
2c78458e455a457864788ecfbe9fd4315831bf0abf
88e5750d3f5779da98d083d0689b3501358d5d0236c45567b6320995b04477cd92cdef6e
2c6e5ad95acf782c4517813e31bf2fbf0bbf
887569575bd0689bc5ba83ba8a2a8a878aca2a74db5955b284b23209d3b081b077017701
cd016e02ef876e2c6e4810a4d4bf01bf814cbf0abf
873f79b835c5ba2a9a829aa8410141868de1d104c690d881d85583552e6d958b9538b0c0
77cd03cd6377afcd84cd4321c1d483d4e9654c814cbf0abf
88575b9b742ad1418de181e15081509603968450c8d759d881d8b283b2326d0981099585
9538bcb0381f871f95c3995ca931bf81bfe981e9bf0bbf
8779b8c58ad1c6e750855096d7b119b104b184d7b119d855845523b2b66d016d83952995
2987296de09211d431bf01bf01e90cbf
8979d0c52aa88de15096b181b119041901b18796c80fd74a59b2b602b6016d86326d328f
ac0b318331bf31bf01bf81e9bf0cbf
88575b9b742ad1c68de186e1c850c850c850865096c850e1e70487045e8ca7912e672e85
2e8cac33473101318158bf02bf82e9bfe981e9bf0abf
8b3f799835c5742a8bd1a8dbc683c68dc68d818dc601c68cdbd1ca40a15da66697274711
31863158bf31bf31bf82bf4ce985e9bfe9bfe9bf0abf
8bc76957dab8359bc5a1748a2a052a018a01748b029ba6665b279447ec311ebf83bf581e
bf82bf4cbf02bf82e9bfe981e9bf0abf
881e75693f57795bb8d082d068350135029b0135013088b8985b7608b40d751e811ebf83
bf1e75bf81bf4c814cbf05bf81e9bf0bbf
83e9e52fc782c7693f823f5779817976027681da760276827957b482b4c7750175822fe5
bf82bf4cbf01bf814cbf81bfe981e9bf01bf01e90dbf

%
% Compression made this file 26.36% of the uncompressed size.
%


showpage

% stop using temporary dictionary
end

% restore original state
origstate restore

%%Trailer

%%EndDocument
 @endspecial 248 w Fg(Be)67 b(ashame)g(of)g(bad)g(code)4983
4110 y @beginspecial 276 @llx 376 @lly 336 @urx 416 @ury
85 @rwi @setspecial
%%BeginDocument: green-bullet-on-white.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/fred/TeX/STYLES/Prosper/img/green-bullet-on-white.ps
%%Creator: XV Version 3.10a+FLmask  Rev: 12/29/94  -  by John Bradley
%%BoundingBox: 276 376 336 416
%%Pages: 1
%%DocumentFonts:
%%EndComments
%%EndProlog

%%Page: 1 1

% remember original state
/origstate save def

% build a temporary dictionary
20 dict begin

% define space for color conversions
/grays 60 string def  % space for gray scale line
/npixls 0 def
/rgbindx 0 def

% lower left corner
276 376 translate

% size of image (on paper, in 1/72inch coords)
59.97600 40.03200 scale

% define 'colorimage' if it isn't defined
%   ('colortogray' and 'mergeprocs' come from xwd2ps
%     via xgrab)
/colorimage where   % do we know about 'colorimage'?
  { pop }           % yes: pop off the 'dict' returned
  {                 % no:  define one
    /colortogray {  % define an RGB->I function
      /rgbdata exch store    % call input 'rgbdata'
      rgbdata length 3 idiv
      /npixls exch store
      /rgbindx 0 store
      0 1 npixls 1 sub {
        grays exch
        rgbdata rgbindx       get 20 mul    % Red
        rgbdata rgbindx 1 add get 32 mul    % Green
        rgbdata rgbindx 2 add get 12 mul    % Blue
        add add 64 idiv      % I = .5G + .31R + .18B
        put
        /rgbindx rgbindx 3 add store
      } for
      grays 0 npixls getinterval
    } bind def

    % Utility procedure for colorimage operator.
    % This procedure takes two procedures off the
    % stack and merges them into a single procedure.

    /mergeprocs { % def
      dup length
      3 -1 roll
      dup
      length
      dup
      5 1 roll
      3 -1 roll
      add
      array cvx
      dup
      3 -1 roll
      0 exch
      putinterval
      dup
      4 2 roll
      putinterval
    } bind def

    /colorimage { % def
      pop pop     % remove 'false 3' operands
      {colortogray} mergeprocs
      image
    } bind def
  } ifelse          % end of 'false' case



% define the colormap
/cmap 723 string def


% load up the colormap
currentfile cmap readhexstring
041808 049008 8c948c 045204 4c544c 04c804 84e284 449644 c4cbc4 0c380e 
04ac07 cce6cc 345e2c e4e7e4 046604 2c3a2c 347234 e4fee2 048208 64cc60 
34922c 24b224 04e404 044604 647264 242623 049f07 8cae8c 04bc06 24c61c 
f4f8f3 1c541c 04d804 1c621c 1c7220 0c280d 14910f 045e04 047c04 ccdcd0 
14ac18 1c481c 747473 04d105 0c6c0b 24852a 1c381c f4f1f3 acafac f4fef5 
0c310c acc6ac 049708 a4a4a3 3c4a44 148314 144812 9cea94 04b405 149e14 
1cbc1c 044004 e4fef4 dcdddd 748274 5c5959 4cba54 145b11 145413 147412 
c4fec4 e4f1e7 146411 088a0a 243028 09c207 fcf8f3 147c13 14c80e acceac 
3c3939 04f405 044e07 07a608 14d00f 0c1f10 0c900b d4d3d4 ecfee3 1c291d 
0c6e14 bcbfbd d4f6d4 909a94 4c5a50 0cac08 24ba24 547e54 0cbc0a 0c5c16 
0c7c0b fcf1fb acb8ac 1c311c aca7a9 e2e2e2 a4e2a4 0cc80a 6c9a6c 143715 
0c650a 0c840b 07de06 14970c 0c980a 0cb40a 848583 ecf0f0 c3c6c3 0c540d 
0c740c cccccc 74ce6c 30a02c 04ec05 54aa5c 6cb66c 9cfa9c 2c862c 5c926c 
6ca674 b4deac 9cda9c 34aa2c 6c7e6c acfeac 448244 34d22c 7d7d7c 6c6d6c 
445644 4c4d4c 1c7a19 1c3e1c 3c3f3c 2c422c 7c9a84 54c254 dceadc 144014 
343231 bccebc bcbabc 447244 6c6664 9c9d9c 7caa7c 349a38 6c7a74 84b69c 
1c4e18 898a89 ccfadc 1c6c2c b8e2c0 1c8a24 a1aaa1 3c4e3c 5f5e5c d8fed8 
24be24 78d670 688668 148a14 14a618 145624 0c480e 2c292b 142916 1c921c 
d4dad9 243828 143017 b4d2bc b4b7b5 1c961c 8c868c 247e24 144e13 04fa04 
246224 fcfefc 0c4e0c ace2b4 3caa3c 244e24 0c180c 949394 545454 ece9ec 
343634 2cb127 6c736c 0ca00c 0cda08 0c5c0b 0ccf06 146a0c b4b2b4 646464 
b4c2b4 0c3f0c ecfdf9 e4dedc ccfdcc 2c2f2b 142214 146b16 c4c2c2 545b54 
2cb62c 74ba74 346634 b4fcb0 244224 444242 246a24 e4feec 0ce204 f4f9fc 
f4eefc 444744 54b654 fcf9fc 0c9114 dcd6d4 ecfeec 0c7b14 0cc614 0c6314 
0c8414 
pop pop   % lose return values from readhexstring


% rlecmapimage expects to have 'w h bits matrix' on stack
/rlecmapimage {
  /buffer 1 string def
  /rgbval 3 string def
  /block  384 string def

  % proc to read a block from file, and return RGB data
  { currentfile buffer readhexstring pop
    /bcount exch 0 get store
    bcount 128 ge
    {  % it's a non-run block
      0 1 bcount 128 sub
      { currentfile buffer readhexstring pop pop

        % look up value in color map
        /rgbval cmap buffer 0 get 3 mul 3 getinterval store

        % and put it in position i*3 in block
        block exch 3 mul rgbval putinterval
      } for
      block  0  bcount 127 sub 3 mul  getinterval
    }

    { % else it's a run block
      currentfile buffer readhexstring pop pop

      % look up value in colormap
      /rgbval cmap buffer 0 get 3 mul 3 getinterval store

      0 1 bcount { block exch 3 mul rgbval putinterval } for

      block 0 bcount 1 add 3 mul getinterval
    } ifelse
  } % end of proc
  false 3 colorimage
} bind def


60 40 8			% dimensions of data
[60 0 0 -40 0 40]		% mapping matrix
rlecmapimage

10bf8131bf05bf03e98165e902e9046587bf3158ec31bfe9658265e9bf09bf
10bf8131bf04bf81e9bf01bf02e98265bfe982e965e901e981bf318131ec82ecbfe982e9
65bf0abf
12bf82751ebf83bf1ebf318231ec3102318111318131bf81bfe901e981bf318131bf01bf
01e90bbf
0fbf02e901bf023101ec021101a981d6a981a9118111318131bf14bf
0fbf8165e901e988e5bfd4ecd66add07808c80149dc2137f46a911d431bfe981e9bf0fbf

0fbf01e982bfe9318331a49ce28fe2454d37562456dc71567bab87a9d4bf81bfe981e9bf
81bf318131bf0abf
10bf8ac775bf311bde43224d37568656cb535f1a733c893cae8506a91131bfe9bf01bf81
58bf0abf
0fbf911ebf31b761a0442245ed56721a530a3a4e3a813a4e864e73c94246e3bf10bf
07bf81e9bf82bfe9bf92bf1ebf31ec4f0c38e2ef8e4d49561a530a3a6283624b052b8a2b
ce4e60c2dfe331bf4cbf0cbf
0abf81e9bf82bfe9ec8eec83de1f21778e786f01341a0a3a1c851c4b052b20168b162054
aa93df11312fe965bf0abf
0ebf8d3111883d77cdcf78646f0134530a810a1c911c4ece20167c517c16542893a9ec31
e965bf0abf
08bf01e999bfe91ebf316cc07743cd45786f49561a530a3a624b6b2b707c510151877c70
4edcaba9bfe981e9bf0abf
0bbf01e985bf27d34352cf90cf0e4d2656011a530a1c62ee2b20167c5102518816cc1db9
d611bfe9bf0abf
07bf81e9bf01bf90e9bf4c86d3445277d92c786f49721a0a3a853a4b0520167c827c51bd
88bd5116e44b157a11bf0cbf
0dbf8d3f0fc33d4403cfbb0e3756011a0a860a624b2b20167c817c5102510116854b897b
a911bf0bbf
08bf82e9e5bf97bf75dab209bcc021ef254d2649561a533a1c4b052b70167c037c811620
85203a853911bf0bbf
0bbf0131869eb6d3b0bc7748884845646f561acb0a7382734b2b812b1683167c16cc01cc
012b844b2813d4bf0bbf
0abf0231955e236db0c04463cf45646f5634cb533a73624b2b2016821670548854ce2b20
4b28e831bf0bbf
0abf023183b5b6d3b089b044436e45786f49341a871a0a733a626b2b200120896b4e6b05
2b1c5f9decbf0bbf
09bf8131bf97bf31d82e09d3b044cd485a786f1201cb1a530a73621c052b852b054e4b1c
0585053a282d58bf0bbf
0bbf9431bf556709b03844cd482c7864125634cb1a5f0a7382734b0501050162011c854b
0aae2d58bf0bbf
0bbf0131934a236dd3b0bc7743485a786f1201341acb535f3a813a1c011c0173023a8453
3b1458bf0bbf
0bbf8431bf0455098309d338778277ef2c852c266f1201348134cb83cb530a3a013a810a
5f815f0a850a1ab37d58bf0bbf
08bf81e9bf93bf31bf18d83209d338c044cd6e0e2c64126f0172837271cb5382530a5383
53ae531a851a01a57e58bf0bbf
0bbf01e5837600230901098138c082c0482c862c7864126f49568156728272341a811a72
0272864912bb841131bf0abf
03bf94e9bfe9bfe9bf1ebf1ebf275923b632099538c044ef81ef7881786481646f816fad
84adea01ea560156882449ad2da3115831bf0abf
04bf02e992654ce61e75bf0d185523b66d0995bcc043cd2c812c7881786483646f64f001
f08b6f496f49642d6382e3314cbf0abf
01bf85e9e5e9652fc784c7693fc7698a69c7d2b200232eb60929bc84bc6343ef2c862c78
45784d78ed82ed6f6489644d45a3afa2114c31bf0abf
01e58175c783c769d5eb8ceb797679dab87908db67c4b66d876d9538b0447743ef84ef6e
2c78458e455a457864788ecfbe9fd4315831bf0abf
88e5750d3f5779da98d083d0689b3501358d5d0236c45567b6320995b04477cd92cdef6e
2c6e5ad95acf782c4517813e31bf2fbf0bbf
887569575bd0689bc5ba83ba8a2a8a878aca2a74db5955b284b23209d3b081b077017701
cd016e02ef876e2c6e4810a4d4bf01bf814cbf0abf
873f79b835c5ba2a9a829aa8410141868de1d104c690d881d85583552e6d958b9538b0c0
77cd03cd6377afcd84cd4321c1d483d4e9654c814cbf0abf
88575b9b742ad1418de181e15081509603968450c8d759d881d8b283b2326d0981099585
9538bcb0381f871f95c3995ca931bf81bfe981e9bf0bbf
8779b8c58ad1c6e750855096d7b119b104b184d7b119d855845523b2b66d016d83952995
2987296de09211d431bf01bf01e90cbf
8979d0c52aa88de15096b181b119041901b18796c80fd74a59b2b602b6016d86326d328f
ac0b318331bf31bf01bf81e9bf0cbf
88575b9b742ad1c68de186e1c850c850c850865096c850e1e70487045e8ca7912e672e85
2e8cac33473101318158bf02bf82e9bfe981e9bf0abf
8b3f799835c5742a8bd1a8dbc683c68dc68d818dc601c68cdbd1ca40a15da66697274711
31863158bf31bf31bf82bf4ce985e9bfe9bfe9bf0abf
8bc76957dab8359bc5a1748a2a052a018a01748b029ba6665b279447ec311ebf83bf581e
bf82bf4cbf02bf82e9bfe981e9bf0abf
881e75693f57795bb8d082d068350135029b0135013088b8985b7608b40d751e811ebf83
bf1e75bf81bf4c814cbf05bf81e9bf0bbf
83e9e52fc782c7693f823f5779817976027681da760276827957b482b4c7750175822fe5
bf82bf4cbf01bf814cbf81bfe981e9bf01bf01e90dbf

%
% Compression made this file 26.36% of the uncompressed size.
%


showpage

% stop using temporary dictionary
end

% restore original state
origstate restore

%%Trailer

%%EndDocument
 @endspecial 248 w(Unif)-7 b(or)6 b(m)67 b(coding)f(style)4581
4265 y
 0. 0. 1. setrgbcolor
 4581 4265 a 4649 4484 a @beginspecial 276 @llx
376 @lly 336 @urx 416 @ury 113 @rwi @setspecial
%%BeginDocument: green-bullet-on-white.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/fred/TeX/STYLES/Prosper/img/green-bullet-on-white.ps
%%Creator: XV Version 3.10a+FLmask  Rev: 12/29/94  -  by John Bradley
%%BoundingBox: 276 376 336 416
%%Pages: 1
%%DocumentFonts:
%%EndComments
%%EndProlog

%%Page: 1 1

% remember original state
/origstate save def

% build a temporary dictionary
20 dict begin

% define space for color conversions
/grays 60 string def  % space for gray scale line
/npixls 0 def
/rgbindx 0 def

% lower left corner
276 376 translate

% size of image (on paper, in 1/72inch coords)
59.97600 40.03200 scale

% define 'colorimage' if it isn't defined
%   ('colortogray' and 'mergeprocs' come from xwd2ps
%     via xgrab)
/colorimage where   % do we know about 'colorimage'?
  { pop }           % yes: pop off the 'dict' returned
  {                 % no:  define one
    /colortogray {  % define an RGB->I function
      /rgbdata exch store    % call input 'rgbdata'
      rgbdata length 3 idiv
      /npixls exch store
      /rgbindx 0 store
      0 1 npixls 1 sub {
        grays exch
        rgbdata rgbindx       get 20 mul    % Red
        rgbdata rgbindx 1 add get 32 mul    % Green
        rgbdata rgbindx 2 add get 12 mul    % Blue
        add add 64 idiv      % I = .5G + .31R + .18B
        put
        /rgbindx rgbindx 3 add store
      } for
      grays 0 npixls getinterval
    } bind def

    % Utility procedure for colorimage operator.
    % This procedure takes two procedures off the
    % stack and merges them into a single procedure.

    /mergeprocs { % def
      dup length
      3 -1 roll
      dup
      length
      dup
      5 1 roll
      3 -1 roll
      add
      array cvx
      dup
      3 -1 roll
      0 exch
      putinterval
      dup
      4 2 roll
      putinterval
    } bind def

    /colorimage { % def
      pop pop     % remove 'false 3' operands
      {colortogray} mergeprocs
      image
    } bind def
  } ifelse          % end of 'false' case



% define the colormap
/cmap 723 string def


% load up the colormap
currentfile cmap readhexstring
041808 049008 8c948c 045204 4c544c 04c804 84e284 449644 c4cbc4 0c380e 
04ac07 cce6cc 345e2c e4e7e4 046604 2c3a2c 347234 e4fee2 048208 64cc60 
34922c 24b224 04e404 044604 647264 242623 049f07 8cae8c 04bc06 24c61c 
f4f8f3 1c541c 04d804 1c621c 1c7220 0c280d 14910f 045e04 047c04 ccdcd0 
14ac18 1c481c 747473 04d105 0c6c0b 24852a 1c381c f4f1f3 acafac f4fef5 
0c310c acc6ac 049708 a4a4a3 3c4a44 148314 144812 9cea94 04b405 149e14 
1cbc1c 044004 e4fef4 dcdddd 748274 5c5959 4cba54 145b11 145413 147412 
c4fec4 e4f1e7 146411 088a0a 243028 09c207 fcf8f3 147c13 14c80e acceac 
3c3939 04f405 044e07 07a608 14d00f 0c1f10 0c900b d4d3d4 ecfee3 1c291d 
0c6e14 bcbfbd d4f6d4 909a94 4c5a50 0cac08 24ba24 547e54 0cbc0a 0c5c16 
0c7c0b fcf1fb acb8ac 1c311c aca7a9 e2e2e2 a4e2a4 0cc80a 6c9a6c 143715 
0c650a 0c840b 07de06 14970c 0c980a 0cb40a 848583 ecf0f0 c3c6c3 0c540d 
0c740c cccccc 74ce6c 30a02c 04ec05 54aa5c 6cb66c 9cfa9c 2c862c 5c926c 
6ca674 b4deac 9cda9c 34aa2c 6c7e6c acfeac 448244 34d22c 7d7d7c 6c6d6c 
445644 4c4d4c 1c7a19 1c3e1c 3c3f3c 2c422c 7c9a84 54c254 dceadc 144014 
343231 bccebc bcbabc 447244 6c6664 9c9d9c 7caa7c 349a38 6c7a74 84b69c 
1c4e18 898a89 ccfadc 1c6c2c b8e2c0 1c8a24 a1aaa1 3c4e3c 5f5e5c d8fed8 
24be24 78d670 688668 148a14 14a618 145624 0c480e 2c292b 142916 1c921c 
d4dad9 243828 143017 b4d2bc b4b7b5 1c961c 8c868c 247e24 144e13 04fa04 
246224 fcfefc 0c4e0c ace2b4 3caa3c 244e24 0c180c 949394 545454 ece9ec 
343634 2cb127 6c736c 0ca00c 0cda08 0c5c0b 0ccf06 146a0c b4b2b4 646464 
b4c2b4 0c3f0c ecfdf9 e4dedc ccfdcc 2c2f2b 142214 146b16 c4c2c2 545b54 
2cb62c 74ba74 346634 b4fcb0 244224 444242 246a24 e4feec 0ce204 f4f9fc 
f4eefc 444744 54b654 fcf9fc 0c9114 dcd6d4 ecfeec 0c7b14 0cc614 0c6314 
0c8414 
pop pop   % lose return values from readhexstring


% rlecmapimage expects to have 'w h bits matrix' on stack
/rlecmapimage {
  /buffer 1 string def
  /rgbval 3 string def
  /block  384 string def

  % proc to read a block from file, and return RGB data
  { currentfile buffer readhexstring pop
    /bcount exch 0 get store
    bcount 128 ge
    {  % it's a non-run block
      0 1 bcount 128 sub
      { currentfile buffer readhexstring pop pop

        % look up value in color map
        /rgbval cmap buffer 0 get 3 mul 3 getinterval store

        % and put it in position i*3 in block
        block exch 3 mul rgbval putinterval
      } for
      block  0  bcount 127 sub 3 mul  getinterval
    }

    { % else it's a run block
      currentfile buffer readhexstring pop pop

      % look up value in colormap
      /rgbval cmap buffer 0 get 3 mul 3 getinterval store

      0 1 bcount { block exch 3 mul rgbval putinterval } for

      block 0 bcount 1 add 3 mul getinterval
    } ifelse
  } % end of proc
  false 3 colorimage
} bind def


60 40 8			% dimensions of data
[60 0 0 -40 0 40]		% mapping matrix
rlecmapimage

10bf8131bf05bf03e98165e902e9046587bf3158ec31bfe9658265e9bf09bf
10bf8131bf04bf81e9bf01bf02e98265bfe982e965e901e981bf318131ec82ecbfe982e9
65bf0abf
12bf82751ebf83bf1ebf318231ec3102318111318131bf81bfe901e981bf318131bf01bf
01e90bbf
0fbf02e901bf023101ec021101a981d6a981a9118111318131bf14bf
0fbf8165e901e988e5bfd4ecd66add07808c80149dc2137f46a911d431bfe981e9bf0fbf

0fbf01e982bfe9318331a49ce28fe2454d37562456dc71567bab87a9d4bf81bfe981e9bf
81bf318131bf0abf
10bf8ac775bf311bde43224d37568656cb535f1a733c893cae8506a91131bfe9bf01bf81
58bf0abf
0fbf911ebf31b761a0442245ed56721a530a3a4e3a813a4e864e73c94246e3bf10bf
07bf81e9bf82bfe9bf92bf1ebf31ec4f0c38e2ef8e4d49561a530a3a6283624b052b8a2b
ce4e60c2dfe331bf4cbf0cbf
0abf81e9bf82bfe9ec8eec83de1f21778e786f01341a0a3a1c851c4b052b20168b162054
aa93df11312fe965bf0abf
0ebf8d3111883d77cdcf78646f0134530a810a1c911c4ece20167c517c16542893a9ec31
e965bf0abf
08bf01e999bfe91ebf316cc07743cd45786f49561a530a3a624b6b2b707c510151877c70
4edcaba9bfe981e9bf0abf
0bbf01e985bf27d34352cf90cf0e4d2656011a530a1c62ee2b20167c5102518816cc1db9
d611bfe9bf0abf
07bf81e9bf01bf90e9bf4c86d3445277d92c786f49721a0a3a853a4b0520167c827c51bd
88bd5116e44b157a11bf0cbf
0dbf8d3f0fc33d4403cfbb0e3756011a0a860a624b2b20167c817c5102510116854b897b
a911bf0bbf
08bf82e9e5bf97bf75dab209bcc021ef254d2649561a533a1c4b052b70167c037c811620
85203a853911bf0bbf
0bbf0131869eb6d3b0bc7748884845646f561acb0a7382734b2b812b1683167c16cc01cc
012b844b2813d4bf0bbf
0abf0231955e236db0c04463cf45646f5634cb533a73624b2b2016821670548854ce2b20
4b28e831bf0bbf
0abf023183b5b6d3b089b044436e45786f49341a871a0a733a626b2b200120896b4e6b05
2b1c5f9decbf0bbf
09bf8131bf97bf31d82e09d3b044cd485a786f1201cb1a530a73621c052b852b054e4b1c
0585053a282d58bf0bbf
0bbf9431bf556709b03844cd482c7864125634cb1a5f0a7382734b0501050162011c854b
0aae2d58bf0bbf
0bbf0131934a236dd3b0bc7743485a786f1201341acb535f3a813a1c011c0173023a8453
3b1458bf0bbf
0bbf8431bf0455098309d338778277ef2c852c266f1201348134cb83cb530a3a013a810a
5f815f0a850a1ab37d58bf0bbf
08bf81e9bf93bf31bf18d83209d338c044cd6e0e2c64126f0172837271cb5382530a5383
53ae531a851a01a57e58bf0bbf
0bbf01e5837600230901098138c082c0482c862c7864126f49568156728272341a811a72
0272864912bb841131bf0abf
03bf94e9bfe9bfe9bf1ebf1ebf275923b632099538c044ef81ef7881786481646f816fad
84adea01ea560156882449ad2da3115831bf0abf
04bf02e992654ce61e75bf0d185523b66d0995bcc043cd2c812c7881786483646f64f001
f08b6f496f49642d6382e3314cbf0abf
01bf85e9e5e9652fc784c7693fc7698a69c7d2b200232eb60929bc84bc6343ef2c862c78
45784d78ed82ed6f6489644d45a3afa2114c31bf0abf
01e58175c783c769d5eb8ceb797679dab87908db67c4b66d876d9538b0447743ef84ef6e
2c78458e455a457864788ecfbe9fd4315831bf0abf
88e5750d3f5779da98d083d0689b3501358d5d0236c45567b6320995b04477cd92cdef6e
2c6e5ad95acf782c4517813e31bf2fbf0bbf
887569575bd0689bc5ba83ba8a2a8a878aca2a74db5955b284b23209d3b081b077017701
cd016e02ef876e2c6e4810a4d4bf01bf814cbf0abf
873f79b835c5ba2a9a829aa8410141868de1d104c690d881d85583552e6d958b9538b0c0
77cd03cd6377afcd84cd4321c1d483d4e9654c814cbf0abf
88575b9b742ad1418de181e15081509603968450c8d759d881d8b283b2326d0981099585
9538bcb0381f871f95c3995ca931bf81bfe981e9bf0bbf
8779b8c58ad1c6e750855096d7b119b104b184d7b119d855845523b2b66d016d83952995
2987296de09211d431bf01bf01e90cbf
8979d0c52aa88de15096b181b119041901b18796c80fd74a59b2b602b6016d86326d328f
ac0b318331bf31bf01bf81e9bf0cbf
88575b9b742ad1c68de186e1c850c850c850865096c850e1e70487045e8ca7912e672e85
2e8cac33473101318158bf02bf82e9bfe981e9bf0abf
8b3f799835c5742a8bd1a8dbc683c68dc68d818dc601c68cdbd1ca40a15da66697274711
31863158bf31bf31bf82bf4ce985e9bfe9bfe9bf0abf
8bc76957dab8359bc5a1748a2a052a018a01748b029ba6665b279447ec311ebf83bf581e
bf82bf4cbf02bf82e9bfe981e9bf0abf
881e75693f57795bb8d082d068350135029b0135013088b8985b7608b40d751e811ebf83
bf1e75bf81bf4c814cbf05bf81e9bf0bbf
83e9e52fc782c7693f823f5779817976027681da760276827957b482b4c7750175822fe5
bf82bf4cbf01bf814cbf81bfe981e9bf01bf01e90dbf

%
% Compression made this file 26.36% of the uncompressed size.
%


showpage

% stop using temporary dictionary
end

% restore original state
origstate restore

%%Trailer

%%EndDocument
 @endspecial 298 w Fg(Pro)l(vide)g(as)h(man)l(y)g(con\002gur)n(ations)e
(as)h(possib)-5 b(le)9569 4484 y
 0 setgray
 9569 4484 a 4983 4802
a @beginspecial 276 @llx 376 @lly 336 @urx 416 @ury 85
@rwi @setspecial
%%BeginDocument: green-bullet-on-white.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/fred/TeX/STYLES/Prosper/img/green-bullet-on-white.ps
%%Creator: XV Version 3.10a+FLmask  Rev: 12/29/94  -  by John Bradley
%%BoundingBox: 276 376 336 416
%%Pages: 1
%%DocumentFonts:
%%EndComments
%%EndProlog

%%Page: 1 1

% remember original state
/origstate save def

% build a temporary dictionary
20 dict begin

% define space for color conversions
/grays 60 string def  % space for gray scale line
/npixls 0 def
/rgbindx 0 def

% lower left corner
276 376 translate

% size of image (on paper, in 1/72inch coords)
59.97600 40.03200 scale

% define 'colorimage' if it isn't defined
%   ('colortogray' and 'mergeprocs' come from xwd2ps
%     via xgrab)
/colorimage where   % do we know about 'colorimage'?
  { pop }           % yes: pop off the 'dict' returned
  {                 % no:  define one
    /colortogray {  % define an RGB->I function
      /rgbdata exch store    % call input 'rgbdata'
      rgbdata length 3 idiv
      /npixls exch store
      /rgbindx 0 store
      0 1 npixls 1 sub {
        grays exch
        rgbdata rgbindx       get 20 mul    % Red
        rgbdata rgbindx 1 add get 32 mul    % Green
        rgbdata rgbindx 2 add get 12 mul    % Blue
        add add 64 idiv      % I = .5G + .31R + .18B
        put
        /rgbindx rgbindx 3 add store
      } for
      grays 0 npixls getinterval
    } bind def

    % Utility procedure for colorimage operator.
    % This procedure takes two procedures off the
    % stack and merges them into a single procedure.

    /mergeprocs { % def
      dup length
      3 -1 roll
      dup
      length
      dup
      5 1 roll
      3 -1 roll
      add
      array cvx
      dup
      3 -1 roll
      0 exch
      putinterval
      dup
      4 2 roll
      putinterval
    } bind def

    /colorimage { % def
      pop pop     % remove 'false 3' operands
      {colortogray} mergeprocs
      image
    } bind def
  } ifelse          % end of 'false' case



% define the colormap
/cmap 723 string def


% load up the colormap
currentfile cmap readhexstring
041808 049008 8c948c 045204 4c544c 04c804 84e284 449644 c4cbc4 0c380e 
04ac07 cce6cc 345e2c e4e7e4 046604 2c3a2c 347234 e4fee2 048208 64cc60 
34922c 24b224 04e404 044604 647264 242623 049f07 8cae8c 04bc06 24c61c 
f4f8f3 1c541c 04d804 1c621c 1c7220 0c280d 14910f 045e04 047c04 ccdcd0 
14ac18 1c481c 747473 04d105 0c6c0b 24852a 1c381c f4f1f3 acafac f4fef5 
0c310c acc6ac 049708 a4a4a3 3c4a44 148314 144812 9cea94 04b405 149e14 
1cbc1c 044004 e4fef4 dcdddd 748274 5c5959 4cba54 145b11 145413 147412 
c4fec4 e4f1e7 146411 088a0a 243028 09c207 fcf8f3 147c13 14c80e acceac 
3c3939 04f405 044e07 07a608 14d00f 0c1f10 0c900b d4d3d4 ecfee3 1c291d 
0c6e14 bcbfbd d4f6d4 909a94 4c5a50 0cac08 24ba24 547e54 0cbc0a 0c5c16 
0c7c0b fcf1fb acb8ac 1c311c aca7a9 e2e2e2 a4e2a4 0cc80a 6c9a6c 143715 
0c650a 0c840b 07de06 14970c 0c980a 0cb40a 848583 ecf0f0 c3c6c3 0c540d 
0c740c cccccc 74ce6c 30a02c 04ec05 54aa5c 6cb66c 9cfa9c 2c862c 5c926c 
6ca674 b4deac 9cda9c 34aa2c 6c7e6c acfeac 448244 34d22c 7d7d7c 6c6d6c 
445644 4c4d4c 1c7a19 1c3e1c 3c3f3c 2c422c 7c9a84 54c254 dceadc 144014 
343231 bccebc bcbabc 447244 6c6664 9c9d9c 7caa7c 349a38 6c7a74 84b69c 
1c4e18 898a89 ccfadc 1c6c2c b8e2c0 1c8a24 a1aaa1 3c4e3c 5f5e5c d8fed8 
24be24 78d670 688668 148a14 14a618 145624 0c480e 2c292b 142916 1c921c 
d4dad9 243828 143017 b4d2bc b4b7b5 1c961c 8c868c 247e24 144e13 04fa04 
246224 fcfefc 0c4e0c ace2b4 3caa3c 244e24 0c180c 949394 545454 ece9ec 
343634 2cb127 6c736c 0ca00c 0cda08 0c5c0b 0ccf06 146a0c b4b2b4 646464 
b4c2b4 0c3f0c ecfdf9 e4dedc ccfdcc 2c2f2b 142214 146b16 c4c2c2 545b54 
2cb62c 74ba74 346634 b4fcb0 244224 444242 246a24 e4feec 0ce204 f4f9fc 
f4eefc 444744 54b654 fcf9fc 0c9114 dcd6d4 ecfeec 0c7b14 0cc614 0c6314 
0c8414 
pop pop   % lose return values from readhexstring


% rlecmapimage expects to have 'w h bits matrix' on stack
/rlecmapimage {
  /buffer 1 string def
  /rgbval 3 string def
  /block  384 string def

  % proc to read a block from file, and return RGB data
  { currentfile buffer readhexstring pop
    /bcount exch 0 get store
    bcount 128 ge
    {  % it's a non-run block
      0 1 bcount 128 sub
      { currentfile buffer readhexstring pop pop

        % look up value in color map
        /rgbval cmap buffer 0 get 3 mul 3 getinterval store

        % and put it in position i*3 in block
        block exch 3 mul rgbval putinterval
      } for
      block  0  bcount 127 sub 3 mul  getinterval
    }

    { % else it's a run block
      currentfile buffer readhexstring pop pop

      % look up value in colormap
      /rgbval cmap buffer 0 get 3 mul 3 getinterval store

      0 1 bcount { block exch 3 mul rgbval putinterval } for

      block 0 bcount 1 add 3 mul getinterval
    } ifelse
  } % end of proc
  false 3 colorimage
} bind def


60 40 8			% dimensions of data
[60 0 0 -40 0 40]		% mapping matrix
rlecmapimage

10bf8131bf05bf03e98165e902e9046587bf3158ec31bfe9658265e9bf09bf
10bf8131bf04bf81e9bf01bf02e98265bfe982e965e901e981bf318131ec82ecbfe982e9
65bf0abf
12bf82751ebf83bf1ebf318231ec3102318111318131bf81bfe901e981bf318131bf01bf
01e90bbf
0fbf02e901bf023101ec021101a981d6a981a9118111318131bf14bf
0fbf8165e901e988e5bfd4ecd66add07808c80149dc2137f46a911d431bfe981e9bf0fbf

0fbf01e982bfe9318331a49ce28fe2454d37562456dc71567bab87a9d4bf81bfe981e9bf
81bf318131bf0abf
10bf8ac775bf311bde43224d37568656cb535f1a733c893cae8506a91131bfe9bf01bf81
58bf0abf
0fbf911ebf31b761a0442245ed56721a530a3a4e3a813a4e864e73c94246e3bf10bf
07bf81e9bf82bfe9bf92bf1ebf31ec4f0c38e2ef8e4d49561a530a3a6283624b052b8a2b
ce4e60c2dfe331bf4cbf0cbf
0abf81e9bf82bfe9ec8eec83de1f21778e786f01341a0a3a1c851c4b052b20168b162054
aa93df11312fe965bf0abf
0ebf8d3111883d77cdcf78646f0134530a810a1c911c4ece20167c517c16542893a9ec31
e965bf0abf
08bf01e999bfe91ebf316cc07743cd45786f49561a530a3a624b6b2b707c510151877c70
4edcaba9bfe981e9bf0abf
0bbf01e985bf27d34352cf90cf0e4d2656011a530a1c62ee2b20167c5102518816cc1db9
d611bfe9bf0abf
07bf81e9bf01bf90e9bf4c86d3445277d92c786f49721a0a3a853a4b0520167c827c51bd
88bd5116e44b157a11bf0cbf
0dbf8d3f0fc33d4403cfbb0e3756011a0a860a624b2b20167c817c5102510116854b897b
a911bf0bbf
08bf82e9e5bf97bf75dab209bcc021ef254d2649561a533a1c4b052b70167c037c811620
85203a853911bf0bbf
0bbf0131869eb6d3b0bc7748884845646f561acb0a7382734b2b812b1683167c16cc01cc
012b844b2813d4bf0bbf
0abf0231955e236db0c04463cf45646f5634cb533a73624b2b2016821670548854ce2b20
4b28e831bf0bbf
0abf023183b5b6d3b089b044436e45786f49341a871a0a733a626b2b200120896b4e6b05
2b1c5f9decbf0bbf
09bf8131bf97bf31d82e09d3b044cd485a786f1201cb1a530a73621c052b852b054e4b1c
0585053a282d58bf0bbf
0bbf9431bf556709b03844cd482c7864125634cb1a5f0a7382734b0501050162011c854b
0aae2d58bf0bbf
0bbf0131934a236dd3b0bc7743485a786f1201341acb535f3a813a1c011c0173023a8453
3b1458bf0bbf
0bbf8431bf0455098309d338778277ef2c852c266f1201348134cb83cb530a3a013a810a
5f815f0a850a1ab37d58bf0bbf
08bf81e9bf93bf31bf18d83209d338c044cd6e0e2c64126f0172837271cb5382530a5383
53ae531a851a01a57e58bf0bbf
0bbf01e5837600230901098138c082c0482c862c7864126f49568156728272341a811a72
0272864912bb841131bf0abf
03bf94e9bfe9bfe9bf1ebf1ebf275923b632099538c044ef81ef7881786481646f816fad
84adea01ea560156882449ad2da3115831bf0abf
04bf02e992654ce61e75bf0d185523b66d0995bcc043cd2c812c7881786483646f64f001
f08b6f496f49642d6382e3314cbf0abf
01bf85e9e5e9652fc784c7693fc7698a69c7d2b200232eb60929bc84bc6343ef2c862c78
45784d78ed82ed6f6489644d45a3afa2114c31bf0abf
01e58175c783c769d5eb8ceb797679dab87908db67c4b66d876d9538b0447743ef84ef6e
2c78458e455a457864788ecfbe9fd4315831bf0abf
88e5750d3f5779da98d083d0689b3501358d5d0236c45567b6320995b04477cd92cdef6e
2c6e5ad95acf782c4517813e31bf2fbf0bbf
887569575bd0689bc5ba83ba8a2a8a878aca2a74db5955b284b23209d3b081b077017701
cd016e02ef876e2c6e4810a4d4bf01bf814cbf0abf
873f79b835c5ba2a9a829aa8410141868de1d104c690d881d85583552e6d958b9538b0c0
77cd03cd6377afcd84cd4321c1d483d4e9654c814cbf0abf
88575b9b742ad1418de181e15081509603968450c8d759d881d8b283b2326d0981099585
9538bcb0381f871f95c3995ca931bf81bfe981e9bf0bbf
8779b8c58ad1c6e750855096d7b119b104b184d7b119d855845523b2b66d016d83952995
2987296de09211d431bf01bf01e90cbf
8979d0c52aa88de15096b181b119041901b18796c80fd74a59b2b602b6016d86326d328f
ac0b318331bf31bf01bf81e9bf0cbf
88575b9b742ad1c68de186e1c850c850c850865096c850e1e70487045e8ca7912e672e85
2e8cac33473101318158bf02bf82e9bfe981e9bf0abf
8b3f799835c5742a8bd1a8dbc683c68dc68d818dc601c68cdbd1ca40a15da66697274711
31863158bf31bf31bf82bf4ce985e9bfe9bfe9bf0abf
8bc76957dab8359bc5a1748a2a052a018a01748b029ba6665b279447ec311ebf83bf581e
bf82bf4cbf02bf82e9bfe981e9bf0abf
881e75693f57795bb8d082d068350135029b0135013088b8985b7608b40d751e811ebf83
bf1e75bf81bf4c814cbf05bf81e9bf0bbf
83e9e52fc782c7693f823f5779817976027681da760276827957b482b4c7750175822fe5
bf82bf4cbf01bf814cbf81bfe981e9bf01bf01e90dbf

%
% Compression made this file 26.36% of the uncompressed size.
%


showpage

% stop using temporary dictionary
end

% restore original state
origstate restore

%%Trailer

%%EndDocument
 @endspecial 248 w Fg(Add)67 b(all)f(the)h(reasonab)-5
b(le)67 b(par)n(ameters)10245 5222 y
 0 setgray
 10245 5222 a 4500
6000 a
 tx@Dict begin -90 Rot  end
 4500 6000 a eop
%%Page: 6 6
6 5 bop 4500 6000 a
 tx@Dict begin 90 Rot  end
 4500 6000 a 5981 1792 a @beginspecial
-168 @llx 371 @lly 782 @urx 421 @ury 2834 @rwi 283 @rhi
@setspecial
%%BeginDocument: barre-rico.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /ufs/goualard/TEMP/barre_hor.ps
%%Creator: XV Version 3.10a  Rev: 12/29/94 (PNG patch 1.2)  -  by John Bradley
%%BoundingBox: -168 371 782 421
%%Pages: 1
%%DocumentFonts:
%%EndComments
%%EndProlog

%%Page: 1 1

% remember original state
/origstate save def

% build a temporary dictionary
20 dict begin

% define space for color conversions
/grays 950 string def  % space for gray scale line
/npixls 0 def
/rgbindx 0 def

% lower left corner
-168 371 translate

% size of image (on paper, in 1/72inch coords)
949.96800 49.96800 scale

% define 'colorimage' if it isn't defined
%   ('colortogray' and 'mergeprocs' come from xwd2ps
%     via xgrab)
/colorimage where   % do we know about 'colorimage'?
  { pop }           % yes: pop off the 'dict' returned
  {                 % no:  define one
    /colortogray {  % define an RGB->I function
      /rgbdata exch store    % call input 'rgbdata'
      rgbdata length 3 idiv
      /npixls exch store
      /rgbindx 0 store
      0 1 npixls 1 sub {
        grays exch
        rgbdata rgbindx       get 20 mul    % Red
        rgbdata rgbindx 1 add get 32 mul    % Green
        rgbdata rgbindx 2 add get 12 mul    % Blue
        add add 64 idiv      % I = .5G + .31R + .18B
        put
        /rgbindx rgbindx 3 add store
      } for
      grays 0 npixls getinterval
    } bind def

    % Utility procedure for colorimage operator.
    % This procedure takes two procedures off the
    % stack and merges them into a single procedure.

    /mergeprocs { % def
      dup length
      3 -1 roll
      dup
      length
      dup
      5 1 roll
      3 -1 roll
      add
      array cvx
      dup
      3 -1 roll
      0 exch
      putinterval
      dup
      4 2 roll
      putinterval
    } bind def

    /colorimage { % def
      pop pop     % remove 'false 3' operands
      {colortogray} mergeprocs
      image
    } bind def
  } ifelse          % end of 'false' case



% define the colormap
/cmap 117 string def


% load up the colormap
currentfile cmap readhexstring
bcfe04 dcfe84 ccfe44 ecfec4 c4fe24 d4fe64 f4fee4 e4fea4 bcfe14 ccfe54 
f4fed4 c4fe34 d4fe74 fcfef4 ecfeb4 e4fe94 f4fecc fcfee4 ecfeac c4fe1c 
d4fe54 ccfe3c dcfe74 bcfe0c dcfe8c ccfe4c ecfecc c4fe2c d4fe6c e4feac 
bcfe1c f4fedc c4fe3c fcfefc ecfebc e4fe9c fcfeec d4fe5c dcfe7c 
pop pop   % lose return values from readhexstring


% rlecmapimage expects to have 'w h bits matrix' on stack
/rlecmapimage {
  /buffer 1 string def
  /rgbval 3 string def
  /block  384 string def

  % proc to read a block from file, and return RGB data
  { currentfile buffer readhexstring pop
    /bcount exch 0 get store
    bcount 128 ge
    {  % it's a non-run block
      0 1 bcount 128 sub
      { currentfile buffer readhexstring pop pop

        % look up value in color map
        /rgbval cmap buffer 0 get 3 mul 3 getinterval store

        % and put it in position i*3 in block
        block exch 3 mul rgbval putinterval
      } for
      block  0  bcount 127 sub 3 mul  getinterval
    }

    { % else it's a run block
      currentfile buffer readhexstring pop pop

      % look up value in colormap
      /rgbval cmap buffer 0 get 3 mul 3 getinterval store

      0 1 bcount { block exch 3 mul rgbval putinterval } for

      block 0 bcount 1 add 3 mul getinterval
    } ifelse
  } % end of proc
  false 3 colorimage
} bind def


950 50 8			% dimensions of data
[950 0 0 -50 0 50]		% mapping matrix
rlecmapimage

7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f210221870d1f220e220311212a21
7f217f217f217f217f217f2175218211030e820e220e820e220e860e220e23050b048404
090e24212a21
7f217f217f217f217f217f2171218e110312260b041e131e131e131e131e871e17001702
1d24212c21
7f217f217f217f217f217f216921830d1f220e870e221226200408000b00841702070d21
0521842403100d212321
7f217f217f217f217f217f2121218524220f231f213a218f0d0a220e220e23051b041e13
1e0817000c008408190706210421851103221f0d212521
7f217f217f217f217f217f211e2189240e1c1b17000825242136218a0d1026021b041e13
081700110085172001030d210421840316030d212821
7f217f217f217f217f21342186111a120f070a215721860d1110220e220e860e12182504
17000300821b1f212521851f0e2326230e080e841d010908001100820820090209840c1d
1a06210521841026230d212a21
7f217f217f217f21792186241f10220e220e820e220e820e220e820e220e820e220e820e
220e830e070f01010182070a2117218b0610231c1508001708090a2151218e0d1f101d01
14201b1e131e131e08000700820c0d211021840d100311210921881103220e07050b0800
8400171e081e821e081e851e081e0817001000851e2009181a210b21850d22261d24212c
21
7f217f217f217f21472184241f10220e820e220e820e220e820e220e820e220e820e220e
820e220e810e2283221f0d210e219a241f10070f1c09151e041e131e131e131e131e131e
131e131e131e821e080002008b17081410210d1110220e220e820e220e820e220e010e81
2301880126012616191b08000500820422212f2182240d211921890d0a0e072625150417
00100082201a210921890d1110220e23011620048304051f210421891103231c15131e08
1700190082171e090309820c1a210e21841f0e0a0d212e21
7f217f217f217f213f2190241f100e070f011c1920041e131e081e0882081e0882081e08
82081e0882081e0803088304250a2107218b241f030e12181619151e08001d00811e268c
2614201b041e131e131e131e088108178117000f0082091f211521840d0610220e0f0e88
120f012625020c11211321890d0a22121809040817001300831e050a2105218a0d1f101d
0114201b1e170004008408260e220e860e230c020417001800821e2009020982181a2114
21810d213321
7f211221842422121f217f217f217f211221850d0a220e220e820e220e820e220e820e22
0e010e881d0f1605090b041e178117001a008f1e22210d1110221d0f0116190b041e1781
1700220001171f00820b2221102189111022120f0125151b1e011e81081e821e081e821e
081e821e081e821e081e821e1700030082171c0e110e861d01251b1e170015008220181d
021d81220e020e86070119150417000b0086081e131e08170019008308091d210c21830d
1f24214121
7f210721830d0a220e040e83230504088308052421492185240a22230f01130182070a21
7f2106218c240a03220e220e220e220e1d0f840f01231f217f210a2199240a221d0f0116
191b1e131e131e131e131e131e131e131e17002300810b16871609200413081700490087
171e051d1f10220e0a0e8712232625201b1e178117001b000108011e81081e821e081e82
1e081e821e081e821e081e831e0817000c0085171e201e08000300831720090c840c090b
1b1e871e081e081e0817001f0083081e201e821e20090809820c03210b21860d0a222307
0d210521010d3a21
7f21042188112218141b13081e088108178117000300821b1f2140218b241f100e070f1c
25021b1317811700140083081410217f218c241f10070f05021b04131e131e011e810817
811700010093170207220e220e220e220e220e220e22120f18018301231f216e218c0d0a
22120f0116191b130817004c000117811e208120090509822008002c008308200c188518
0c09021b1e821e081e821e081e821e081e811e08810817811700400081171e871e09181a
061c08000300851e200b1e1700250083171e200983091806211721820d110a010a841d26
1918214421
6c219a1103220e220e220e220e220e220e220e220e220e22120f050b08000d0093091d22
0e220e220e220e220e220e220e2203112127218c241f100e070f0105021b1e08001e0082
0422216a2189241f10220e230f1826018201260182012601890126160509150408170011
0085131e131e131e821e131e831e131e0882081700020083082524215e2183240a220e82
0e220e8b0e22120f011605190b1308178117004d008817081e2009181d06210821810900
22000408071e0117510085080b09181a21022182060900040082081700120082171e000f
00011e83091806210d21821a031d8e1d221d221d0e22030a110d240d240d810d21012182
2406214521
68219711030f252004131e131e131e131e131e131e131e131e131e821e08001100011e83
131e131e821e131e821e131e821e131e811e1383131c1f211e218d0d1110221d0f260519
0b041e17002500821b0c0103018426161c05250b258405160f1d0e210e82070f26012681
0126822601268426010f1f2117218a241f100e070f1609150408820817003900821b1f21
56218a0a0f0c2514190215041e0801088217081701173400011781001781170016000117
011e85200c181d06210e218105000d0083171e08000c00011781081e041e020802171e00
82081e208120090d0982201e001b00850820090c1a210721821817000b008b081e200920
1920192009200986090c1d1a060900030083171e20090209010c83181a0621082187060a
0e1d071d0e1d821d0f1802180107841d220a24215221
1d21830d1f220e820e220e820e220e820e220e860e220e221024212321840d10230f010a
01852616091b08003b00820812210421830d1f102281220e820e220e820e220e820e220e
820e220e820e220e890e1d0f011609201b1317811700470081081e821e081e821e081e82
1e081e821e081e821e081e821e081e821e081e821e081e821e081e821e081e841e081e08
000a0083170b260182012601820126018201260182012601820126018a01260126160525
19151b088108004200820c0d21032196240a03220e220e220e220e220e220e220e220e22
0e1d0f810f01150182231f210921840d0610220e0e0e8418140417002100821720090409
822017002c008317081e208520090c1d1a211621821a201e811e20832009200982092009
86092009181a0c003400011e8520090c181a211221831a0c200982092009820920091109
830c1a06210a2182062000080087082009181a0621060206812106810621052183061d0c
0984090c181d1a011a02060e21820d062482240d216021
1c21970d0702041e131e131e131e131e131e131e0420050f100d211f21840d231b17004d
00a008182212230f011609151b131e131e131e131e131e131e131e131e131e130817001b
0083170017007f0041008c201a241f10070f1c021b04131e821e131e821e131e821e131e
821e131e011e810817811700160001178205112101218a111022120f181614151b1e821e
081e821e081e821e081e821e081e821e0817811700250082090621032182060900260088
17081e20090c1d1a212e2183062017001f008317081e208120090a09830c181a21442183
240917008300081e2001208409181a0621142183061a1d1a841a062106217721
1b21830d071b000f008517080b05230e8f0e220e220e220e220e220e220e220e22842210
110d210821830d231e004f00841e041e08178117007f0065008117000e000108011e8720
0c16090b1e08003000880401181614201b1e178117003a00822006210421820620001f00
81171e861e20090c1d1a213521820609001700011788081e20090c181a0621492184060a
101a1086101a10110d210d880d061a180c09181a0601067f211b21
1b21820a1900140081081e821e131e821e131e821e131e821e131e8d1e131e13040b1925
1812221f0d210321820a20007f007f0033000108160081081e031e820817003600811700
40008308091a2106218203091e031e8120091609830c1d1a213d21821f01091409840c18
1a06214e21010d0124010685240624060d210321850a26012206217f211f21
1b21831020170029008c1708040b021925051626051e007f002f000d1782081e20812009
1e0982201e00370081171e811e208120090c0982181d0683061808007900011781081e07
1e8120090e09820c1d217f216721820611217f212221
1b21830d0e0c090c0982201e004d00820817002a000217011e8120090c09811e00380082
17081e851e090c181a068306210621822106218221062182210621822106212521821a0c
09010982201e002700011781081e811e2085200c181d06211321821a200022000117011e
82091e0035008317081e20812009090982201e0002008608091a062106217f215521810d
217f215321
2d21851a0c201e17004300850820090c1a068206200022008317081e208620090c181d1a
210f21821d08002e000117021e0120840c181a06214221821d0c09250983181d06211c21
821a20001c008817081e2009181d062101218109002d0081171e871e20090c181a06210e
21851d09200c1a217f215a2182110d215321810d217d21
30218306180c090f0983201e08002500811e09820920090109830c1a062104218203201e
081e01201309810c1d821d1a21182182062000260081171e011e8620090c181a06217f21
1521830d1d0c091909840c181d06210721821a191e091e83200920098209200982092009
8209200982092009820920098209200982092009820920098209200985090c181a06217f
217621810d215121860d1026142510217c21
462185061d0c2017002000820906214e21820618098209200981092082201e178217081e
011e01201309840c181a06217f217f217f217f214421810d2401248306240d217d21
4a21841d201e0800150081081e041e820906217f217f217f217f217f217f214521
4e2185061a18201e000b0085171e091d06217f217f217f217f217f217f214e21
5221821a0c090909830c1d06217f217f217f217f217f217f215121
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521

%
% Compression made this file 2.88% of the uncompressed size.
%


showpage

% stop using temporary dictionary
end

% restore original state
origstate restore

%%Trailer

%%EndDocument
 @endspecial 5001 5222 a @beginspecial @setspecial
 tx@Dict begin STP newpath 1.0 SLW 0.5451 0.39608 0.03137 setrgbcolor
 /ArrowA { moveto } def /ArrowB { } def [ 341.43292 -28.45274 -22.76227
-28.45274  /Lineto /lineto load def false Line  gsave 1.0 SLW 0.5451
0.39608 0.03137 setrgbcolor 0 setlinecap stroke  grestore end
 
@endspecial
621 x Fi(SESC)20 b(\(IA)n(COMA)e(g)o(roup\))2960 b(Joe)20
b(Renau,)h(Basilio)e(F)m(r)o(aguela,)h(and)g(Liu)g(W)n(ei)39
b(\226)20 b(page)40 b(6/23)4266 1057 y
 gsave currentpoint currentpoint translate 270 neg rotate neg exch
neg exch translate
 4266 1057 a @beginspecial
276 @llx 366 @lly 336 @urx 426 @ury 141 @rwi 141 @rhi
@setspecial
%%BeginDocument: angleHG.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/rico/texte/texstyle/Prosper-beta/img/angleHG.ps
%%Creator: XV Version 3.10a  Rev: 12/29/94 (PNG patch 1.2)  -  by John Bradley
%%BoundingBox: 276 366 336 426
%%Pages: 1
%%DocumentFonts:
%%EndComments
%%EndProlog

%%Page: 1 1

% remember original state
/origstate save def

% build a temporary dictionary
20 dict begin

% define string to hold a scanline's worth of data
/pix 180 string def

% define space for color conversions
/grays 60 string def  % space for gray scale line
/npixls 0 def
/rgbindx 0 def

% print in landscape mode
90 rotate 0 -612 translate

% lower left corner
366 276 translate

% size of image (on paper, in 1/72inch coords)
59.97600 59.97600 scale

% define 'colorimage' if it isn't defined
%   ('colortogray' and 'mergeprocs' come from xwd2ps
%     via xgrab)
/colorimage where   % do we know about 'colorimage'?
  { pop }           % yes: pop off the 'dict' returned
  {                 % no:  define one
    /colortogray {  % define an RGB->I function
      /rgbdata exch store    % call input 'rgbdata'
      rgbdata length 3 idiv
      /npixls exch store
      /rgbindx 0 store
      0 1 npixls 1 sub {
        grays exch
        rgbdata rgbindx       get 20 mul    % Red
        rgbdata rgbindx 1 add get 32 mul    % Green
        rgbdata rgbindx 2 add get 12 mul    % Blue
        add add 64 idiv      % I = .5G + .31R + .18B
        put
        /rgbindx rgbindx 3 add store
      } for
      grays 0 npixls getinterval
    } bind def

    % Utility procedure for colorimage operator.
    % This procedure takes two procedures off the
    % stack and merges them into a single procedure.

    /mergeprocs { % def
      dup length
      3 -1 roll
      dup
      length
      dup
      5 1 roll
      3 -1 roll
      add
      array cvx
      dup
      3 -1 roll
      0 exch
      putinterval
      dup
      4 2 roll
      putinterval
    } bind def

    /colorimage { % def
      pop pop     % remove 'false 3' operands
      {colortogray} mergeprocs
      image
    } bind def
  } ifelse          % end of 'false' case



60 60 8			% dimensions of data
[60 0 0 -60 0 60]		% mapping matrix
{currentfile pix readhexstring pop}
false 3 colorimage

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffafee3effeaaffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffafee3e3fe64ffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffe3fe64fafee3ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffe9fe88f1feb3ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffe8fe86dffe55fefefeffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffebfe96dafe37fefefeffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffedfe9edefe48f7fed5ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffedfe9ee2fe60eefea5f5fecaecfe95ecfe97ecfe98
ecfe99ecfe9bf6feceffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffeffeaadffe4fe0fe55dcfe3f
dbfe3cdbfe3ddbfe3dddfe48defe4cdcfe43d9fe32d6fe20e2fe5fe3fe67defe4ddefe4d
defe4edefe4edbfe3bdbfe3cdcfe3ddcfe3fdcfe40dcfe42ddfe43ddfe45ddfe46ddfe48
ddfe46e2fe63e5fe72e5fe74e6fe76e6fe77e6fe79e7fe7ae9fe86e8fe85ebfe94ecfe97
ecfe99ecfe9cedfe9eeffeacf2febcf3febef3fec1f4fec4f9fedfffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffeffeaaf1feb3f5fec7e9fe87
e7fe7be7fe7be7fe7be2fe60e1fe5bd6fe1dd8fe2adafe33e1fe5bdffe54defe4edffe50
dffe51dffe53e0fe54ddfe49ddfe4bdefe4cdefe4edefe50dffe52dffe54e5fe73eafe93
e9fe89e6fe7ae4fe6ce4fe6ee8fe84e8fe85e9fe87e9fe8ae8fe84e7fe7ce8fe81e9fe8a
f0feb0f8fedbf9fedff1feb8f1febaeafe8bfbfeeafbfeebfdfef5ffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff5fecddffe52e1fe5df5fec9f5fec9f5fecaf5feca
f5fecbf5feccf5feccf5fecdf6fecef6fecef6fecef6fecff6fed0f6fed1eefea5e9fe8a
f6fed1f7fed7f7fed8f7fed9f6fecdfafee8fcfef1fcfef2fdfef7fcfef3fdfef7fefefc
fefefcfefefdf9fee0f6fecff5feccf4fec2ffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff5fecde3fe64e5fe74ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffdfef5fefefdfefefdfefefcfefefcfffffffefef9
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff5fecde5fe74dffe53ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff6fecee6fe79e5fe6ff8fed8ffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff6fecee6fe7aebfe95effeaaffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff6fecee6fe7aedfe9eeefea2ffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff6fecee6fe7bedfe9eeefea3ffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff6fecfe6fe78ecfe9eeefea5ffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffefefe
fefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff6fed0e2fe63e0fe59dffe55ffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffefefe
fefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffedfe9fe2fe5fd8fe2ad8fe2dffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffecfe9adffe53d6fe1cdefe4cf6fecfffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffedfe9cd8fe2cd6fe20defe4bf6fed0ffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffefefdffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffedfe9dd8fe27d7fe22defe4ef6fed0ffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffedfe9dd7fe26d6fe20e0fe5bf6fed2ffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff3febdd7fe22d7fe22e1fe5ef7fed3ffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff4fec6d6fe20d7fe21e0fe57f7fed4ffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff4fec6d6fe20d6fe1fe0fe59f7fed5ffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff4fec6d6fe1ed6fe1ee5fe73f7fed6ffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff4fec6d6fe1dd9fe32e0fe56ffffffffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff5fecce0fe55defe48e8fe81ffffffffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffbfeede7fe7fe0fe56e9fe85ffffffffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff7fed8e8fe84e7fe7ef1feb4ffffffffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff2feb8edfea0effea6f1feb6ffffffffffffffffff
fffffffefefefefefeffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffefefceffeabf0feafeffea7f2feb7ffffffffffffffffff
fffffffefefefefefefefefeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffefefcf5fecaecfe9de7fe7af8feddffffffffffffffffff
fffffffefefefefefefefefefefefeffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffefefcf5fecce8fe85e8fe80ffffffffffffffffffffffff
fffffffefefefefefefefefeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffff8fedefdfef8fdfefbf3fec0e9fe89ecfe96ffffffffffffffffffffffff
fefefefefefefefefefefefeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffdfef6fefefafefefaf4fec2e9fe89ecfe96ffffffffffffffffffffffff
fefefefefefefefefefefefeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffdfef6fefefefefefdf4fec2e8fe85edfe9dffffffffffffffffffffffff
fefefefefefefefefefefefeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffefef9fefefdfefefce7fe7be5fe76f2feb7ffffffffffffffffffffffff
fffffffffffffefefefefefeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffdfef6fdfefafefefbe2fe65e5fe75f6fed0ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffdfef9fefefce6fe79e6fe77fafee6ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffcfef6fefefbecfe9be7fe7efbfeecffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffdfef5fdfef7f7fed5e9fe8dfcfef2ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffcfeeffbfeebedfea1fdfef7ffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffefefeffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffefefdfbfee9effeabffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffefefefefefeffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffbfeeceffea6ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff9fee3f3fec1ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffeefea2f8fedaffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff1feb2fafee4ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffcfef0fefefaffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff


showpage

% stop using temporary dictionary
end

% restore original state
origstate restore

%%Trailer

%%EndDocument
 @endspecial 4511 1057 a
 currentpoint grestore moveto
 4511 1057 a 4130 5844 a
 currentpoint currentpoint translate 0.76611 0.76611 scale neg exch
neg exch translate
 4130
5844 a 4130 5844 a
 gsave currentpoint currentpoint translate 0 neg rotate neg exch neg
exch translate
 4130 5844 a @beginspecial 0 @llx 0
@lly 37 @urx 42 @ury 370 @rwi @setspecial
%%BeginDocument: figs/uiuc.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: uiuc.eps
%%Creator: fig2dev Version 3.2 Patchlevel 3d
%%CreationDate: Sun Feb 10 22:03:46 2002
%%For: renau@nether.cs.uiuc.edu (Jose Renau)
%%BoundingBox: 0 0 37 42
%%Magnification: 1.0000
%%EndComments
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def
/col32 {0.200 0.200 0.400 srgb} bind def
/col33 {0.800 0.400 0.000 srgb} bind def

end
save
newpath 0 42 moveto 0 0 lineto 37 0 lineto 37 42 lineto closepath clip newpath
-273.7 413.7 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
 0.06000 0.06000 sc
%
% Fig objects follow
%
%  polyline 
% Polyline
n 5070 6872 m 5070 6227 l 4584 6227 l 4584 6872 l
 5070 6872 l  cp gs col32 1.00 shd ef gr 
%  polyline 
% Polyline
15.000 slw
n 5070 6872 m 5070 6227 l 4584 6227 l 4584 6872 l
 5070 6872 l  cp gs col32 s gr 
%  polyline 
% Polyline
0.000 slw
n 5056 6858 m 5056 6243 l 4598 6243 l 4598 6858 l
 5056 6858 l  cp gs col32 1.00 shd ef gr 
%  polyline 
% Polyline
7.500 slw
n 5056 6858 m 5056 6243 l 4598 6243 l 4598 6858 l
 5056 6858 l  cp gs col33 s gr 
%  spline 
% Polyline
2 slj
0.000 slw
n 4944 6783 m 4944 6781 l 4944 6773 l 4944 6759 l 4944 6751 l 4944 6749 l
 4943 6749 l 4935 6748 l 4924 6746 l 4914 6744 l 4906 6742 l
 4900 6741 l 4896 6739 l 4892 6738 l 4887 6735 l 4884 6732 l
 4880 6728 l 4877 6722 l 4875 6716 l 4873 6709 l 4872 6702 l
 4871 6693 l 4870 6683 l 4869 6670 l 4869 6654 l 4868 6637 l
 4868 6621 l 4868 6609 l 4868 6604 l 4868 6603 l 4868 6602 l
 4868 6597 l 4868 6585 l 4868 6567 l 4868 6544 l 4868 6521 l
 4868 6503 l 4868 6491 l 4868 6486 l 4868 6485 l 4868 6483 l
 4868 6474 l 4868 6457 l 4869 6438 l 4869 6420 l 4870 6406 l
 4870 6395 l 4871 6387 l 4873 6381 l 4874 6375 l 4876 6371 l
 4879 6367 l 4882 6365 l 4885 6363 l 4889 6362 l 4892 6361 l
 4898 6359 l 4905 6358 l 4915 6356 l 4925 6354 l 4933 6352 l
 4934 6352 l 4934 6350 l 4934 6343 l 4934 6331 l 4934 6324 l
 4934 6322 l 4933 6322 l 4928 6322 l 4916 6322 l 4896 6322 l
 4869 6322 l 4837 6322 l 4806 6322 l 4779 6322 l 4759 6322 l
 4747 6322 l 4742 6322 l 4741 6322 l 4740 6322 l 4737 6322 l
 4732 6322 l 4729 6322 l 4726 6322 l 4724 6322 l 4721 6323 l
 4718 6324 l 4716 6325 l 4714 6326 l 4712 6327 l 4710 6329 l
 4707 6332 l 4705 6334 l 4703 6336 l 4701 6338 l 4700 6339 l
 4699 6341 l 4698 6342 l 4697 6344 l 4696 6346 l 4696 6347 l
 4695 6349 l 4695 6351 l 4695 6353 l 4694 6356 l 4694 6358 l
 4694 6359 l 4694 6360 l 4694 6362 l 4694 6365 l 4694 6367 l
 4695 6369 l 4695 6370 l 4696 6372 l 4697 6374 l 4697 6375 l
 4698 6377 l 4699 6378 l 4701 6379 l 4702 6381 l 4704 6383 l
 4706 6385 l 4708 6386 l 4709 6388 l 4710 6389 l 4712 6389 l
 4713 6390 l 4715 6391 l 4716 6391 l 4718 6391 l 4720 6391 l
 4721 6391 l 4724 6391 l 4726 6391 l 4727 6391 l 4729 6391 l
 4732 6390 l 4735 6390 l 4737 6389 l 4740 6388 l 4742 6387 l
 4744 6385 l 4747 6383 l 4748 6381 l 4749 6379 l 4750 6376 l
 4751 6372 l 4752 6369 l 4752 6368 l 4752 6366 l 4752 6364 l
 4752 6362 l 4752 6361 l 4752 6359 l 4752 6358 l 4751 6357 l
 4751 6356 l 4750 6355 l 4749 6354 l 4749 6353 l 4748 6352 l
 4747 6351 l 4746 6350 l 4745 6349 l 4744 6348 l 4743 6348 l
 4742 6347 l 4741 6346 l 4740 6346 l 4739 6346 l 4738 6346 l
 4736 6345 l 4735 6345 l 4733 6345 l 4732 6345 l 4730 6345 l
 4729 6345 l 4728 6346 l 4727 6346 l 4725 6346 l 4724 6347 l
 4724 6348 l 4723 6348 l 4722 6349 l 4721 6351 l 4720 6352 l
 4719 6353 l 4718 6354 l 4718 6355 l 4717 6356 l 4717 6357 l
 4717 6358 l 4716 6359 l 4717 6360 l 4717 6361 l 4717 6362 l
 4717 6363 l 4718 6364 l 4718 6365 l 4719 6366 l 4719 6367 l
 4720 6367 l 4720 6368 l 4721 6368 l 4722 6369 l 4723 6369 l
 4723 6368 l 4724 6368 l 4725 6368 l 4726 6367 l 4727 6367 l
 4727 6366 l 4728 6366 l 4728 6365 l 4729 6365 l 4729 6364 l
 4729 6363 l 4729 6362 l 4729 6361 l 4728 6360 l 4728 6359 l
 4729 6359 l 4729 6358 l 4730 6357 l 4731 6357 l 4731 6356 l
 4732 6356 l 4733 6356 l 4734 6356 l 4735 6356 l 4735 6357 l
 4736 6357 l 4737 6357 l 4738 6357 l 4738 6358 l 4739 6358 l
 4739 6359 l 4739 6360 l 4740 6360 l 4740 6361 l 4740 6362 l
 4741 6362 l 4741 6363 l 4741 6364 l 4740 6364 l 4740 6365 l
 4740 6366 l 4740 6368 l 4739 6371 l 4739 6373 l 4738 6374 l
 4737 6375 l 4736 6376 l 4735 6377 l 4733 6378 l 4732 6379 l
 4731 6379 l 4729 6379 l 4727 6380 l 4725 6380 l 4724 6380 l
 4722 6380 l 4721 6380 l 4720 6380 l 4719 6380 l 4718 6380 l
 4717 6379 l 4716 6379 l 4715 6379 l 4715 6378 l 4714 6377 l
 4713 6376 l 4712 6375 l 4711 6374 l 4710 6373 l 4710 6372 l
 4709 6372 l 4708 6371 l 4708 6370 l 4707 6369 l 4707 6368 l
 4707 6367 l 4706 6365 l 4706 6363 l 4706 6361 l 4706 6359 l
 4706 6357 l 4706 6355 l 4706 6353 l 4706 6352 l 4707 6351 l
 4707 6350 l 4707 6348 l 4708 6347 l 4709 6346 l 4709 6345 l
 4710 6344 l 4712 6343 l 4713 6342 l 4715 6340 l 4717 6339 l
 4718 6337 l 4720 6337 l 4721 6336 l 4723 6335 l 4725 6334 l
 4727 6334 l 4729 6334 l 4731 6333 l 4734 6333 l 4738 6333 l
 4740 6333 l 4741 6333 l 4742 6333 l 4744 6333 l 4747 6333 l
 4753 6333 l 4759 6333 l 4767 6333 l 4776 6333 l 4785 6333 l
 4794 6333 l 4802 6333 l 4809 6333 l 4815 6333 l 4822 6333 l
 4827 6333 l 4828 6333 l 4828 6334 l 4828 6337 l 4828 6341 l
 4828 6344 l 4828 6345 l 4826 6345 l 4816 6345 l 4797 6345 l
 4779 6345 l 4769 6345 l 4767 6345 l 4766 6345 l 4765 6345 l
 4764 6346 l 4763 6346 l 4762 6347 l 4762 6348 l 4761 6349 l
 4761 6350 l 4761 6351 l 4761 6352 l 4761 6353 l 4761 6354 l
 4761 6355 l 4762 6356 l 4762 6357 l 4763 6358 l 4764 6359 l
 4765 6359 l 4766 6359 l 4767 6359 l 4769 6359 l 4779 6359 l
 4798 6359 l 4816 6359 l 4826 6359 l 4828 6359 l 4828 6360 l
 4828 6362 l 4828 6367 l 4828 6369 l 4828 6370 l 4826 6370 l
 4817 6370 l 4799 6370 l 4782 6370 l 4773 6370 l 4771 6370 l
 4770 6370 l 4769 6370 l 4768 6370 l 4767 6371 l 4766 6371 l
 4766 6372 l 4765 6373 l 4765 6374 l 4765 6375 l 4765 6376 l
 4765 6377 l 4766 6378 l 4766 6379 l 4767 6380 l 4768 6381 l
 4769 6381 l 4770 6381 l 4771 6381 l 4773 6381 l 4782 6381 l
 4800 6381 l 4817 6381 l 4826 6381 l 4828 6381 l 4828 6384 l
 4828 6391 l 4828 6404 l 4828 6423 l 4828 6449 l 4828 6480 l
 4828 6516 l 4828 6554 l 4828 6592 l 4828 6628 l 4828 6659 l
 4828 6685 l 4828 6704 l 4828 6717 l 4828 6724 l 4828 6727 l
 4827 6727 l 4819 6727 l 4802 6727 l 4780 6727 l 4757 6727 l
 4740 6727 l 4732 6727 l 4731 6727 l 4730 6727 l 4729 6727 l
 4728 6727 l 4727 6728 l 4726 6728 l 4726 6729 l 4726 6730 l
 4725 6730 l 4725 6731 l 4725 6732 l 4725 6733 l 4725 6734 l
 4725 6735 l 4725 6736 l 4725 6737 l 4726 6738 l 4726 6739 l
 4727 6739 l 4727 6740 l 4728 6740 l 4729 6740 l 4730 6740 l
 4731 6740 l 4732 6740 l 4740 6740 l 4757 6740 l 4780 6740 l
 4802 6740 l 4819 6740 l 4827 6740 l 4828 6740 l 4828 6741 l
 4828 6745 l 4828 6750 l 4828 6754 l 4828 6755 l 4827 6755 l
 4822 6755 l 4811 6755 l 4792 6755 l 4770 6755 l 4748 6755 l
 4729 6755 l 4718 6755 l 4713 6755 l 4712 6755 l 4710 6755 l
 4707 6755 l 4706 6756 l 4704 6756 l 4703 6757 l 4702 6758 l
 4701 6759 l 4700 6760 l 4699 6761 l 4699 6763 l 4698 6764 l
 4698 6767 l 4698 6769 l 4698 6770 l 4698 6773 l 4698 6779 l
 4698 6782 l 4698 6783 l 4699 6783 l 4703 6783 l 4713 6783 l
 4730 6783 l 4755 6783 l 4786 6783 l 4821 6783 l 4856 6783 l
 4887 6783 l 4912 6783 l 4929 6783 l 4939 6783 l 4943 6783 l

 4944 6783 l  cp gs col7 1.00 shd ef gr 
%  spline 
% Polyline
n 4783 6706 m 4783 6705 l 4783 6702 l 4783 6693 l 4783 6678 l 4783 6656 l
 4783 6626 l 4783 6592 l 4783 6555 l 4783 6517 l 4783 6483 l
 4783 6453 l 4783 6431 l 4783 6416 l 4783 6407 l 4783 6404 l
 4783 6403 l 4783 6402 l 4783 6401 l 4783 6400 l 4782 6400 l
 4782 6399 l 4781 6399 l 4781 6398 l 4780 6398 l 4779 6398 l
 4778 6398 l 4777 6398 l 4776 6398 l 4775 6398 l 4774 6399 l
 4773 6399 l 4773 6400 l 4772 6401 l 4772 6402 l 4772 6403 l
 4772 6404 l 4772 6407 l 4772 6416 l 4772 6431 l 4772 6453 l
 4772 6483 l 4772 6517 l 4772 6555 l 4772 6592 l 4772 6626 l
 4772 6656 l 4772 6678 l 4772 6693 l 4772 6702 l 4772 6705 l
 4772 6706 l 4772 6707 l 4772 6708 l 4773 6709 l 4773 6710 l
 4774 6711 l 4775 6712 l 4776 6712 l 4777 6712 l 4778 6712 l
 4779 6712 l 4780 6712 l 4781 6712 l 4781 6711 l 4782 6711 l
 4782 6710 l 4783 6709 l 4783 6708 l 4783 6707 l
 4783 6706 l  cp gs col7 1.00 shd ef gr 
%  spline 
% Polyline
n 4813 6705 m 4813 6704 l 4813 6701 l 4813 6692 l 4813 6677 l 4813 6655 l
 4813 6626 l 4813 6592 l 4813 6555 l 4813 6518 l 4813 6484 l
 4813 6455 l 4813 6433 l 4813 6418 l 4813 6409 l 4813 6406 l
 4813 6405 l 4813 6404 l 4813 6402 l 4813 6401 l 4812 6400 l
 4811 6399 l 4811 6398 l 4810 6398 l 4809 6398 l 4808 6397 l
 4807 6397 l 4806 6397 l 4805 6397 l 4804 6397 l 4803 6397 l
 4802 6397 l 4801 6398 l 4800 6398 l 4799 6399 l 4799 6400 l
 4798 6401 l 4798 6402 l 4798 6404 l 4798 6405 l 4798 6406 l
 4798 6409 l 4798 6418 l 4798 6433 l 4798 6455 l 4798 6484 l
 4798 6518 l 4798 6555 l 4798 6592 l 4798 6626 l 4798 6655 l
 4798 6677 l 4798 6692 l 4798 6701 l 4798 6704 l 4798 6705 l
 4798 6706 l 4798 6707 l 4798 6708 l 4799 6709 l 4799 6710 l
 4799 6711 l 4800 6711 l 4801 6712 l 4802 6713 l 4803 6713 l
 4804 6713 l 4805 6713 l 4806 6713 l 4807 6713 l 4808 6713 l
 4809 6712 l 4810 6712 l 4811 6711 l 4812 6710 l 4812 6709 l
 4813 6708 l 4813 6707 l 4813 6706 l
 4813 6705 l  cp gs col7 1.00 shd ef gr 
%  polyline 
% Polyline
0 slj
n 5136 6864 m 5124 6864 l 5124 6894 l 5119 6894 l 5119 6864 l 5108 6864 l
 5108 6860 l 5136 6860 l
 5136 6864 l  cp gs col32 1.00 shd ef gr 
%  polyline 
% Polyline
n 5172 6894 m 5167 6894 l 5167 6867 l 5157 6880 l 5156 6880 l 5146 6867 l
 5145 6867 l 5145 6894 l 5141 6894 l 5141 6860 l 5145 6860 l
 5156 6874 l 5168 6860 l 5172 6860 l
 5172 6894 l  cp gs col32 1.00 shd ef gr 
$F2psEnd
rs

%%EndDocument
 @endspecial 4769 5844 a
 currentpoint grestore moveto
 4769 5844 a 4130 5844 a
 currentpoint currentpoint translate 1 0.76611 div 1 0.76611 div scale
neg exch neg exch translate
 4130
5844 a 5001 3450 a
SDict begin H.S end
 5001 3450 a 5001 3450 a
SDict begin H.R end
 5001 3450
a 5001 3450 a
SDict begin [ /View [/XYZ H.V] /Dest (page.1) cvn H.B /DEST pdfmark
end
 5001 3450 a 5001 3450 a
SDict begin [ {ThisPage} << /Trans << /S /Replace >> >> /PUT pdfmark
end
 5001 3450 a 5001
3450 a
SDict begin [ /Page 6/View [ /XYZ null null null ] /Title (Coding Style)
/OUT pdfmark end
 5001 3450 a 7942 1453 a Fm(C)18 b Fn(O)g(D)g(I)g(N)g(G)117
b Fm(S)18 b Fn(T)g(Y)g(L)g(E)4649 2157 y @beginspecial
276 @llx 376 @lly 336 @urx 416 @ury 113 @rwi @setspecial
%%BeginDocument: green-bullet-on-white.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/fred/TeX/STYLES/Prosper/img/green-bullet-on-white.ps
%%Creator: XV Version 3.10a+FLmask  Rev: 12/29/94  -  by John Bradley
%%BoundingBox: 276 376 336 416
%%Pages: 1
%%DocumentFonts:
%%EndComments
%%EndProlog

%%Page: 1 1

% remember original state
/origstate save def

% build a temporary dictionary
20 dict begin

% define space for color conversions
/grays 60 string def  % space for gray scale line
/npixls 0 def
/rgbindx 0 def

% lower left corner
276 376 translate

% size of image (on paper, in 1/72inch coords)
59.97600 40.03200 scale

% define 'colorimage' if it isn't defined
%   ('colortogray' and 'mergeprocs' come from xwd2ps
%     via xgrab)
/colorimage where   % do we know about 'colorimage'?
  { pop }           % yes: pop off the 'dict' returned
  {                 % no:  define one
    /colortogray {  % define an RGB->I function
      /rgbdata exch store    % call input 'rgbdata'
      rgbdata length 3 idiv
      /npixls exch store
      /rgbindx 0 store
      0 1 npixls 1 sub {
        grays exch
        rgbdata rgbindx       get 20 mul    % Red
        rgbdata rgbindx 1 add get 32 mul    % Green
        rgbdata rgbindx 2 add get 12 mul    % Blue
        add add 64 idiv      % I = .5G + .31R + .18B
        put
        /rgbindx rgbindx 3 add store
      } for
      grays 0 npixls getinterval
    } bind def

    % Utility procedure for colorimage operator.
    % This procedure takes two procedures off the
    % stack and merges them into a single procedure.

    /mergeprocs { % def
      dup length
      3 -1 roll
      dup
      length
      dup
      5 1 roll
      3 -1 roll
      add
      array cvx
      dup
      3 -1 roll
      0 exch
      putinterval
      dup
      4 2 roll
      putinterval
    } bind def

    /colorimage { % def
      pop pop     % remove 'false 3' operands
      {colortogray} mergeprocs
      image
    } bind def
  } ifelse          % end of 'false' case



% define the colormap
/cmap 723 string def


% load up the colormap
currentfile cmap readhexstring
041808 049008 8c948c 045204 4c544c 04c804 84e284 449644 c4cbc4 0c380e 
04ac07 cce6cc 345e2c e4e7e4 046604 2c3a2c 347234 e4fee2 048208 64cc60 
34922c 24b224 04e404 044604 647264 242623 049f07 8cae8c 04bc06 24c61c 
f4f8f3 1c541c 04d804 1c621c 1c7220 0c280d 14910f 045e04 047c04 ccdcd0 
14ac18 1c481c 747473 04d105 0c6c0b 24852a 1c381c f4f1f3 acafac f4fef5 
0c310c acc6ac 049708 a4a4a3 3c4a44 148314 144812 9cea94 04b405 149e14 
1cbc1c 044004 e4fef4 dcdddd 748274 5c5959 4cba54 145b11 145413 147412 
c4fec4 e4f1e7 146411 088a0a 243028 09c207 fcf8f3 147c13 14c80e acceac 
3c3939 04f405 044e07 07a608 14d00f 0c1f10 0c900b d4d3d4 ecfee3 1c291d 
0c6e14 bcbfbd d4f6d4 909a94 4c5a50 0cac08 24ba24 547e54 0cbc0a 0c5c16 
0c7c0b fcf1fb acb8ac 1c311c aca7a9 e2e2e2 a4e2a4 0cc80a 6c9a6c 143715 
0c650a 0c840b 07de06 14970c 0c980a 0cb40a 848583 ecf0f0 c3c6c3 0c540d 
0c740c cccccc 74ce6c 30a02c 04ec05 54aa5c 6cb66c 9cfa9c 2c862c 5c926c 
6ca674 b4deac 9cda9c 34aa2c 6c7e6c acfeac 448244 34d22c 7d7d7c 6c6d6c 
445644 4c4d4c 1c7a19 1c3e1c 3c3f3c 2c422c 7c9a84 54c254 dceadc 144014 
343231 bccebc bcbabc 447244 6c6664 9c9d9c 7caa7c 349a38 6c7a74 84b69c 
1c4e18 898a89 ccfadc 1c6c2c b8e2c0 1c8a24 a1aaa1 3c4e3c 5f5e5c d8fed8 
24be24 78d670 688668 148a14 14a618 145624 0c480e 2c292b 142916 1c921c 
d4dad9 243828 143017 b4d2bc b4b7b5 1c961c 8c868c 247e24 144e13 04fa04 
246224 fcfefc 0c4e0c ace2b4 3caa3c 244e24 0c180c 949394 545454 ece9ec 
343634 2cb127 6c736c 0ca00c 0cda08 0c5c0b 0ccf06 146a0c b4b2b4 646464 
b4c2b4 0c3f0c ecfdf9 e4dedc ccfdcc 2c2f2b 142214 146b16 c4c2c2 545b54 
2cb62c 74ba74 346634 b4fcb0 244224 444242 246a24 e4feec 0ce204 f4f9fc 
f4eefc 444744 54b654 fcf9fc 0c9114 dcd6d4 ecfeec 0c7b14 0cc614 0c6314 
0c8414 
pop pop   % lose return values from readhexstring


% rlecmapimage expects to have 'w h bits matrix' on stack
/rlecmapimage {
  /buffer 1 string def
  /rgbval 3 string def
  /block  384 string def

  % proc to read a block from file, and return RGB data
  { currentfile buffer readhexstring pop
    /bcount exch 0 get store
    bcount 128 ge
    {  % it's a non-run block
      0 1 bcount 128 sub
      { currentfile buffer readhexstring pop pop

        % look up value in color map
        /rgbval cmap buffer 0 get 3 mul 3 getinterval store

        % and put it in position i*3 in block
        block exch 3 mul rgbval putinterval
      } for
      block  0  bcount 127 sub 3 mul  getinterval
    }

    { % else it's a run block
      currentfile buffer readhexstring pop pop

      % look up value in colormap
      /rgbval cmap buffer 0 get 3 mul 3 getinterval store

      0 1 bcount { block exch 3 mul rgbval putinterval } for

      block 0 bcount 1 add 3 mul getinterval
    } ifelse
  } % end of proc
  false 3 colorimage
} bind def


60 40 8			% dimensions of data
[60 0 0 -40 0 40]		% mapping matrix
rlecmapimage

10bf8131bf05bf03e98165e902e9046587bf3158ec31bfe9658265e9bf09bf
10bf8131bf04bf81e9bf01bf02e98265bfe982e965e901e981bf318131ec82ecbfe982e9
65bf0abf
12bf82751ebf83bf1ebf318231ec3102318111318131bf81bfe901e981bf318131bf01bf
01e90bbf
0fbf02e901bf023101ec021101a981d6a981a9118111318131bf14bf
0fbf8165e901e988e5bfd4ecd66add07808c80149dc2137f46a911d431bfe981e9bf0fbf

0fbf01e982bfe9318331a49ce28fe2454d37562456dc71567bab87a9d4bf81bfe981e9bf
81bf318131bf0abf
10bf8ac775bf311bde43224d37568656cb535f1a733c893cae8506a91131bfe9bf01bf81
58bf0abf
0fbf911ebf31b761a0442245ed56721a530a3a4e3a813a4e864e73c94246e3bf10bf
07bf81e9bf82bfe9bf92bf1ebf31ec4f0c38e2ef8e4d49561a530a3a6283624b052b8a2b
ce4e60c2dfe331bf4cbf0cbf
0abf81e9bf82bfe9ec8eec83de1f21778e786f01341a0a3a1c851c4b052b20168b162054
aa93df11312fe965bf0abf
0ebf8d3111883d77cdcf78646f0134530a810a1c911c4ece20167c517c16542893a9ec31
e965bf0abf
08bf01e999bfe91ebf316cc07743cd45786f49561a530a3a624b6b2b707c510151877c70
4edcaba9bfe981e9bf0abf
0bbf01e985bf27d34352cf90cf0e4d2656011a530a1c62ee2b20167c5102518816cc1db9
d611bfe9bf0abf
07bf81e9bf01bf90e9bf4c86d3445277d92c786f49721a0a3a853a4b0520167c827c51bd
88bd5116e44b157a11bf0cbf
0dbf8d3f0fc33d4403cfbb0e3756011a0a860a624b2b20167c817c5102510116854b897b
a911bf0bbf
08bf82e9e5bf97bf75dab209bcc021ef254d2649561a533a1c4b052b70167c037c811620
85203a853911bf0bbf
0bbf0131869eb6d3b0bc7748884845646f561acb0a7382734b2b812b1683167c16cc01cc
012b844b2813d4bf0bbf
0abf0231955e236db0c04463cf45646f5634cb533a73624b2b2016821670548854ce2b20
4b28e831bf0bbf
0abf023183b5b6d3b089b044436e45786f49341a871a0a733a626b2b200120896b4e6b05
2b1c5f9decbf0bbf
09bf8131bf97bf31d82e09d3b044cd485a786f1201cb1a530a73621c052b852b054e4b1c
0585053a282d58bf0bbf
0bbf9431bf556709b03844cd482c7864125634cb1a5f0a7382734b0501050162011c854b
0aae2d58bf0bbf
0bbf0131934a236dd3b0bc7743485a786f1201341acb535f3a813a1c011c0173023a8453
3b1458bf0bbf
0bbf8431bf0455098309d338778277ef2c852c266f1201348134cb83cb530a3a013a810a
5f815f0a850a1ab37d58bf0bbf
08bf81e9bf93bf31bf18d83209d338c044cd6e0e2c64126f0172837271cb5382530a5383
53ae531a851a01a57e58bf0bbf
0bbf01e5837600230901098138c082c0482c862c7864126f49568156728272341a811a72
0272864912bb841131bf0abf
03bf94e9bfe9bfe9bf1ebf1ebf275923b632099538c044ef81ef7881786481646f816fad
84adea01ea560156882449ad2da3115831bf0abf
04bf02e992654ce61e75bf0d185523b66d0995bcc043cd2c812c7881786483646f64f001
f08b6f496f49642d6382e3314cbf0abf
01bf85e9e5e9652fc784c7693fc7698a69c7d2b200232eb60929bc84bc6343ef2c862c78
45784d78ed82ed6f6489644d45a3afa2114c31bf0abf
01e58175c783c769d5eb8ceb797679dab87908db67c4b66d876d9538b0447743ef84ef6e
2c78458e455a457864788ecfbe9fd4315831bf0abf
88e5750d3f5779da98d083d0689b3501358d5d0236c45567b6320995b04477cd92cdef6e
2c6e5ad95acf782c4517813e31bf2fbf0bbf
887569575bd0689bc5ba83ba8a2a8a878aca2a74db5955b284b23209d3b081b077017701
cd016e02ef876e2c6e4810a4d4bf01bf814cbf0abf
873f79b835c5ba2a9a829aa8410141868de1d104c690d881d85583552e6d958b9538b0c0
77cd03cd6377afcd84cd4321c1d483d4e9654c814cbf0abf
88575b9b742ad1418de181e15081509603968450c8d759d881d8b283b2326d0981099585
9538bcb0381f871f95c3995ca931bf81bfe981e9bf0bbf
8779b8c58ad1c6e750855096d7b119b104b184d7b119d855845523b2b66d016d83952995
2987296de09211d431bf01bf01e90cbf
8979d0c52aa88de15096b181b119041901b18796c80fd74a59b2b602b6016d86326d328f
ac0b318331bf31bf01bf81e9bf0cbf
88575b9b742ad1c68de186e1c850c850c850865096c850e1e70487045e8ca7912e672e85
2e8cac33473101318158bf02bf82e9bfe981e9bf0abf
8b3f799835c5742a8bd1a8dbc683c68dc68d818dc601c68cdbd1ca40a15da66697274711
31863158bf31bf31bf82bf4ce985e9bfe9bfe9bf0abf
8bc76957dab8359bc5a1748a2a052a018a01748b029ba6665b279447ec311ebf83bf581e
bf82bf4cbf02bf82e9bfe981e9bf0abf
881e75693f57795bb8d082d068350135029b0135013088b8985b7608b40d751e811ebf83
bf1e75bf81bf4c814cbf05bf81e9bf0bbf
83e9e52fc782c7693f823f5779817976027681da760276827957b482b4c7750175822fe5
bf82bf4cbf01bf814cbf81bfe981e9bf01bf01e90dbf

%
% Compression made this file 26.36% of the uncompressed size.
%


showpage

% stop using temporary dictionary
end

% restore original state
origstate restore

%%Trailer

%%EndDocument
 @endspecial 298 w Fg(Indentation)66 b(\(2)i(tabstop\))4649
2528 y @beginspecial 276 @llx 376 @lly 336 @urx 416 @ury
113 @rwi @setspecial
%%BeginDocument: green-bullet-on-white.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/fred/TeX/STYLES/Prosper/img/green-bullet-on-white.ps
%%Creator: XV Version 3.10a+FLmask  Rev: 12/29/94  -  by John Bradley
%%BoundingBox: 276 376 336 416
%%Pages: 1
%%DocumentFonts:
%%EndComments
%%EndProlog

%%Page: 1 1

% remember original state
/origstate save def

% build a temporary dictionary
20 dict begin

% define space for color conversions
/grays 60 string def  % space for gray scale line
/npixls 0 def
/rgbindx 0 def

% lower left corner
276 376 translate

% size of image (on paper, in 1/72inch coords)
59.97600 40.03200 scale

% define 'colorimage' if it isn't defined
%   ('colortogray' and 'mergeprocs' come from xwd2ps
%     via xgrab)
/colorimage where   % do we know about 'colorimage'?
  { pop }           % yes: pop off the 'dict' returned
  {                 % no:  define one
    /colortogray {  % define an RGB->I function
      /rgbdata exch store    % call input 'rgbdata'
      rgbdata length 3 idiv
      /npixls exch store
      /rgbindx 0 store
      0 1 npixls 1 sub {
        grays exch
        rgbdata rgbindx       get 20 mul    % Red
        rgbdata rgbindx 1 add get 32 mul    % Green
        rgbdata rgbindx 2 add get 12 mul    % Blue
        add add 64 idiv      % I = .5G + .31R + .18B
        put
        /rgbindx rgbindx 3 add store
      } for
      grays 0 npixls getinterval
    } bind def

    % Utility procedure for colorimage operator.
    % This procedure takes two procedures off the
    % stack and merges them into a single procedure.

    /mergeprocs { % def
      dup length
      3 -1 roll
      dup
      length
      dup
      5 1 roll
      3 -1 roll
      add
      array cvx
      dup
      3 -1 roll
      0 exch
      putinterval
      dup
      4 2 roll
      putinterval
    } bind def

    /colorimage { % def
      pop pop     % remove 'false 3' operands
      {colortogray} mergeprocs
      image
    } bind def
  } ifelse          % end of 'false' case



% define the colormap
/cmap 723 string def


% load up the colormap
currentfile cmap readhexstring
041808 049008 8c948c 045204 4c544c 04c804 84e284 449644 c4cbc4 0c380e 
04ac07 cce6cc 345e2c e4e7e4 046604 2c3a2c 347234 e4fee2 048208 64cc60 
34922c 24b224 04e404 044604 647264 242623 049f07 8cae8c 04bc06 24c61c 
f4f8f3 1c541c 04d804 1c621c 1c7220 0c280d 14910f 045e04 047c04 ccdcd0 
14ac18 1c481c 747473 04d105 0c6c0b 24852a 1c381c f4f1f3 acafac f4fef5 
0c310c acc6ac 049708 a4a4a3 3c4a44 148314 144812 9cea94 04b405 149e14 
1cbc1c 044004 e4fef4 dcdddd 748274 5c5959 4cba54 145b11 145413 147412 
c4fec4 e4f1e7 146411 088a0a 243028 09c207 fcf8f3 147c13 14c80e acceac 
3c3939 04f405 044e07 07a608 14d00f 0c1f10 0c900b d4d3d4 ecfee3 1c291d 
0c6e14 bcbfbd d4f6d4 909a94 4c5a50 0cac08 24ba24 547e54 0cbc0a 0c5c16 
0c7c0b fcf1fb acb8ac 1c311c aca7a9 e2e2e2 a4e2a4 0cc80a 6c9a6c 143715 
0c650a 0c840b 07de06 14970c 0c980a 0cb40a 848583 ecf0f0 c3c6c3 0c540d 
0c740c cccccc 74ce6c 30a02c 04ec05 54aa5c 6cb66c 9cfa9c 2c862c 5c926c 
6ca674 b4deac 9cda9c 34aa2c 6c7e6c acfeac 448244 34d22c 7d7d7c 6c6d6c 
445644 4c4d4c 1c7a19 1c3e1c 3c3f3c 2c422c 7c9a84 54c254 dceadc 144014 
343231 bccebc bcbabc 447244 6c6664 9c9d9c 7caa7c 349a38 6c7a74 84b69c 
1c4e18 898a89 ccfadc 1c6c2c b8e2c0 1c8a24 a1aaa1 3c4e3c 5f5e5c d8fed8 
24be24 78d670 688668 148a14 14a618 145624 0c480e 2c292b 142916 1c921c 
d4dad9 243828 143017 b4d2bc b4b7b5 1c961c 8c868c 247e24 144e13 04fa04 
246224 fcfefc 0c4e0c ace2b4 3caa3c 244e24 0c180c 949394 545454 ece9ec 
343634 2cb127 6c736c 0ca00c 0cda08 0c5c0b 0ccf06 146a0c b4b2b4 646464 
b4c2b4 0c3f0c ecfdf9 e4dedc ccfdcc 2c2f2b 142214 146b16 c4c2c2 545b54 
2cb62c 74ba74 346634 b4fcb0 244224 444242 246a24 e4feec 0ce204 f4f9fc 
f4eefc 444744 54b654 fcf9fc 0c9114 dcd6d4 ecfeec 0c7b14 0cc614 0c6314 
0c8414 
pop pop   % lose return values from readhexstring


% rlecmapimage expects to have 'w h bits matrix' on stack
/rlecmapimage {
  /buffer 1 string def
  /rgbval 3 string def
  /block  384 string def

  % proc to read a block from file, and return RGB data
  { currentfile buffer readhexstring pop
    /bcount exch 0 get store
    bcount 128 ge
    {  % it's a non-run block
      0 1 bcount 128 sub
      { currentfile buffer readhexstring pop pop

        % look up value in color map
        /rgbval cmap buffer 0 get 3 mul 3 getinterval store

        % and put it in position i*3 in block
        block exch 3 mul rgbval putinterval
      } for
      block  0  bcount 127 sub 3 mul  getinterval
    }

    { % else it's a run block
      currentfile buffer readhexstring pop pop

      % look up value in colormap
      /rgbval cmap buffer 0 get 3 mul 3 getinterval store

      0 1 bcount { block exch 3 mul rgbval putinterval } for

      block 0 bcount 1 add 3 mul getinterval
    } ifelse
  } % end of proc
  false 3 colorimage
} bind def


60 40 8			% dimensions of data
[60 0 0 -40 0 40]		% mapping matrix
rlecmapimage

10bf8131bf05bf03e98165e902e9046587bf3158ec31bfe9658265e9bf09bf
10bf8131bf04bf81e9bf01bf02e98265bfe982e965e901e981bf318131ec82ecbfe982e9
65bf0abf
12bf82751ebf83bf1ebf318231ec3102318111318131bf81bfe901e981bf318131bf01bf
01e90bbf
0fbf02e901bf023101ec021101a981d6a981a9118111318131bf14bf
0fbf8165e901e988e5bfd4ecd66add07808c80149dc2137f46a911d431bfe981e9bf0fbf

0fbf01e982bfe9318331a49ce28fe2454d37562456dc71567bab87a9d4bf81bfe981e9bf
81bf318131bf0abf
10bf8ac775bf311bde43224d37568656cb535f1a733c893cae8506a91131bfe9bf01bf81
58bf0abf
0fbf911ebf31b761a0442245ed56721a530a3a4e3a813a4e864e73c94246e3bf10bf
07bf81e9bf82bfe9bf92bf1ebf31ec4f0c38e2ef8e4d49561a530a3a6283624b052b8a2b
ce4e60c2dfe331bf4cbf0cbf
0abf81e9bf82bfe9ec8eec83de1f21778e786f01341a0a3a1c851c4b052b20168b162054
aa93df11312fe965bf0abf
0ebf8d3111883d77cdcf78646f0134530a810a1c911c4ece20167c517c16542893a9ec31
e965bf0abf
08bf01e999bfe91ebf316cc07743cd45786f49561a530a3a624b6b2b707c510151877c70
4edcaba9bfe981e9bf0abf
0bbf01e985bf27d34352cf90cf0e4d2656011a530a1c62ee2b20167c5102518816cc1db9
d611bfe9bf0abf
07bf81e9bf01bf90e9bf4c86d3445277d92c786f49721a0a3a853a4b0520167c827c51bd
88bd5116e44b157a11bf0cbf
0dbf8d3f0fc33d4403cfbb0e3756011a0a860a624b2b20167c817c5102510116854b897b
a911bf0bbf
08bf82e9e5bf97bf75dab209bcc021ef254d2649561a533a1c4b052b70167c037c811620
85203a853911bf0bbf
0bbf0131869eb6d3b0bc7748884845646f561acb0a7382734b2b812b1683167c16cc01cc
012b844b2813d4bf0bbf
0abf0231955e236db0c04463cf45646f5634cb533a73624b2b2016821670548854ce2b20
4b28e831bf0bbf
0abf023183b5b6d3b089b044436e45786f49341a871a0a733a626b2b200120896b4e6b05
2b1c5f9decbf0bbf
09bf8131bf97bf31d82e09d3b044cd485a786f1201cb1a530a73621c052b852b054e4b1c
0585053a282d58bf0bbf
0bbf9431bf556709b03844cd482c7864125634cb1a5f0a7382734b0501050162011c854b
0aae2d58bf0bbf
0bbf0131934a236dd3b0bc7743485a786f1201341acb535f3a813a1c011c0173023a8453
3b1458bf0bbf
0bbf8431bf0455098309d338778277ef2c852c266f1201348134cb83cb530a3a013a810a
5f815f0a850a1ab37d58bf0bbf
08bf81e9bf93bf31bf18d83209d338c044cd6e0e2c64126f0172837271cb5382530a5383
53ae531a851a01a57e58bf0bbf
0bbf01e5837600230901098138c082c0482c862c7864126f49568156728272341a811a72
0272864912bb841131bf0abf
03bf94e9bfe9bfe9bf1ebf1ebf275923b632099538c044ef81ef7881786481646f816fad
84adea01ea560156882449ad2da3115831bf0abf
04bf02e992654ce61e75bf0d185523b66d0995bcc043cd2c812c7881786483646f64f001
f08b6f496f49642d6382e3314cbf0abf
01bf85e9e5e9652fc784c7693fc7698a69c7d2b200232eb60929bc84bc6343ef2c862c78
45784d78ed82ed6f6489644d45a3afa2114c31bf0abf
01e58175c783c769d5eb8ceb797679dab87908db67c4b66d876d9538b0447743ef84ef6e
2c78458e455a457864788ecfbe9fd4315831bf0abf
88e5750d3f5779da98d083d0689b3501358d5d0236c45567b6320995b04477cd92cdef6e
2c6e5ad95acf782c4517813e31bf2fbf0bbf
887569575bd0689bc5ba83ba8a2a8a878aca2a74db5955b284b23209d3b081b077017701
cd016e02ef876e2c6e4810a4d4bf01bf814cbf0abf
873f79b835c5ba2a9a829aa8410141868de1d104c690d881d85583552e6d958b9538b0c0
77cd03cd6377afcd84cd4321c1d483d4e9654c814cbf0abf
88575b9b742ad1418de181e15081509603968450c8d759d881d8b283b2326d0981099585
9538bcb0381f871f95c3995ca931bf81bfe981e9bf0bbf
8779b8c58ad1c6e750855096d7b119b104b184d7b119d855845523b2b66d016d83952995
2987296de09211d431bf01bf01e90cbf
8979d0c52aa88de15096b181b119041901b18796c80fd74a59b2b602b6016d86326d328f
ac0b318331bf31bf01bf81e9bf0cbf
88575b9b742ad1c68de186e1c850c850c850865096c850e1e70487045e8ca7912e672e85
2e8cac33473101318158bf02bf82e9bfe981e9bf0abf
8b3f799835c5742a8bd1a8dbc683c68dc68d818dc601c68cdbd1ca40a15da66697274711
31863158bf31bf31bf82bf4ce985e9bfe9bfe9bf0abf
8bc76957dab8359bc5a1748a2a052a018a01748b029ba6665b279447ec311ebf83bf581e
bf82bf4cbf02bf82e9bfe981e9bf0abf
881e75693f57795bb8d082d068350135029b0135013088b8985b7608b40d751e811ebf83
bf1e75bf81bf4c814cbf05bf81e9bf0bbf
83e9e52fc782c7693f823f5779817976027681da760276827957b482b4c7750175822fe5
bf82bf4cbf01bf814cbf81bfe981e9bf01bf01e90dbf

%
% Compression made this file 26.36% of the uncompressed size.
%


showpage

% stop using temporary dictionary
end

% restore original state
origstate restore

%%Trailer

%%EndDocument
 @endspecial 298 w(Br)n(aces)d(\(Lin)n(ux)h(K)-10 b(er)6
b(nel)67 b(style\))4947 2772 y Ff(if\()48 b(x)g(\))g({)4947
3036 y(})4649 3401 y @beginspecial 276 @llx 376 @lly
336 @urx 416 @ury 113 @rwi @setspecial
%%BeginDocument: green-bullet-on-white.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/fred/TeX/STYLES/Prosper/img/green-bullet-on-white.ps
%%Creator: XV Version 3.10a+FLmask  Rev: 12/29/94  -  by John Bradley
%%BoundingBox: 276 376 336 416
%%Pages: 1
%%DocumentFonts:
%%EndComments
%%EndProlog

%%Page: 1 1

% remember original state
/origstate save def

% build a temporary dictionary
20 dict begin

% define space for color conversions
/grays 60 string def  % space for gray scale line
/npixls 0 def
/rgbindx 0 def

% lower left corner
276 376 translate

% size of image (on paper, in 1/72inch coords)
59.97600 40.03200 scale

% define 'colorimage' if it isn't defined
%   ('colortogray' and 'mergeprocs' come from xwd2ps
%     via xgrab)
/colorimage where   % do we know about 'colorimage'?
  { pop }           % yes: pop off the 'dict' returned
  {                 % no:  define one
    /colortogray {  % define an RGB->I function
      /rgbdata exch store    % call input 'rgbdata'
      rgbdata length 3 idiv
      /npixls exch store
      /rgbindx 0 store
      0 1 npixls 1 sub {
        grays exch
        rgbdata rgbindx       get 20 mul    % Red
        rgbdata rgbindx 1 add get 32 mul    % Green
        rgbdata rgbindx 2 add get 12 mul    % Blue
        add add 64 idiv      % I = .5G + .31R + .18B
        put
        /rgbindx rgbindx 3 add store
      } for
      grays 0 npixls getinterval
    } bind def

    % Utility procedure for colorimage operator.
    % This procedure takes two procedures off the
    % stack and merges them into a single procedure.

    /mergeprocs { % def
      dup length
      3 -1 roll
      dup
      length
      dup
      5 1 roll
      3 -1 roll
      add
      array cvx
      dup
      3 -1 roll
      0 exch
      putinterval
      dup
      4 2 roll
      putinterval
    } bind def

    /colorimage { % def
      pop pop     % remove 'false 3' operands
      {colortogray} mergeprocs
      image
    } bind def
  } ifelse          % end of 'false' case



% define the colormap
/cmap 723 string def


% load up the colormap
currentfile cmap readhexstring
041808 049008 8c948c 045204 4c544c 04c804 84e284 449644 c4cbc4 0c380e 
04ac07 cce6cc 345e2c e4e7e4 046604 2c3a2c 347234 e4fee2 048208 64cc60 
34922c 24b224 04e404 044604 647264 242623 049f07 8cae8c 04bc06 24c61c 
f4f8f3 1c541c 04d804 1c621c 1c7220 0c280d 14910f 045e04 047c04 ccdcd0 
14ac18 1c481c 747473 04d105 0c6c0b 24852a 1c381c f4f1f3 acafac f4fef5 
0c310c acc6ac 049708 a4a4a3 3c4a44 148314 144812 9cea94 04b405 149e14 
1cbc1c 044004 e4fef4 dcdddd 748274 5c5959 4cba54 145b11 145413 147412 
c4fec4 e4f1e7 146411 088a0a 243028 09c207 fcf8f3 147c13 14c80e acceac 
3c3939 04f405 044e07 07a608 14d00f 0c1f10 0c900b d4d3d4 ecfee3 1c291d 
0c6e14 bcbfbd d4f6d4 909a94 4c5a50 0cac08 24ba24 547e54 0cbc0a 0c5c16 
0c7c0b fcf1fb acb8ac 1c311c aca7a9 e2e2e2 a4e2a4 0cc80a 6c9a6c 143715 
0c650a 0c840b 07de06 14970c 0c980a 0cb40a 848583 ecf0f0 c3c6c3 0c540d 
0c740c cccccc 74ce6c 30a02c 04ec05 54aa5c 6cb66c 9cfa9c 2c862c 5c926c 
6ca674 b4deac 9cda9c 34aa2c 6c7e6c acfeac 448244 34d22c 7d7d7c 6c6d6c 
445644 4c4d4c 1c7a19 1c3e1c 3c3f3c 2c422c 7c9a84 54c254 dceadc 144014 
343231 bccebc bcbabc 447244 6c6664 9c9d9c 7caa7c 349a38 6c7a74 84b69c 
1c4e18 898a89 ccfadc 1c6c2c b8e2c0 1c8a24 a1aaa1 3c4e3c 5f5e5c d8fed8 
24be24 78d670 688668 148a14 14a618 145624 0c480e 2c292b 142916 1c921c 
d4dad9 243828 143017 b4d2bc b4b7b5 1c961c 8c868c 247e24 144e13 04fa04 
246224 fcfefc 0c4e0c ace2b4 3caa3c 244e24 0c180c 949394 545454 ece9ec 
343634 2cb127 6c736c 0ca00c 0cda08 0c5c0b 0ccf06 146a0c b4b2b4 646464 
b4c2b4 0c3f0c ecfdf9 e4dedc ccfdcc 2c2f2b 142214 146b16 c4c2c2 545b54 
2cb62c 74ba74 346634 b4fcb0 244224 444242 246a24 e4feec 0ce204 f4f9fc 
f4eefc 444744 54b654 fcf9fc 0c9114 dcd6d4 ecfeec 0c7b14 0cc614 0c6314 
0c8414 
pop pop   % lose return values from readhexstring


% rlecmapimage expects to have 'w h bits matrix' on stack
/rlecmapimage {
  /buffer 1 string def
  /rgbval 3 string def
  /block  384 string def

  % proc to read a block from file, and return RGB data
  { currentfile buffer readhexstring pop
    /bcount exch 0 get store
    bcount 128 ge
    {  % it's a non-run block
      0 1 bcount 128 sub
      { currentfile buffer readhexstring pop pop

        % look up value in color map
        /rgbval cmap buffer 0 get 3 mul 3 getinterval store

        % and put it in position i*3 in block
        block exch 3 mul rgbval putinterval
      } for
      block  0  bcount 127 sub 3 mul  getinterval
    }

    { % else it's a run block
      currentfile buffer readhexstring pop pop

      % look up value in colormap
      /rgbval cmap buffer 0 get 3 mul 3 getinterval store

      0 1 bcount { block exch 3 mul rgbval putinterval } for

      block 0 bcount 1 add 3 mul getinterval
    } ifelse
  } % end of proc
  false 3 colorimage
} bind def


60 40 8			% dimensions of data
[60 0 0 -40 0 40]		% mapping matrix
rlecmapimage

10bf8131bf05bf03e98165e902e9046587bf3158ec31bfe9658265e9bf09bf
10bf8131bf04bf81e9bf01bf02e98265bfe982e965e901e981bf318131ec82ecbfe982e9
65bf0abf
12bf82751ebf83bf1ebf318231ec3102318111318131bf81bfe901e981bf318131bf01bf
01e90bbf
0fbf02e901bf023101ec021101a981d6a981a9118111318131bf14bf
0fbf8165e901e988e5bfd4ecd66add07808c80149dc2137f46a911d431bfe981e9bf0fbf

0fbf01e982bfe9318331a49ce28fe2454d37562456dc71567bab87a9d4bf81bfe981e9bf
81bf318131bf0abf
10bf8ac775bf311bde43224d37568656cb535f1a733c893cae8506a91131bfe9bf01bf81
58bf0abf
0fbf911ebf31b761a0442245ed56721a530a3a4e3a813a4e864e73c94246e3bf10bf
07bf81e9bf82bfe9bf92bf1ebf31ec4f0c38e2ef8e4d49561a530a3a6283624b052b8a2b
ce4e60c2dfe331bf4cbf0cbf
0abf81e9bf82bfe9ec8eec83de1f21778e786f01341a0a3a1c851c4b052b20168b162054
aa93df11312fe965bf0abf
0ebf8d3111883d77cdcf78646f0134530a810a1c911c4ece20167c517c16542893a9ec31
e965bf0abf
08bf01e999bfe91ebf316cc07743cd45786f49561a530a3a624b6b2b707c510151877c70
4edcaba9bfe981e9bf0abf
0bbf01e985bf27d34352cf90cf0e4d2656011a530a1c62ee2b20167c5102518816cc1db9
d611bfe9bf0abf
07bf81e9bf01bf90e9bf4c86d3445277d92c786f49721a0a3a853a4b0520167c827c51bd
88bd5116e44b157a11bf0cbf
0dbf8d3f0fc33d4403cfbb0e3756011a0a860a624b2b20167c817c5102510116854b897b
a911bf0bbf
08bf82e9e5bf97bf75dab209bcc021ef254d2649561a533a1c4b052b70167c037c811620
85203a853911bf0bbf
0bbf0131869eb6d3b0bc7748884845646f561acb0a7382734b2b812b1683167c16cc01cc
012b844b2813d4bf0bbf
0abf0231955e236db0c04463cf45646f5634cb533a73624b2b2016821670548854ce2b20
4b28e831bf0bbf
0abf023183b5b6d3b089b044436e45786f49341a871a0a733a626b2b200120896b4e6b05
2b1c5f9decbf0bbf
09bf8131bf97bf31d82e09d3b044cd485a786f1201cb1a530a73621c052b852b054e4b1c
0585053a282d58bf0bbf
0bbf9431bf556709b03844cd482c7864125634cb1a5f0a7382734b0501050162011c854b
0aae2d58bf0bbf
0bbf0131934a236dd3b0bc7743485a786f1201341acb535f3a813a1c011c0173023a8453
3b1458bf0bbf
0bbf8431bf0455098309d338778277ef2c852c266f1201348134cb83cb530a3a013a810a
5f815f0a850a1ab37d58bf0bbf
08bf81e9bf93bf31bf18d83209d338c044cd6e0e2c64126f0172837271cb5382530a5383
53ae531a851a01a57e58bf0bbf
0bbf01e5837600230901098138c082c0482c862c7864126f49568156728272341a811a72
0272864912bb841131bf0abf
03bf94e9bfe9bfe9bf1ebf1ebf275923b632099538c044ef81ef7881786481646f816fad
84adea01ea560156882449ad2da3115831bf0abf
04bf02e992654ce61e75bf0d185523b66d0995bcc043cd2c812c7881786483646f64f001
f08b6f496f49642d6382e3314cbf0abf
01bf85e9e5e9652fc784c7693fc7698a69c7d2b200232eb60929bc84bc6343ef2c862c78
45784d78ed82ed6f6489644d45a3afa2114c31bf0abf
01e58175c783c769d5eb8ceb797679dab87908db67c4b66d876d9538b0447743ef84ef6e
2c78458e455a457864788ecfbe9fd4315831bf0abf
88e5750d3f5779da98d083d0689b3501358d5d0236c45567b6320995b04477cd92cdef6e
2c6e5ad95acf782c4517813e31bf2fbf0bbf
887569575bd0689bc5ba83ba8a2a8a878aca2a74db5955b284b23209d3b081b077017701
cd016e02ef876e2c6e4810a4d4bf01bf814cbf0abf
873f79b835c5ba2a9a829aa8410141868de1d104c690d881d85583552e6d958b9538b0c0
77cd03cd6377afcd84cd4321c1d483d4e9654c814cbf0abf
88575b9b742ad1418de181e15081509603968450c8d759d881d8b283b2326d0981099585
9538bcb0381f871f95c3995ca931bf81bfe981e9bf0bbf
8779b8c58ad1c6e750855096d7b119b104b184d7b119d855845523b2b66d016d83952995
2987296de09211d431bf01bf01e90cbf
8979d0c52aa88de15096b181b119041901b18796c80fd74a59b2b602b6016d86326d328f
ac0b318331bf31bf01bf81e9bf0cbf
88575b9b742ad1c68de186e1c850c850c850865096c850e1e70487045e8ca7912e672e85
2e8cac33473101318158bf02bf82e9bfe981e9bf0abf
8b3f799835c5742a8bd1a8dbc683c68dc68d818dc601c68cdbd1ca40a15da66697274711
31863158bf31bf31bf82bf4ce985e9bfe9bfe9bf0abf
8bc76957dab8359bc5a1748a2a052a018a01748b029ba6665b279447ec311ebf83bf581e
bf82bf4cbf02bf82e9bfe981e9bf0abf
881e75693f57795bb8d082d068350135029b0135013088b8985b7608b40d751e811ebf83
bf1e75bf81bf4c814cbf05bf81e9bf0bbf
83e9e52fc782c7693f823f5779817976027681da760276827957b482b4c7750175822fe5
bf82bf4cbf01bf814cbf81bfe981e9bf01bf01e90dbf

%
% Compression made this file 26.36% of the uncompressed size.
%


showpage

% stop using temporary dictionary
end

% restore original state
origstate restore

%%Trailer

%%EndDocument
 @endspecial 298 w Fg(Asser)10 b(tions:)80 b(Use)67 b(nanasser)10
b(t)66 b(where)-7 b(v)h(er)67 b(possib)-5 b(le)4649 3772
y @beginspecial 276 @llx 376 @lly 336 @urx 416 @ury 113
@rwi @setspecial
%%BeginDocument: green-bullet-on-white.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/fred/TeX/STYLES/Prosper/img/green-bullet-on-white.ps
%%Creator: XV Version 3.10a+FLmask  Rev: 12/29/94  -  by John Bradley
%%BoundingBox: 276 376 336 416
%%Pages: 1
%%DocumentFonts:
%%EndComments
%%EndProlog

%%Page: 1 1

% remember original state
/origstate save def

% build a temporary dictionary
20 dict begin

% define space for color conversions
/grays 60 string def  % space for gray scale line
/npixls 0 def
/rgbindx 0 def

% lower left corner
276 376 translate

% size of image (on paper, in 1/72inch coords)
59.97600 40.03200 scale

% define 'colorimage' if it isn't defined
%   ('colortogray' and 'mergeprocs' come from xwd2ps
%     via xgrab)
/colorimage where   % do we know about 'colorimage'?
  { pop }           % yes: pop off the 'dict' returned
  {                 % no:  define one
    /colortogray {  % define an RGB->I function
      /rgbdata exch store    % call input 'rgbdata'
      rgbdata length 3 idiv
      /npixls exch store
      /rgbindx 0 store
      0 1 npixls 1 sub {
        grays exch
        rgbdata rgbindx       get 20 mul    % Red
        rgbdata rgbindx 1 add get 32 mul    % Green
        rgbdata rgbindx 2 add get 12 mul    % Blue
        add add 64 idiv      % I = .5G + .31R + .18B
        put
        /rgbindx rgbindx 3 add store
      } for
      grays 0 npixls getinterval
    } bind def

    % Utility procedure for colorimage operator.
    % This procedure takes two procedures off the
    % stack and merges them into a single procedure.

    /mergeprocs { % def
      dup length
      3 -1 roll
      dup
      length
      dup
      5 1 roll
      3 -1 roll
      add
      array cvx
      dup
      3 -1 roll
      0 exch
      putinterval
      dup
      4 2 roll
      putinterval
    } bind def

    /colorimage { % def
      pop pop     % remove 'false 3' operands
      {colortogray} mergeprocs
      image
    } bind def
  } ifelse          % end of 'false' case



% define the colormap
/cmap 723 string def


% load up the colormap
currentfile cmap readhexstring
041808 049008 8c948c 045204 4c544c 04c804 84e284 449644 c4cbc4 0c380e 
04ac07 cce6cc 345e2c e4e7e4 046604 2c3a2c 347234 e4fee2 048208 64cc60 
34922c 24b224 04e404 044604 647264 242623 049f07 8cae8c 04bc06 24c61c 
f4f8f3 1c541c 04d804 1c621c 1c7220 0c280d 14910f 045e04 047c04 ccdcd0 
14ac18 1c481c 747473 04d105 0c6c0b 24852a 1c381c f4f1f3 acafac f4fef5 
0c310c acc6ac 049708 a4a4a3 3c4a44 148314 144812 9cea94 04b405 149e14 
1cbc1c 044004 e4fef4 dcdddd 748274 5c5959 4cba54 145b11 145413 147412 
c4fec4 e4f1e7 146411 088a0a 243028 09c207 fcf8f3 147c13 14c80e acceac 
3c3939 04f405 044e07 07a608 14d00f 0c1f10 0c900b d4d3d4 ecfee3 1c291d 
0c6e14 bcbfbd d4f6d4 909a94 4c5a50 0cac08 24ba24 547e54 0cbc0a 0c5c16 
0c7c0b fcf1fb acb8ac 1c311c aca7a9 e2e2e2 a4e2a4 0cc80a 6c9a6c 143715 
0c650a 0c840b 07de06 14970c 0c980a 0cb40a 848583 ecf0f0 c3c6c3 0c540d 
0c740c cccccc 74ce6c 30a02c 04ec05 54aa5c 6cb66c 9cfa9c 2c862c 5c926c 
6ca674 b4deac 9cda9c 34aa2c 6c7e6c acfeac 448244 34d22c 7d7d7c 6c6d6c 
445644 4c4d4c 1c7a19 1c3e1c 3c3f3c 2c422c 7c9a84 54c254 dceadc 144014 
343231 bccebc bcbabc 447244 6c6664 9c9d9c 7caa7c 349a38 6c7a74 84b69c 
1c4e18 898a89 ccfadc 1c6c2c b8e2c0 1c8a24 a1aaa1 3c4e3c 5f5e5c d8fed8 
24be24 78d670 688668 148a14 14a618 145624 0c480e 2c292b 142916 1c921c 
d4dad9 243828 143017 b4d2bc b4b7b5 1c961c 8c868c 247e24 144e13 04fa04 
246224 fcfefc 0c4e0c ace2b4 3caa3c 244e24 0c180c 949394 545454 ece9ec 
343634 2cb127 6c736c 0ca00c 0cda08 0c5c0b 0ccf06 146a0c b4b2b4 646464 
b4c2b4 0c3f0c ecfdf9 e4dedc ccfdcc 2c2f2b 142214 146b16 c4c2c2 545b54 
2cb62c 74ba74 346634 b4fcb0 244224 444242 246a24 e4feec 0ce204 f4f9fc 
f4eefc 444744 54b654 fcf9fc 0c9114 dcd6d4 ecfeec 0c7b14 0cc614 0c6314 
0c8414 
pop pop   % lose return values from readhexstring


% rlecmapimage expects to have 'w h bits matrix' on stack
/rlecmapimage {
  /buffer 1 string def
  /rgbval 3 string def
  /block  384 string def

  % proc to read a block from file, and return RGB data
  { currentfile buffer readhexstring pop
    /bcount exch 0 get store
    bcount 128 ge
    {  % it's a non-run block
      0 1 bcount 128 sub
      { currentfile buffer readhexstring pop pop

        % look up value in color map
        /rgbval cmap buffer 0 get 3 mul 3 getinterval store

        % and put it in position i*3 in block
        block exch 3 mul rgbval putinterval
      } for
      block  0  bcount 127 sub 3 mul  getinterval
    }

    { % else it's a run block
      currentfile buffer readhexstring pop pop

      % look up value in colormap
      /rgbval cmap buffer 0 get 3 mul 3 getinterval store

      0 1 bcount { block exch 3 mul rgbval putinterval } for

      block 0 bcount 1 add 3 mul getinterval
    } ifelse
  } % end of proc
  false 3 colorimage
} bind def


60 40 8			% dimensions of data
[60 0 0 -40 0 40]		% mapping matrix
rlecmapimage

10bf8131bf05bf03e98165e902e9046587bf3158ec31bfe9658265e9bf09bf
10bf8131bf04bf81e9bf01bf02e98265bfe982e965e901e981bf318131ec82ecbfe982e9
65bf0abf
12bf82751ebf83bf1ebf318231ec3102318111318131bf81bfe901e981bf318131bf01bf
01e90bbf
0fbf02e901bf023101ec021101a981d6a981a9118111318131bf14bf
0fbf8165e901e988e5bfd4ecd66add07808c80149dc2137f46a911d431bfe981e9bf0fbf

0fbf01e982bfe9318331a49ce28fe2454d37562456dc71567bab87a9d4bf81bfe981e9bf
81bf318131bf0abf
10bf8ac775bf311bde43224d37568656cb535f1a733c893cae8506a91131bfe9bf01bf81
58bf0abf
0fbf911ebf31b761a0442245ed56721a530a3a4e3a813a4e864e73c94246e3bf10bf
07bf81e9bf82bfe9bf92bf1ebf31ec4f0c38e2ef8e4d49561a530a3a6283624b052b8a2b
ce4e60c2dfe331bf4cbf0cbf
0abf81e9bf82bfe9ec8eec83de1f21778e786f01341a0a3a1c851c4b052b20168b162054
aa93df11312fe965bf0abf
0ebf8d3111883d77cdcf78646f0134530a810a1c911c4ece20167c517c16542893a9ec31
e965bf0abf
08bf01e999bfe91ebf316cc07743cd45786f49561a530a3a624b6b2b707c510151877c70
4edcaba9bfe981e9bf0abf
0bbf01e985bf27d34352cf90cf0e4d2656011a530a1c62ee2b20167c5102518816cc1db9
d611bfe9bf0abf
07bf81e9bf01bf90e9bf4c86d3445277d92c786f49721a0a3a853a4b0520167c827c51bd
88bd5116e44b157a11bf0cbf
0dbf8d3f0fc33d4403cfbb0e3756011a0a860a624b2b20167c817c5102510116854b897b
a911bf0bbf
08bf82e9e5bf97bf75dab209bcc021ef254d2649561a533a1c4b052b70167c037c811620
85203a853911bf0bbf
0bbf0131869eb6d3b0bc7748884845646f561acb0a7382734b2b812b1683167c16cc01cc
012b844b2813d4bf0bbf
0abf0231955e236db0c04463cf45646f5634cb533a73624b2b2016821670548854ce2b20
4b28e831bf0bbf
0abf023183b5b6d3b089b044436e45786f49341a871a0a733a626b2b200120896b4e6b05
2b1c5f9decbf0bbf
09bf8131bf97bf31d82e09d3b044cd485a786f1201cb1a530a73621c052b852b054e4b1c
0585053a282d58bf0bbf
0bbf9431bf556709b03844cd482c7864125634cb1a5f0a7382734b0501050162011c854b
0aae2d58bf0bbf
0bbf0131934a236dd3b0bc7743485a786f1201341acb535f3a813a1c011c0173023a8453
3b1458bf0bbf
0bbf8431bf0455098309d338778277ef2c852c266f1201348134cb83cb530a3a013a810a
5f815f0a850a1ab37d58bf0bbf
08bf81e9bf93bf31bf18d83209d338c044cd6e0e2c64126f0172837271cb5382530a5383
53ae531a851a01a57e58bf0bbf
0bbf01e5837600230901098138c082c0482c862c7864126f49568156728272341a811a72
0272864912bb841131bf0abf
03bf94e9bfe9bfe9bf1ebf1ebf275923b632099538c044ef81ef7881786481646f816fad
84adea01ea560156882449ad2da3115831bf0abf
04bf02e992654ce61e75bf0d185523b66d0995bcc043cd2c812c7881786483646f64f001
f08b6f496f49642d6382e3314cbf0abf
01bf85e9e5e9652fc784c7693fc7698a69c7d2b200232eb60929bc84bc6343ef2c862c78
45784d78ed82ed6f6489644d45a3afa2114c31bf0abf
01e58175c783c769d5eb8ceb797679dab87908db67c4b66d876d9538b0447743ef84ef6e
2c78458e455a457864788ecfbe9fd4315831bf0abf
88e5750d3f5779da98d083d0689b3501358d5d0236c45567b6320995b04477cd92cdef6e
2c6e5ad95acf782c4517813e31bf2fbf0bbf
887569575bd0689bc5ba83ba8a2a8a878aca2a74db5955b284b23209d3b081b077017701
cd016e02ef876e2c6e4810a4d4bf01bf814cbf0abf
873f79b835c5ba2a9a829aa8410141868de1d104c690d881d85583552e6d958b9538b0c0
77cd03cd6377afcd84cd4321c1d483d4e9654c814cbf0abf
88575b9b742ad1418de181e15081509603968450c8d759d881d8b283b2326d0981099585
9538bcb0381f871f95c3995ca931bf81bfe981e9bf0bbf
8779b8c58ad1c6e750855096d7b119b104b184d7b119d855845523b2b66d016d83952995
2987296de09211d431bf01bf01e90cbf
8979d0c52aa88de15096b181b119041901b18796c80fd74a59b2b602b6016d86326d328f
ac0b318331bf31bf01bf81e9bf0cbf
88575b9b742ad1c68de186e1c850c850c850865096c850e1e70487045e8ca7912e672e85
2e8cac33473101318158bf02bf82e9bfe981e9bf0abf
8b3f799835c5742a8bd1a8dbc683c68dc68d818dc601c68cdbd1ca40a15da66697274711
31863158bf31bf31bf82bf4ce985e9bfe9bfe9bf0abf
8bc76957dab8359bc5a1748a2a052a018a01748b029ba6665b279447ec311ebf83bf581e
bf82bf4cbf02bf82e9bfe981e9bf0abf
881e75693f57795bb8d082d068350135029b0135013088b8985b7608b40d751e811ebf83
bf1e75bf81bf4c814cbf05bf81e9bf0bbf
83e9e52fc782c7693f823f5779817976027681da760276827957b482b4c7750175822fe5
bf82bf4cbf01bf814cbf81bfe981e9bf01bf01e90dbf

%
% Compression made this file 26.36% of the uncompressed size.
%


showpage

% stop using temporary dictionary
end

% restore original state
origstate restore

%%Trailer

%%EndDocument
 @endspecial 298 w(Comments)l(,)66 b(do)h(not)g(o)l(v)-6
b(ercomment.)83 b(Use)66 b(do)-7 b(xygen)4649 4140 y
@beginspecial 276 @llx 376 @lly 336 @urx 416 @ury 113
@rwi @setspecial
%%BeginDocument: green-bullet-on-white.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/fred/TeX/STYLES/Prosper/img/green-bullet-on-white.ps
%%Creator: XV Version 3.10a+FLmask  Rev: 12/29/94  -  by John Bradley
%%BoundingBox: 276 376 336 416
%%Pages: 1
%%DocumentFonts:
%%EndComments
%%EndProlog

%%Page: 1 1

% remember original state
/origstate save def

% build a temporary dictionary
20 dict begin

% define space for color conversions
/grays 60 string def  % space for gray scale line
/npixls 0 def
/rgbindx 0 def

% lower left corner
276 376 translate

% size of image (on paper, in 1/72inch coords)
59.97600 40.03200 scale

% define 'colorimage' if it isn't defined
%   ('colortogray' and 'mergeprocs' come from xwd2ps
%     via xgrab)
/colorimage where   % do we know about 'colorimage'?
  { pop }           % yes: pop off the 'dict' returned
  {                 % no:  define one
    /colortogray {  % define an RGB->I function
      /rgbdata exch store    % call input 'rgbdata'
      rgbdata length 3 idiv
      /npixls exch store
      /rgbindx 0 store
      0 1 npixls 1 sub {
        grays exch
        rgbdata rgbindx       get 20 mul    % Red
        rgbdata rgbindx 1 add get 32 mul    % Green
        rgbdata rgbindx 2 add get 12 mul    % Blue
        add add 64 idiv      % I = .5G + .31R + .18B
        put
        /rgbindx rgbindx 3 add store
      } for
      grays 0 npixls getinterval
    } bind def

    % Utility procedure for colorimage operator.
    % This procedure takes two procedures off the
    % stack and merges them into a single procedure.

    /mergeprocs { % def
      dup length
      3 -1 roll
      dup
      length
      dup
      5 1 roll
      3 -1 roll
      add
      array cvx
      dup
      3 -1 roll
      0 exch
      putinterval
      dup
      4 2 roll
      putinterval
    } bind def

    /colorimage { % def
      pop pop     % remove 'false 3' operands
      {colortogray} mergeprocs
      image
    } bind def
  } ifelse          % end of 'false' case



% define the colormap
/cmap 723 string def


% load up the colormap
currentfile cmap readhexstring
041808 049008 8c948c 045204 4c544c 04c804 84e284 449644 c4cbc4 0c380e 
04ac07 cce6cc 345e2c e4e7e4 046604 2c3a2c 347234 e4fee2 048208 64cc60 
34922c 24b224 04e404 044604 647264 242623 049f07 8cae8c 04bc06 24c61c 
f4f8f3 1c541c 04d804 1c621c 1c7220 0c280d 14910f 045e04 047c04 ccdcd0 
14ac18 1c481c 747473 04d105 0c6c0b 24852a 1c381c f4f1f3 acafac f4fef5 
0c310c acc6ac 049708 a4a4a3 3c4a44 148314 144812 9cea94 04b405 149e14 
1cbc1c 044004 e4fef4 dcdddd 748274 5c5959 4cba54 145b11 145413 147412 
c4fec4 e4f1e7 146411 088a0a 243028 09c207 fcf8f3 147c13 14c80e acceac 
3c3939 04f405 044e07 07a608 14d00f 0c1f10 0c900b d4d3d4 ecfee3 1c291d 
0c6e14 bcbfbd d4f6d4 909a94 4c5a50 0cac08 24ba24 547e54 0cbc0a 0c5c16 
0c7c0b fcf1fb acb8ac 1c311c aca7a9 e2e2e2 a4e2a4 0cc80a 6c9a6c 143715 
0c650a 0c840b 07de06 14970c 0c980a 0cb40a 848583 ecf0f0 c3c6c3 0c540d 
0c740c cccccc 74ce6c 30a02c 04ec05 54aa5c 6cb66c 9cfa9c 2c862c 5c926c 
6ca674 b4deac 9cda9c 34aa2c 6c7e6c acfeac 448244 34d22c 7d7d7c 6c6d6c 
445644 4c4d4c 1c7a19 1c3e1c 3c3f3c 2c422c 7c9a84 54c254 dceadc 144014 
343231 bccebc bcbabc 447244 6c6664 9c9d9c 7caa7c 349a38 6c7a74 84b69c 
1c4e18 898a89 ccfadc 1c6c2c b8e2c0 1c8a24 a1aaa1 3c4e3c 5f5e5c d8fed8 
24be24 78d670 688668 148a14 14a618 145624 0c480e 2c292b 142916 1c921c 
d4dad9 243828 143017 b4d2bc b4b7b5 1c961c 8c868c 247e24 144e13 04fa04 
246224 fcfefc 0c4e0c ace2b4 3caa3c 244e24 0c180c 949394 545454 ece9ec 
343634 2cb127 6c736c 0ca00c 0cda08 0c5c0b 0ccf06 146a0c b4b2b4 646464 
b4c2b4 0c3f0c ecfdf9 e4dedc ccfdcc 2c2f2b 142214 146b16 c4c2c2 545b54 
2cb62c 74ba74 346634 b4fcb0 244224 444242 246a24 e4feec 0ce204 f4f9fc 
f4eefc 444744 54b654 fcf9fc 0c9114 dcd6d4 ecfeec 0c7b14 0cc614 0c6314 
0c8414 
pop pop   % lose return values from readhexstring


% rlecmapimage expects to have 'w h bits matrix' on stack
/rlecmapimage {
  /buffer 1 string def
  /rgbval 3 string def
  /block  384 string def

  % proc to read a block from file, and return RGB data
  { currentfile buffer readhexstring pop
    /bcount exch 0 get store
    bcount 128 ge
    {  % it's a non-run block
      0 1 bcount 128 sub
      { currentfile buffer readhexstring pop pop

        % look up value in color map
        /rgbval cmap buffer 0 get 3 mul 3 getinterval store

        % and put it in position i*3 in block
        block exch 3 mul rgbval putinterval
      } for
      block  0  bcount 127 sub 3 mul  getinterval
    }

    { % else it's a run block
      currentfile buffer readhexstring pop pop

      % look up value in colormap
      /rgbval cmap buffer 0 get 3 mul 3 getinterval store

      0 1 bcount { block exch 3 mul rgbval putinterval } for

      block 0 bcount 1 add 3 mul getinterval
    } ifelse
  } % end of proc
  false 3 colorimage
} bind def


60 40 8			% dimensions of data
[60 0 0 -40 0 40]		% mapping matrix
rlecmapimage

10bf8131bf05bf03e98165e902e9046587bf3158ec31bfe9658265e9bf09bf
10bf8131bf04bf81e9bf01bf02e98265bfe982e965e901e981bf318131ec82ecbfe982e9
65bf0abf
12bf82751ebf83bf1ebf318231ec3102318111318131bf81bfe901e981bf318131bf01bf
01e90bbf
0fbf02e901bf023101ec021101a981d6a981a9118111318131bf14bf
0fbf8165e901e988e5bfd4ecd66add07808c80149dc2137f46a911d431bfe981e9bf0fbf

0fbf01e982bfe9318331a49ce28fe2454d37562456dc71567bab87a9d4bf81bfe981e9bf
81bf318131bf0abf
10bf8ac775bf311bde43224d37568656cb535f1a733c893cae8506a91131bfe9bf01bf81
58bf0abf
0fbf911ebf31b761a0442245ed56721a530a3a4e3a813a4e864e73c94246e3bf10bf
07bf81e9bf82bfe9bf92bf1ebf31ec4f0c38e2ef8e4d49561a530a3a6283624b052b8a2b
ce4e60c2dfe331bf4cbf0cbf
0abf81e9bf82bfe9ec8eec83de1f21778e786f01341a0a3a1c851c4b052b20168b162054
aa93df11312fe965bf0abf
0ebf8d3111883d77cdcf78646f0134530a810a1c911c4ece20167c517c16542893a9ec31
e965bf0abf
08bf01e999bfe91ebf316cc07743cd45786f49561a530a3a624b6b2b707c510151877c70
4edcaba9bfe981e9bf0abf
0bbf01e985bf27d34352cf90cf0e4d2656011a530a1c62ee2b20167c5102518816cc1db9
d611bfe9bf0abf
07bf81e9bf01bf90e9bf4c86d3445277d92c786f49721a0a3a853a4b0520167c827c51bd
88bd5116e44b157a11bf0cbf
0dbf8d3f0fc33d4403cfbb0e3756011a0a860a624b2b20167c817c5102510116854b897b
a911bf0bbf
08bf82e9e5bf97bf75dab209bcc021ef254d2649561a533a1c4b052b70167c037c811620
85203a853911bf0bbf
0bbf0131869eb6d3b0bc7748884845646f561acb0a7382734b2b812b1683167c16cc01cc
012b844b2813d4bf0bbf
0abf0231955e236db0c04463cf45646f5634cb533a73624b2b2016821670548854ce2b20
4b28e831bf0bbf
0abf023183b5b6d3b089b044436e45786f49341a871a0a733a626b2b200120896b4e6b05
2b1c5f9decbf0bbf
09bf8131bf97bf31d82e09d3b044cd485a786f1201cb1a530a73621c052b852b054e4b1c
0585053a282d58bf0bbf
0bbf9431bf556709b03844cd482c7864125634cb1a5f0a7382734b0501050162011c854b
0aae2d58bf0bbf
0bbf0131934a236dd3b0bc7743485a786f1201341acb535f3a813a1c011c0173023a8453
3b1458bf0bbf
0bbf8431bf0455098309d338778277ef2c852c266f1201348134cb83cb530a3a013a810a
5f815f0a850a1ab37d58bf0bbf
08bf81e9bf93bf31bf18d83209d338c044cd6e0e2c64126f0172837271cb5382530a5383
53ae531a851a01a57e58bf0bbf
0bbf01e5837600230901098138c082c0482c862c7864126f49568156728272341a811a72
0272864912bb841131bf0abf
03bf94e9bfe9bfe9bf1ebf1ebf275923b632099538c044ef81ef7881786481646f816fad
84adea01ea560156882449ad2da3115831bf0abf
04bf02e992654ce61e75bf0d185523b66d0995bcc043cd2c812c7881786483646f64f001
f08b6f496f49642d6382e3314cbf0abf
01bf85e9e5e9652fc784c7693fc7698a69c7d2b200232eb60929bc84bc6343ef2c862c78
45784d78ed82ed6f6489644d45a3afa2114c31bf0abf
01e58175c783c769d5eb8ceb797679dab87908db67c4b66d876d9538b0447743ef84ef6e
2c78458e455a457864788ecfbe9fd4315831bf0abf
88e5750d3f5779da98d083d0689b3501358d5d0236c45567b6320995b04477cd92cdef6e
2c6e5ad95acf782c4517813e31bf2fbf0bbf
887569575bd0689bc5ba83ba8a2a8a878aca2a74db5955b284b23209d3b081b077017701
cd016e02ef876e2c6e4810a4d4bf01bf814cbf0abf
873f79b835c5ba2a9a829aa8410141868de1d104c690d881d85583552e6d958b9538b0c0
77cd03cd6377afcd84cd4321c1d483d4e9654c814cbf0abf
88575b9b742ad1418de181e15081509603968450c8d759d881d8b283b2326d0981099585
9538bcb0381f871f95c3995ca931bf81bfe981e9bf0bbf
8779b8c58ad1c6e750855096d7b119b104b184d7b119d855845523b2b66d016d83952995
2987296de09211d431bf01bf01e90cbf
8979d0c52aa88de15096b181b119041901b18796c80fd74a59b2b602b6016d86326d328f
ac0b318331bf31bf01bf81e9bf0cbf
88575b9b742ad1c68de186e1c850c850c850865096c850e1e70487045e8ca7912e672e85
2e8cac33473101318158bf02bf82e9bfe981e9bf0abf
8b3f799835c5742a8bd1a8dbc683c68dc68d818dc601c68cdbd1ca40a15da66697274711
31863158bf31bf31bf82bf4ce985e9bfe9bfe9bf0abf
8bc76957dab8359bc5a1748a2a052a018a01748b029ba6665b279447ec311ebf83bf581e
bf82bf4cbf02bf82e9bfe981e9bf0abf
881e75693f57795bb8d082d068350135029b0135013088b8985b7608b40d751e811ebf83
bf1e75bf81bf4c814cbf05bf81e9bf0bbf
83e9e52fc782c7693f823f5779817976027681da760276827957b482b4c7750175822fe5
bf82bf4cbf01bf814cbf81bfe981e9bf01bf01e90dbf

%
% Compression made this file 26.36% of the uncompressed size.
%


showpage

% stop using temporary dictionary
end

% restore original state
origstate restore

%%Trailer

%%EndDocument
 @endspecial 298 w(Naming)66 b(con)-5 b(v)f(ention)4649
4514 y @beginspecial 276 @llx 376 @lly 336 @urx 416 @ury
113 @rwi @setspecial
%%BeginDocument: green-bullet-on-white.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/fred/TeX/STYLES/Prosper/img/green-bullet-on-white.ps
%%Creator: XV Version 3.10a+FLmask  Rev: 12/29/94  -  by John Bradley
%%BoundingBox: 276 376 336 416
%%Pages: 1
%%DocumentFonts:
%%EndComments
%%EndProlog

%%Page: 1 1

% remember original state
/origstate save def

% build a temporary dictionary
20 dict begin

% define space for color conversions
/grays 60 string def  % space for gray scale line
/npixls 0 def
/rgbindx 0 def

% lower left corner
276 376 translate

% size of image (on paper, in 1/72inch coords)
59.97600 40.03200 scale

% define 'colorimage' if it isn't defined
%   ('colortogray' and 'mergeprocs' come from xwd2ps
%     via xgrab)
/colorimage where   % do we know about 'colorimage'?
  { pop }           % yes: pop off the 'dict' returned
  {                 % no:  define one
    /colortogray {  % define an RGB->I function
      /rgbdata exch store    % call input 'rgbdata'
      rgbdata length 3 idiv
      /npixls exch store
      /rgbindx 0 store
      0 1 npixls 1 sub {
        grays exch
        rgbdata rgbindx       get 20 mul    % Red
        rgbdata rgbindx 1 add get 32 mul    % Green
        rgbdata rgbindx 2 add get 12 mul    % Blue
        add add 64 idiv      % I = .5G + .31R + .18B
        put
        /rgbindx rgbindx 3 add store
      } for
      grays 0 npixls getinterval
    } bind def

    % Utility procedure for colorimage operator.
    % This procedure takes two procedures off the
    % stack and merges them into a single procedure.

    /mergeprocs { % def
      dup length
      3 -1 roll
      dup
      length
      dup
      5 1 roll
      3 -1 roll
      add
      array cvx
      dup
      3 -1 roll
      0 exch
      putinterval
      dup
      4 2 roll
      putinterval
    } bind def

    /colorimage { % def
      pop pop     % remove 'false 3' operands
      {colortogray} mergeprocs
      image
    } bind def
  } ifelse          % end of 'false' case



% define the colormap
/cmap 723 string def


% load up the colormap
currentfile cmap readhexstring
041808 049008 8c948c 045204 4c544c 04c804 84e284 449644 c4cbc4 0c380e 
04ac07 cce6cc 345e2c e4e7e4 046604 2c3a2c 347234 e4fee2 048208 64cc60 
34922c 24b224 04e404 044604 647264 242623 049f07 8cae8c 04bc06 24c61c 
f4f8f3 1c541c 04d804 1c621c 1c7220 0c280d 14910f 045e04 047c04 ccdcd0 
14ac18 1c481c 747473 04d105 0c6c0b 24852a 1c381c f4f1f3 acafac f4fef5 
0c310c acc6ac 049708 a4a4a3 3c4a44 148314 144812 9cea94 04b405 149e14 
1cbc1c 044004 e4fef4 dcdddd 748274 5c5959 4cba54 145b11 145413 147412 
c4fec4 e4f1e7 146411 088a0a 243028 09c207 fcf8f3 147c13 14c80e acceac 
3c3939 04f405 044e07 07a608 14d00f 0c1f10 0c900b d4d3d4 ecfee3 1c291d 
0c6e14 bcbfbd d4f6d4 909a94 4c5a50 0cac08 24ba24 547e54 0cbc0a 0c5c16 
0c7c0b fcf1fb acb8ac 1c311c aca7a9 e2e2e2 a4e2a4 0cc80a 6c9a6c 143715 
0c650a 0c840b 07de06 14970c 0c980a 0cb40a 848583 ecf0f0 c3c6c3 0c540d 
0c740c cccccc 74ce6c 30a02c 04ec05 54aa5c 6cb66c 9cfa9c 2c862c 5c926c 
6ca674 b4deac 9cda9c 34aa2c 6c7e6c acfeac 448244 34d22c 7d7d7c 6c6d6c 
445644 4c4d4c 1c7a19 1c3e1c 3c3f3c 2c422c 7c9a84 54c254 dceadc 144014 
343231 bccebc bcbabc 447244 6c6664 9c9d9c 7caa7c 349a38 6c7a74 84b69c 
1c4e18 898a89 ccfadc 1c6c2c b8e2c0 1c8a24 a1aaa1 3c4e3c 5f5e5c d8fed8 
24be24 78d670 688668 148a14 14a618 145624 0c480e 2c292b 142916 1c921c 
d4dad9 243828 143017 b4d2bc b4b7b5 1c961c 8c868c 247e24 144e13 04fa04 
246224 fcfefc 0c4e0c ace2b4 3caa3c 244e24 0c180c 949394 545454 ece9ec 
343634 2cb127 6c736c 0ca00c 0cda08 0c5c0b 0ccf06 146a0c b4b2b4 646464 
b4c2b4 0c3f0c ecfdf9 e4dedc ccfdcc 2c2f2b 142214 146b16 c4c2c2 545b54 
2cb62c 74ba74 346634 b4fcb0 244224 444242 246a24 e4feec 0ce204 f4f9fc 
f4eefc 444744 54b654 fcf9fc 0c9114 dcd6d4 ecfeec 0c7b14 0cc614 0c6314 
0c8414 
pop pop   % lose return values from readhexstring


% rlecmapimage expects to have 'w h bits matrix' on stack
/rlecmapimage {
  /buffer 1 string def
  /rgbval 3 string def
  /block  384 string def

  % proc to read a block from file, and return RGB data
  { currentfile buffer readhexstring pop
    /bcount exch 0 get store
    bcount 128 ge
    {  % it's a non-run block
      0 1 bcount 128 sub
      { currentfile buffer readhexstring pop pop

        % look up value in color map
        /rgbval cmap buffer 0 get 3 mul 3 getinterval store

        % and put it in position i*3 in block
        block exch 3 mul rgbval putinterval
      } for
      block  0  bcount 127 sub 3 mul  getinterval
    }

    { % else it's a run block
      currentfile buffer readhexstring pop pop

      % look up value in colormap
      /rgbval cmap buffer 0 get 3 mul 3 getinterval store

      0 1 bcount { block exch 3 mul rgbval putinterval } for

      block 0 bcount 1 add 3 mul getinterval
    } ifelse
  } % end of proc
  false 3 colorimage
} bind def


60 40 8			% dimensions of data
[60 0 0 -40 0 40]		% mapping matrix
rlecmapimage

10bf8131bf05bf03e98165e902e9046587bf3158ec31bfe9658265e9bf09bf
10bf8131bf04bf81e9bf01bf02e98265bfe982e965e901e981bf318131ec82ecbfe982e9
65bf0abf
12bf82751ebf83bf1ebf318231ec3102318111318131bf81bfe901e981bf318131bf01bf
01e90bbf
0fbf02e901bf023101ec021101a981d6a981a9118111318131bf14bf
0fbf8165e901e988e5bfd4ecd66add07808c80149dc2137f46a911d431bfe981e9bf0fbf

0fbf01e982bfe9318331a49ce28fe2454d37562456dc71567bab87a9d4bf81bfe981e9bf
81bf318131bf0abf
10bf8ac775bf311bde43224d37568656cb535f1a733c893cae8506a91131bfe9bf01bf81
58bf0abf
0fbf911ebf31b761a0442245ed56721a530a3a4e3a813a4e864e73c94246e3bf10bf
07bf81e9bf82bfe9bf92bf1ebf31ec4f0c38e2ef8e4d49561a530a3a6283624b052b8a2b
ce4e60c2dfe331bf4cbf0cbf
0abf81e9bf82bfe9ec8eec83de1f21778e786f01341a0a3a1c851c4b052b20168b162054
aa93df11312fe965bf0abf
0ebf8d3111883d77cdcf78646f0134530a810a1c911c4ece20167c517c16542893a9ec31
e965bf0abf
08bf01e999bfe91ebf316cc07743cd45786f49561a530a3a624b6b2b707c510151877c70
4edcaba9bfe981e9bf0abf
0bbf01e985bf27d34352cf90cf0e4d2656011a530a1c62ee2b20167c5102518816cc1db9
d611bfe9bf0abf
07bf81e9bf01bf90e9bf4c86d3445277d92c786f49721a0a3a853a4b0520167c827c51bd
88bd5116e44b157a11bf0cbf
0dbf8d3f0fc33d4403cfbb0e3756011a0a860a624b2b20167c817c5102510116854b897b
a911bf0bbf
08bf82e9e5bf97bf75dab209bcc021ef254d2649561a533a1c4b052b70167c037c811620
85203a853911bf0bbf
0bbf0131869eb6d3b0bc7748884845646f561acb0a7382734b2b812b1683167c16cc01cc
012b844b2813d4bf0bbf
0abf0231955e236db0c04463cf45646f5634cb533a73624b2b2016821670548854ce2b20
4b28e831bf0bbf
0abf023183b5b6d3b089b044436e45786f49341a871a0a733a626b2b200120896b4e6b05
2b1c5f9decbf0bbf
09bf8131bf97bf31d82e09d3b044cd485a786f1201cb1a530a73621c052b852b054e4b1c
0585053a282d58bf0bbf
0bbf9431bf556709b03844cd482c7864125634cb1a5f0a7382734b0501050162011c854b
0aae2d58bf0bbf
0bbf0131934a236dd3b0bc7743485a786f1201341acb535f3a813a1c011c0173023a8453
3b1458bf0bbf
0bbf8431bf0455098309d338778277ef2c852c266f1201348134cb83cb530a3a013a810a
5f815f0a850a1ab37d58bf0bbf
08bf81e9bf93bf31bf18d83209d338c044cd6e0e2c64126f0172837271cb5382530a5383
53ae531a851a01a57e58bf0bbf
0bbf01e5837600230901098138c082c0482c862c7864126f49568156728272341a811a72
0272864912bb841131bf0abf
03bf94e9bfe9bfe9bf1ebf1ebf275923b632099538c044ef81ef7881786481646f816fad
84adea01ea560156882449ad2da3115831bf0abf
04bf02e992654ce61e75bf0d185523b66d0995bcc043cd2c812c7881786483646f64f001
f08b6f496f49642d6382e3314cbf0abf
01bf85e9e5e9652fc784c7693fc7698a69c7d2b200232eb60929bc84bc6343ef2c862c78
45784d78ed82ed6f6489644d45a3afa2114c31bf0abf
01e58175c783c769d5eb8ceb797679dab87908db67c4b66d876d9538b0447743ef84ef6e
2c78458e455a457864788ecfbe9fd4315831bf0abf
88e5750d3f5779da98d083d0689b3501358d5d0236c45567b6320995b04477cd92cdef6e
2c6e5ad95acf782c4517813e31bf2fbf0bbf
887569575bd0689bc5ba83ba8a2a8a878aca2a74db5955b284b23209d3b081b077017701
cd016e02ef876e2c6e4810a4d4bf01bf814cbf0abf
873f79b835c5ba2a9a829aa8410141868de1d104c690d881d85583552e6d958b9538b0c0
77cd03cd6377afcd84cd4321c1d483d4e9654c814cbf0abf
88575b9b742ad1418de181e15081509603968450c8d759d881d8b283b2326d0981099585
9538bcb0381f871f95c3995ca931bf81bfe981e9bf0bbf
8779b8c58ad1c6e750855096d7b119b104b184d7b119d855845523b2b66d016d83952995
2987296de09211d431bf01bf01e90cbf
8979d0c52aa88de15096b181b119041901b18796c80fd74a59b2b602b6016d86326d328f
ac0b318331bf31bf01bf81e9bf0cbf
88575b9b742ad1c68de186e1c850c850c850865096c850e1e70487045e8ca7912e672e85
2e8cac33473101318158bf02bf82e9bfe981e9bf0abf
8b3f799835c5742a8bd1a8dbc683c68dc68d818dc601c68cdbd1ca40a15da66697274711
31863158bf31bf31bf82bf4ce985e9bfe9bfe9bf0abf
8bc76957dab8359bc5a1748a2a052a018a01748b029ba6665b279447ec311ebf83bf581e
bf82bf4cbf02bf82e9bfe981e9bf0abf
881e75693f57795bb8d082d068350135029b0135013088b8985b7608b40d751e811ebf83
bf1e75bf81bf4c814cbf05bf81e9bf0bbf
83e9e52fc782c7693f823f5779817976027681da760276827957b482b4c7750175822fe5
bf82bf4cbf01bf814cbf81bfe981e9bf01bf01e90dbf

%
% Compression made this file 26.36% of the uncompressed size.
%


showpage

% stop using temporary dictionary
end

% restore original state
origstate restore

%%Trailer

%%EndDocument
 @endspecial 298 w(Code)67 b(replication)e(\(r)t(ule)i(of)g(3\))10245
5222 y
 0 setgray
 10245 5222 a 4500 6000 a
 tx@Dict begin -90 Rot  end
 4500 6000 a eop
%%Page: 7 7
7 6 bop 4500 6000 a
 tx@Dict begin 90 Rot  end
 4500 6000 a 5981 1792 a @beginspecial
-168 @llx 371 @lly 782 @urx 421 @ury 2834 @rwi 283 @rhi
@setspecial
%%BeginDocument: barre-rico.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /ufs/goualard/TEMP/barre_hor.ps
%%Creator: XV Version 3.10a  Rev: 12/29/94 (PNG patch 1.2)  -  by John Bradley
%%BoundingBox: -168 371 782 421
%%Pages: 1
%%DocumentFonts:
%%EndComments
%%EndProlog

%%Page: 1 1

% remember original state
/origstate save def

% build a temporary dictionary
20 dict begin

% define space for color conversions
/grays 950 string def  % space for gray scale line
/npixls 0 def
/rgbindx 0 def

% lower left corner
-168 371 translate

% size of image (on paper, in 1/72inch coords)
949.96800 49.96800 scale

% define 'colorimage' if it isn't defined
%   ('colortogray' and 'mergeprocs' come from xwd2ps
%     via xgrab)
/colorimage where   % do we know about 'colorimage'?
  { pop }           % yes: pop off the 'dict' returned
  {                 % no:  define one
    /colortogray {  % define an RGB->I function
      /rgbdata exch store    % call input 'rgbdata'
      rgbdata length 3 idiv
      /npixls exch store
      /rgbindx 0 store
      0 1 npixls 1 sub {
        grays exch
        rgbdata rgbindx       get 20 mul    % Red
        rgbdata rgbindx 1 add get 32 mul    % Green
        rgbdata rgbindx 2 add get 12 mul    % Blue
        add add 64 idiv      % I = .5G + .31R + .18B
        put
        /rgbindx rgbindx 3 add store
      } for
      grays 0 npixls getinterval
    } bind def

    % Utility procedure for colorimage operator.
    % This procedure takes two procedures off the
    % stack and merges them into a single procedure.

    /mergeprocs { % def
      dup length
      3 -1 roll
      dup
      length
      dup
      5 1 roll
      3 -1 roll
      add
      array cvx
      dup
      3 -1 roll
      0 exch
      putinterval
      dup
      4 2 roll
      putinterval
    } bind def

    /colorimage { % def
      pop pop     % remove 'false 3' operands
      {colortogray} mergeprocs
      image
    } bind def
  } ifelse          % end of 'false' case



% define the colormap
/cmap 117 string def


% load up the colormap
currentfile cmap readhexstring
bcfe04 dcfe84 ccfe44 ecfec4 c4fe24 d4fe64 f4fee4 e4fea4 bcfe14 ccfe54 
f4fed4 c4fe34 d4fe74 fcfef4 ecfeb4 e4fe94 f4fecc fcfee4 ecfeac c4fe1c 
d4fe54 ccfe3c dcfe74 bcfe0c dcfe8c ccfe4c ecfecc c4fe2c d4fe6c e4feac 
bcfe1c f4fedc c4fe3c fcfefc ecfebc e4fe9c fcfeec d4fe5c dcfe7c 
pop pop   % lose return values from readhexstring


% rlecmapimage expects to have 'w h bits matrix' on stack
/rlecmapimage {
  /buffer 1 string def
  /rgbval 3 string def
  /block  384 string def

  % proc to read a block from file, and return RGB data
  { currentfile buffer readhexstring pop
    /bcount exch 0 get store
    bcount 128 ge
    {  % it's a non-run block
      0 1 bcount 128 sub
      { currentfile buffer readhexstring pop pop

        % look up value in color map
        /rgbval cmap buffer 0 get 3 mul 3 getinterval store

        % and put it in position i*3 in block
        block exch 3 mul rgbval putinterval
      } for
      block  0  bcount 127 sub 3 mul  getinterval
    }

    { % else it's a run block
      currentfile buffer readhexstring pop pop

      % look up value in colormap
      /rgbval cmap buffer 0 get 3 mul 3 getinterval store

      0 1 bcount { block exch 3 mul rgbval putinterval } for

      block 0 bcount 1 add 3 mul getinterval
    } ifelse
  } % end of proc
  false 3 colorimage
} bind def


950 50 8			% dimensions of data
[950 0 0 -50 0 50]		% mapping matrix
rlecmapimage

7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f210221870d1f220e220311212a21
7f217f217f217f217f217f2175218211030e820e220e820e220e860e220e23050b048404
090e24212a21
7f217f217f217f217f217f2171218e110312260b041e131e131e131e131e871e17001702
1d24212c21
7f217f217f217f217f217f216921830d1f220e870e221226200408000b00841702070d21
0521842403100d212321
7f217f217f217f217f217f2121218524220f231f213a218f0d0a220e220e23051b041e13
1e0817000c008408190706210421851103221f0d212521
7f217f217f217f217f217f211e2189240e1c1b17000825242136218a0d1026021b041e13
081700110085172001030d210421840316030d212821
7f217f217f217f217f21342186111a120f070a215721860d1110220e220e860e12182504
17000300821b1f212521851f0e2326230e080e841d010908001100820820090209840c1d
1a06210521841026230d212a21
7f217f217f217f21792186241f10220e220e820e220e820e220e820e220e820e220e820e
220e830e070f01010182070a2117218b0610231c1508001708090a2151218e0d1f101d01
14201b1e131e131e08000700820c0d211021840d100311210921881103220e07050b0800
8400171e081e821e081e851e081e0817001000851e2009181a210b21850d22261d24212c
21
7f217f217f217f21472184241f10220e820e220e820e220e820e220e820e220e820e220e
820e220e810e2283221f0d210e219a241f10070f1c09151e041e131e131e131e131e131e
131e131e131e821e080002008b17081410210d1110220e220e820e220e820e220e010e81
2301880126012616191b08000500820422212f2182240d211921890d0a0e072625150417
00100082201a210921890d1110220e23011620048304051f210421891103231c15131e08
1700190082171e090309820c1a210e21841f0e0a0d212e21
7f217f217f217f213f2190241f100e070f011c1920041e131e081e0882081e0882081e08
82081e0882081e0803088304250a2107218b241f030e12181619151e08001d00811e268c
2614201b041e131e131e131e088108178117000f0082091f211521840d0610220e0f0e88
120f012625020c11211321890d0a22121809040817001300831e050a2105218a0d1f101d
0114201b1e170004008408260e220e860e230c020417001800821e2009020982181a2114
21810d213321
7f211221842422121f217f217f217f211221850d0a220e220e820e220e820e220e820e22
0e010e881d0f1605090b041e178117001a008f1e22210d1110221d0f0116190b041e1781
1700220001171f00820b2221102189111022120f0125151b1e011e81081e821e081e821e
081e821e081e821e081e821e1700030082171c0e110e861d01251b1e170015008220181d
021d81220e020e86070119150417000b0086081e131e08170019008308091d210c21830d
1f24214121
7f210721830d0a220e040e83230504088308052421492185240a22230f01130182070a21
7f2106218c240a03220e220e220e220e1d0f840f01231f217f210a2199240a221d0f0116
191b1e131e131e131e131e131e131e131e17002300810b16871609200413081700490087
171e051d1f10220e0a0e8712232625201b1e178117001b000108011e81081e821e081e82
1e081e821e081e821e081e831e0817000c0085171e201e08000300831720090c840c090b
1b1e871e081e081e0817001f0083081e201e821e20090809820c03210b21860d0a222307
0d210521010d3a21
7f21042188112218141b13081e088108178117000300821b1f2140218b241f100e070f1c
25021b1317811700140083081410217f218c241f10070f05021b04131e131e011e810817
811700010093170207220e220e220e220e220e220e22120f18018301231f216e218c0d0a
22120f0116191b130817004c000117811e208120090509822008002c008308200c188518
0c09021b1e821e081e821e081e821e081e811e08810817811700400081171e871e09181a
061c08000300851e200b1e1700250083171e200983091806211721820d110a010a841d26
1918214421
6c219a1103220e220e220e220e220e220e220e220e220e22120f050b08000d0093091d22
0e220e220e220e220e220e220e2203112127218c241f100e070f0105021b1e08001e0082
0422216a2189241f10220e230f1826018201260182012601890126160509150408170011
0085131e131e131e821e131e831e131e0882081700020083082524215e2183240a220e82
0e220e8b0e22120f011605190b1308178117004d008817081e2009181d06210821810900
22000408071e0117510085080b09181a21022182060900040082081700120082171e000f
00011e83091806210d21821a031d8e1d221d221d0e22030a110d240d240d810d21012182
2406214521
68219711030f252004131e131e131e131e131e131e131e131e131e821e08001100011e83
131e131e821e131e821e131e821e131e811e1383131c1f211e218d0d1110221d0f260519
0b041e17002500821b0c0103018426161c05250b258405160f1d0e210e82070f26012681
0126822601268426010f1f2117218a241f100e070f1609150408820817003900821b1f21
56218a0a0f0c2514190215041e0801088217081701173400011781001781170016000117
011e85200c181d06210e218105000d0083171e08000c00011781081e041e020802171e00
82081e208120090d0982201e001b00850820090c1a210721821817000b008b081e200920
1920192009200986090c1d1a060900030083171e20090209010c83181a0621082187060a
0e1d071d0e1d821d0f1802180107841d220a24215221
1d21830d1f220e820e220e820e220e820e220e860e220e221024212321840d10230f010a
01852616091b08003b00820812210421830d1f102281220e820e220e820e220e820e220e
820e220e820e220e890e1d0f011609201b1317811700470081081e821e081e821e081e82
1e081e821e081e821e081e821e081e821e081e821e081e821e081e821e081e841e081e08
000a0083170b260182012601820126018201260182012601820126018a01260126160525
19151b088108004200820c0d21032196240a03220e220e220e220e220e220e220e220e22
0e1d0f810f01150182231f210921840d0610220e0e0e8418140417002100821720090409
822017002c008317081e208520090c1d1a211621821a201e811e20832009200982092009
86092009181a0c003400011e8520090c181a211221831a0c200982092009820920091109
830c1a06210a2182062000080087082009181a0621060206812106810621052183061d0c
0984090c181d1a011a02060e21820d062482240d216021
1c21970d0702041e131e131e131e131e131e131e0420050f100d211f21840d231b17004d
00a008182212230f011609151b131e131e131e131e131e131e131e131e131e130817001b
0083170017007f0041008c201a241f10070f1c021b04131e821e131e821e131e821e131e
821e131e011e810817811700160001178205112101218a111022120f181614151b1e821e
081e821e081e821e081e821e081e821e0817811700250082090621032182060900260088
17081e20090c1d1a212e2183062017001f008317081e208120090a09830c181a21442183
240917008300081e2001208409181a0621142183061a1d1a841a062106217721
1b21830d071b000f008517080b05230e8f0e220e220e220e220e220e220e220e22842210
110d210821830d231e004f00841e041e08178117007f0065008117000e000108011e8720
0c16090b1e08003000880401181614201b1e178117003a00822006210421820620001f00
81171e861e20090c1d1a213521820609001700011788081e20090c181a0621492184060a
101a1086101a10110d210d880d061a180c09181a0601067f211b21
1b21820a1900140081081e821e131e821e131e821e131e821e131e8d1e131e13040b1925
1812221f0d210321820a20007f007f0033000108160081081e031e820817003600811700
40008308091a2106218203091e031e8120091609830c1d1a213d21821f01091409840c18
1a06214e21010d0124010685240624060d210321850a26012206217f211f21
1b21831020170029008c1708040b021925051626051e007f002f000d1782081e20812009
1e0982201e00370081171e811e208120090c0982181d0683061808007900011781081e07
1e8120090e09820c1d217f216721820611217f212221
1b21830d0e0c090c0982201e004d00820817002a000217011e8120090c09811e00380082
17081e851e090c181a068306210621822106218221062182210621822106212521821a0c
09010982201e002700011781081e811e2085200c181d06211321821a200022000117011e
82091e0035008317081e20812009090982201e0002008608091a062106217f215521810d
217f215321
2d21851a0c201e17004300850820090c1a068206200022008317081e208620090c181d1a
210f21821d08002e000117021e0120840c181a06214221821d0c09250983181d06211c21
821a20001c008817081e2009181d062101218109002d0081171e871e20090c181a06210e
21851d09200c1a217f215a2182110d215321810d217d21
30218306180c090f0983201e08002500811e09820920090109830c1a062104218203201e
081e01201309810c1d821d1a21182182062000260081171e011e8620090c181a06217f21
1521830d1d0c091909840c181d06210721821a191e091e83200920098209200982092009
8209200982092009820920098209200982092009820920098209200985090c181a06217f
217621810d215121860d1026142510217c21
462185061d0c2017002000820906214e21820618098209200981092082201e178217081e
011e01201309840c181a06217f217f217f217f214421810d2401248306240d217d21
4a21841d201e0800150081081e041e820906217f217f217f217f217f217f214521
4e2185061a18201e000b0085171e091d06217f217f217f217f217f217f214e21
5221821a0c090909830c1d06217f217f217f217f217f217f215121
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521

%
% Compression made this file 2.88% of the uncompressed size.
%


showpage

% stop using temporary dictionary
end

% restore original state
origstate restore

%%Trailer

%%EndDocument
 @endspecial 5001 5222 a @beginspecial @setspecial
 tx@Dict begin STP newpath 1.0 SLW 0.5451 0.39608 0.03137 setrgbcolor
 /ArrowA { moveto } def /ArrowB { } def [ 341.43292 -28.45274 -22.76227
-28.45274  /Lineto /lineto load def false Line  gsave 1.0 SLW 0.5451
0.39608 0.03137 setrgbcolor 0 setlinecap stroke  grestore end
 
@endspecial
621 x Fi(SESC)20 b(\(IA)n(COMA)e(g)o(roup\))2960 b(Joe)20
b(Renau,)h(Basilio)e(F)m(r)o(aguela,)h(and)g(Liu)g(W)n(ei)39
b(\226)20 b(page)40 b(7/23)4266 1057 y
 gsave currentpoint currentpoint translate 270 neg rotate neg exch
neg exch translate
 4266 1057 a @beginspecial
276 @llx 366 @lly 336 @urx 426 @ury 141 @rwi 141 @rhi
@setspecial
%%BeginDocument: angleHG.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/rico/texte/texstyle/Prosper-beta/img/angleHG.ps
%%Creator: XV Version 3.10a  Rev: 12/29/94 (PNG patch 1.2)  -  by John Bradley
%%BoundingBox: 276 366 336 426
%%Pages: 1
%%DocumentFonts:
%%EndComments
%%EndProlog

%%Page: 1 1

% remember original state
/origstate save def

% build a temporary dictionary
20 dict begin

% define string to hold a scanline's worth of data
/pix 180 string def

% define space for color conversions
/grays 60 string def  % space for gray scale line
/npixls 0 def
/rgbindx 0 def

% print in landscape mode
90 rotate 0 -612 translate

% lower left corner
366 276 translate

% size of image (on paper, in 1/72inch coords)
59.97600 59.97600 scale

% define 'colorimage' if it isn't defined
%   ('colortogray' and 'mergeprocs' come from xwd2ps
%     via xgrab)
/colorimage where   % do we know about 'colorimage'?
  { pop }           % yes: pop off the 'dict' returned
  {                 % no:  define one
    /colortogray {  % define an RGB->I function
      /rgbdata exch store    % call input 'rgbdata'
      rgbdata length 3 idiv
      /npixls exch store
      /rgbindx 0 store
      0 1 npixls 1 sub {
        grays exch
        rgbdata rgbindx       get 20 mul    % Red
        rgbdata rgbindx 1 add get 32 mul    % Green
        rgbdata rgbindx 2 add get 12 mul    % Blue
        add add 64 idiv      % I = .5G + .31R + .18B
        put
        /rgbindx rgbindx 3 add store
      } for
      grays 0 npixls getinterval
    } bind def

    % Utility procedure for colorimage operator.
    % This procedure takes two procedures off the
    % stack and merges them into a single procedure.

    /mergeprocs { % def
      dup length
      3 -1 roll
      dup
      length
      dup
      5 1 roll
      3 -1 roll
      add
      array cvx
      dup
      3 -1 roll
      0 exch
      putinterval
      dup
      4 2 roll
      putinterval
    } bind def

    /colorimage { % def
      pop pop     % remove 'false 3' operands
      {colortogray} mergeprocs
      image
    } bind def
  } ifelse          % end of 'false' case



60 60 8			% dimensions of data
[60 0 0 -60 0 60]		% mapping matrix
{currentfile pix readhexstring pop}
false 3 colorimage

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffafee3effeaaffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffafee3e3fe64ffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffe3fe64fafee3ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffe9fe88f1feb3ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffe8fe86dffe55fefefeffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffebfe96dafe37fefefeffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffedfe9edefe48f7fed5ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffedfe9ee2fe60eefea5f5fecaecfe95ecfe97ecfe98
ecfe99ecfe9bf6feceffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffeffeaadffe4fe0fe55dcfe3f
dbfe3cdbfe3ddbfe3dddfe48defe4cdcfe43d9fe32d6fe20e2fe5fe3fe67defe4ddefe4d
defe4edefe4edbfe3bdbfe3cdcfe3ddcfe3fdcfe40dcfe42ddfe43ddfe45ddfe46ddfe48
ddfe46e2fe63e5fe72e5fe74e6fe76e6fe77e6fe79e7fe7ae9fe86e8fe85ebfe94ecfe97
ecfe99ecfe9cedfe9eeffeacf2febcf3febef3fec1f4fec4f9fedfffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffeffeaaf1feb3f5fec7e9fe87
e7fe7be7fe7be7fe7be2fe60e1fe5bd6fe1dd8fe2adafe33e1fe5bdffe54defe4edffe50
dffe51dffe53e0fe54ddfe49ddfe4bdefe4cdefe4edefe50dffe52dffe54e5fe73eafe93
e9fe89e6fe7ae4fe6ce4fe6ee8fe84e8fe85e9fe87e9fe8ae8fe84e7fe7ce8fe81e9fe8a
f0feb0f8fedbf9fedff1feb8f1febaeafe8bfbfeeafbfeebfdfef5ffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff5fecddffe52e1fe5df5fec9f5fec9f5fecaf5feca
f5fecbf5feccf5feccf5fecdf6fecef6fecef6fecef6fecff6fed0f6fed1eefea5e9fe8a
f6fed1f7fed7f7fed8f7fed9f6fecdfafee8fcfef1fcfef2fdfef7fcfef3fdfef7fefefc
fefefcfefefdf9fee0f6fecff5feccf4fec2ffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff5fecde3fe64e5fe74ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffdfef5fefefdfefefdfefefcfefefcfffffffefef9
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff5fecde5fe74dffe53ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff6fecee6fe79e5fe6ff8fed8ffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff6fecee6fe7aebfe95effeaaffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff6fecee6fe7aedfe9eeefea2ffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff6fecee6fe7bedfe9eeefea3ffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff6fecfe6fe78ecfe9eeefea5ffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffefefe
fefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff6fed0e2fe63e0fe59dffe55ffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffefefe
fefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffedfe9fe2fe5fd8fe2ad8fe2dffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffecfe9adffe53d6fe1cdefe4cf6fecfffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffedfe9cd8fe2cd6fe20defe4bf6fed0ffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffefefdffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffedfe9dd8fe27d7fe22defe4ef6fed0ffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffedfe9dd7fe26d6fe20e0fe5bf6fed2ffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff3febdd7fe22d7fe22e1fe5ef7fed3ffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff4fec6d6fe20d7fe21e0fe57f7fed4ffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff4fec6d6fe20d6fe1fe0fe59f7fed5ffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff4fec6d6fe1ed6fe1ee5fe73f7fed6ffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff4fec6d6fe1dd9fe32e0fe56ffffffffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff5fecce0fe55defe48e8fe81ffffffffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffbfeede7fe7fe0fe56e9fe85ffffffffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff7fed8e8fe84e7fe7ef1feb4ffffffffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff2feb8edfea0effea6f1feb6ffffffffffffffffff
fffffffefefefefefeffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffefefceffeabf0feafeffea7f2feb7ffffffffffffffffff
fffffffefefefefefefefefeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffefefcf5fecaecfe9de7fe7af8feddffffffffffffffffff
fffffffefefefefefefefefefefefeffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffefefcf5fecce8fe85e8fe80ffffffffffffffffffffffff
fffffffefefefefefefefefeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffff8fedefdfef8fdfefbf3fec0e9fe89ecfe96ffffffffffffffffffffffff
fefefefefefefefefefefefeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffdfef6fefefafefefaf4fec2e9fe89ecfe96ffffffffffffffffffffffff
fefefefefefefefefefefefeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffdfef6fefefefefefdf4fec2e8fe85edfe9dffffffffffffffffffffffff
fefefefefefefefefefefefeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffefef9fefefdfefefce7fe7be5fe76f2feb7ffffffffffffffffffffffff
fffffffffffffefefefefefeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffdfef6fdfefafefefbe2fe65e5fe75f6fed0ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffdfef9fefefce6fe79e6fe77fafee6ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffcfef6fefefbecfe9be7fe7efbfeecffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffdfef5fdfef7f7fed5e9fe8dfcfef2ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffcfeeffbfeebedfea1fdfef7ffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffefefeffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffefefdfbfee9effeabffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffefefefefefeffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffbfeeceffea6ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff9fee3f3fec1ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffeefea2f8fedaffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff1feb2fafee4ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffcfef0fefefaffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff


showpage

% stop using temporary dictionary
end

% restore original state
origstate restore

%%Trailer

%%EndDocument
 @endspecial 4511 1057 a
 currentpoint grestore moveto
 4511 1057 a 4130 5844 a
 currentpoint currentpoint translate 0.76611 0.76611 scale neg exch
neg exch translate
 4130
5844 a 4130 5844 a
 gsave currentpoint currentpoint translate 0 neg rotate neg exch neg
exch translate
 4130 5844 a @beginspecial 0 @llx 0
@lly 37 @urx 42 @ury 370 @rwi @setspecial
%%BeginDocument: figs/uiuc.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: uiuc.eps
%%Creator: fig2dev Version 3.2 Patchlevel 3d
%%CreationDate: Sun Feb 10 22:03:46 2002
%%For: renau@nether.cs.uiuc.edu (Jose Renau)
%%BoundingBox: 0 0 37 42
%%Magnification: 1.0000
%%EndComments
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def
/col32 {0.200 0.200 0.400 srgb} bind def
/col33 {0.800 0.400 0.000 srgb} bind def

end
save
newpath 0 42 moveto 0 0 lineto 37 0 lineto 37 42 lineto closepath clip newpath
-273.7 413.7 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
 0.06000 0.06000 sc
%
% Fig objects follow
%
%  polyline 
% Polyline
n 5070 6872 m 5070 6227 l 4584 6227 l 4584 6872 l
 5070 6872 l  cp gs col32 1.00 shd ef gr 
%  polyline 
% Polyline
15.000 slw
n 5070 6872 m 5070 6227 l 4584 6227 l 4584 6872 l
 5070 6872 l  cp gs col32 s gr 
%  polyline 
% Polyline
0.000 slw
n 5056 6858 m 5056 6243 l 4598 6243 l 4598 6858 l
 5056 6858 l  cp gs col32 1.00 shd ef gr 
%  polyline 
% Polyline
7.500 slw
n 5056 6858 m 5056 6243 l 4598 6243 l 4598 6858 l
 5056 6858 l  cp gs col33 s gr 
%  spline 
% Polyline
2 slj
0.000 slw
n 4944 6783 m 4944 6781 l 4944 6773 l 4944 6759 l 4944 6751 l 4944 6749 l
 4943 6749 l 4935 6748 l 4924 6746 l 4914 6744 l 4906 6742 l
 4900 6741 l 4896 6739 l 4892 6738 l 4887 6735 l 4884 6732 l
 4880 6728 l 4877 6722 l 4875 6716 l 4873 6709 l 4872 6702 l
 4871 6693 l 4870 6683 l 4869 6670 l 4869 6654 l 4868 6637 l
 4868 6621 l 4868 6609 l 4868 6604 l 4868 6603 l 4868 6602 l
 4868 6597 l 4868 6585 l 4868 6567 l 4868 6544 l 4868 6521 l
 4868 6503 l 4868 6491 l 4868 6486 l 4868 6485 l 4868 6483 l
 4868 6474 l 4868 6457 l 4869 6438 l 4869 6420 l 4870 6406 l
 4870 6395 l 4871 6387 l 4873 6381 l 4874 6375 l 4876 6371 l
 4879 6367 l 4882 6365 l 4885 6363 l 4889 6362 l 4892 6361 l
 4898 6359 l 4905 6358 l 4915 6356 l 4925 6354 l 4933 6352 l
 4934 6352 l 4934 6350 l 4934 6343 l 4934 6331 l 4934 6324 l
 4934 6322 l 4933 6322 l 4928 6322 l 4916 6322 l 4896 6322 l
 4869 6322 l 4837 6322 l 4806 6322 l 4779 6322 l 4759 6322 l
 4747 6322 l 4742 6322 l 4741 6322 l 4740 6322 l 4737 6322 l
 4732 6322 l 4729 6322 l 4726 6322 l 4724 6322 l 4721 6323 l
 4718 6324 l 4716 6325 l 4714 6326 l 4712 6327 l 4710 6329 l
 4707 6332 l 4705 6334 l 4703 6336 l 4701 6338 l 4700 6339 l
 4699 6341 l 4698 6342 l 4697 6344 l 4696 6346 l 4696 6347 l
 4695 6349 l 4695 6351 l 4695 6353 l 4694 6356 l 4694 6358 l
 4694 6359 l 4694 6360 l 4694 6362 l 4694 6365 l 4694 6367 l
 4695 6369 l 4695 6370 l 4696 6372 l 4697 6374 l 4697 6375 l
 4698 6377 l 4699 6378 l 4701 6379 l 4702 6381 l 4704 6383 l
 4706 6385 l 4708 6386 l 4709 6388 l 4710 6389 l 4712 6389 l
 4713 6390 l 4715 6391 l 4716 6391 l 4718 6391 l 4720 6391 l
 4721 6391 l 4724 6391 l 4726 6391 l 4727 6391 l 4729 6391 l
 4732 6390 l 4735 6390 l 4737 6389 l 4740 6388 l 4742 6387 l
 4744 6385 l 4747 6383 l 4748 6381 l 4749 6379 l 4750 6376 l
 4751 6372 l 4752 6369 l 4752 6368 l 4752 6366 l 4752 6364 l
 4752 6362 l 4752 6361 l 4752 6359 l 4752 6358 l 4751 6357 l
 4751 6356 l 4750 6355 l 4749 6354 l 4749 6353 l 4748 6352 l
 4747 6351 l 4746 6350 l 4745 6349 l 4744 6348 l 4743 6348 l
 4742 6347 l 4741 6346 l 4740 6346 l 4739 6346 l 4738 6346 l
 4736 6345 l 4735 6345 l 4733 6345 l 4732 6345 l 4730 6345 l
 4729 6345 l 4728 6346 l 4727 6346 l 4725 6346 l 4724 6347 l
 4724 6348 l 4723 6348 l 4722 6349 l 4721 6351 l 4720 6352 l
 4719 6353 l 4718 6354 l 4718 6355 l 4717 6356 l 4717 6357 l
 4717 6358 l 4716 6359 l 4717 6360 l 4717 6361 l 4717 6362 l
 4717 6363 l 4718 6364 l 4718 6365 l 4719 6366 l 4719 6367 l
 4720 6367 l 4720 6368 l 4721 6368 l 4722 6369 l 4723 6369 l
 4723 6368 l 4724 6368 l 4725 6368 l 4726 6367 l 4727 6367 l
 4727 6366 l 4728 6366 l 4728 6365 l 4729 6365 l 4729 6364 l
 4729 6363 l 4729 6362 l 4729 6361 l 4728 6360 l 4728 6359 l
 4729 6359 l 4729 6358 l 4730 6357 l 4731 6357 l 4731 6356 l
 4732 6356 l 4733 6356 l 4734 6356 l 4735 6356 l 4735 6357 l
 4736 6357 l 4737 6357 l 4738 6357 l 4738 6358 l 4739 6358 l
 4739 6359 l 4739 6360 l 4740 6360 l 4740 6361 l 4740 6362 l
 4741 6362 l 4741 6363 l 4741 6364 l 4740 6364 l 4740 6365 l
 4740 6366 l 4740 6368 l 4739 6371 l 4739 6373 l 4738 6374 l
 4737 6375 l 4736 6376 l 4735 6377 l 4733 6378 l 4732 6379 l
 4731 6379 l 4729 6379 l 4727 6380 l 4725 6380 l 4724 6380 l
 4722 6380 l 4721 6380 l 4720 6380 l 4719 6380 l 4718 6380 l
 4717 6379 l 4716 6379 l 4715 6379 l 4715 6378 l 4714 6377 l
 4713 6376 l 4712 6375 l 4711 6374 l 4710 6373 l 4710 6372 l
 4709 6372 l 4708 6371 l 4708 6370 l 4707 6369 l 4707 6368 l
 4707 6367 l 4706 6365 l 4706 6363 l 4706 6361 l 4706 6359 l
 4706 6357 l 4706 6355 l 4706 6353 l 4706 6352 l 4707 6351 l
 4707 6350 l 4707 6348 l 4708 6347 l 4709 6346 l 4709 6345 l
 4710 6344 l 4712 6343 l 4713 6342 l 4715 6340 l 4717 6339 l
 4718 6337 l 4720 6337 l 4721 6336 l 4723 6335 l 4725 6334 l
 4727 6334 l 4729 6334 l 4731 6333 l 4734 6333 l 4738 6333 l
 4740 6333 l 4741 6333 l 4742 6333 l 4744 6333 l 4747 6333 l
 4753 6333 l 4759 6333 l 4767 6333 l 4776 6333 l 4785 6333 l
 4794 6333 l 4802 6333 l 4809 6333 l 4815 6333 l 4822 6333 l
 4827 6333 l 4828 6333 l 4828 6334 l 4828 6337 l 4828 6341 l
 4828 6344 l 4828 6345 l 4826 6345 l 4816 6345 l 4797 6345 l
 4779 6345 l 4769 6345 l 4767 6345 l 4766 6345 l 4765 6345 l
 4764 6346 l 4763 6346 l 4762 6347 l 4762 6348 l 4761 6349 l
 4761 6350 l 4761 6351 l 4761 6352 l 4761 6353 l 4761 6354 l
 4761 6355 l 4762 6356 l 4762 6357 l 4763 6358 l 4764 6359 l
 4765 6359 l 4766 6359 l 4767 6359 l 4769 6359 l 4779 6359 l
 4798 6359 l 4816 6359 l 4826 6359 l 4828 6359 l 4828 6360 l
 4828 6362 l 4828 6367 l 4828 6369 l 4828 6370 l 4826 6370 l
 4817 6370 l 4799 6370 l 4782 6370 l 4773 6370 l 4771 6370 l
 4770 6370 l 4769 6370 l 4768 6370 l 4767 6371 l 4766 6371 l
 4766 6372 l 4765 6373 l 4765 6374 l 4765 6375 l 4765 6376 l
 4765 6377 l 4766 6378 l 4766 6379 l 4767 6380 l 4768 6381 l
 4769 6381 l 4770 6381 l 4771 6381 l 4773 6381 l 4782 6381 l
 4800 6381 l 4817 6381 l 4826 6381 l 4828 6381 l 4828 6384 l
 4828 6391 l 4828 6404 l 4828 6423 l 4828 6449 l 4828 6480 l
 4828 6516 l 4828 6554 l 4828 6592 l 4828 6628 l 4828 6659 l
 4828 6685 l 4828 6704 l 4828 6717 l 4828 6724 l 4828 6727 l
 4827 6727 l 4819 6727 l 4802 6727 l 4780 6727 l 4757 6727 l
 4740 6727 l 4732 6727 l 4731 6727 l 4730 6727 l 4729 6727 l
 4728 6727 l 4727 6728 l 4726 6728 l 4726 6729 l 4726 6730 l
 4725 6730 l 4725 6731 l 4725 6732 l 4725 6733 l 4725 6734 l
 4725 6735 l 4725 6736 l 4725 6737 l 4726 6738 l 4726 6739 l
 4727 6739 l 4727 6740 l 4728 6740 l 4729 6740 l 4730 6740 l
 4731 6740 l 4732 6740 l 4740 6740 l 4757 6740 l 4780 6740 l
 4802 6740 l 4819 6740 l 4827 6740 l 4828 6740 l 4828 6741 l
 4828 6745 l 4828 6750 l 4828 6754 l 4828 6755 l 4827 6755 l
 4822 6755 l 4811 6755 l 4792 6755 l 4770 6755 l 4748 6755 l
 4729 6755 l 4718 6755 l 4713 6755 l 4712 6755 l 4710 6755 l
 4707 6755 l 4706 6756 l 4704 6756 l 4703 6757 l 4702 6758 l
 4701 6759 l 4700 6760 l 4699 6761 l 4699 6763 l 4698 6764 l
 4698 6767 l 4698 6769 l 4698 6770 l 4698 6773 l 4698 6779 l
 4698 6782 l 4698 6783 l 4699 6783 l 4703 6783 l 4713 6783 l
 4730 6783 l 4755 6783 l 4786 6783 l 4821 6783 l 4856 6783 l
 4887 6783 l 4912 6783 l 4929 6783 l 4939 6783 l 4943 6783 l

 4944 6783 l  cp gs col7 1.00 shd ef gr 
%  spline 
% Polyline
n 4783 6706 m 4783 6705 l 4783 6702 l 4783 6693 l 4783 6678 l 4783 6656 l
 4783 6626 l 4783 6592 l 4783 6555 l 4783 6517 l 4783 6483 l
 4783 6453 l 4783 6431 l 4783 6416 l 4783 6407 l 4783 6404 l
 4783 6403 l 4783 6402 l 4783 6401 l 4783 6400 l 4782 6400 l
 4782 6399 l 4781 6399 l 4781 6398 l 4780 6398 l 4779 6398 l
 4778 6398 l 4777 6398 l 4776 6398 l 4775 6398 l 4774 6399 l
 4773 6399 l 4773 6400 l 4772 6401 l 4772 6402 l 4772 6403 l
 4772 6404 l 4772 6407 l 4772 6416 l 4772 6431 l 4772 6453 l
 4772 6483 l 4772 6517 l 4772 6555 l 4772 6592 l 4772 6626 l
 4772 6656 l 4772 6678 l 4772 6693 l 4772 6702 l 4772 6705 l
 4772 6706 l 4772 6707 l 4772 6708 l 4773 6709 l 4773 6710 l
 4774 6711 l 4775 6712 l 4776 6712 l 4777 6712 l 4778 6712 l
 4779 6712 l 4780 6712 l 4781 6712 l 4781 6711 l 4782 6711 l
 4782 6710 l 4783 6709 l 4783 6708 l 4783 6707 l
 4783 6706 l  cp gs col7 1.00 shd ef gr 
%  spline 
% Polyline
n 4813 6705 m 4813 6704 l 4813 6701 l 4813 6692 l 4813 6677 l 4813 6655 l
 4813 6626 l 4813 6592 l 4813 6555 l 4813 6518 l 4813 6484 l
 4813 6455 l 4813 6433 l 4813 6418 l 4813 6409 l 4813 6406 l
 4813 6405 l 4813 6404 l 4813 6402 l 4813 6401 l 4812 6400 l
 4811 6399 l 4811 6398 l 4810 6398 l 4809 6398 l 4808 6397 l
 4807 6397 l 4806 6397 l 4805 6397 l 4804 6397 l 4803 6397 l
 4802 6397 l 4801 6398 l 4800 6398 l 4799 6399 l 4799 6400 l
 4798 6401 l 4798 6402 l 4798 6404 l 4798 6405 l 4798 6406 l
 4798 6409 l 4798 6418 l 4798 6433 l 4798 6455 l 4798 6484 l
 4798 6518 l 4798 6555 l 4798 6592 l 4798 6626 l 4798 6655 l
 4798 6677 l 4798 6692 l 4798 6701 l 4798 6704 l 4798 6705 l
 4798 6706 l 4798 6707 l 4798 6708 l 4799 6709 l 4799 6710 l
 4799 6711 l 4800 6711 l 4801 6712 l 4802 6713 l 4803 6713 l
 4804 6713 l 4805 6713 l 4806 6713 l 4807 6713 l 4808 6713 l
 4809 6712 l 4810 6712 l 4811 6711 l 4812 6710 l 4812 6709 l
 4813 6708 l 4813 6707 l 4813 6706 l
 4813 6705 l  cp gs col7 1.00 shd ef gr 
%  polyline 
% Polyline
0 slj
n 5136 6864 m 5124 6864 l 5124 6894 l 5119 6894 l 5119 6864 l 5108 6864 l
 5108 6860 l 5136 6860 l
 5136 6864 l  cp gs col32 1.00 shd ef gr 
%  polyline 
% Polyline
n 5172 6894 m 5167 6894 l 5167 6867 l 5157 6880 l 5156 6880 l 5146 6867 l
 5145 6867 l 5145 6894 l 5141 6894 l 5141 6860 l 5145 6860 l
 5156 6874 l 5168 6860 l 5172 6860 l
 5172 6894 l  cp gs col32 1.00 shd ef gr 
$F2psEnd
rs

%%EndDocument
 @endspecial 4769 5844 a
 currentpoint grestore moveto
 4769 5844 a 4130 5844 a
 currentpoint currentpoint translate 1 0.76611 div 1 0.76611 div scale
neg exch neg exch translate
 4130
5844 a 5001 3450 a
SDict begin H.S end
 5001 3450 a 5001 3450 a
SDict begin H.R end
 5001 3450
a 5001 3450 a
SDict begin [ /View [/XYZ H.V] /Dest (page.1) cvn H.B /DEST pdfmark
end
 5001 3450 a 5001 3450 a
SDict begin [ {ThisPage} << /Trans << /S /Replace >> >> /PUT pdfmark
end
 5001 3450 a 5001
3450 a
SDict begin [ /Page 7/View [ /XYZ null null null ] /Title (Main Directories)
/OUT pdfmark end
 5001 3450 a 7252 1453 a Fm(M)18 b Fn(A)g(I)g(N)118
b Fm(D)18 b Fn(I)g(R)g(E)g(C)g(T)7 b(O)18 b(R)g(I)g(E)g(S)4581
2157 y Fh(sr)l(c)101 b Fg(main)66 b(core)h(of)g(the)g(sim)n(ulator)4581
2522 y Fh(bac)l(kend)100 b Fg(memor)7 b(y)67 b(sub-system)e(\(based)i
(on)g(Fle)-7 b(xRAM\))4581 2893 y Fh(OS)101 b Fg(OS)66
b(suppor)10 b(t)67 b(\(TLB\))4581 3264 y Fh(libapp)100
b Fg(libr)n(ar)7 b(y)66 b(necessar)7 b(y)66 b(f)-7 b(or)67
b(applications)e(\(ala)i(libsim.a\))4581 3635 y Fh(doc)101
b Fg(documentation)66 b(\002les)f(and)j(do)-7 b(xygen)66
b(output)4581 4008 y Fh(benc)n(hs)100 b Fg(sample)66
b(bench)h(and)g(con\002gur)n(ation)4581 4382 y Fh(scripts)100
b Fg(f)-7 b(or)68 b(processing)d(the)i(statistics)d(gener)n(ated)4581
4756 y Fh(Fle)m(xRAM)100 b Fg(the)67 b(Fle)-7 b(xRAM)66
b(architecture)g(\(not)h(in)g(sourcef)-7 b(orge\))10245
5222 y
 0 setgray
 10245 5222 a 4500 6000 a
 tx@Dict begin -90 Rot  end
 4500 6000 a eop
%%Page: 8 8
8 7 bop 4500 6000 a
 tx@Dict begin 90 Rot  end
 4500 6000 a 5981 1792 a @beginspecial
-168 @llx 371 @lly 782 @urx 421 @ury 2834 @rwi 283 @rhi
@setspecial
%%BeginDocument: barre-rico.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /ufs/goualard/TEMP/barre_hor.ps
%%Creator: XV Version 3.10a  Rev: 12/29/94 (PNG patch 1.2)  -  by John Bradley
%%BoundingBox: -168 371 782 421
%%Pages: 1
%%DocumentFonts:
%%EndComments
%%EndProlog

%%Page: 1 1

% remember original state
/origstate save def

% build a temporary dictionary
20 dict begin

% define space for color conversions
/grays 950 string def  % space for gray scale line
/npixls 0 def
/rgbindx 0 def

% lower left corner
-168 371 translate

% size of image (on paper, in 1/72inch coords)
949.96800 49.96800 scale

% define 'colorimage' if it isn't defined
%   ('colortogray' and 'mergeprocs' come from xwd2ps
%     via xgrab)
/colorimage where   % do we know about 'colorimage'?
  { pop }           % yes: pop off the 'dict' returned
  {                 % no:  define one
    /colortogray {  % define an RGB->I function
      /rgbdata exch store    % call input 'rgbdata'
      rgbdata length 3 idiv
      /npixls exch store
      /rgbindx 0 store
      0 1 npixls 1 sub {
        grays exch
        rgbdata rgbindx       get 20 mul    % Red
        rgbdata rgbindx 1 add get 32 mul    % Green
        rgbdata rgbindx 2 add get 12 mul    % Blue
        add add 64 idiv      % I = .5G + .31R + .18B
        put
        /rgbindx rgbindx 3 add store
      } for
      grays 0 npixls getinterval
    } bind def

    % Utility procedure for colorimage operator.
    % This procedure takes two procedures off the
    % stack and merges them into a single procedure.

    /mergeprocs { % def
      dup length
      3 -1 roll
      dup
      length
      dup
      5 1 roll
      3 -1 roll
      add
      array cvx
      dup
      3 -1 roll
      0 exch
      putinterval
      dup
      4 2 roll
      putinterval
    } bind def

    /colorimage { % def
      pop pop     % remove 'false 3' operands
      {colortogray} mergeprocs
      image
    } bind def
  } ifelse          % end of 'false' case



% define the colormap
/cmap 117 string def


% load up the colormap
currentfile cmap readhexstring
bcfe04 dcfe84 ccfe44 ecfec4 c4fe24 d4fe64 f4fee4 e4fea4 bcfe14 ccfe54 
f4fed4 c4fe34 d4fe74 fcfef4 ecfeb4 e4fe94 f4fecc fcfee4 ecfeac c4fe1c 
d4fe54 ccfe3c dcfe74 bcfe0c dcfe8c ccfe4c ecfecc c4fe2c d4fe6c e4feac 
bcfe1c f4fedc c4fe3c fcfefc ecfebc e4fe9c fcfeec d4fe5c dcfe7c 
pop pop   % lose return values from readhexstring


% rlecmapimage expects to have 'w h bits matrix' on stack
/rlecmapimage {
  /buffer 1 string def
  /rgbval 3 string def
  /block  384 string def

  % proc to read a block from file, and return RGB data
  { currentfile buffer readhexstring pop
    /bcount exch 0 get store
    bcount 128 ge
    {  % it's a non-run block
      0 1 bcount 128 sub
      { currentfile buffer readhexstring pop pop

        % look up value in color map
        /rgbval cmap buffer 0 get 3 mul 3 getinterval store

        % and put it in position i*3 in block
        block exch 3 mul rgbval putinterval
      } for
      block  0  bcount 127 sub 3 mul  getinterval
    }

    { % else it's a run block
      currentfile buffer readhexstring pop pop

      % look up value in colormap
      /rgbval cmap buffer 0 get 3 mul 3 getinterval store

      0 1 bcount { block exch 3 mul rgbval putinterval } for

      block 0 bcount 1 add 3 mul getinterval
    } ifelse
  } % end of proc
  false 3 colorimage
} bind def


950 50 8			% dimensions of data
[950 0 0 -50 0 50]		% mapping matrix
rlecmapimage

7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f210221870d1f220e220311212a21
7f217f217f217f217f217f2175218211030e820e220e820e220e860e220e23050b048404
090e24212a21
7f217f217f217f217f217f2171218e110312260b041e131e131e131e131e871e17001702
1d24212c21
7f217f217f217f217f217f216921830d1f220e870e221226200408000b00841702070d21
0521842403100d212321
7f217f217f217f217f217f2121218524220f231f213a218f0d0a220e220e23051b041e13
1e0817000c008408190706210421851103221f0d212521
7f217f217f217f217f217f211e2189240e1c1b17000825242136218a0d1026021b041e13
081700110085172001030d210421840316030d212821
7f217f217f217f217f21342186111a120f070a215721860d1110220e220e860e12182504
17000300821b1f212521851f0e2326230e080e841d010908001100820820090209840c1d
1a06210521841026230d212a21
7f217f217f217f21792186241f10220e220e820e220e820e220e820e220e820e220e820e
220e830e070f01010182070a2117218b0610231c1508001708090a2151218e0d1f101d01
14201b1e131e131e08000700820c0d211021840d100311210921881103220e07050b0800
8400171e081e821e081e851e081e0817001000851e2009181a210b21850d22261d24212c
21
7f217f217f217f21472184241f10220e820e220e820e220e820e220e820e220e820e220e
820e220e810e2283221f0d210e219a241f10070f1c09151e041e131e131e131e131e131e
131e131e131e821e080002008b17081410210d1110220e220e820e220e820e220e010e81
2301880126012616191b08000500820422212f2182240d211921890d0a0e072625150417
00100082201a210921890d1110220e23011620048304051f210421891103231c15131e08
1700190082171e090309820c1a210e21841f0e0a0d212e21
7f217f217f217f213f2190241f100e070f011c1920041e131e081e0882081e0882081e08
82081e0882081e0803088304250a2107218b241f030e12181619151e08001d00811e268c
2614201b041e131e131e131e088108178117000f0082091f211521840d0610220e0f0e88
120f012625020c11211321890d0a22121809040817001300831e050a2105218a0d1f101d
0114201b1e170004008408260e220e860e230c020417001800821e2009020982181a2114
21810d213321
7f211221842422121f217f217f217f211221850d0a220e220e820e220e820e220e820e22
0e010e881d0f1605090b041e178117001a008f1e22210d1110221d0f0116190b041e1781
1700220001171f00820b2221102189111022120f0125151b1e011e81081e821e081e821e
081e821e081e821e081e821e1700030082171c0e110e861d01251b1e170015008220181d
021d81220e020e86070119150417000b0086081e131e08170019008308091d210c21830d
1f24214121
7f210721830d0a220e040e83230504088308052421492185240a22230f01130182070a21
7f2106218c240a03220e220e220e220e1d0f840f01231f217f210a2199240a221d0f0116
191b1e131e131e131e131e131e131e131e17002300810b16871609200413081700490087
171e051d1f10220e0a0e8712232625201b1e178117001b000108011e81081e821e081e82
1e081e821e081e821e081e831e0817000c0085171e201e08000300831720090c840c090b
1b1e871e081e081e0817001f0083081e201e821e20090809820c03210b21860d0a222307
0d210521010d3a21
7f21042188112218141b13081e088108178117000300821b1f2140218b241f100e070f1c
25021b1317811700140083081410217f218c241f10070f05021b04131e131e011e810817
811700010093170207220e220e220e220e220e220e22120f18018301231f216e218c0d0a
22120f0116191b130817004c000117811e208120090509822008002c008308200c188518
0c09021b1e821e081e821e081e821e081e811e08810817811700400081171e871e09181a
061c08000300851e200b1e1700250083171e200983091806211721820d110a010a841d26
1918214421
6c219a1103220e220e220e220e220e220e220e220e220e22120f050b08000d0093091d22
0e220e220e220e220e220e220e2203112127218c241f100e070f0105021b1e08001e0082
0422216a2189241f10220e230f1826018201260182012601890126160509150408170011
0085131e131e131e821e131e831e131e0882081700020083082524215e2183240a220e82
0e220e8b0e22120f011605190b1308178117004d008817081e2009181d06210821810900
22000408071e0117510085080b09181a21022182060900040082081700120082171e000f
00011e83091806210d21821a031d8e1d221d221d0e22030a110d240d240d810d21012182
2406214521
68219711030f252004131e131e131e131e131e131e131e131e131e821e08001100011e83
131e131e821e131e821e131e821e131e811e1383131c1f211e218d0d1110221d0f260519
0b041e17002500821b0c0103018426161c05250b258405160f1d0e210e82070f26012681
0126822601268426010f1f2117218a241f100e070f1609150408820817003900821b1f21
56218a0a0f0c2514190215041e0801088217081701173400011781001781170016000117
011e85200c181d06210e218105000d0083171e08000c00011781081e041e020802171e00
82081e208120090d0982201e001b00850820090c1a210721821817000b008b081e200920
1920192009200986090c1d1a060900030083171e20090209010c83181a0621082187060a
0e1d071d0e1d821d0f1802180107841d220a24215221
1d21830d1f220e820e220e820e220e820e220e860e220e221024212321840d10230f010a
01852616091b08003b00820812210421830d1f102281220e820e220e820e220e820e220e
820e220e820e220e890e1d0f011609201b1317811700470081081e821e081e821e081e82
1e081e821e081e821e081e821e081e821e081e821e081e821e081e821e081e841e081e08
000a0083170b260182012601820126018201260182012601820126018a01260126160525
19151b088108004200820c0d21032196240a03220e220e220e220e220e220e220e220e22
0e1d0f810f01150182231f210921840d0610220e0e0e8418140417002100821720090409
822017002c008317081e208520090c1d1a211621821a201e811e20832009200982092009
86092009181a0c003400011e8520090c181a211221831a0c200982092009820920091109
830c1a06210a2182062000080087082009181a0621060206812106810621052183061d0c
0984090c181d1a011a02060e21820d062482240d216021
1c21970d0702041e131e131e131e131e131e131e0420050f100d211f21840d231b17004d
00a008182212230f011609151b131e131e131e131e131e131e131e131e131e130817001b
0083170017007f0041008c201a241f10070f1c021b04131e821e131e821e131e821e131e
821e131e011e810817811700160001178205112101218a111022120f181614151b1e821e
081e821e081e821e081e821e081e821e0817811700250082090621032182060900260088
17081e20090c1d1a212e2183062017001f008317081e208120090a09830c181a21442183
240917008300081e2001208409181a0621142183061a1d1a841a062106217721
1b21830d071b000f008517080b05230e8f0e220e220e220e220e220e220e220e22842210
110d210821830d231e004f00841e041e08178117007f0065008117000e000108011e8720
0c16090b1e08003000880401181614201b1e178117003a00822006210421820620001f00
81171e861e20090c1d1a213521820609001700011788081e20090c181a0621492184060a
101a1086101a10110d210d880d061a180c09181a0601067f211b21
1b21820a1900140081081e821e131e821e131e821e131e821e131e8d1e131e13040b1925
1812221f0d210321820a20007f007f0033000108160081081e031e820817003600811700
40008308091a2106218203091e031e8120091609830c1d1a213d21821f01091409840c18
1a06214e21010d0124010685240624060d210321850a26012206217f211f21
1b21831020170029008c1708040b021925051626051e007f002f000d1782081e20812009
1e0982201e00370081171e811e208120090c0982181d0683061808007900011781081e07
1e8120090e09820c1d217f216721820611217f212221
1b21830d0e0c090c0982201e004d00820817002a000217011e8120090c09811e00380082
17081e851e090c181a068306210621822106218221062182210621822106212521821a0c
09010982201e002700011781081e811e2085200c181d06211321821a200022000117011e
82091e0035008317081e20812009090982201e0002008608091a062106217f215521810d
217f215321
2d21851a0c201e17004300850820090c1a068206200022008317081e208620090c181d1a
210f21821d08002e000117021e0120840c181a06214221821d0c09250983181d06211c21
821a20001c008817081e2009181d062101218109002d0081171e871e20090c181a06210e
21851d09200c1a217f215a2182110d215321810d217d21
30218306180c090f0983201e08002500811e09820920090109830c1a062104218203201e
081e01201309810c1d821d1a21182182062000260081171e011e8620090c181a06217f21
1521830d1d0c091909840c181d06210721821a191e091e83200920098209200982092009
8209200982092009820920098209200982092009820920098209200985090c181a06217f
217621810d215121860d1026142510217c21
462185061d0c2017002000820906214e21820618098209200981092082201e178217081e
011e01201309840c181a06217f217f217f217f214421810d2401248306240d217d21
4a21841d201e0800150081081e041e820906217f217f217f217f217f217f214521
4e2185061a18201e000b0085171e091d06217f217f217f217f217f217f214e21
5221821a0c090909830c1d06217f217f217f217f217f217f215121
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521

%
% Compression made this file 2.88% of the uncompressed size.
%


showpage

% stop using temporary dictionary
end

% restore original state
origstate restore

%%Trailer

%%EndDocument
 @endspecial 5001 5222 a @beginspecial @setspecial
 tx@Dict begin STP newpath 1.0 SLW 0.5451 0.39608 0.03137 setrgbcolor
 /ArrowA { moveto } def /ArrowB { } def [ 341.43292 -28.45274 -22.76227
-28.45274  /Lineto /lineto load def false Line  gsave 1.0 SLW 0.5451
0.39608 0.03137 setrgbcolor 0 setlinecap stroke  grestore end
 
@endspecial
621 x Fi(SESC)20 b(\(IA)n(COMA)e(g)o(roup\))2960 b(Joe)20
b(Renau,)h(Basilio)e(F)m(r)o(aguela,)h(and)g(Liu)g(W)n(ei)39
b(\226)20 b(page)40 b(8/23)4266 1057 y
 gsave currentpoint currentpoint translate 270 neg rotate neg exch
neg exch translate
 4266 1057 a @beginspecial
276 @llx 366 @lly 336 @urx 426 @ury 141 @rwi 141 @rhi
@setspecial
%%BeginDocument: angleHG.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/rico/texte/texstyle/Prosper-beta/img/angleHG.ps
%%Creator: XV Version 3.10a  Rev: 12/29/94 (PNG patch 1.2)  -  by John Bradley
%%BoundingBox: 276 366 336 426
%%Pages: 1
%%DocumentFonts:
%%EndComments
%%EndProlog

%%Page: 1 1

% remember original state
/origstate save def

% build a temporary dictionary
20 dict begin

% define string to hold a scanline's worth of data
/pix 180 string def

% define space for color conversions
/grays 60 string def  % space for gray scale line
/npixls 0 def
/rgbindx 0 def

% print in landscape mode
90 rotate 0 -612 translate

% lower left corner
366 276 translate

% size of image (on paper, in 1/72inch coords)
59.97600 59.97600 scale

% define 'colorimage' if it isn't defined
%   ('colortogray' and 'mergeprocs' come from xwd2ps
%     via xgrab)
/colorimage where   % do we know about 'colorimage'?
  { pop }           % yes: pop off the 'dict' returned
  {                 % no:  define one
    /colortogray {  % define an RGB->I function
      /rgbdata exch store    % call input 'rgbdata'
      rgbdata length 3 idiv
      /npixls exch store
      /rgbindx 0 store
      0 1 npixls 1 sub {
        grays exch
        rgbdata rgbindx       get 20 mul    % Red
        rgbdata rgbindx 1 add get 32 mul    % Green
        rgbdata rgbindx 2 add get 12 mul    % Blue
        add add 64 idiv      % I = .5G + .31R + .18B
        put
        /rgbindx rgbindx 3 add store
      } for
      grays 0 npixls getinterval
    } bind def

    % Utility procedure for colorimage operator.
    % This procedure takes two procedures off the
    % stack and merges them into a single procedure.

    /mergeprocs { % def
      dup length
      3 -1 roll
      dup
      length
      dup
      5 1 roll
      3 -1 roll
      add
      array cvx
      dup
      3 -1 roll
      0 exch
      putinterval
      dup
      4 2 roll
      putinterval
    } bind def

    /colorimage { % def
      pop pop     % remove 'false 3' operands
      {colortogray} mergeprocs
      image
    } bind def
  } ifelse          % end of 'false' case



60 60 8			% dimensions of data
[60 0 0 -60 0 60]		% mapping matrix
{currentfile pix readhexstring pop}
false 3 colorimage

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffafee3effeaaffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffafee3e3fe64ffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffe3fe64fafee3ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffe9fe88f1feb3ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffe8fe86dffe55fefefeffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffebfe96dafe37fefefeffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffedfe9edefe48f7fed5ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffedfe9ee2fe60eefea5f5fecaecfe95ecfe97ecfe98
ecfe99ecfe9bf6feceffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffeffeaadffe4fe0fe55dcfe3f
dbfe3cdbfe3ddbfe3dddfe48defe4cdcfe43d9fe32d6fe20e2fe5fe3fe67defe4ddefe4d
defe4edefe4edbfe3bdbfe3cdcfe3ddcfe3fdcfe40dcfe42ddfe43ddfe45ddfe46ddfe48
ddfe46e2fe63e5fe72e5fe74e6fe76e6fe77e6fe79e7fe7ae9fe86e8fe85ebfe94ecfe97
ecfe99ecfe9cedfe9eeffeacf2febcf3febef3fec1f4fec4f9fedfffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffeffeaaf1feb3f5fec7e9fe87
e7fe7be7fe7be7fe7be2fe60e1fe5bd6fe1dd8fe2adafe33e1fe5bdffe54defe4edffe50
dffe51dffe53e0fe54ddfe49ddfe4bdefe4cdefe4edefe50dffe52dffe54e5fe73eafe93
e9fe89e6fe7ae4fe6ce4fe6ee8fe84e8fe85e9fe87e9fe8ae8fe84e7fe7ce8fe81e9fe8a
f0feb0f8fedbf9fedff1feb8f1febaeafe8bfbfeeafbfeebfdfef5ffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff5fecddffe52e1fe5df5fec9f5fec9f5fecaf5feca
f5fecbf5feccf5feccf5fecdf6fecef6fecef6fecef6fecff6fed0f6fed1eefea5e9fe8a
f6fed1f7fed7f7fed8f7fed9f6fecdfafee8fcfef1fcfef2fdfef7fcfef3fdfef7fefefc
fefefcfefefdf9fee0f6fecff5feccf4fec2ffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff5fecde3fe64e5fe74ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffdfef5fefefdfefefdfefefcfefefcfffffffefef9
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff5fecde5fe74dffe53ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff6fecee6fe79e5fe6ff8fed8ffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff6fecee6fe7aebfe95effeaaffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff6fecee6fe7aedfe9eeefea2ffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff6fecee6fe7bedfe9eeefea3ffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff6fecfe6fe78ecfe9eeefea5ffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffefefe
fefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff6fed0e2fe63e0fe59dffe55ffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffefefe
fefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffedfe9fe2fe5fd8fe2ad8fe2dffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffecfe9adffe53d6fe1cdefe4cf6fecfffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffedfe9cd8fe2cd6fe20defe4bf6fed0ffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffefefdffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffedfe9dd8fe27d7fe22defe4ef6fed0ffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffedfe9dd7fe26d6fe20e0fe5bf6fed2ffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff3febdd7fe22d7fe22e1fe5ef7fed3ffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff4fec6d6fe20d7fe21e0fe57f7fed4ffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff4fec6d6fe20d6fe1fe0fe59f7fed5ffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff4fec6d6fe1ed6fe1ee5fe73f7fed6ffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff4fec6d6fe1dd9fe32e0fe56ffffffffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff5fecce0fe55defe48e8fe81ffffffffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffbfeede7fe7fe0fe56e9fe85ffffffffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff7fed8e8fe84e7fe7ef1feb4ffffffffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff2feb8edfea0effea6f1feb6ffffffffffffffffff
fffffffefefefefefeffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffefefceffeabf0feafeffea7f2feb7ffffffffffffffffff
fffffffefefefefefefefefeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffefefcf5fecaecfe9de7fe7af8feddffffffffffffffffff
fffffffefefefefefefefefefefefeffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffefefcf5fecce8fe85e8fe80ffffffffffffffffffffffff
fffffffefefefefefefefefeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffff8fedefdfef8fdfefbf3fec0e9fe89ecfe96ffffffffffffffffffffffff
fefefefefefefefefefefefeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffdfef6fefefafefefaf4fec2e9fe89ecfe96ffffffffffffffffffffffff
fefefefefefefefefefefefeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffdfef6fefefefefefdf4fec2e8fe85edfe9dffffffffffffffffffffffff
fefefefefefefefefefefefeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffefef9fefefdfefefce7fe7be5fe76f2feb7ffffffffffffffffffffffff
fffffffffffffefefefefefeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffdfef6fdfefafefefbe2fe65e5fe75f6fed0ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffdfef9fefefce6fe79e6fe77fafee6ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffcfef6fefefbecfe9be7fe7efbfeecffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffdfef5fdfef7f7fed5e9fe8dfcfef2ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffcfeeffbfeebedfea1fdfef7ffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffefefeffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffefefdfbfee9effeabffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffefefefefefeffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffbfeeceffea6ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff9fee3f3fec1ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffeefea2f8fedaffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff1feb2fafee4ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffcfef0fefefaffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff


showpage

% stop using temporary dictionary
end

% restore original state
origstate restore

%%Trailer

%%EndDocument
 @endspecial 4511 1057 a
 currentpoint grestore moveto
 4511 1057 a 4130 5844 a
 currentpoint currentpoint translate 0.76611 0.76611 scale neg exch
neg exch translate
 4130
5844 a 4130 5844 a
 gsave currentpoint currentpoint translate 0 neg rotate neg exch neg
exch translate
 4130 5844 a @beginspecial 0 @llx 0
@lly 37 @urx 42 @ury 370 @rwi @setspecial
%%BeginDocument: figs/uiuc.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: uiuc.eps
%%Creator: fig2dev Version 3.2 Patchlevel 3d
%%CreationDate: Sun Feb 10 22:03:46 2002
%%For: renau@nether.cs.uiuc.edu (Jose Renau)
%%BoundingBox: 0 0 37 42
%%Magnification: 1.0000
%%EndComments
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def
/col32 {0.200 0.200 0.400 srgb} bind def
/col33 {0.800 0.400 0.000 srgb} bind def

end
save
newpath 0 42 moveto 0 0 lineto 37 0 lineto 37 42 lineto closepath clip newpath
-273.7 413.7 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
 0.06000 0.06000 sc
%
% Fig objects follow
%
%  polyline 
% Polyline
n 5070 6872 m 5070 6227 l 4584 6227 l 4584 6872 l
 5070 6872 l  cp gs col32 1.00 shd ef gr 
%  polyline 
% Polyline
15.000 slw
n 5070 6872 m 5070 6227 l 4584 6227 l 4584 6872 l
 5070 6872 l  cp gs col32 s gr 
%  polyline 
% Polyline
0.000 slw
n 5056 6858 m 5056 6243 l 4598 6243 l 4598 6858 l
 5056 6858 l  cp gs col32 1.00 shd ef gr 
%  polyline 
% Polyline
7.500 slw
n 5056 6858 m 5056 6243 l 4598 6243 l 4598 6858 l
 5056 6858 l  cp gs col33 s gr 
%  spline 
% Polyline
2 slj
0.000 slw
n 4944 6783 m 4944 6781 l 4944 6773 l 4944 6759 l 4944 6751 l 4944 6749 l
 4943 6749 l 4935 6748 l 4924 6746 l 4914 6744 l 4906 6742 l
 4900 6741 l 4896 6739 l 4892 6738 l 4887 6735 l 4884 6732 l
 4880 6728 l 4877 6722 l 4875 6716 l 4873 6709 l 4872 6702 l
 4871 6693 l 4870 6683 l 4869 6670 l 4869 6654 l 4868 6637 l
 4868 6621 l 4868 6609 l 4868 6604 l 4868 6603 l 4868 6602 l
 4868 6597 l 4868 6585 l 4868 6567 l 4868 6544 l 4868 6521 l
 4868 6503 l 4868 6491 l 4868 6486 l 4868 6485 l 4868 6483 l
 4868 6474 l 4868 6457 l 4869 6438 l 4869 6420 l 4870 6406 l
 4870 6395 l 4871 6387 l 4873 6381 l 4874 6375 l 4876 6371 l
 4879 6367 l 4882 6365 l 4885 6363 l 4889 6362 l 4892 6361 l
 4898 6359 l 4905 6358 l 4915 6356 l 4925 6354 l 4933 6352 l
 4934 6352 l 4934 6350 l 4934 6343 l 4934 6331 l 4934 6324 l
 4934 6322 l 4933 6322 l 4928 6322 l 4916 6322 l 4896 6322 l
 4869 6322 l 4837 6322 l 4806 6322 l 4779 6322 l 4759 6322 l
 4747 6322 l 4742 6322 l 4741 6322 l 4740 6322 l 4737 6322 l
 4732 6322 l 4729 6322 l 4726 6322 l 4724 6322 l 4721 6323 l
 4718 6324 l 4716 6325 l 4714 6326 l 4712 6327 l 4710 6329 l
 4707 6332 l 4705 6334 l 4703 6336 l 4701 6338 l 4700 6339 l
 4699 6341 l 4698 6342 l 4697 6344 l 4696 6346 l 4696 6347 l
 4695 6349 l 4695 6351 l 4695 6353 l 4694 6356 l 4694 6358 l
 4694 6359 l 4694 6360 l 4694 6362 l 4694 6365 l 4694 6367 l
 4695 6369 l 4695 6370 l 4696 6372 l 4697 6374 l 4697 6375 l
 4698 6377 l 4699 6378 l 4701 6379 l 4702 6381 l 4704 6383 l
 4706 6385 l 4708 6386 l 4709 6388 l 4710 6389 l 4712 6389 l
 4713 6390 l 4715 6391 l 4716 6391 l 4718 6391 l 4720 6391 l
 4721 6391 l 4724 6391 l 4726 6391 l 4727 6391 l 4729 6391 l
 4732 6390 l 4735 6390 l 4737 6389 l 4740 6388 l 4742 6387 l
 4744 6385 l 4747 6383 l 4748 6381 l 4749 6379 l 4750 6376 l
 4751 6372 l 4752 6369 l 4752 6368 l 4752 6366 l 4752 6364 l
 4752 6362 l 4752 6361 l 4752 6359 l 4752 6358 l 4751 6357 l
 4751 6356 l 4750 6355 l 4749 6354 l 4749 6353 l 4748 6352 l
 4747 6351 l 4746 6350 l 4745 6349 l 4744 6348 l 4743 6348 l
 4742 6347 l 4741 6346 l 4740 6346 l 4739 6346 l 4738 6346 l
 4736 6345 l 4735 6345 l 4733 6345 l 4732 6345 l 4730 6345 l
 4729 6345 l 4728 6346 l 4727 6346 l 4725 6346 l 4724 6347 l
 4724 6348 l 4723 6348 l 4722 6349 l 4721 6351 l 4720 6352 l
 4719 6353 l 4718 6354 l 4718 6355 l 4717 6356 l 4717 6357 l
 4717 6358 l 4716 6359 l 4717 6360 l 4717 6361 l 4717 6362 l
 4717 6363 l 4718 6364 l 4718 6365 l 4719 6366 l 4719 6367 l
 4720 6367 l 4720 6368 l 4721 6368 l 4722 6369 l 4723 6369 l
 4723 6368 l 4724 6368 l 4725 6368 l 4726 6367 l 4727 6367 l
 4727 6366 l 4728 6366 l 4728 6365 l 4729 6365 l 4729 6364 l
 4729 6363 l 4729 6362 l 4729 6361 l 4728 6360 l 4728 6359 l
 4729 6359 l 4729 6358 l 4730 6357 l 4731 6357 l 4731 6356 l
 4732 6356 l 4733 6356 l 4734 6356 l 4735 6356 l 4735 6357 l
 4736 6357 l 4737 6357 l 4738 6357 l 4738 6358 l 4739 6358 l
 4739 6359 l 4739 6360 l 4740 6360 l 4740 6361 l 4740 6362 l
 4741 6362 l 4741 6363 l 4741 6364 l 4740 6364 l 4740 6365 l
 4740 6366 l 4740 6368 l 4739 6371 l 4739 6373 l 4738 6374 l
 4737 6375 l 4736 6376 l 4735 6377 l 4733 6378 l 4732 6379 l
 4731 6379 l 4729 6379 l 4727 6380 l 4725 6380 l 4724 6380 l
 4722 6380 l 4721 6380 l 4720 6380 l 4719 6380 l 4718 6380 l
 4717 6379 l 4716 6379 l 4715 6379 l 4715 6378 l 4714 6377 l
 4713 6376 l 4712 6375 l 4711 6374 l 4710 6373 l 4710 6372 l
 4709 6372 l 4708 6371 l 4708 6370 l 4707 6369 l 4707 6368 l
 4707 6367 l 4706 6365 l 4706 6363 l 4706 6361 l 4706 6359 l
 4706 6357 l 4706 6355 l 4706 6353 l 4706 6352 l 4707 6351 l
 4707 6350 l 4707 6348 l 4708 6347 l 4709 6346 l 4709 6345 l
 4710 6344 l 4712 6343 l 4713 6342 l 4715 6340 l 4717 6339 l
 4718 6337 l 4720 6337 l 4721 6336 l 4723 6335 l 4725 6334 l
 4727 6334 l 4729 6334 l 4731 6333 l 4734 6333 l 4738 6333 l
 4740 6333 l 4741 6333 l 4742 6333 l 4744 6333 l 4747 6333 l
 4753 6333 l 4759 6333 l 4767 6333 l 4776 6333 l 4785 6333 l
 4794 6333 l 4802 6333 l 4809 6333 l 4815 6333 l 4822 6333 l
 4827 6333 l 4828 6333 l 4828 6334 l 4828 6337 l 4828 6341 l
 4828 6344 l 4828 6345 l 4826 6345 l 4816 6345 l 4797 6345 l
 4779 6345 l 4769 6345 l 4767 6345 l 4766 6345 l 4765 6345 l
 4764 6346 l 4763 6346 l 4762 6347 l 4762 6348 l 4761 6349 l
 4761 6350 l 4761 6351 l 4761 6352 l 4761 6353 l 4761 6354 l
 4761 6355 l 4762 6356 l 4762 6357 l 4763 6358 l 4764 6359 l
 4765 6359 l 4766 6359 l 4767 6359 l 4769 6359 l 4779 6359 l
 4798 6359 l 4816 6359 l 4826 6359 l 4828 6359 l 4828 6360 l
 4828 6362 l 4828 6367 l 4828 6369 l 4828 6370 l 4826 6370 l
 4817 6370 l 4799 6370 l 4782 6370 l 4773 6370 l 4771 6370 l
 4770 6370 l 4769 6370 l 4768 6370 l 4767 6371 l 4766 6371 l
 4766 6372 l 4765 6373 l 4765 6374 l 4765 6375 l 4765 6376 l
 4765 6377 l 4766 6378 l 4766 6379 l 4767 6380 l 4768 6381 l
 4769 6381 l 4770 6381 l 4771 6381 l 4773 6381 l 4782 6381 l
 4800 6381 l 4817 6381 l 4826 6381 l 4828 6381 l 4828 6384 l
 4828 6391 l 4828 6404 l 4828 6423 l 4828 6449 l 4828 6480 l
 4828 6516 l 4828 6554 l 4828 6592 l 4828 6628 l 4828 6659 l
 4828 6685 l 4828 6704 l 4828 6717 l 4828 6724 l 4828 6727 l
 4827 6727 l 4819 6727 l 4802 6727 l 4780 6727 l 4757 6727 l
 4740 6727 l 4732 6727 l 4731 6727 l 4730 6727 l 4729 6727 l
 4728 6727 l 4727 6728 l 4726 6728 l 4726 6729 l 4726 6730 l
 4725 6730 l 4725 6731 l 4725 6732 l 4725 6733 l 4725 6734 l
 4725 6735 l 4725 6736 l 4725 6737 l 4726 6738 l 4726 6739 l
 4727 6739 l 4727 6740 l 4728 6740 l 4729 6740 l 4730 6740 l
 4731 6740 l 4732 6740 l 4740 6740 l 4757 6740 l 4780 6740 l
 4802 6740 l 4819 6740 l 4827 6740 l 4828 6740 l 4828 6741 l
 4828 6745 l 4828 6750 l 4828 6754 l 4828 6755 l 4827 6755 l
 4822 6755 l 4811 6755 l 4792 6755 l 4770 6755 l 4748 6755 l
 4729 6755 l 4718 6755 l 4713 6755 l 4712 6755 l 4710 6755 l
 4707 6755 l 4706 6756 l 4704 6756 l 4703 6757 l 4702 6758 l
 4701 6759 l 4700 6760 l 4699 6761 l 4699 6763 l 4698 6764 l
 4698 6767 l 4698 6769 l 4698 6770 l 4698 6773 l 4698 6779 l
 4698 6782 l 4698 6783 l 4699 6783 l 4703 6783 l 4713 6783 l
 4730 6783 l 4755 6783 l 4786 6783 l 4821 6783 l 4856 6783 l
 4887 6783 l 4912 6783 l 4929 6783 l 4939 6783 l 4943 6783 l

 4944 6783 l  cp gs col7 1.00 shd ef gr 
%  spline 
% Polyline
n 4783 6706 m 4783 6705 l 4783 6702 l 4783 6693 l 4783 6678 l 4783 6656 l
 4783 6626 l 4783 6592 l 4783 6555 l 4783 6517 l 4783 6483 l
 4783 6453 l 4783 6431 l 4783 6416 l 4783 6407 l 4783 6404 l
 4783 6403 l 4783 6402 l 4783 6401 l 4783 6400 l 4782 6400 l
 4782 6399 l 4781 6399 l 4781 6398 l 4780 6398 l 4779 6398 l
 4778 6398 l 4777 6398 l 4776 6398 l 4775 6398 l 4774 6399 l
 4773 6399 l 4773 6400 l 4772 6401 l 4772 6402 l 4772 6403 l
 4772 6404 l 4772 6407 l 4772 6416 l 4772 6431 l 4772 6453 l
 4772 6483 l 4772 6517 l 4772 6555 l 4772 6592 l 4772 6626 l
 4772 6656 l 4772 6678 l 4772 6693 l 4772 6702 l 4772 6705 l
 4772 6706 l 4772 6707 l 4772 6708 l 4773 6709 l 4773 6710 l
 4774 6711 l 4775 6712 l 4776 6712 l 4777 6712 l 4778 6712 l
 4779 6712 l 4780 6712 l 4781 6712 l 4781 6711 l 4782 6711 l
 4782 6710 l 4783 6709 l 4783 6708 l 4783 6707 l
 4783 6706 l  cp gs col7 1.00 shd ef gr 
%  spline 
% Polyline
n 4813 6705 m 4813 6704 l 4813 6701 l 4813 6692 l 4813 6677 l 4813 6655 l
 4813 6626 l 4813 6592 l 4813 6555 l 4813 6518 l 4813 6484 l
 4813 6455 l 4813 6433 l 4813 6418 l 4813 6409 l 4813 6406 l
 4813 6405 l 4813 6404 l 4813 6402 l 4813 6401 l 4812 6400 l
 4811 6399 l 4811 6398 l 4810 6398 l 4809 6398 l 4808 6397 l
 4807 6397 l 4806 6397 l 4805 6397 l 4804 6397 l 4803 6397 l
 4802 6397 l 4801 6398 l 4800 6398 l 4799 6399 l 4799 6400 l
 4798 6401 l 4798 6402 l 4798 6404 l 4798 6405 l 4798 6406 l
 4798 6409 l 4798 6418 l 4798 6433 l 4798 6455 l 4798 6484 l
 4798 6518 l 4798 6555 l 4798 6592 l 4798 6626 l 4798 6655 l
 4798 6677 l 4798 6692 l 4798 6701 l 4798 6704 l 4798 6705 l
 4798 6706 l 4798 6707 l 4798 6708 l 4799 6709 l 4799 6710 l
 4799 6711 l 4800 6711 l 4801 6712 l 4802 6713 l 4803 6713 l
 4804 6713 l 4805 6713 l 4806 6713 l 4807 6713 l 4808 6713 l
 4809 6712 l 4810 6712 l 4811 6711 l 4812 6710 l 4812 6709 l
 4813 6708 l 4813 6707 l 4813 6706 l
 4813 6705 l  cp gs col7 1.00 shd ef gr 
%  polyline 
% Polyline
0 slj
n 5136 6864 m 5124 6864 l 5124 6894 l 5119 6894 l 5119 6864 l 5108 6864 l
 5108 6860 l 5136 6860 l
 5136 6864 l  cp gs col32 1.00 shd ef gr 
%  polyline 
% Polyline
n 5172 6894 m 5167 6894 l 5167 6867 l 5157 6880 l 5156 6880 l 5146 6867 l
 5145 6867 l 5145 6894 l 5141 6894 l 5141 6860 l 5145 6860 l
 5156 6874 l 5168 6860 l 5172 6860 l
 5172 6894 l  cp gs col32 1.00 shd ef gr 
$F2psEnd
rs

%%EndDocument
 @endspecial 4769 5844 a
 currentpoint grestore moveto
 4769 5844 a 4130 5844 a
 currentpoint currentpoint translate 1 0.76611 div 1 0.76611 div scale
neg exch neg exch translate
 4130
5844 a 5001 3450 a
SDict begin H.S end
 5001 3450 a 5001 3450 a
SDict begin H.R end
 5001 3450
a 5001 3450 a
SDict begin [ /View [/XYZ H.V] /Dest (page.1) cvn H.B /DEST pdfmark
end
 5001 3450 a 5001 3450 a
SDict begin [ {ThisPage} << /Trans << /S /Replace >> >> /PUT pdfmark
end
 5001 3450 a 5001
3450 a
SDict begin [ /Page 8/View [ /XYZ null null null ] /Title (CVS work)
/OUT pdfmark end
 5001 3450 a 8542 1453 a Fm(C)18 b(V)g(S)117 b
Fn(W)12 b(O)18 b(R)g(K)5032 3475 y @beginspecial 50 @llx
50 @lly 482 @urx 201 @ury 2880 @rwi @setspecial
%%BeginDocument: figs/lsesc.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: lsesc.eps
%%Creator: gnuplot 3.7 patchlevel 1
%%CreationDate: Sat Mar 23 14:03:24 2002
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 482 201
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -46 def
/dl {10 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth } def
/AL { stroke userlinewidth 2 div setlinewidth } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Times-Roman) findfont 140 scalefont setfont
1.000 UL
LTb
798 420 M
63 0 V
7541 0 R
-63 0 V
714 420 M
(2000) Rshow
798 619 M
63 0 V
7541 0 R
-63 0 V
714 619 M
(4000) Rshow
798 817 M
63 0 V
7541 0 R
-63 0 V
714 817 M
(6000) Rshow
798 1016 M
63 0 V
7541 0 R
-63 0 V
-7625 0 R
(8000) Rshow
798 1214 M
63 0 V
7541 0 R
-63 0 V
-7625 0 R
(10000) Rshow
798 1413 M
63 0 V
7541 0 R
-63 0 V
-7625 0 R
(12000) Rshow
798 1611 M
63 0 V
7541 0 R
-63 0 V
-7625 0 R
(14000) Rshow
798 1810 M
63 0 V
7541 0 R
-63 0 V
-7625 0 R
(16000) Rshow
798 2008 M
63 0 V
7541 0 R
-63 0 V
-7625 0 R
(18000) Rshow
798 2207 M
63 0 V
7541 0 R
-63 0 V
-7625 0 R
(20000) Rshow
798 2405 M
63 0 V
7541 0 R
-63 0 V
-7625 0 R
(22000) Rshow
798 2604 M
63 0 V
7541 0 R
-63 0 V
-7625 0 R
(24000) Rshow
801 420 M
0 63 V
0 2121 R
0 -63 V
801 280 M
(07/01) Cshow
1079 420 M
0 31 V
0 2153 R
0 -31 V
1357 420 M
0 31 V
0 2153 R
0 -31 V
1641 420 M
0 63 V
0 2121 R
0 -63 V
0 -2261 R
(08/01) Cshow
1919 420 M
0 31 V
0 2153 R
0 -31 V
2196 420 M
0 31 V
0 2153 R
0 -31 V
2522 420 M
0 63 V
0 2121 R
0 -63 V
0 -2261 R
(09/01) Cshow
2800 420 M
0 31 V
0 2153 R
0 -31 V
3078 420 M
0 31 V
0 2153 R
0 -31 V
3334 420 M
0 63 V
0 2121 R
0 -63 V
0 -2261 R
(10/01) Cshow
3612 420 M
0 31 V
0 2153 R
0 -31 V
3890 420 M
0 31 V
0 2153 R
0 -31 V
4216 420 M
0 63 V
0 2121 R
0 -63 V
0 -2261 R
(11/01) Cshow
4493 420 M
0 31 V
0 2153 R
0 -31 V
4771 420 M
0 31 V
0 2153 R
0 -31 V
5021 420 M
0 63 V
0 2121 R
0 -63 V
0 -2261 R
(11/01) Cshow
5298 420 M
0 31 V
0 2153 R
0 -31 V
5576 420 M
0 31 V
0 2153 R
0 -31 V
5895 420 M
0 63 V
0 2121 R
0 -63 V
0 -2261 R
(01/02) Cshow
6173 420 M
0 31 V
0 2153 R
0 -31 V
6450 420 M
0 31 V
0 2153 R
0 -31 V
6769 420 M
0 63 V
0 2121 R
0 -63 V
0 -2261 R
(02/02) Cshow
7047 420 M
0 31 V
0 2153 R
0 -31 V
7325 420 M
0 31 V
0 2153 R
0 -31 V
7533 420 M
0 63 V
0 2121 R
0 -63 V
0 -2261 R
(03/02) Cshow
7810 420 M
0 31 V
0 2153 R
0 -31 V
8088 420 M
0 31 V
0 2153 R
0 -31 V
8407 420 M
0 63 V
0 2121 R
0 -63 V
0 -2261 R
(04/02) Cshow
1.000 UL
LTb
798 420 M
7604 0 V
0 2184 V
-7604 0 V
798 420 L
140 1512 M
currentpoint gsave translate 90 rotate 0 0 M
(Number of Lines) Cshow
grestore
4600 70 M
(Date) Cshow
4600 2814 M
(SESC) Cshow
1.000 UP
1.000 UL
LT0
1132 534 M
0 44 V
0 70 V
2 0 V
0 1 V
2 -1 V
1 6 V
218 61 V
0 -1 V
0 -4 V
83 -9 V
0 13 V
50 1 V
1 0 V
3 0 V
3 1 V
1 5 V
32 0 V
34 -1 V
82 -2 V
0 17 V
334 -2 V
0 14 V
39 0 V
138 39 V
0 1 V
28 2 V
56 7 V
1168 38 V
0 6 V
358 13 V
63 17 V
0 23 V
280 11 V
0 34 V
0 3 V
106 8 V
5 0 V
43 4 V
0 3 V
316 -2 V
0 6 V
1 8 V
7 0 V
1 0 V
107 8 V
0 11 V
0 21 V
31 4 V
0 -15 V
112 58 V
0 28 V
0 30 V
107 27 V
0 35 V
0 -17 V
0 19 V
31 18 V
267 0 V
2 0 V
0 3 V
3 0 V
0 8 V
0 4 V
2 0 V
0 1 V
1 0 V
28 1 V
0 1 V
30 9 V
0 -5 V
0 9 V
17 0 V
0 3 V
0 5 V
1 3 V
24 -2 V
0 166 V
0 156 V
0 -3 V
0 3 V
32 0 V
4 0 V
0 21 V
1 -5 V
16 0 V
6 -50 V
0 -15 V
0 9 V
3 12 V
3 3 V
0 5 V
3 12 V
0 -2 V
1 0 V
20 -7 V
0 3 V
27 1 V
3 5 V
0 1 V
3 -2 V
0 2 V
16 -5 V
0 -61 V
2 -2 V
3 1 V
0 7 V
0 2 V
9 3 V
0 2 V
10 11 V
4 1 V
3 0 V
2 0 V
1 -2 V
0 -3 V
1 -1 V
8 4 V
0 15 V
1 1 V
22 -1 V
0 -2 V
1 -3 V
0 7 V
1 2 V
13 5 V
2 10 V
10 0 V
0 4 V
3 0 V
23 -2 V
21 1 V
495 3 V
0 8 V
0 33 V
0 10 V
0 3 V
0 1 V
31 -1 V
139 1 V
0 4 V
0 7 V
0 2 V
3 0 V
27 0 V
21 0 V
1 0 V
0 1 V
1 0 V
0 9 V
2 1 V
0 5 V
1 0 V
3 0 V
0 1 V
4 0 V
22 7 V
0 3 V
4 1 V
1 1 V
1 0 V
0 3 V
6 3 V
0 -2 V
46 -11 V
0 13 V
0 13 V
24 0 V
0 1 V
1 0 V
0 1 V
0 3 V
1 16 V
4 -1 V
0 3 V
22 0 V
34 13 V
0 14 V
2 14 V
0 7 V
1 4 V
1 0 V
0 2 V
19 3 V
0 1 V
2 1 V
0 5 V
7 -20 V
25 0 V
3 3 V
0 27 V
0 2 V
2 -2 V
22 5 V
1 5 V
20 0 V
1 7 V
5 0 V
59 14 V
13 11 V
40 15 V
0 -5 V
1 0 V
25 0 V
0 11 V
0 3 V
0 3 V
29 -14 V
1 5 V
1 1 V
22 6 V
1 0 V
4 0 V
1 0 V
2 -8 V
2 16 V
0 6 V
0 -1 V
18 -1 V
3 0 V
0 -1 V
2 4 V
26 -17 V
0 4 V
17 0 V
14 5 V
0 -10 V
0 48 V
12 8 V
105 0 V
1 39 V
0 32 V
13 0 V
34 1 V
17 0 V
11 -8 V
0 -7 V
0 -1 V
3 13 V
47 1 V
2 3 V
24 3 V
2 0 V
0 1 V
2 0 V
1 0 V
0 5 V
25 5 V
0 -2 V
2 1 V
2 0 V
5 1 V
0 2 V
26 16 V
0 10 V
25 10 V
0 9 V
4 -1 V
23 2 V
0 2 V
2 38 V
0 -2 V
0 -1 V
1 0 V
1 0 V
20 2 V
2 4 V
5 1 V
18 0 V
24 3 V
0 1 V
110 103 V
0 18 V
10 37 V
0 6 V
2 1 V
24 20 V
0 16 V
2 0 V
5 9 V
0 2 V
0 1 V
2 -1 V
3 -6 V
42 1 V
29 0 V
0 29 V
24 0 V
1 8 V
4 14 V
25 0 V
0 1 V
7 0 V
2 6 V
22 0 V
0 9 V
0 9 V
5 5 V
83 9 V
0 1 V
51 1 V
3 13 V
3 0 V
25 -9 V
0 5 V
31 2 V
17 1 V
8 1 V
78 16 V
55 0 V
26 8 V
54 23 V
0 -66 V
5 -1 V
6 0 V
1 3 V
0 -13 V
0 14 V
0 1 V
0 3 V
1132 534 Pls
1132 578 Pls
1132 648 Pls
1134 648 Pls
1134 649 Pls
1134 649 Pls
1136 648 Pls
1137 654 Pls
1355 715 Pls
1355 714 Pls
1355 710 Pls
1438 701 Pls
1438 714 Pls
1488 715 Pls
1489 715 Pls
1492 715 Pls
1495 716 Pls
1496 721 Pls
1528 721 Pls
1562 720 Pls
1644 718 Pls
1644 735 Pls
1978 733 Pls
1978 747 Pls
2017 747 Pls
2155 786 Pls
2155 787 Pls
2183 789 Pls
2239 796 Pls
3407 834 Pls
3407 840 Pls
3765 853 Pls
3828 870 Pls
3828 893 Pls
4108 904 Pls
4108 938 Pls
4108 941 Pls
4214 949 Pls
4219 949 Pls
4262 953 Pls
4262 956 Pls
4578 954 Pls
4578 960 Pls
4579 968 Pls
4586 968 Pls
4587 968 Pls
4694 976 Pls
4694 987 Pls
4694 1008 Pls
4725 1012 Pls
4725 997 Pls
4837 1055 Pls
4837 1083 Pls
4837 1113 Pls
4944 1140 Pls
4944 1175 Pls
4944 1158 Pls
4944 1177 Pls
4975 1195 Pls
4975 1195 Pls
5242 1195 Pls
5242 1195 Pls
5244 1195 Pls
5244 1198 Pls
5247 1198 Pls
5247 1206 Pls
5247 1206 Pls
5247 1206 Pls
5247 1210 Pls
5247 1210 Pls
5249 1210 Pls
5249 1211 Pls
5250 1211 Pls
5278 1212 Pls
5278 1213 Pls
5308 1222 Pls
5308 1217 Pls
5308 1217 Pls
5308 1226 Pls
5325 1226 Pls
5325 1229 Pls
5325 1234 Pls
5325 1234 Pls
5326 1237 Pls
5350 1235 Pls
5350 1235 Pls
5350 1401 Pls
5350 1557 Pls
5350 1554 Pls
5350 1557 Pls
5382 1557 Pls
5386 1557 Pls
5386 1557 Pls
5386 1578 Pls
5387 1573 Pls
5387 1573 Pls
5403 1573 Pls
5409 1523 Pls
5409 1508 Pls
5409 1517 Pls
5412 1529 Pls
5412 1529 Pls
5415 1532 Pls
5415 1537 Pls
5418 1549 Pls
5418 1547 Pls
5419 1547 Pls
5439 1540 Pls
5439 1543 Pls
5466 1544 Pls
5466 1544 Pls
5469 1549 Pls
5469 1549 Pls
5469 1550 Pls
5472 1548 Pls
5472 1550 Pls
5488 1545 Pls
5488 1484 Pls
5490 1482 Pls
5493 1483 Pls
5493 1490 Pls
5493 1492 Pls
5502 1495 Pls
5502 1497 Pls
5512 1508 Pls
5516 1509 Pls
5519 1509 Pls
5521 1509 Pls
5522 1507 Pls
5522 1504 Pls
5523 1503 Pls
5531 1507 Pls
5531 1522 Pls
5532 1523 Pls
5554 1522 Pls
5554 1520 Pls
5554 1520 Pls
5555 1517 Pls
5555 1524 Pls
5556 1526 Pls
5569 1531 Pls
5571 1541 Pls
5581 1541 Pls
5581 1545 Pls
5584 1545 Pls
5607 1543 Pls
5628 1544 Pls
6123 1547 Pls
6123 1555 Pls
6123 1588 Pls
6123 1588 Pls
6123 1598 Pls
6123 1601 Pls
6123 1602 Pls
6123 1602 Pls
6154 1601 Pls
6293 1602 Pls
6293 1602 Pls
6293 1606 Pls
6293 1613 Pls
6293 1615 Pls
6296 1615 Pls
6323 1615 Pls
6344 1615 Pls
6344 1615 Pls
6345 1615 Pls
6345 1616 Pls
6346 1616 Pls
6346 1625 Pls
6348 1626 Pls
6348 1631 Pls
6348 1631 Pls
6349 1631 Pls
6352 1631 Pls
6352 1632 Pls
6356 1632 Pls
6378 1639 Pls
6378 1642 Pls
6382 1643 Pls
6383 1644 Pls
6384 1644 Pls
6384 1647 Pls
6390 1650 Pls
6390 1648 Pls
6436 1637 Pls
6436 1650 Pls
6436 1663 Pls
6460 1663 Pls
6460 1663 Pls
6460 1664 Pls
6461 1664 Pls
6461 1665 Pls
6461 1668 Pls
6462 1684 Pls
6466 1683 Pls
6466 1686 Pls
6488 1686 Pls
6522 1699 Pls
6522 1713 Pls
6524 1727 Pls
6524 1734 Pls
6525 1738 Pls
6526 1738 Pls
6526 1740 Pls
6545 1743 Pls
6545 1744 Pls
6547 1745 Pls
6547 1750 Pls
6554 1730 Pls
6579 1730 Pls
6582 1733 Pls
6582 1760 Pls
6582 1762 Pls
6582 1762 Pls
6584 1760 Pls
6606 1765 Pls
6607 1770 Pls
6627 1770 Pls
6628 1777 Pls
6633 1777 Pls
6692 1791 Pls
6705 1802 Pls
6745 1817 Pls
6745 1812 Pls
6746 1812 Pls
6771 1812 Pls
6771 1823 Pls
6771 1826 Pls
6771 1829 Pls
6800 1815 Pls
6800 1815 Pls
6801 1820 Pls
6802 1821 Pls
6824 1827 Pls
6824 1827 Pls
6825 1827 Pls
6829 1827 Pls
6829 1827 Pls
6830 1827 Pls
6832 1819 Pls
6834 1835 Pls
6834 1841 Pls
6834 1840 Pls
6852 1839 Pls
6852 1839 Pls
6855 1839 Pls
6855 1839 Pls
6855 1838 Pls
6857 1842 Pls
6883 1825 Pls
6883 1829 Pls
6900 1829 Pls
6900 1829 Pls
6900 1829 Pls
6914 1834 Pls
6914 1824 Pls
6914 1872 Pls
6926 1880 Pls
6926 1880 Pls
7031 1880 Pls
7031 1880 Pls
7031 1880 Pls
7032 1919 Pls
7032 1951 Pls
7032 1951 Pls
7045 1951 Pls
7045 1951 Pls
7079 1952 Pls
7096 1952 Pls
7107 1944 Pls
7107 1937 Pls
7107 1936 Pls
7110 1949 Pls
7110 1949 Pls
7110 1949 Pls
7157 1950 Pls
7159 1953 Pls
7183 1956 Pls
7185 1956 Pls
7185 1957 Pls
7187 1957 Pls
7188 1957 Pls
7188 1962 Pls
7213 1967 Pls
7213 1965 Pls
7215 1966 Pls
7217 1966 Pls
7217 1966 Pls
7222 1967 Pls
7222 1969 Pls
7248 1985 Pls
7248 1995 Pls
7273 2005 Pls
7273 2014 Pls
7277 2013 Pls
7300 2015 Pls
7300 2017 Pls
7302 2055 Pls
7302 2053 Pls
7302 2053 Pls
7302 2052 Pls
7303 2052 Pls
7304 2052 Pls
7324 2054 Pls
7326 2058 Pls
7331 2059 Pls
7349 2059 Pls
7349 2059 Pls
7373 2062 Pls
7373 2063 Pls
7483 2166 Pls
7483 2184 Pls
7493 2221 Pls
7493 2227 Pls
7495 2228 Pls
7495 2228 Pls
7519 2248 Pls
7519 2264 Pls
7521 2264 Pls
7526 2273 Pls
7526 2275 Pls
7526 2276 Pls
7528 2275 Pls
7531 2269 Pls
7573 2270 Pls
7602 2270 Pls
7602 2299 Pls
7602 2299 Pls
7626 2299 Pls
7627 2307 Pls
7631 2321 Pls
7631 2321 Pls
7656 2321 Pls
7656 2322 Pls
7663 2322 Pls
7665 2328 Pls
7687 2328 Pls
7687 2337 Pls
7687 2346 Pls
7692 2351 Pls
7692 2351 Pls
7775 2360 Pls
7775 2361 Pls
7826 2362 Pls
7829 2375 Pls
7832 2375 Pls
7832 2375 Pls
7857 2366 Pls
7857 2371 Pls
7888 2373 Pls
7905 2374 Pls
7913 2375 Pls
7991 2391 Pls
8046 2391 Pls
8072 2399 Pls
8126 2422 Pls
8126 2356 Pls
8131 2355 Pls
8137 2355 Pls
8138 2358 Pls
8138 2345 Pls
8138 2359 Pls
8138 2360 Pls
8138 2363 Pls
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times-Roman

%%EndDocument
 @endspecial 1782 x @beginspecial 50 @llx 50 @lly 482
@urx 201 @ury 2880 @rwi @setspecial
%%BeginDocument: figs/lmint.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: lmint.eps
%%Creator: gnuplot 3.7 patchlevel 1
%%CreationDate: Thu Feb 28 23:41:18 2002
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 482 201
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -46 def
/dl {10 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth } def
/AL { stroke userlinewidth 2 div setlinewidth } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Times-Roman) findfont 140 scalefont setfont
1.000 UL
LTb
798 420 M
63 0 V
7541 0 R
-63 0 V
714 420 M
(23000) Rshow
798 638 M
63 0 V
7541 0 R
-63 0 V
714 638 M
(24000) Rshow
798 857 M
63 0 V
7541 0 R
-63 0 V
714 857 M
(25000) Rshow
798 1075 M
63 0 V
7541 0 R
-63 0 V
-7625 0 R
(26000) Rshow
798 1294 M
63 0 V
7541 0 R
-63 0 V
-7625 0 R
(27000) Rshow
798 1512 M
63 0 V
7541 0 R
-63 0 V
-7625 0 R
(28000) Rshow
798 1730 M
63 0 V
7541 0 R
-63 0 V
-7625 0 R
(29000) Rshow
798 1949 M
63 0 V
7541 0 R
-63 0 V
-7625 0 R
(30000) Rshow
798 2167 M
63 0 V
7541 0 R
-63 0 V
-7625 0 R
(31000) Rshow
798 2386 M
63 0 V
7541 0 R
-63 0 V
-7625 0 R
(32000) Rshow
798 2604 M
63 0 V
7541 0 R
-63 0 V
-7625 0 R
(33000) Rshow
798 420 M
0 63 V
0 2121 R
0 -63 V
798 280 M
(01/00) Cshow
1080 420 M
0 31 V
0 2153 R
0 -31 V
1362 420 M
0 31 V
0 2153 R
0 -31 V
1642 420 M
0 63 V
0 2121 R
0 -63 V
0 -2261 R
(04/00) Cshow
1927 420 M
0 31 V
0 2153 R
0 -31 V
2204 420 M
0 31 V
0 2153 R
0 -31 V
2491 420 M
0 63 V
0 2121 R
0 -63 V
0 -2261 R
(07/00) Cshow
2773 420 M
0 31 V
0 2153 R
0 -31 V
3056 420 M
0 31 V
0 2153 R
0 -31 V
3342 420 M
0 63 V
0 2121 R
0 -63 V
0 -2261 R
(10/00) Cshow
3625 420 M
0 31 V
0 2153 R
0 -31 V
3907 420 M
0 31 V
0 2153 R
0 -31 V
4187 420 M
0 63 V
0 2121 R
0 -63 V
0 -2261 R
(01/01) Cshow
4471 420 M
0 31 V
0 2153 R
0 -31 V
4749 420 M
0 31 V
0 2153 R
0 -31 V
5022 420 M
0 63 V
0 2121 R
0 -63 V
0 -2261 R
(04/01) Cshow
5304 420 M
0 31 V
0 2153 R
0 -31 V
5586 420 M
0 31 V
0 2153 R
0 -31 V
5868 420 M
0 63 V
0 2121 R
0 -63 V
0 -2261 R
(07/01) Cshow
6151 420 M
0 31 V
0 2153 R
0 -31 V
6433 420 M
0 31 V
0 2153 R
0 -31 V
6713 420 M
0 63 V
0 2121 R
0 -63 V
0 -2261 R
(10/01) Cshow
6997 420 M
0 31 V
0 2153 R
0 -31 V
7275 420 M
0 31 V
0 2153 R
0 -31 V
7566 420 M
0 63 V
0 2121 R
0 -63 V
0 -2261 R
(01/02) Cshow
7849 420 M
0 31 V
0 2153 R
0 -31 V
8131 420 M
0 31 V
0 2153 R
0 -31 V
8404 420 M
0 63 V
0 2121 R
0 -63 V
0 -2261 R
(04/02) Cshow
1.000 UL
LTb
798 420 M
7604 0 V
0 2184 V
-7604 0 V
798 420 L
140 1512 M
currentpoint gsave translate 90 rotate 0 0 M
(Number of Lines) Cshow
grestore
4600 70 M
(Date) Cshow
4600 2814 M
(MINT) Cshow
1.000 UP
1.000 UL
LT0
1484 2401 M
52 4 V
3 11 V
8 0 V
90 2 V
0 2 V
243 23 V
9 0 V
137 4 V
204 1 V
365 1 V
209 1 V
420 9 V
9 15 V
54 1 V
7 0 V
0 -4 V
158 0 V
18 0 V
585 1 V
0 -3 V
0 1 V
0 7 V
0 1 V
0 2 V
0 1 V
0 59 V
0 -11 V
0 -74 V
0 64 V
10 4 V
0 16 V
6 4 V
0 18 V
315 6 V
217 0 V
378 -549 V
0 -1491 V
156 25 V
16 15 V
1 18 V
0 36 V
0 -36 V
0 6 V
0 37 V
0 29 V
1 0 V
0 4 V
18 1 V
0 1 V
120 19 V
0 1 V
0 3 V
14 1 V
3 13 V
9 10 V
11 0 V
23 5 V
0 7 V
0 3 V
1 5 V
7 1 V
0 -1 V
53 1 V
18 19 V
18 8 V
76 0 V
452 1 V
0 39 V
0 17 V
0 1 V
0 1 V
1 3 V
0 6 V
0 31 V
0 37 V
120 1 V
175 1 V
46 20 V
0 10 V
27 5 V
0 1 V
1 0 V
661 1 V
96 2 V
245 41 V
303 1 V
66 -10 V
9 2 V
37 6 V
11 0 V
10 1 V
9 0 V
81 0 V
30 -3 V
39 10 V
43 5 V
9 0 V
9 0 V
0 140 V
1 30 V
10 1 V
9 16 V
1 0 V
7 2 V
9 8 V
18 0 V
1484 2401 Pls
1536 2405 Pls
1539 2416 Pls
1547 2416 Pls
1637 2418 Pls
1637 2420 Pls
1880 2443 Pls
1889 2443 Pls
2026 2447 Pls
2230 2448 Pls
2595 2449 Pls
2804 2450 Pls
3224 2459 Pls
3233 2474 Pls
3287 2475 Pls
3287 2475 Pls
3294 2475 Pls
3294 2471 Pls
3452 2471 Pls
3452 2471 Pls
3452 2471 Pls
3452 2471 Pls
3470 2471 Pls
3470 2471 Pls
4055 2472 Pls
4055 2469 Pls
4055 2470 Pls
4055 2477 Pls
4055 2478 Pls
4055 2480 Pls
4055 2481 Pls
4055 2540 Pls
4055 2540 Pls
4055 2529 Pls
4055 2455 Pls
4055 2519 Pls
4065 2523 Pls
4065 2539 Pls
4071 2543 Pls
4071 2561 Pls
4071 2561 Pls
4386 2567 Pls
4603 2567 Pls
4981 2018 Pls
4981 527 Pls
5137 552 Pls
5153 567 Pls
5154 585 Pls
5154 621 Pls
5154 585 Pls
5154 591 Pls
5154 628 Pls
5154 657 Pls
5154 657 Pls
5155 657 Pls
5155 661 Pls
5155 661 Pls
5173 662 Pls
5173 663 Pls
5293 682 Pls
5293 683 Pls
5293 686 Pls
5307 687 Pls
5310 700 Pls
5319 710 Pls
5330 710 Pls
5353 715 Pls
5353 722 Pls
5353 725 Pls
5354 730 Pls
5361 731 Pls
5361 730 Pls
5361 730 Pls
5414 731 Pls
5432 750 Pls
5450 758 Pls
5526 758 Pls
5978 759 Pls
5978 798 Pls
5978 798 Pls
5978 815 Pls
5978 816 Pls
5978 817 Pls
5978 817 Pls
5979 820 Pls
5979 826 Pls
5979 857 Pls
5979 894 Pls
6099 895 Pls
6274 896 Pls
6320 916 Pls
6320 926 Pls
6347 931 Pls
6347 932 Pls
6347 932 Pls
6348 932 Pls
7009 933 Pls
7105 935 Pls
7350 976 Pls
7653 977 Pls
7653 977 Pls
7719 967 Pls
7728 969 Pls
7765 975 Pls
7776 975 Pls
7776 975 Pls
7786 976 Pls
7795 976 Pls
7876 976 Pls
7906 973 Pls
7906 973 Pls
7945 983 Pls
7988 988 Pls
7997 988 Pls
8006 988 Pls
8006 1128 Pls
8006 1128 Pls
8006 1128 Pls
8006 1128 Pls
8007 1158 Pls
8017 1159 Pls
8026 1175 Pls
8027 1175 Pls
8034 1177 Pls
8043 1185 Pls
8061 1185 Pls
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times-Roman

%%EndDocument
 @endspecial 10245 5222 a
 0 setgray
 10245 5222 a 4500 6000 a
 tx@Dict begin -90 Rot  end
 4500
6000 a eop
%%Page: 9 9
9 8 bop 4500 6000 a
 tx@Dict begin 90 Rot  end
 4500 6000 a 5981 1792 a @beginspecial
-168 @llx 371 @lly 782 @urx 421 @ury 2834 @rwi 283 @rhi
@setspecial
%%BeginDocument: barre-rico.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /ufs/goualard/TEMP/barre_hor.ps
%%Creator: XV Version 3.10a  Rev: 12/29/94 (PNG patch 1.2)  -  by John Bradley
%%BoundingBox: -168 371 782 421
%%Pages: 1
%%DocumentFonts:
%%EndComments
%%EndProlog

%%Page: 1 1

% remember original state
/origstate save def

% build a temporary dictionary
20 dict begin

% define space for color conversions
/grays 950 string def  % space for gray scale line
/npixls 0 def
/rgbindx 0 def

% lower left corner
-168 371 translate

% size of image (on paper, in 1/72inch coords)
949.96800 49.96800 scale

% define 'colorimage' if it isn't defined
%   ('colortogray' and 'mergeprocs' come from xwd2ps
%     via xgrab)
/colorimage where   % do we know about 'colorimage'?
  { pop }           % yes: pop off the 'dict' returned
  {                 % no:  define one
    /colortogray {  % define an RGB->I function
      /rgbdata exch store    % call input 'rgbdata'
      rgbdata length 3 idiv
      /npixls exch store
      /rgbindx 0 store
      0 1 npixls 1 sub {
        grays exch
        rgbdata rgbindx       get 20 mul    % Red
        rgbdata rgbindx 1 add get 32 mul    % Green
        rgbdata rgbindx 2 add get 12 mul    % Blue
        add add 64 idiv      % I = .5G + .31R + .18B
        put
        /rgbindx rgbindx 3 add store
      } for
      grays 0 npixls getinterval
    } bind def

    % Utility procedure for colorimage operator.
    % This procedure takes two procedures off the
    % stack and merges them into a single procedure.

    /mergeprocs { % def
      dup length
      3 -1 roll
      dup
      length
      dup
      5 1 roll
      3 -1 roll
      add
      array cvx
      dup
      3 -1 roll
      0 exch
      putinterval
      dup
      4 2 roll
      putinterval
    } bind def

    /colorimage { % def
      pop pop     % remove 'false 3' operands
      {colortogray} mergeprocs
      image
    } bind def
  } ifelse          % end of 'false' case



% define the colormap
/cmap 117 string def


% load up the colormap
currentfile cmap readhexstring
bcfe04 dcfe84 ccfe44 ecfec4 c4fe24 d4fe64 f4fee4 e4fea4 bcfe14 ccfe54 
f4fed4 c4fe34 d4fe74 fcfef4 ecfeb4 e4fe94 f4fecc fcfee4 ecfeac c4fe1c 
d4fe54 ccfe3c dcfe74 bcfe0c dcfe8c ccfe4c ecfecc c4fe2c d4fe6c e4feac 
bcfe1c f4fedc c4fe3c fcfefc ecfebc e4fe9c fcfeec d4fe5c dcfe7c 
pop pop   % lose return values from readhexstring


% rlecmapimage expects to have 'w h bits matrix' on stack
/rlecmapimage {
  /buffer 1 string def
  /rgbval 3 string def
  /block  384 string def

  % proc to read a block from file, and return RGB data
  { currentfile buffer readhexstring pop
    /bcount exch 0 get store
    bcount 128 ge
    {  % it's a non-run block
      0 1 bcount 128 sub
      { currentfile buffer readhexstring pop pop

        % look up value in color map
        /rgbval cmap buffer 0 get 3 mul 3 getinterval store

        % and put it in position i*3 in block
        block exch 3 mul rgbval putinterval
      } for
      block  0  bcount 127 sub 3 mul  getinterval
    }

    { % else it's a run block
      currentfile buffer readhexstring pop pop

      % look up value in colormap
      /rgbval cmap buffer 0 get 3 mul 3 getinterval store

      0 1 bcount { block exch 3 mul rgbval putinterval } for

      block 0 bcount 1 add 3 mul getinterval
    } ifelse
  } % end of proc
  false 3 colorimage
} bind def


950 50 8			% dimensions of data
[950 0 0 -50 0 50]		% mapping matrix
rlecmapimage

7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f210221870d1f220e220311212a21
7f217f217f217f217f217f2175218211030e820e220e820e220e860e220e23050b048404
090e24212a21
7f217f217f217f217f217f2171218e110312260b041e131e131e131e131e871e17001702
1d24212c21
7f217f217f217f217f217f216921830d1f220e870e221226200408000b00841702070d21
0521842403100d212321
7f217f217f217f217f217f2121218524220f231f213a218f0d0a220e220e23051b041e13
1e0817000c008408190706210421851103221f0d212521
7f217f217f217f217f217f211e2189240e1c1b17000825242136218a0d1026021b041e13
081700110085172001030d210421840316030d212821
7f217f217f217f217f21342186111a120f070a215721860d1110220e220e860e12182504
17000300821b1f212521851f0e2326230e080e841d010908001100820820090209840c1d
1a06210521841026230d212a21
7f217f217f217f21792186241f10220e220e820e220e820e220e820e220e820e220e820e
220e830e070f01010182070a2117218b0610231c1508001708090a2151218e0d1f101d01
14201b1e131e131e08000700820c0d211021840d100311210921881103220e07050b0800
8400171e081e821e081e851e081e0817001000851e2009181a210b21850d22261d24212c
21
7f217f217f217f21472184241f10220e820e220e820e220e820e220e820e220e820e220e
820e220e810e2283221f0d210e219a241f10070f1c09151e041e131e131e131e131e131e
131e131e131e821e080002008b17081410210d1110220e220e820e220e820e220e010e81
2301880126012616191b08000500820422212f2182240d211921890d0a0e072625150417
00100082201a210921890d1110220e23011620048304051f210421891103231c15131e08
1700190082171e090309820c1a210e21841f0e0a0d212e21
7f217f217f217f213f2190241f100e070f011c1920041e131e081e0882081e0882081e08
82081e0882081e0803088304250a2107218b241f030e12181619151e08001d00811e268c
2614201b041e131e131e131e088108178117000f0082091f211521840d0610220e0f0e88
120f012625020c11211321890d0a22121809040817001300831e050a2105218a0d1f101d
0114201b1e170004008408260e220e860e230c020417001800821e2009020982181a2114
21810d213321
7f211221842422121f217f217f217f211221850d0a220e220e820e220e820e220e820e22
0e010e881d0f1605090b041e178117001a008f1e22210d1110221d0f0116190b041e1781
1700220001171f00820b2221102189111022120f0125151b1e011e81081e821e081e821e
081e821e081e821e081e821e1700030082171c0e110e861d01251b1e170015008220181d
021d81220e020e86070119150417000b0086081e131e08170019008308091d210c21830d
1f24214121
7f210721830d0a220e040e83230504088308052421492185240a22230f01130182070a21
7f2106218c240a03220e220e220e220e1d0f840f01231f217f210a2199240a221d0f0116
191b1e131e131e131e131e131e131e131e17002300810b16871609200413081700490087
171e051d1f10220e0a0e8712232625201b1e178117001b000108011e81081e821e081e82
1e081e821e081e821e081e831e0817000c0085171e201e08000300831720090c840c090b
1b1e871e081e081e0817001f0083081e201e821e20090809820c03210b21860d0a222307
0d210521010d3a21
7f21042188112218141b13081e088108178117000300821b1f2140218b241f100e070f1c
25021b1317811700140083081410217f218c241f10070f05021b04131e131e011e810817
811700010093170207220e220e220e220e220e220e22120f18018301231f216e218c0d0a
22120f0116191b130817004c000117811e208120090509822008002c008308200c188518
0c09021b1e821e081e821e081e821e081e811e08810817811700400081171e871e09181a
061c08000300851e200b1e1700250083171e200983091806211721820d110a010a841d26
1918214421
6c219a1103220e220e220e220e220e220e220e220e220e22120f050b08000d0093091d22
0e220e220e220e220e220e220e2203112127218c241f100e070f0105021b1e08001e0082
0422216a2189241f10220e230f1826018201260182012601890126160509150408170011
0085131e131e131e821e131e831e131e0882081700020083082524215e2183240a220e82
0e220e8b0e22120f011605190b1308178117004d008817081e2009181d06210821810900
22000408071e0117510085080b09181a21022182060900040082081700120082171e000f
00011e83091806210d21821a031d8e1d221d221d0e22030a110d240d240d810d21012182
2406214521
68219711030f252004131e131e131e131e131e131e131e131e131e821e08001100011e83
131e131e821e131e821e131e821e131e811e1383131c1f211e218d0d1110221d0f260519
0b041e17002500821b0c0103018426161c05250b258405160f1d0e210e82070f26012681
0126822601268426010f1f2117218a241f100e070f1609150408820817003900821b1f21
56218a0a0f0c2514190215041e0801088217081701173400011781001781170016000117
011e85200c181d06210e218105000d0083171e08000c00011781081e041e020802171e00
82081e208120090d0982201e001b00850820090c1a210721821817000b008b081e200920
1920192009200986090c1d1a060900030083171e20090209010c83181a0621082187060a
0e1d071d0e1d821d0f1802180107841d220a24215221
1d21830d1f220e820e220e820e220e820e220e860e220e221024212321840d10230f010a
01852616091b08003b00820812210421830d1f102281220e820e220e820e220e820e220e
820e220e820e220e890e1d0f011609201b1317811700470081081e821e081e821e081e82
1e081e821e081e821e081e821e081e821e081e821e081e821e081e821e081e841e081e08
000a0083170b260182012601820126018201260182012601820126018a01260126160525
19151b088108004200820c0d21032196240a03220e220e220e220e220e220e220e220e22
0e1d0f810f01150182231f210921840d0610220e0e0e8418140417002100821720090409
822017002c008317081e208520090c1d1a211621821a201e811e20832009200982092009
86092009181a0c003400011e8520090c181a211221831a0c200982092009820920091109
830c1a06210a2182062000080087082009181a0621060206812106810621052183061d0c
0984090c181d1a011a02060e21820d062482240d216021
1c21970d0702041e131e131e131e131e131e131e0420050f100d211f21840d231b17004d
00a008182212230f011609151b131e131e131e131e131e131e131e131e131e130817001b
0083170017007f0041008c201a241f10070f1c021b04131e821e131e821e131e821e131e
821e131e011e810817811700160001178205112101218a111022120f181614151b1e821e
081e821e081e821e081e821e081e821e0817811700250082090621032182060900260088
17081e20090c1d1a212e2183062017001f008317081e208120090a09830c181a21442183
240917008300081e2001208409181a0621142183061a1d1a841a062106217721
1b21830d071b000f008517080b05230e8f0e220e220e220e220e220e220e220e22842210
110d210821830d231e004f00841e041e08178117007f0065008117000e000108011e8720
0c16090b1e08003000880401181614201b1e178117003a00822006210421820620001f00
81171e861e20090c1d1a213521820609001700011788081e20090c181a0621492184060a
101a1086101a10110d210d880d061a180c09181a0601067f211b21
1b21820a1900140081081e821e131e821e131e821e131e821e131e8d1e131e13040b1925
1812221f0d210321820a20007f007f0033000108160081081e031e820817003600811700
40008308091a2106218203091e031e8120091609830c1d1a213d21821f01091409840c18
1a06214e21010d0124010685240624060d210321850a26012206217f211f21
1b21831020170029008c1708040b021925051626051e007f002f000d1782081e20812009
1e0982201e00370081171e811e208120090c0982181d0683061808007900011781081e07
1e8120090e09820c1d217f216721820611217f212221
1b21830d0e0c090c0982201e004d00820817002a000217011e8120090c09811e00380082
17081e851e090c181a068306210621822106218221062182210621822106212521821a0c
09010982201e002700011781081e811e2085200c181d06211321821a200022000117011e
82091e0035008317081e20812009090982201e0002008608091a062106217f215521810d
217f215321
2d21851a0c201e17004300850820090c1a068206200022008317081e208620090c181d1a
210f21821d08002e000117021e0120840c181a06214221821d0c09250983181d06211c21
821a20001c008817081e2009181d062101218109002d0081171e871e20090c181a06210e
21851d09200c1a217f215a2182110d215321810d217d21
30218306180c090f0983201e08002500811e09820920090109830c1a062104218203201e
081e01201309810c1d821d1a21182182062000260081171e011e8620090c181a06217f21
1521830d1d0c091909840c181d06210721821a191e091e83200920098209200982092009
8209200982092009820920098209200982092009820920098209200985090c181a06217f
217621810d215121860d1026142510217c21
462185061d0c2017002000820906214e21820618098209200981092082201e178217081e
011e01201309840c181a06217f217f217f217f214421810d2401248306240d217d21
4a21841d201e0800150081081e041e820906217f217f217f217f217f217f214521
4e2185061a18201e000b0085171e091d06217f217f217f217f217f217f214e21
5221821a0c090909830c1d06217f217f217f217f217f217f215121
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521

%
% Compression made this file 2.88% of the uncompressed size.
%


showpage

% stop using temporary dictionary
end

% restore original state
origstate restore

%%Trailer

%%EndDocument
 @endspecial 5001 5222 a @beginspecial @setspecial
 tx@Dict begin STP newpath 1.0 SLW 0.5451 0.39608 0.03137 setrgbcolor
 /ArrowA { moveto } def /ArrowB { } def [ 341.43292 -28.45274 -22.76227
-28.45274  /Lineto /lineto load def false Line  gsave 1.0 SLW 0.5451
0.39608 0.03137 setrgbcolor 0 setlinecap stroke  grestore end
 
@endspecial
621 x Fi(SESC)20 b(\(IA)n(COMA)e(g)o(roup\))2960 b(Joe)20
b(Renau,)h(Basilio)e(F)m(r)o(aguela,)h(and)g(Liu)g(W)n(ei)39
b(\226)20 b(page)40 b(9/23)4266 1057 y
 gsave currentpoint currentpoint translate 270 neg rotate neg exch
neg exch translate
 4266 1057 a @beginspecial
276 @llx 366 @lly 336 @urx 426 @ury 141 @rwi 141 @rhi
@setspecial
%%BeginDocument: angleHG.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/rico/texte/texstyle/Prosper-beta/img/angleHG.ps
%%Creator: XV Version 3.10a  Rev: 12/29/94 (PNG patch 1.2)  -  by John Bradley
%%BoundingBox: 276 366 336 426
%%Pages: 1
%%DocumentFonts:
%%EndComments
%%EndProlog

%%Page: 1 1

% remember original state
/origstate save def

% build a temporary dictionary
20 dict begin

% define string to hold a scanline's worth of data
/pix 180 string def

% define space for color conversions
/grays 60 string def  % space for gray scale line
/npixls 0 def
/rgbindx 0 def

% print in landscape mode
90 rotate 0 -612 translate

% lower left corner
366 276 translate

% size of image (on paper, in 1/72inch coords)
59.97600 59.97600 scale

% define 'colorimage' if it isn't defined
%   ('colortogray' and 'mergeprocs' come from xwd2ps
%     via xgrab)
/colorimage where   % do we know about 'colorimage'?
  { pop }           % yes: pop off the 'dict' returned
  {                 % no:  define one
    /colortogray {  % define an RGB->I function
      /rgbdata exch store    % call input 'rgbdata'
      rgbdata length 3 idiv
      /npixls exch store
      /rgbindx 0 store
      0 1 npixls 1 sub {
        grays exch
        rgbdata rgbindx       get 20 mul    % Red
        rgbdata rgbindx 1 add get 32 mul    % Green
        rgbdata rgbindx 2 add get 12 mul    % Blue
        add add 64 idiv      % I = .5G + .31R + .18B
        put
        /rgbindx rgbindx 3 add store
      } for
      grays 0 npixls getinterval
    } bind def

    % Utility procedure for colorimage operator.
    % This procedure takes two procedures off the
    % stack and merges them into a single procedure.

    /mergeprocs { % def
      dup length
      3 -1 roll
      dup
      length
      dup
      5 1 roll
      3 -1 roll
      add
      array cvx
      dup
      3 -1 roll
      0 exch
      putinterval
      dup
      4 2 roll
      putinterval
    } bind def

    /colorimage { % def
      pop pop     % remove 'false 3' operands
      {colortogray} mergeprocs
      image
    } bind def
  } ifelse          % end of 'false' case



60 60 8			% dimensions of data
[60 0 0 -60 0 60]		% mapping matrix
{currentfile pix readhexstring pop}
false 3 colorimage

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffafee3effeaaffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffafee3e3fe64ffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffe3fe64fafee3ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffe9fe88f1feb3ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffe8fe86dffe55fefefeffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffebfe96dafe37fefefeffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffedfe9edefe48f7fed5ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffedfe9ee2fe60eefea5f5fecaecfe95ecfe97ecfe98
ecfe99ecfe9bf6feceffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffeffeaadffe4fe0fe55dcfe3f
dbfe3cdbfe3ddbfe3dddfe48defe4cdcfe43d9fe32d6fe20e2fe5fe3fe67defe4ddefe4d
defe4edefe4edbfe3bdbfe3cdcfe3ddcfe3fdcfe40dcfe42ddfe43ddfe45ddfe46ddfe48
ddfe46e2fe63e5fe72e5fe74e6fe76e6fe77e6fe79e7fe7ae9fe86e8fe85ebfe94ecfe97
ecfe99ecfe9cedfe9eeffeacf2febcf3febef3fec1f4fec4f9fedfffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffeffeaaf1feb3f5fec7e9fe87
e7fe7be7fe7be7fe7be2fe60e1fe5bd6fe1dd8fe2adafe33e1fe5bdffe54defe4edffe50
dffe51dffe53e0fe54ddfe49ddfe4bdefe4cdefe4edefe50dffe52dffe54e5fe73eafe93
e9fe89e6fe7ae4fe6ce4fe6ee8fe84e8fe85e9fe87e9fe8ae8fe84e7fe7ce8fe81e9fe8a
f0feb0f8fedbf9fedff1feb8f1febaeafe8bfbfeeafbfeebfdfef5ffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff5fecddffe52e1fe5df5fec9f5fec9f5fecaf5feca
f5fecbf5feccf5feccf5fecdf6fecef6fecef6fecef6fecff6fed0f6fed1eefea5e9fe8a
f6fed1f7fed7f7fed8f7fed9f6fecdfafee8fcfef1fcfef2fdfef7fcfef3fdfef7fefefc
fefefcfefefdf9fee0f6fecff5feccf4fec2ffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff5fecde3fe64e5fe74ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffdfef5fefefdfefefdfefefcfefefcfffffffefef9
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff5fecde5fe74dffe53ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff6fecee6fe79e5fe6ff8fed8ffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff6fecee6fe7aebfe95effeaaffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff6fecee6fe7aedfe9eeefea2ffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff6fecee6fe7bedfe9eeefea3ffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff6fecfe6fe78ecfe9eeefea5ffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffefefe
fefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff6fed0e2fe63e0fe59dffe55ffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffefefe
fefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffedfe9fe2fe5fd8fe2ad8fe2dffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffecfe9adffe53d6fe1cdefe4cf6fecfffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffedfe9cd8fe2cd6fe20defe4bf6fed0ffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffefefdffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffedfe9dd8fe27d7fe22defe4ef6fed0ffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffedfe9dd7fe26d6fe20e0fe5bf6fed2ffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff3febdd7fe22d7fe22e1fe5ef7fed3ffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff4fec6d6fe20d7fe21e0fe57f7fed4ffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff4fec6d6fe20d6fe1fe0fe59f7fed5ffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff4fec6d6fe1ed6fe1ee5fe73f7fed6ffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff4fec6d6fe1dd9fe32e0fe56ffffffffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff5fecce0fe55defe48e8fe81ffffffffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffbfeede7fe7fe0fe56e9fe85ffffffffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff7fed8e8fe84e7fe7ef1feb4ffffffffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff2feb8edfea0effea6f1feb6ffffffffffffffffff
fffffffefefefefefeffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffefefceffeabf0feafeffea7f2feb7ffffffffffffffffff
fffffffefefefefefefefefeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffefefcf5fecaecfe9de7fe7af8feddffffffffffffffffff
fffffffefefefefefefefefefefefeffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffefefcf5fecce8fe85e8fe80ffffffffffffffffffffffff
fffffffefefefefefefefefeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffff8fedefdfef8fdfefbf3fec0e9fe89ecfe96ffffffffffffffffffffffff
fefefefefefefefefefefefeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffdfef6fefefafefefaf4fec2e9fe89ecfe96ffffffffffffffffffffffff
fefefefefefefefefefefefeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffdfef6fefefefefefdf4fec2e8fe85edfe9dffffffffffffffffffffffff
fefefefefefefefefefefefeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffefef9fefefdfefefce7fe7be5fe76f2feb7ffffffffffffffffffffffff
fffffffffffffefefefefefeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffdfef6fdfefafefefbe2fe65e5fe75f6fed0ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffdfef9fefefce6fe79e6fe77fafee6ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffcfef6fefefbecfe9be7fe7efbfeecffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffdfef5fdfef7f7fed5e9fe8dfcfef2ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffcfeeffbfeebedfea1fdfef7ffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffefefeffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffefefdfbfee9effeabffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffefefefefefeffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffbfeeceffea6ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff9fee3f3fec1ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffeefea2f8fedaffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff1feb2fafee4ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffcfef0fefefaffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff


showpage

% stop using temporary dictionary
end

% restore original state
origstate restore

%%Trailer

%%EndDocument
 @endspecial 4511 1057 a
 currentpoint grestore moveto
 4511 1057 a 4130 5844 a
 currentpoint currentpoint translate 0.76611 0.76611 scale neg exch
neg exch translate
 4130
5844 a 4130 5844 a
 gsave currentpoint currentpoint translate 0 neg rotate neg exch neg
exch translate
 4130 5844 a @beginspecial 0 @llx 0
@lly 37 @urx 42 @ury 370 @rwi @setspecial
%%BeginDocument: figs/uiuc.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: uiuc.eps
%%Creator: fig2dev Version 3.2 Patchlevel 3d
%%CreationDate: Sun Feb 10 22:03:46 2002
%%For: renau@nether.cs.uiuc.edu (Jose Renau)
%%BoundingBox: 0 0 37 42
%%Magnification: 1.0000
%%EndComments
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def
/col32 {0.200 0.200 0.400 srgb} bind def
/col33 {0.800 0.400 0.000 srgb} bind def

end
save
newpath 0 42 moveto 0 0 lineto 37 0 lineto 37 42 lineto closepath clip newpath
-273.7 413.7 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
 0.06000 0.06000 sc
%
% Fig objects follow
%
%  polyline 
% Polyline
n 5070 6872 m 5070 6227 l 4584 6227 l 4584 6872 l
 5070 6872 l  cp gs col32 1.00 shd ef gr 
%  polyline 
% Polyline
15.000 slw
n 5070 6872 m 5070 6227 l 4584 6227 l 4584 6872 l
 5070 6872 l  cp gs col32 s gr 
%  polyline 
% Polyline
0.000 slw
n 5056 6858 m 5056 6243 l 4598 6243 l 4598 6858 l
 5056 6858 l  cp gs col32 1.00 shd ef gr 
%  polyline 
% Polyline
7.500 slw
n 5056 6858 m 5056 6243 l 4598 6243 l 4598 6858 l
 5056 6858 l  cp gs col33 s gr 
%  spline 
% Polyline
2 slj
0.000 slw
n 4944 6783 m 4944 6781 l 4944 6773 l 4944 6759 l 4944 6751 l 4944 6749 l
 4943 6749 l 4935 6748 l 4924 6746 l 4914 6744 l 4906 6742 l
 4900 6741 l 4896 6739 l 4892 6738 l 4887 6735 l 4884 6732 l
 4880 6728 l 4877 6722 l 4875 6716 l 4873 6709 l 4872 6702 l
 4871 6693 l 4870 6683 l 4869 6670 l 4869 6654 l 4868 6637 l
 4868 6621 l 4868 6609 l 4868 6604 l 4868 6603 l 4868 6602 l
 4868 6597 l 4868 6585 l 4868 6567 l 4868 6544 l 4868 6521 l
 4868 6503 l 4868 6491 l 4868 6486 l 4868 6485 l 4868 6483 l
 4868 6474 l 4868 6457 l 4869 6438 l 4869 6420 l 4870 6406 l
 4870 6395 l 4871 6387 l 4873 6381 l 4874 6375 l 4876 6371 l
 4879 6367 l 4882 6365 l 4885 6363 l 4889 6362 l 4892 6361 l
 4898 6359 l 4905 6358 l 4915 6356 l 4925 6354 l 4933 6352 l
 4934 6352 l 4934 6350 l 4934 6343 l 4934 6331 l 4934 6324 l
 4934 6322 l 4933 6322 l 4928 6322 l 4916 6322 l 4896 6322 l
 4869 6322 l 4837 6322 l 4806 6322 l 4779 6322 l 4759 6322 l
 4747 6322 l 4742 6322 l 4741 6322 l 4740 6322 l 4737 6322 l
 4732 6322 l 4729 6322 l 4726 6322 l 4724 6322 l 4721 6323 l
 4718 6324 l 4716 6325 l 4714 6326 l 4712 6327 l 4710 6329 l
 4707 6332 l 4705 6334 l 4703 6336 l 4701 6338 l 4700 6339 l
 4699 6341 l 4698 6342 l 4697 6344 l 4696 6346 l 4696 6347 l
 4695 6349 l 4695 6351 l 4695 6353 l 4694 6356 l 4694 6358 l
 4694 6359 l 4694 6360 l 4694 6362 l 4694 6365 l 4694 6367 l
 4695 6369 l 4695 6370 l 4696 6372 l 4697 6374 l 4697 6375 l
 4698 6377 l 4699 6378 l 4701 6379 l 4702 6381 l 4704 6383 l
 4706 6385 l 4708 6386 l 4709 6388 l 4710 6389 l 4712 6389 l
 4713 6390 l 4715 6391 l 4716 6391 l 4718 6391 l 4720 6391 l
 4721 6391 l 4724 6391 l 4726 6391 l 4727 6391 l 4729 6391 l
 4732 6390 l 4735 6390 l 4737 6389 l 4740 6388 l 4742 6387 l
 4744 6385 l 4747 6383 l 4748 6381 l 4749 6379 l 4750 6376 l
 4751 6372 l 4752 6369 l 4752 6368 l 4752 6366 l 4752 6364 l
 4752 6362 l 4752 6361 l 4752 6359 l 4752 6358 l 4751 6357 l
 4751 6356 l 4750 6355 l 4749 6354 l 4749 6353 l 4748 6352 l
 4747 6351 l 4746 6350 l 4745 6349 l 4744 6348 l 4743 6348 l
 4742 6347 l 4741 6346 l 4740 6346 l 4739 6346 l 4738 6346 l
 4736 6345 l 4735 6345 l 4733 6345 l 4732 6345 l 4730 6345 l
 4729 6345 l 4728 6346 l 4727 6346 l 4725 6346 l 4724 6347 l
 4724 6348 l 4723 6348 l 4722 6349 l 4721 6351 l 4720 6352 l
 4719 6353 l 4718 6354 l 4718 6355 l 4717 6356 l 4717 6357 l
 4717 6358 l 4716 6359 l 4717 6360 l 4717 6361 l 4717 6362 l
 4717 6363 l 4718 6364 l 4718 6365 l 4719 6366 l 4719 6367 l
 4720 6367 l 4720 6368 l 4721 6368 l 4722 6369 l 4723 6369 l
 4723 6368 l 4724 6368 l 4725 6368 l 4726 6367 l 4727 6367 l
 4727 6366 l 4728 6366 l 4728 6365 l 4729 6365 l 4729 6364 l
 4729 6363 l 4729 6362 l 4729 6361 l 4728 6360 l 4728 6359 l
 4729 6359 l 4729 6358 l 4730 6357 l 4731 6357 l 4731 6356 l
 4732 6356 l 4733 6356 l 4734 6356 l 4735 6356 l 4735 6357 l
 4736 6357 l 4737 6357 l 4738 6357 l 4738 6358 l 4739 6358 l
 4739 6359 l 4739 6360 l 4740 6360 l 4740 6361 l 4740 6362 l
 4741 6362 l 4741 6363 l 4741 6364 l 4740 6364 l 4740 6365 l
 4740 6366 l 4740 6368 l 4739 6371 l 4739 6373 l 4738 6374 l
 4737 6375 l 4736 6376 l 4735 6377 l 4733 6378 l 4732 6379 l
 4731 6379 l 4729 6379 l 4727 6380 l 4725 6380 l 4724 6380 l
 4722 6380 l 4721 6380 l 4720 6380 l 4719 6380 l 4718 6380 l
 4717 6379 l 4716 6379 l 4715 6379 l 4715 6378 l 4714 6377 l
 4713 6376 l 4712 6375 l 4711 6374 l 4710 6373 l 4710 6372 l
 4709 6372 l 4708 6371 l 4708 6370 l 4707 6369 l 4707 6368 l
 4707 6367 l 4706 6365 l 4706 6363 l 4706 6361 l 4706 6359 l
 4706 6357 l 4706 6355 l 4706 6353 l 4706 6352 l 4707 6351 l
 4707 6350 l 4707 6348 l 4708 6347 l 4709 6346 l 4709 6345 l
 4710 6344 l 4712 6343 l 4713 6342 l 4715 6340 l 4717 6339 l
 4718 6337 l 4720 6337 l 4721 6336 l 4723 6335 l 4725 6334 l
 4727 6334 l 4729 6334 l 4731 6333 l 4734 6333 l 4738 6333 l
 4740 6333 l 4741 6333 l 4742 6333 l 4744 6333 l 4747 6333 l
 4753 6333 l 4759 6333 l 4767 6333 l 4776 6333 l 4785 6333 l
 4794 6333 l 4802 6333 l 4809 6333 l 4815 6333 l 4822 6333 l
 4827 6333 l 4828 6333 l 4828 6334 l 4828 6337 l 4828 6341 l
 4828 6344 l 4828 6345 l 4826 6345 l 4816 6345 l 4797 6345 l
 4779 6345 l 4769 6345 l 4767 6345 l 4766 6345 l 4765 6345 l
 4764 6346 l 4763 6346 l 4762 6347 l 4762 6348 l 4761 6349 l
 4761 6350 l 4761 6351 l 4761 6352 l 4761 6353 l 4761 6354 l
 4761 6355 l 4762 6356 l 4762 6357 l 4763 6358 l 4764 6359 l
 4765 6359 l 4766 6359 l 4767 6359 l 4769 6359 l 4779 6359 l
 4798 6359 l 4816 6359 l 4826 6359 l 4828 6359 l 4828 6360 l
 4828 6362 l 4828 6367 l 4828 6369 l 4828 6370 l 4826 6370 l
 4817 6370 l 4799 6370 l 4782 6370 l 4773 6370 l 4771 6370 l
 4770 6370 l 4769 6370 l 4768 6370 l 4767 6371 l 4766 6371 l
 4766 6372 l 4765 6373 l 4765 6374 l 4765 6375 l 4765 6376 l
 4765 6377 l 4766 6378 l 4766 6379 l 4767 6380 l 4768 6381 l
 4769 6381 l 4770 6381 l 4771 6381 l 4773 6381 l 4782 6381 l
 4800 6381 l 4817 6381 l 4826 6381 l 4828 6381 l 4828 6384 l
 4828 6391 l 4828 6404 l 4828 6423 l 4828 6449 l 4828 6480 l
 4828 6516 l 4828 6554 l 4828 6592 l 4828 6628 l 4828 6659 l
 4828 6685 l 4828 6704 l 4828 6717 l 4828 6724 l 4828 6727 l
 4827 6727 l 4819 6727 l 4802 6727 l 4780 6727 l 4757 6727 l
 4740 6727 l 4732 6727 l 4731 6727 l 4730 6727 l 4729 6727 l
 4728 6727 l 4727 6728 l 4726 6728 l 4726 6729 l 4726 6730 l
 4725 6730 l 4725 6731 l 4725 6732 l 4725 6733 l 4725 6734 l
 4725 6735 l 4725 6736 l 4725 6737 l 4726 6738 l 4726 6739 l
 4727 6739 l 4727 6740 l 4728 6740 l 4729 6740 l 4730 6740 l
 4731 6740 l 4732 6740 l 4740 6740 l 4757 6740 l 4780 6740 l
 4802 6740 l 4819 6740 l 4827 6740 l 4828 6740 l 4828 6741 l
 4828 6745 l 4828 6750 l 4828 6754 l 4828 6755 l 4827 6755 l
 4822 6755 l 4811 6755 l 4792 6755 l 4770 6755 l 4748 6755 l
 4729 6755 l 4718 6755 l 4713 6755 l 4712 6755 l 4710 6755 l
 4707 6755 l 4706 6756 l 4704 6756 l 4703 6757 l 4702 6758 l
 4701 6759 l 4700 6760 l 4699 6761 l 4699 6763 l 4698 6764 l
 4698 6767 l 4698 6769 l 4698 6770 l 4698 6773 l 4698 6779 l
 4698 6782 l 4698 6783 l 4699 6783 l 4703 6783 l 4713 6783 l
 4730 6783 l 4755 6783 l 4786 6783 l 4821 6783 l 4856 6783 l
 4887 6783 l 4912 6783 l 4929 6783 l 4939 6783 l 4943 6783 l

 4944 6783 l  cp gs col7 1.00 shd ef gr 
%  spline 
% Polyline
n 4783 6706 m 4783 6705 l 4783 6702 l 4783 6693 l 4783 6678 l 4783 6656 l
 4783 6626 l 4783 6592 l 4783 6555 l 4783 6517 l 4783 6483 l
 4783 6453 l 4783 6431 l 4783 6416 l 4783 6407 l 4783 6404 l
 4783 6403 l 4783 6402 l 4783 6401 l 4783 6400 l 4782 6400 l
 4782 6399 l 4781 6399 l 4781 6398 l 4780 6398 l 4779 6398 l
 4778 6398 l 4777 6398 l 4776 6398 l 4775 6398 l 4774 6399 l
 4773 6399 l 4773 6400 l 4772 6401 l 4772 6402 l 4772 6403 l
 4772 6404 l 4772 6407 l 4772 6416 l 4772 6431 l 4772 6453 l
 4772 6483 l 4772 6517 l 4772 6555 l 4772 6592 l 4772 6626 l
 4772 6656 l 4772 6678 l 4772 6693 l 4772 6702 l 4772 6705 l
 4772 6706 l 4772 6707 l 4772 6708 l 4773 6709 l 4773 6710 l
 4774 6711 l 4775 6712 l 4776 6712 l 4777 6712 l 4778 6712 l
 4779 6712 l 4780 6712 l 4781 6712 l 4781 6711 l 4782 6711 l
 4782 6710 l 4783 6709 l 4783 6708 l 4783 6707 l
 4783 6706 l  cp gs col7 1.00 shd ef gr 
%  spline 
% Polyline
n 4813 6705 m 4813 6704 l 4813 6701 l 4813 6692 l 4813 6677 l 4813 6655 l
 4813 6626 l 4813 6592 l 4813 6555 l 4813 6518 l 4813 6484 l
 4813 6455 l 4813 6433 l 4813 6418 l 4813 6409 l 4813 6406 l
 4813 6405 l 4813 6404 l 4813 6402 l 4813 6401 l 4812 6400 l
 4811 6399 l 4811 6398 l 4810 6398 l 4809 6398 l 4808 6397 l
 4807 6397 l 4806 6397 l 4805 6397 l 4804 6397 l 4803 6397 l
 4802 6397 l 4801 6398 l 4800 6398 l 4799 6399 l 4799 6400 l
 4798 6401 l 4798 6402 l 4798 6404 l 4798 6405 l 4798 6406 l
 4798 6409 l 4798 6418 l 4798 6433 l 4798 6455 l 4798 6484 l
 4798 6518 l 4798 6555 l 4798 6592 l 4798 6626 l 4798 6655 l
 4798 6677 l 4798 6692 l 4798 6701 l 4798 6704 l 4798 6705 l
 4798 6706 l 4798 6707 l 4798 6708 l 4799 6709 l 4799 6710 l
 4799 6711 l 4800 6711 l 4801 6712 l 4802 6713 l 4803 6713 l
 4804 6713 l 4805 6713 l 4806 6713 l 4807 6713 l 4808 6713 l
 4809 6712 l 4810 6712 l 4811 6711 l 4812 6710 l 4812 6709 l
 4813 6708 l 4813 6707 l 4813 6706 l
 4813 6705 l  cp gs col7 1.00 shd ef gr 
%  polyline 
% Polyline
0 slj
n 5136 6864 m 5124 6864 l 5124 6894 l 5119 6894 l 5119 6864 l 5108 6864 l
 5108 6860 l 5136 6860 l
 5136 6864 l  cp gs col32 1.00 shd ef gr 
%  polyline 
% Polyline
n 5172 6894 m 5167 6894 l 5167 6867 l 5157 6880 l 5156 6880 l 5146 6867 l
 5145 6867 l 5145 6894 l 5141 6894 l 5141 6860 l 5145 6860 l
 5156 6874 l 5168 6860 l 5172 6860 l
 5172 6894 l  cp gs col32 1.00 shd ef gr 
$F2psEnd
rs

%%EndDocument
 @endspecial 4769 5844 a
 currentpoint grestore moveto
 4769 5844 a 4130 5844 a
 currentpoint currentpoint translate 1 0.76611 div 1 0.76611 div scale
neg exch neg exch translate
 4130
5844 a 5001 3450 a
SDict begin H.S end
 5001 3450 a 5001 3450 a
SDict begin H.R end
 5001 3450
a 5001 3450 a
SDict begin [ /View [/XYZ H.V] /Dest (page.1) cvn H.B /DEST pdfmark
end
 5001 3450 a 5001 3450 a
SDict begin [ {ThisPage} << /Trans << /S /Replace >> >> /PUT pdfmark
end
 5001 3450 a 5001
3450 a
SDict begin [ /Page 9/View [ /XYZ null null null ] /Title (libapp)
/OUT pdfmark end
 5001 3450 a 9254 1458 a Fn(L)18 b(I)g(B)9 b(A)18
b(P)g(P)4649 2152 y @beginspecial 276 @llx 376 @lly 336
@urx 416 @ury 113 @rwi @setspecial
%%BeginDocument: green-bullet-on-white.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/fred/TeX/STYLES/Prosper/img/green-bullet-on-white.ps
%%Creator: XV Version 3.10a+FLmask  Rev: 12/29/94  -  by John Bradley
%%BoundingBox: 276 376 336 416
%%Pages: 1
%%DocumentFonts:
%%EndComments
%%EndProlog

%%Page: 1 1

% remember original state
/origstate save def

% build a temporary dictionary
20 dict begin

% define space for color conversions
/grays 60 string def  % space for gray scale line
/npixls 0 def
/rgbindx 0 def

% lower left corner
276 376 translate

% size of image (on paper, in 1/72inch coords)
59.97600 40.03200 scale

% define 'colorimage' if it isn't defined
%   ('colortogray' and 'mergeprocs' come from xwd2ps
%     via xgrab)
/colorimage where   % do we know about 'colorimage'?
  { pop }           % yes: pop off the 'dict' returned
  {                 % no:  define one
    /colortogray {  % define an RGB->I function
      /rgbdata exch store    % call input 'rgbdata'
      rgbdata length 3 idiv
      /npixls exch store
      /rgbindx 0 store
      0 1 npixls 1 sub {
        grays exch
        rgbdata rgbindx       get 20 mul    % Red
        rgbdata rgbindx 1 add get 32 mul    % Green
        rgbdata rgbindx 2 add get 12 mul    % Blue
        add add 64 idiv      % I = .5G + .31R + .18B
        put
        /rgbindx rgbindx 3 add store
      } for
      grays 0 npixls getinterval
    } bind def

    % Utility procedure for colorimage operator.
    % This procedure takes two procedures off the
    % stack and merges them into a single procedure.

    /mergeprocs { % def
      dup length
      3 -1 roll
      dup
      length
      dup
      5 1 roll
      3 -1 roll
      add
      array cvx
      dup
      3 -1 roll
      0 exch
      putinterval
      dup
      4 2 roll
      putinterval
    } bind def

    /colorimage { % def
      pop pop     % remove 'false 3' operands
      {colortogray} mergeprocs
      image
    } bind def
  } ifelse          % end of 'false' case



% define the colormap
/cmap 723 string def


% load up the colormap
currentfile cmap readhexstring
041808 049008 8c948c 045204 4c544c 04c804 84e284 449644 c4cbc4 0c380e 
04ac07 cce6cc 345e2c e4e7e4 046604 2c3a2c 347234 e4fee2 048208 64cc60 
34922c 24b224 04e404 044604 647264 242623 049f07 8cae8c 04bc06 24c61c 
f4f8f3 1c541c 04d804 1c621c 1c7220 0c280d 14910f 045e04 047c04 ccdcd0 
14ac18 1c481c 747473 04d105 0c6c0b 24852a 1c381c f4f1f3 acafac f4fef5 
0c310c acc6ac 049708 a4a4a3 3c4a44 148314 144812 9cea94 04b405 149e14 
1cbc1c 044004 e4fef4 dcdddd 748274 5c5959 4cba54 145b11 145413 147412 
c4fec4 e4f1e7 146411 088a0a 243028 09c207 fcf8f3 147c13 14c80e acceac 
3c3939 04f405 044e07 07a608 14d00f 0c1f10 0c900b d4d3d4 ecfee3 1c291d 
0c6e14 bcbfbd d4f6d4 909a94 4c5a50 0cac08 24ba24 547e54 0cbc0a 0c5c16 
0c7c0b fcf1fb acb8ac 1c311c aca7a9 e2e2e2 a4e2a4 0cc80a 6c9a6c 143715 
0c650a 0c840b 07de06 14970c 0c980a 0cb40a 848583 ecf0f0 c3c6c3 0c540d 
0c740c cccccc 74ce6c 30a02c 04ec05 54aa5c 6cb66c 9cfa9c 2c862c 5c926c 
6ca674 b4deac 9cda9c 34aa2c 6c7e6c acfeac 448244 34d22c 7d7d7c 6c6d6c 
445644 4c4d4c 1c7a19 1c3e1c 3c3f3c 2c422c 7c9a84 54c254 dceadc 144014 
343231 bccebc bcbabc 447244 6c6664 9c9d9c 7caa7c 349a38 6c7a74 84b69c 
1c4e18 898a89 ccfadc 1c6c2c b8e2c0 1c8a24 a1aaa1 3c4e3c 5f5e5c d8fed8 
24be24 78d670 688668 148a14 14a618 145624 0c480e 2c292b 142916 1c921c 
d4dad9 243828 143017 b4d2bc b4b7b5 1c961c 8c868c 247e24 144e13 04fa04 
246224 fcfefc 0c4e0c ace2b4 3caa3c 244e24 0c180c 949394 545454 ece9ec 
343634 2cb127 6c736c 0ca00c 0cda08 0c5c0b 0ccf06 146a0c b4b2b4 646464 
b4c2b4 0c3f0c ecfdf9 e4dedc ccfdcc 2c2f2b 142214 146b16 c4c2c2 545b54 
2cb62c 74ba74 346634 b4fcb0 244224 444242 246a24 e4feec 0ce204 f4f9fc 
f4eefc 444744 54b654 fcf9fc 0c9114 dcd6d4 ecfeec 0c7b14 0cc614 0c6314 
0c8414 
pop pop   % lose return values from readhexstring


% rlecmapimage expects to have 'w h bits matrix' on stack
/rlecmapimage {
  /buffer 1 string def
  /rgbval 3 string def
  /block  384 string def

  % proc to read a block from file, and return RGB data
  { currentfile buffer readhexstring pop
    /bcount exch 0 get store
    bcount 128 ge
    {  % it's a non-run block
      0 1 bcount 128 sub
      { currentfile buffer readhexstring pop pop

        % look up value in color map
        /rgbval cmap buffer 0 get 3 mul 3 getinterval store

        % and put it in position i*3 in block
        block exch 3 mul rgbval putinterval
      } for
      block  0  bcount 127 sub 3 mul  getinterval
    }

    { % else it's a run block
      currentfile buffer readhexstring pop pop

      % look up value in colormap
      /rgbval cmap buffer 0 get 3 mul 3 getinterval store

      0 1 bcount { block exch 3 mul rgbval putinterval } for

      block 0 bcount 1 add 3 mul getinterval
    } ifelse
  } % end of proc
  false 3 colorimage
} bind def


60 40 8			% dimensions of data
[60 0 0 -40 0 40]		% mapping matrix
rlecmapimage

10bf8131bf05bf03e98165e902e9046587bf3158ec31bfe9658265e9bf09bf
10bf8131bf04bf81e9bf01bf02e98265bfe982e965e901e981bf318131ec82ecbfe982e9
65bf0abf
12bf82751ebf83bf1ebf318231ec3102318111318131bf81bfe901e981bf318131bf01bf
01e90bbf
0fbf02e901bf023101ec021101a981d6a981a9118111318131bf14bf
0fbf8165e901e988e5bfd4ecd66add07808c80149dc2137f46a911d431bfe981e9bf0fbf

0fbf01e982bfe9318331a49ce28fe2454d37562456dc71567bab87a9d4bf81bfe981e9bf
81bf318131bf0abf
10bf8ac775bf311bde43224d37568656cb535f1a733c893cae8506a91131bfe9bf01bf81
58bf0abf
0fbf911ebf31b761a0442245ed56721a530a3a4e3a813a4e864e73c94246e3bf10bf
07bf81e9bf82bfe9bf92bf1ebf31ec4f0c38e2ef8e4d49561a530a3a6283624b052b8a2b
ce4e60c2dfe331bf4cbf0cbf
0abf81e9bf82bfe9ec8eec83de1f21778e786f01341a0a3a1c851c4b052b20168b162054
aa93df11312fe965bf0abf
0ebf8d3111883d77cdcf78646f0134530a810a1c911c4ece20167c517c16542893a9ec31
e965bf0abf
08bf01e999bfe91ebf316cc07743cd45786f49561a530a3a624b6b2b707c510151877c70
4edcaba9bfe981e9bf0abf
0bbf01e985bf27d34352cf90cf0e4d2656011a530a1c62ee2b20167c5102518816cc1db9
d611bfe9bf0abf
07bf81e9bf01bf90e9bf4c86d3445277d92c786f49721a0a3a853a4b0520167c827c51bd
88bd5116e44b157a11bf0cbf
0dbf8d3f0fc33d4403cfbb0e3756011a0a860a624b2b20167c817c5102510116854b897b
a911bf0bbf
08bf82e9e5bf97bf75dab209bcc021ef254d2649561a533a1c4b052b70167c037c811620
85203a853911bf0bbf
0bbf0131869eb6d3b0bc7748884845646f561acb0a7382734b2b812b1683167c16cc01cc
012b844b2813d4bf0bbf
0abf0231955e236db0c04463cf45646f5634cb533a73624b2b2016821670548854ce2b20
4b28e831bf0bbf
0abf023183b5b6d3b089b044436e45786f49341a871a0a733a626b2b200120896b4e6b05
2b1c5f9decbf0bbf
09bf8131bf97bf31d82e09d3b044cd485a786f1201cb1a530a73621c052b852b054e4b1c
0585053a282d58bf0bbf
0bbf9431bf556709b03844cd482c7864125634cb1a5f0a7382734b0501050162011c854b
0aae2d58bf0bbf
0bbf0131934a236dd3b0bc7743485a786f1201341acb535f3a813a1c011c0173023a8453
3b1458bf0bbf
0bbf8431bf0455098309d338778277ef2c852c266f1201348134cb83cb530a3a013a810a
5f815f0a850a1ab37d58bf0bbf
08bf81e9bf93bf31bf18d83209d338c044cd6e0e2c64126f0172837271cb5382530a5383
53ae531a851a01a57e58bf0bbf
0bbf01e5837600230901098138c082c0482c862c7864126f49568156728272341a811a72
0272864912bb841131bf0abf
03bf94e9bfe9bfe9bf1ebf1ebf275923b632099538c044ef81ef7881786481646f816fad
84adea01ea560156882449ad2da3115831bf0abf
04bf02e992654ce61e75bf0d185523b66d0995bcc043cd2c812c7881786483646f64f001
f08b6f496f49642d6382e3314cbf0abf
01bf85e9e5e9652fc784c7693fc7698a69c7d2b200232eb60929bc84bc6343ef2c862c78
45784d78ed82ed6f6489644d45a3afa2114c31bf0abf
01e58175c783c769d5eb8ceb797679dab87908db67c4b66d876d9538b0447743ef84ef6e
2c78458e455a457864788ecfbe9fd4315831bf0abf
88e5750d3f5779da98d083d0689b3501358d5d0236c45567b6320995b04477cd92cdef6e
2c6e5ad95acf782c4517813e31bf2fbf0bbf
887569575bd0689bc5ba83ba8a2a8a878aca2a74db5955b284b23209d3b081b077017701
cd016e02ef876e2c6e4810a4d4bf01bf814cbf0abf
873f79b835c5ba2a9a829aa8410141868de1d104c690d881d85583552e6d958b9538b0c0
77cd03cd6377afcd84cd4321c1d483d4e9654c814cbf0abf
88575b9b742ad1418de181e15081509603968450c8d759d881d8b283b2326d0981099585
9538bcb0381f871f95c3995ca931bf81bfe981e9bf0bbf
8779b8c58ad1c6e750855096d7b119b104b184d7b119d855845523b2b66d016d83952995
2987296de09211d431bf01bf01e90cbf
8979d0c52aa88de15096b181b119041901b18796c80fd74a59b2b602b6016d86326d328f
ac0b318331bf31bf01bf81e9bf0cbf
88575b9b742ad1c68de186e1c850c850c850865096c850e1e70487045e8ca7912e672e85
2e8cac33473101318158bf02bf82e9bfe981e9bf0abf
8b3f799835c5742a8bd1a8dbc683c68dc68d818dc601c68cdbd1ca40a15da66697274711
31863158bf31bf31bf82bf4ce985e9bfe9bfe9bf0abf
8bc76957dab8359bc5a1748a2a052a018a01748b029ba6665b279447ec311ebf83bf581e
bf82bf4cbf02bf82e9bfe981e9bf0abf
881e75693f57795bb8d082d068350135029b0135013088b8985b7608b40d751e811ebf83
bf1e75bf81bf4c814cbf05bf81e9bf0bbf
83e9e52fc782c7693f823f5779817976027681da760276827957b482b4c7750175822fe5
bf82bf4cbf01bf814cbf81bfe981e9bf01bf01e90dbf

%
% Compression made this file 26.36% of the uncompressed size.
%


showpage

% stop using temporary dictionary
end

% restore original state
origstate restore

%%Trailer

%%EndDocument
 @endspecial 298 w Fg(Thread)67 b(suppor)10 b(t:)4947
2422 y(spa)-5 b(wn,)66 b(w)l(ait,)h(self)-7 b(,)66 b(suspend,)h(resume)
l(,)g(yield,)e(e)-7 b(xit)4649 2787 y @beginspecial 276
@llx 376 @lly 336 @urx 416 @ury 113 @rwi @setspecial
%%BeginDocument: green-bullet-on-white.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/fred/TeX/STYLES/Prosper/img/green-bullet-on-white.ps
%%Creator: XV Version 3.10a+FLmask  Rev: 12/29/94  -  by John Bradley
%%BoundingBox: 276 376 336 416
%%Pages: 1
%%DocumentFonts:
%%EndComments
%%EndProlog

%%Page: 1 1

% remember original state
/origstate save def

% build a temporary dictionary
20 dict begin

% define space for color conversions
/grays 60 string def  % space for gray scale line
/npixls 0 def
/rgbindx 0 def

% lower left corner
276 376 translate

% size of image (on paper, in 1/72inch coords)
59.97600 40.03200 scale

% define 'colorimage' if it isn't defined
%   ('colortogray' and 'mergeprocs' come from xwd2ps
%     via xgrab)
/colorimage where   % do we know about 'colorimage'?
  { pop }           % yes: pop off the 'dict' returned
  {                 % no:  define one
    /colortogray {  % define an RGB->I function
      /rgbdata exch store    % call input 'rgbdata'
      rgbdata length 3 idiv
      /npixls exch store
      /rgbindx 0 store
      0 1 npixls 1 sub {
        grays exch
        rgbdata rgbindx       get 20 mul    % Red
        rgbdata rgbindx 1 add get 32 mul    % Green
        rgbdata rgbindx 2 add get 12 mul    % Blue
        add add 64 idiv      % I = .5G + .31R + .18B
        put
        /rgbindx rgbindx 3 add store
      } for
      grays 0 npixls getinterval
    } bind def

    % Utility procedure for colorimage operator.
    % This procedure takes two procedures off the
    % stack and merges them into a single procedure.

    /mergeprocs { % def
      dup length
      3 -1 roll
      dup
      length
      dup
      5 1 roll
      3 -1 roll
      add
      array cvx
      dup
      3 -1 roll
      0 exch
      putinterval
      dup
      4 2 roll
      putinterval
    } bind def

    /colorimage { % def
      pop pop     % remove 'false 3' operands
      {colortogray} mergeprocs
      image
    } bind def
  } ifelse          % end of 'false' case



% define the colormap
/cmap 723 string def


% load up the colormap
currentfile cmap readhexstring
041808 049008 8c948c 045204 4c544c 04c804 84e284 449644 c4cbc4 0c380e 
04ac07 cce6cc 345e2c e4e7e4 046604 2c3a2c 347234 e4fee2 048208 64cc60 
34922c 24b224 04e404 044604 647264 242623 049f07 8cae8c 04bc06 24c61c 
f4f8f3 1c541c 04d804 1c621c 1c7220 0c280d 14910f 045e04 047c04 ccdcd0 
14ac18 1c481c 747473 04d105 0c6c0b 24852a 1c381c f4f1f3 acafac f4fef5 
0c310c acc6ac 049708 a4a4a3 3c4a44 148314 144812 9cea94 04b405 149e14 
1cbc1c 044004 e4fef4 dcdddd 748274 5c5959 4cba54 145b11 145413 147412 
c4fec4 e4f1e7 146411 088a0a 243028 09c207 fcf8f3 147c13 14c80e acceac 
3c3939 04f405 044e07 07a608 14d00f 0c1f10 0c900b d4d3d4 ecfee3 1c291d 
0c6e14 bcbfbd d4f6d4 909a94 4c5a50 0cac08 24ba24 547e54 0cbc0a 0c5c16 
0c7c0b fcf1fb acb8ac 1c311c aca7a9 e2e2e2 a4e2a4 0cc80a 6c9a6c 143715 
0c650a 0c840b 07de06 14970c 0c980a 0cb40a 848583 ecf0f0 c3c6c3 0c540d 
0c740c cccccc 74ce6c 30a02c 04ec05 54aa5c 6cb66c 9cfa9c 2c862c 5c926c 
6ca674 b4deac 9cda9c 34aa2c 6c7e6c acfeac 448244 34d22c 7d7d7c 6c6d6c 
445644 4c4d4c 1c7a19 1c3e1c 3c3f3c 2c422c 7c9a84 54c254 dceadc 144014 
343231 bccebc bcbabc 447244 6c6664 9c9d9c 7caa7c 349a38 6c7a74 84b69c 
1c4e18 898a89 ccfadc 1c6c2c b8e2c0 1c8a24 a1aaa1 3c4e3c 5f5e5c d8fed8 
24be24 78d670 688668 148a14 14a618 145624 0c480e 2c292b 142916 1c921c 
d4dad9 243828 143017 b4d2bc b4b7b5 1c961c 8c868c 247e24 144e13 04fa04 
246224 fcfefc 0c4e0c ace2b4 3caa3c 244e24 0c180c 949394 545454 ece9ec 
343634 2cb127 6c736c 0ca00c 0cda08 0c5c0b 0ccf06 146a0c b4b2b4 646464 
b4c2b4 0c3f0c ecfdf9 e4dedc ccfdcc 2c2f2b 142214 146b16 c4c2c2 545b54 
2cb62c 74ba74 346634 b4fcb0 244224 444242 246a24 e4feec 0ce204 f4f9fc 
f4eefc 444744 54b654 fcf9fc 0c9114 dcd6d4 ecfeec 0c7b14 0cc614 0c6314 
0c8414 
pop pop   % lose return values from readhexstring


% rlecmapimage expects to have 'w h bits matrix' on stack
/rlecmapimage {
  /buffer 1 string def
  /rgbval 3 string def
  /block  384 string def

  % proc to read a block from file, and return RGB data
  { currentfile buffer readhexstring pop
    /bcount exch 0 get store
    bcount 128 ge
    {  % it's a non-run block
      0 1 bcount 128 sub
      { currentfile buffer readhexstring pop pop

        % look up value in color map
        /rgbval cmap buffer 0 get 3 mul 3 getinterval store

        % and put it in position i*3 in block
        block exch 3 mul rgbval putinterval
      } for
      block  0  bcount 127 sub 3 mul  getinterval
    }

    { % else it's a run block
      currentfile buffer readhexstring pop pop

      % look up value in colormap
      /rgbval cmap buffer 0 get 3 mul 3 getinterval store

      0 1 bcount { block exch 3 mul rgbval putinterval } for

      block 0 bcount 1 add 3 mul getinterval
    } ifelse
  } % end of proc
  false 3 colorimage
} bind def


60 40 8			% dimensions of data
[60 0 0 -40 0 40]		% mapping matrix
rlecmapimage

10bf8131bf05bf03e98165e902e9046587bf3158ec31bfe9658265e9bf09bf
10bf8131bf04bf81e9bf01bf02e98265bfe982e965e901e981bf318131ec82ecbfe982e9
65bf0abf
12bf82751ebf83bf1ebf318231ec3102318111318131bf81bfe901e981bf318131bf01bf
01e90bbf
0fbf02e901bf023101ec021101a981d6a981a9118111318131bf14bf
0fbf8165e901e988e5bfd4ecd66add07808c80149dc2137f46a911d431bfe981e9bf0fbf

0fbf01e982bfe9318331a49ce28fe2454d37562456dc71567bab87a9d4bf81bfe981e9bf
81bf318131bf0abf
10bf8ac775bf311bde43224d37568656cb535f1a733c893cae8506a91131bfe9bf01bf81
58bf0abf
0fbf911ebf31b761a0442245ed56721a530a3a4e3a813a4e864e73c94246e3bf10bf
07bf81e9bf82bfe9bf92bf1ebf31ec4f0c38e2ef8e4d49561a530a3a6283624b052b8a2b
ce4e60c2dfe331bf4cbf0cbf
0abf81e9bf82bfe9ec8eec83de1f21778e786f01341a0a3a1c851c4b052b20168b162054
aa93df11312fe965bf0abf
0ebf8d3111883d77cdcf78646f0134530a810a1c911c4ece20167c517c16542893a9ec31
e965bf0abf
08bf01e999bfe91ebf316cc07743cd45786f49561a530a3a624b6b2b707c510151877c70
4edcaba9bfe981e9bf0abf
0bbf01e985bf27d34352cf90cf0e4d2656011a530a1c62ee2b20167c5102518816cc1db9
d611bfe9bf0abf
07bf81e9bf01bf90e9bf4c86d3445277d92c786f49721a0a3a853a4b0520167c827c51bd
88bd5116e44b157a11bf0cbf
0dbf8d3f0fc33d4403cfbb0e3756011a0a860a624b2b20167c817c5102510116854b897b
a911bf0bbf
08bf82e9e5bf97bf75dab209bcc021ef254d2649561a533a1c4b052b70167c037c811620
85203a853911bf0bbf
0bbf0131869eb6d3b0bc7748884845646f561acb0a7382734b2b812b1683167c16cc01cc
012b844b2813d4bf0bbf
0abf0231955e236db0c04463cf45646f5634cb533a73624b2b2016821670548854ce2b20
4b28e831bf0bbf
0abf023183b5b6d3b089b044436e45786f49341a871a0a733a626b2b200120896b4e6b05
2b1c5f9decbf0bbf
09bf8131bf97bf31d82e09d3b044cd485a786f1201cb1a530a73621c052b852b054e4b1c
0585053a282d58bf0bbf
0bbf9431bf556709b03844cd482c7864125634cb1a5f0a7382734b0501050162011c854b
0aae2d58bf0bbf
0bbf0131934a236dd3b0bc7743485a786f1201341acb535f3a813a1c011c0173023a8453
3b1458bf0bbf
0bbf8431bf0455098309d338778277ef2c852c266f1201348134cb83cb530a3a013a810a
5f815f0a850a1ab37d58bf0bbf
08bf81e9bf93bf31bf18d83209d338c044cd6e0e2c64126f0172837271cb5382530a5383
53ae531a851a01a57e58bf0bbf
0bbf01e5837600230901098138c082c0482c862c7864126f49568156728272341a811a72
0272864912bb841131bf0abf
03bf94e9bfe9bfe9bf1ebf1ebf275923b632099538c044ef81ef7881786481646f816fad
84adea01ea560156882449ad2da3115831bf0abf
04bf02e992654ce61e75bf0d185523b66d0995bcc043cd2c812c7881786483646f64f001
f08b6f496f49642d6382e3314cbf0abf
01bf85e9e5e9652fc784c7693fc7698a69c7d2b200232eb60929bc84bc6343ef2c862c78
45784d78ed82ed6f6489644d45a3afa2114c31bf0abf
01e58175c783c769d5eb8ceb797679dab87908db67c4b66d876d9538b0447743ef84ef6e
2c78458e455a457864788ecfbe9fd4315831bf0abf
88e5750d3f5779da98d083d0689b3501358d5d0236c45567b6320995b04477cd92cdef6e
2c6e5ad95acf782c4517813e31bf2fbf0bbf
887569575bd0689bc5ba83ba8a2a8a878aca2a74db5955b284b23209d3b081b077017701
cd016e02ef876e2c6e4810a4d4bf01bf814cbf0abf
873f79b835c5ba2a9a829aa8410141868de1d104c690d881d85583552e6d958b9538b0c0
77cd03cd6377afcd84cd4321c1d483d4e9654c814cbf0abf
88575b9b742ad1418de181e15081509603968450c8d759d881d8b283b2326d0981099585
9538bcb0381f871f95c3995ca931bf81bfe981e9bf0bbf
8779b8c58ad1c6e750855096d7b119b104b184d7b119d855845523b2b66d016d83952995
2987296de09211d431bf01bf01e90cbf
8979d0c52aa88de15096b181b119041901b18796c80fd74a59b2b602b6016d86326d328f
ac0b318331bf31bf01bf81e9bf0cbf
88575b9b742ad1c68de186e1c850c850c850865096c850e1e70487045e8ca7912e672e85
2e8cac33473101318158bf02bf82e9bfe981e9bf0abf
8b3f799835c5742a8bd1a8dbc683c68dc68d818dc601c68cdbd1ca40a15da66697274711
31863158bf31bf31bf82bf4ce985e9bfe9bfe9bf0abf
8bc76957dab8359bc5a1748a2a052a018a01748b029ba6665b279447ec311ebf83bf581e
bf82bf4cbf02bf82e9bfe981e9bf0abf
881e75693f57795bb8d082d068350135029b0135013088b8985b7608b40d751e811ebf83
bf1e75bf81bf4c814cbf05bf81e9bf0bbf
83e9e52fc782c7693f823f5779817976027681da760276827957b482b4c7750175822fe5
bf82bf4cbf01bf814cbf81bfe981e9bf01bf01e90dbf

%
% Compression made this file 26.36% of the uncompressed size.
%


showpage

% stop using temporary dictionary
end

% restore original state
origstate restore

%%Trailer

%%EndDocument
 @endspecial 298 w(Barr)t(iers)66 b(and)h(loc)-5 b(ks:)4947
3051 y(loc)g(k/unloc)g(k,)64 b(barr)t(ier)-12 b(,)67
b(psema/vsema,)f(C4)h(Macros)4649 3416 y @beginspecial
276 @llx 376 @lly 336 @urx 416 @ury 113 @rwi @setspecial
%%BeginDocument: green-bullet-on-white.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/fred/TeX/STYLES/Prosper/img/green-bullet-on-white.ps
%%Creator: XV Version 3.10a+FLmask  Rev: 12/29/94  -  by John Bradley
%%BoundingBox: 276 376 336 416
%%Pages: 1
%%DocumentFonts:
%%EndComments
%%EndProlog

%%Page: 1 1

% remember original state
/origstate save def

% build a temporary dictionary
20 dict begin

% define space for color conversions
/grays 60 string def  % space for gray scale line
/npixls 0 def
/rgbindx 0 def

% lower left corner
276 376 translate

% size of image (on paper, in 1/72inch coords)
59.97600 40.03200 scale

% define 'colorimage' if it isn't defined
%   ('colortogray' and 'mergeprocs' come from xwd2ps
%     via xgrab)
/colorimage where   % do we know about 'colorimage'?
  { pop }           % yes: pop off the 'dict' returned
  {                 % no:  define one
    /colortogray {  % define an RGB->I function
      /rgbdata exch store    % call input 'rgbdata'
      rgbdata length 3 idiv
      /npixls exch store
      /rgbindx 0 store
      0 1 npixls 1 sub {
        grays exch
        rgbdata rgbindx       get 20 mul    % Red
        rgbdata rgbindx 1 add get 32 mul    % Green
        rgbdata rgbindx 2 add get 12 mul    % Blue
        add add 64 idiv      % I = .5G + .31R + .18B
        put
        /rgbindx rgbindx 3 add store
      } for
      grays 0 npixls getinterval
    } bind def

    % Utility procedure for colorimage operator.
    % This procedure takes two procedures off the
    % stack and merges them into a single procedure.

    /mergeprocs { % def
      dup length
      3 -1 roll
      dup
      length
      dup
      5 1 roll
      3 -1 roll
      add
      array cvx
      dup
      3 -1 roll
      0 exch
      putinterval
      dup
      4 2 roll
      putinterval
    } bind def

    /colorimage { % def
      pop pop     % remove 'false 3' operands
      {colortogray} mergeprocs
      image
    } bind def
  } ifelse          % end of 'false' case



% define the colormap
/cmap 723 string def


% load up the colormap
currentfile cmap readhexstring
041808 049008 8c948c 045204 4c544c 04c804 84e284 449644 c4cbc4 0c380e 
04ac07 cce6cc 345e2c e4e7e4 046604 2c3a2c 347234 e4fee2 048208 64cc60 
34922c 24b224 04e404 044604 647264 242623 049f07 8cae8c 04bc06 24c61c 
f4f8f3 1c541c 04d804 1c621c 1c7220 0c280d 14910f 045e04 047c04 ccdcd0 
14ac18 1c481c 747473 04d105 0c6c0b 24852a 1c381c f4f1f3 acafac f4fef5 
0c310c acc6ac 049708 a4a4a3 3c4a44 148314 144812 9cea94 04b405 149e14 
1cbc1c 044004 e4fef4 dcdddd 748274 5c5959 4cba54 145b11 145413 147412 
c4fec4 e4f1e7 146411 088a0a 243028 09c207 fcf8f3 147c13 14c80e acceac 
3c3939 04f405 044e07 07a608 14d00f 0c1f10 0c900b d4d3d4 ecfee3 1c291d 
0c6e14 bcbfbd d4f6d4 909a94 4c5a50 0cac08 24ba24 547e54 0cbc0a 0c5c16 
0c7c0b fcf1fb acb8ac 1c311c aca7a9 e2e2e2 a4e2a4 0cc80a 6c9a6c 143715 
0c650a 0c840b 07de06 14970c 0c980a 0cb40a 848583 ecf0f0 c3c6c3 0c540d 
0c740c cccccc 74ce6c 30a02c 04ec05 54aa5c 6cb66c 9cfa9c 2c862c 5c926c 
6ca674 b4deac 9cda9c 34aa2c 6c7e6c acfeac 448244 34d22c 7d7d7c 6c6d6c 
445644 4c4d4c 1c7a19 1c3e1c 3c3f3c 2c422c 7c9a84 54c254 dceadc 144014 
343231 bccebc bcbabc 447244 6c6664 9c9d9c 7caa7c 349a38 6c7a74 84b69c 
1c4e18 898a89 ccfadc 1c6c2c b8e2c0 1c8a24 a1aaa1 3c4e3c 5f5e5c d8fed8 
24be24 78d670 688668 148a14 14a618 145624 0c480e 2c292b 142916 1c921c 
d4dad9 243828 143017 b4d2bc b4b7b5 1c961c 8c868c 247e24 144e13 04fa04 
246224 fcfefc 0c4e0c ace2b4 3caa3c 244e24 0c180c 949394 545454 ece9ec 
343634 2cb127 6c736c 0ca00c 0cda08 0c5c0b 0ccf06 146a0c b4b2b4 646464 
b4c2b4 0c3f0c ecfdf9 e4dedc ccfdcc 2c2f2b 142214 146b16 c4c2c2 545b54 
2cb62c 74ba74 346634 b4fcb0 244224 444242 246a24 e4feec 0ce204 f4f9fc 
f4eefc 444744 54b654 fcf9fc 0c9114 dcd6d4 ecfeec 0c7b14 0cc614 0c6314 
0c8414 
pop pop   % lose return values from readhexstring


% rlecmapimage expects to have 'w h bits matrix' on stack
/rlecmapimage {
  /buffer 1 string def
  /rgbval 3 string def
  /block  384 string def

  % proc to read a block from file, and return RGB data
  { currentfile buffer readhexstring pop
    /bcount exch 0 get store
    bcount 128 ge
    {  % it's a non-run block
      0 1 bcount 128 sub
      { currentfile buffer readhexstring pop pop

        % look up value in color map
        /rgbval cmap buffer 0 get 3 mul 3 getinterval store

        % and put it in position i*3 in block
        block exch 3 mul rgbval putinterval
      } for
      block  0  bcount 127 sub 3 mul  getinterval
    }

    { % else it's a run block
      currentfile buffer readhexstring pop pop

      % look up value in colormap
      /rgbval cmap buffer 0 get 3 mul 3 getinterval store

      0 1 bcount { block exch 3 mul rgbval putinterval } for

      block 0 bcount 1 add 3 mul getinterval
    } ifelse
  } % end of proc
  false 3 colorimage
} bind def


60 40 8			% dimensions of data
[60 0 0 -40 0 40]		% mapping matrix
rlecmapimage

10bf8131bf05bf03e98165e902e9046587bf3158ec31bfe9658265e9bf09bf
10bf8131bf04bf81e9bf01bf02e98265bfe982e965e901e981bf318131ec82ecbfe982e9
65bf0abf
12bf82751ebf83bf1ebf318231ec3102318111318131bf81bfe901e981bf318131bf01bf
01e90bbf
0fbf02e901bf023101ec021101a981d6a981a9118111318131bf14bf
0fbf8165e901e988e5bfd4ecd66add07808c80149dc2137f46a911d431bfe981e9bf0fbf

0fbf01e982bfe9318331a49ce28fe2454d37562456dc71567bab87a9d4bf81bfe981e9bf
81bf318131bf0abf
10bf8ac775bf311bde43224d37568656cb535f1a733c893cae8506a91131bfe9bf01bf81
58bf0abf
0fbf911ebf31b761a0442245ed56721a530a3a4e3a813a4e864e73c94246e3bf10bf
07bf81e9bf82bfe9bf92bf1ebf31ec4f0c38e2ef8e4d49561a530a3a6283624b052b8a2b
ce4e60c2dfe331bf4cbf0cbf
0abf81e9bf82bfe9ec8eec83de1f21778e786f01341a0a3a1c851c4b052b20168b162054
aa93df11312fe965bf0abf
0ebf8d3111883d77cdcf78646f0134530a810a1c911c4ece20167c517c16542893a9ec31
e965bf0abf
08bf01e999bfe91ebf316cc07743cd45786f49561a530a3a624b6b2b707c510151877c70
4edcaba9bfe981e9bf0abf
0bbf01e985bf27d34352cf90cf0e4d2656011a530a1c62ee2b20167c5102518816cc1db9
d611bfe9bf0abf
07bf81e9bf01bf90e9bf4c86d3445277d92c786f49721a0a3a853a4b0520167c827c51bd
88bd5116e44b157a11bf0cbf
0dbf8d3f0fc33d4403cfbb0e3756011a0a860a624b2b20167c817c5102510116854b897b
a911bf0bbf
08bf82e9e5bf97bf75dab209bcc021ef254d2649561a533a1c4b052b70167c037c811620
85203a853911bf0bbf
0bbf0131869eb6d3b0bc7748884845646f561acb0a7382734b2b812b1683167c16cc01cc
012b844b2813d4bf0bbf
0abf0231955e236db0c04463cf45646f5634cb533a73624b2b2016821670548854ce2b20
4b28e831bf0bbf
0abf023183b5b6d3b089b044436e45786f49341a871a0a733a626b2b200120896b4e6b05
2b1c5f9decbf0bbf
09bf8131bf97bf31d82e09d3b044cd485a786f1201cb1a530a73621c052b852b054e4b1c
0585053a282d58bf0bbf
0bbf9431bf556709b03844cd482c7864125634cb1a5f0a7382734b0501050162011c854b
0aae2d58bf0bbf
0bbf0131934a236dd3b0bc7743485a786f1201341acb535f3a813a1c011c0173023a8453
3b1458bf0bbf
0bbf8431bf0455098309d338778277ef2c852c266f1201348134cb83cb530a3a013a810a
5f815f0a850a1ab37d58bf0bbf
08bf81e9bf93bf31bf18d83209d338c044cd6e0e2c64126f0172837271cb5382530a5383
53ae531a851a01a57e58bf0bbf
0bbf01e5837600230901098138c082c0482c862c7864126f49568156728272341a811a72
0272864912bb841131bf0abf
03bf94e9bfe9bfe9bf1ebf1ebf275923b632099538c044ef81ef7881786481646f816fad
84adea01ea560156882449ad2da3115831bf0abf
04bf02e992654ce61e75bf0d185523b66d0995bcc043cd2c812c7881786483646f64f001
f08b6f496f49642d6382e3314cbf0abf
01bf85e9e5e9652fc784c7693fc7698a69c7d2b200232eb60929bc84bc6343ef2c862c78
45784d78ed82ed6f6489644d45a3afa2114c31bf0abf
01e58175c783c769d5eb8ceb797679dab87908db67c4b66d876d9538b0447743ef84ef6e
2c78458e455a457864788ecfbe9fd4315831bf0abf
88e5750d3f5779da98d083d0689b3501358d5d0236c45567b6320995b04477cd92cdef6e
2c6e5ad95acf782c4517813e31bf2fbf0bbf
887569575bd0689bc5ba83ba8a2a8a878aca2a74db5955b284b23209d3b081b077017701
cd016e02ef876e2c6e4810a4d4bf01bf814cbf0abf
873f79b835c5ba2a9a829aa8410141868de1d104c690d881d85583552e6d958b9538b0c0
77cd03cd6377afcd84cd4321c1d483d4e9654c814cbf0abf
88575b9b742ad1418de181e15081509603968450c8d759d881d8b283b2326d0981099585
9538bcb0381f871f95c3995ca931bf81bfe981e9bf0bbf
8779b8c58ad1c6e750855096d7b119b104b184d7b119d855845523b2b66d016d83952995
2987296de09211d431bf01bf01e90cbf
8979d0c52aa88de15096b181b119041901b18796c80fd74a59b2b602b6016d86326d328f
ac0b318331bf31bf01bf81e9bf0cbf
88575b9b742ad1c68de186e1c850c850c850865096c850e1e70487045e8ca7912e672e85
2e8cac33473101318158bf02bf82e9bfe981e9bf0abf
8b3f799835c5742a8bd1a8dbc683c68dc68d818dc601c68cdbd1ca40a15da66697274711
31863158bf31bf31bf82bf4ce985e9bfe9bfe9bf0abf
8bc76957dab8359bc5a1748a2a052a018a01748b029ba6665b279447ec311ebf83bf581e
bf82bf4cbf02bf82e9bfe981e9bf0abf
881e75693f57795bb8d082d068350135029b0135013088b8985b7608b40d751e811ebf83
bf1e75bf81bf4c814cbf05bf81e9bf0bbf
83e9e52fc782c7693f823f5779817976027681da760276827957b482b4c7750175822fe5
bf82bf4cbf01bf814cbf81bfe981e9bf01bf01e90dbf

%
% Compression made this file 26.36% of the uncompressed size.
%


showpage

% stop using temporary dictionary
end

% restore original state
origstate restore

%%Trailer

%%EndDocument
 @endspecial 298 w(Ev)-6 b(ents:)4983 3731 y @beginspecial
276 @llx 376 @lly 336 @urx 416 @ury 85 @rwi @setspecial
%%BeginDocument: green-bullet-on-white.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/fred/TeX/STYLES/Prosper/img/green-bullet-on-white.ps
%%Creator: XV Version 3.10a+FLmask  Rev: 12/29/94  -  by John Bradley
%%BoundingBox: 276 376 336 416
%%Pages: 1
%%DocumentFonts:
%%EndComments
%%EndProlog

%%Page: 1 1

% remember original state
/origstate save def

% build a temporary dictionary
20 dict begin

% define space for color conversions
/grays 60 string def  % space for gray scale line
/npixls 0 def
/rgbindx 0 def

% lower left corner
276 376 translate

% size of image (on paper, in 1/72inch coords)
59.97600 40.03200 scale

% define 'colorimage' if it isn't defined
%   ('colortogray' and 'mergeprocs' come from xwd2ps
%     via xgrab)
/colorimage where   % do we know about 'colorimage'?
  { pop }           % yes: pop off the 'dict' returned
  {                 % no:  define one
    /colortogray {  % define an RGB->I function
      /rgbdata exch store    % call input 'rgbdata'
      rgbdata length 3 idiv
      /npixls exch store
      /rgbindx 0 store
      0 1 npixls 1 sub {
        grays exch
        rgbdata rgbindx       get 20 mul    % Red
        rgbdata rgbindx 1 add get 32 mul    % Green
        rgbdata rgbindx 2 add get 12 mul    % Blue
        add add 64 idiv      % I = .5G + .31R + .18B
        put
        /rgbindx rgbindx 3 add store
      } for
      grays 0 npixls getinterval
    } bind def

    % Utility procedure for colorimage operator.
    % This procedure takes two procedures off the
    % stack and merges them into a single procedure.

    /mergeprocs { % def
      dup length
      3 -1 roll
      dup
      length
      dup
      5 1 roll
      3 -1 roll
      add
      array cvx
      dup
      3 -1 roll
      0 exch
      putinterval
      dup
      4 2 roll
      putinterval
    } bind def

    /colorimage { % def
      pop pop     % remove 'false 3' operands
      {colortogray} mergeprocs
      image
    } bind def
  } ifelse          % end of 'false' case



% define the colormap
/cmap 723 string def


% load up the colormap
currentfile cmap readhexstring
041808 049008 8c948c 045204 4c544c 04c804 84e284 449644 c4cbc4 0c380e 
04ac07 cce6cc 345e2c e4e7e4 046604 2c3a2c 347234 e4fee2 048208 64cc60 
34922c 24b224 04e404 044604 647264 242623 049f07 8cae8c 04bc06 24c61c 
f4f8f3 1c541c 04d804 1c621c 1c7220 0c280d 14910f 045e04 047c04 ccdcd0 
14ac18 1c481c 747473 04d105 0c6c0b 24852a 1c381c f4f1f3 acafac f4fef5 
0c310c acc6ac 049708 a4a4a3 3c4a44 148314 144812 9cea94 04b405 149e14 
1cbc1c 044004 e4fef4 dcdddd 748274 5c5959 4cba54 145b11 145413 147412 
c4fec4 e4f1e7 146411 088a0a 243028 09c207 fcf8f3 147c13 14c80e acceac 
3c3939 04f405 044e07 07a608 14d00f 0c1f10 0c900b d4d3d4 ecfee3 1c291d 
0c6e14 bcbfbd d4f6d4 909a94 4c5a50 0cac08 24ba24 547e54 0cbc0a 0c5c16 
0c7c0b fcf1fb acb8ac 1c311c aca7a9 e2e2e2 a4e2a4 0cc80a 6c9a6c 143715 
0c650a 0c840b 07de06 14970c 0c980a 0cb40a 848583 ecf0f0 c3c6c3 0c540d 
0c740c cccccc 74ce6c 30a02c 04ec05 54aa5c 6cb66c 9cfa9c 2c862c 5c926c 
6ca674 b4deac 9cda9c 34aa2c 6c7e6c acfeac 448244 34d22c 7d7d7c 6c6d6c 
445644 4c4d4c 1c7a19 1c3e1c 3c3f3c 2c422c 7c9a84 54c254 dceadc 144014 
343231 bccebc bcbabc 447244 6c6664 9c9d9c 7caa7c 349a38 6c7a74 84b69c 
1c4e18 898a89 ccfadc 1c6c2c b8e2c0 1c8a24 a1aaa1 3c4e3c 5f5e5c d8fed8 
24be24 78d670 688668 148a14 14a618 145624 0c480e 2c292b 142916 1c921c 
d4dad9 243828 143017 b4d2bc b4b7b5 1c961c 8c868c 247e24 144e13 04fa04 
246224 fcfefc 0c4e0c ace2b4 3caa3c 244e24 0c180c 949394 545454 ece9ec 
343634 2cb127 6c736c 0ca00c 0cda08 0c5c0b 0ccf06 146a0c b4b2b4 646464 
b4c2b4 0c3f0c ecfdf9 e4dedc ccfdcc 2c2f2b 142214 146b16 c4c2c2 545b54 
2cb62c 74ba74 346634 b4fcb0 244224 444242 246a24 e4feec 0ce204 f4f9fc 
f4eefc 444744 54b654 fcf9fc 0c9114 dcd6d4 ecfeec 0c7b14 0cc614 0c6314 
0c8414 
pop pop   % lose return values from readhexstring


% rlecmapimage expects to have 'w h bits matrix' on stack
/rlecmapimage {
  /buffer 1 string def
  /rgbval 3 string def
  /block  384 string def

  % proc to read a block from file, and return RGB data
  { currentfile buffer readhexstring pop
    /bcount exch 0 get store
    bcount 128 ge
    {  % it's a non-run block
      0 1 bcount 128 sub
      { currentfile buffer readhexstring pop pop

        % look up value in color map
        /rgbval cmap buffer 0 get 3 mul 3 getinterval store

        % and put it in position i*3 in block
        block exch 3 mul rgbval putinterval
      } for
      block  0  bcount 127 sub 3 mul  getinterval
    }

    { % else it's a run block
      currentfile buffer readhexstring pop pop

      % look up value in colormap
      /rgbval cmap buffer 0 get 3 mul 3 getinterval store

      0 1 bcount { block exch 3 mul rgbval putinterval } for

      block 0 bcount 1 add 3 mul getinterval
    } ifelse
  } % end of proc
  false 3 colorimage
} bind def


60 40 8			% dimensions of data
[60 0 0 -40 0 40]		% mapping matrix
rlecmapimage

10bf8131bf05bf03e98165e902e9046587bf3158ec31bfe9658265e9bf09bf
10bf8131bf04bf81e9bf01bf02e98265bfe982e965e901e981bf318131ec82ecbfe982e9
65bf0abf
12bf82751ebf83bf1ebf318231ec3102318111318131bf81bfe901e981bf318131bf01bf
01e90bbf
0fbf02e901bf023101ec021101a981d6a981a9118111318131bf14bf
0fbf8165e901e988e5bfd4ecd66add07808c80149dc2137f46a911d431bfe981e9bf0fbf

0fbf01e982bfe9318331a49ce28fe2454d37562456dc71567bab87a9d4bf81bfe981e9bf
81bf318131bf0abf
10bf8ac775bf311bde43224d37568656cb535f1a733c893cae8506a91131bfe9bf01bf81
58bf0abf
0fbf911ebf31b761a0442245ed56721a530a3a4e3a813a4e864e73c94246e3bf10bf
07bf81e9bf82bfe9bf92bf1ebf31ec4f0c38e2ef8e4d49561a530a3a6283624b052b8a2b
ce4e60c2dfe331bf4cbf0cbf
0abf81e9bf82bfe9ec8eec83de1f21778e786f01341a0a3a1c851c4b052b20168b162054
aa93df11312fe965bf0abf
0ebf8d3111883d77cdcf78646f0134530a810a1c911c4ece20167c517c16542893a9ec31
e965bf0abf
08bf01e999bfe91ebf316cc07743cd45786f49561a530a3a624b6b2b707c510151877c70
4edcaba9bfe981e9bf0abf
0bbf01e985bf27d34352cf90cf0e4d2656011a530a1c62ee2b20167c5102518816cc1db9
d611bfe9bf0abf
07bf81e9bf01bf90e9bf4c86d3445277d92c786f49721a0a3a853a4b0520167c827c51bd
88bd5116e44b157a11bf0cbf
0dbf8d3f0fc33d4403cfbb0e3756011a0a860a624b2b20167c817c5102510116854b897b
a911bf0bbf
08bf82e9e5bf97bf75dab209bcc021ef254d2649561a533a1c4b052b70167c037c811620
85203a853911bf0bbf
0bbf0131869eb6d3b0bc7748884845646f561acb0a7382734b2b812b1683167c16cc01cc
012b844b2813d4bf0bbf
0abf0231955e236db0c04463cf45646f5634cb533a73624b2b2016821670548854ce2b20
4b28e831bf0bbf
0abf023183b5b6d3b089b044436e45786f49341a871a0a733a626b2b200120896b4e6b05
2b1c5f9decbf0bbf
09bf8131bf97bf31d82e09d3b044cd485a786f1201cb1a530a73621c052b852b054e4b1c
0585053a282d58bf0bbf
0bbf9431bf556709b03844cd482c7864125634cb1a5f0a7382734b0501050162011c854b
0aae2d58bf0bbf
0bbf0131934a236dd3b0bc7743485a786f1201341acb535f3a813a1c011c0173023a8453
3b1458bf0bbf
0bbf8431bf0455098309d338778277ef2c852c266f1201348134cb83cb530a3a013a810a
5f815f0a850a1ab37d58bf0bbf
08bf81e9bf93bf31bf18d83209d338c044cd6e0e2c64126f0172837271cb5382530a5383
53ae531a851a01a57e58bf0bbf
0bbf01e5837600230901098138c082c0482c862c7864126f49568156728272341a811a72
0272864912bb841131bf0abf
03bf94e9bfe9bfe9bf1ebf1ebf275923b632099538c044ef81ef7881786481646f816fad
84adea01ea560156882449ad2da3115831bf0abf
04bf02e992654ce61e75bf0d185523b66d0995bcc043cd2c812c7881786483646f64f001
f08b6f496f49642d6382e3314cbf0abf
01bf85e9e5e9652fc784c7693fc7698a69c7d2b200232eb60929bc84bc6343ef2c862c78
45784d78ed82ed6f6489644d45a3afa2114c31bf0abf
01e58175c783c769d5eb8ceb797679dab87908db67c4b66d876d9538b0447743ef84ef6e
2c78458e455a457864788ecfbe9fd4315831bf0abf
88e5750d3f5779da98d083d0689b3501358d5d0236c45567b6320995b04477cd92cdef6e
2c6e5ad95acf782c4517813e31bf2fbf0bbf
887569575bd0689bc5ba83ba8a2a8a878aca2a74db5955b284b23209d3b081b077017701
cd016e02ef876e2c6e4810a4d4bf01bf814cbf0abf
873f79b835c5ba2a9a829aa8410141868de1d104c690d881d85583552e6d958b9538b0c0
77cd03cd6377afcd84cd4321c1d483d4e9654c814cbf0abf
88575b9b742ad1418de181e15081509603968450c8d759d881d8b283b2326d0981099585
9538bcb0381f871f95c3995ca931bf81bfe981e9bf0bbf
8779b8c58ad1c6e750855096d7b119b104b184d7b119d855845523b2b66d016d83952995
2987296de09211d431bf01bf01e90cbf
8979d0c52aa88de15096b181b119041901b18796c80fd74a59b2b602b6016d86326d328f
ac0b318331bf31bf01bf81e9bf0cbf
88575b9b742ad1c68de186e1c850c850c850865096c850e1e70487045e8ca7912e672e85
2e8cac33473101318158bf02bf82e9bfe981e9bf0abf
8b3f799835c5742a8bd1a8dbc683c68dc68d818dc601c68cdbd1ca40a15da66697274711
31863158bf31bf31bf82bf4ce985e9bfe9bfe9bf0abf
8bc76957dab8359bc5a1748a2a052a018a01748b029ba6665b279447ec311ebf83bf581e
bf82bf4cbf02bf82e9bfe981e9bf0abf
881e75693f57795bb8d082d068350135029b0135013088b8985b7608b40d751e811ebf83
bf1e75bf81bf4c814cbf05bf81e9bf0bbf
83e9e52fc782c7693f823f5779817976027681da760276827957b482b4c7750175822fe5
bf82bf4cbf01bf814cbf81bfe981e9bf01bf01e90dbf

%
% Compression made this file 26.36% of the uncompressed size.
%


showpage

% stop using temporary dictionary
end

% restore original state
origstate restore

%%Trailer

%%EndDocument
 @endspecial 248 w(pree)f(v)h(ent:)83 b(Noti\002ed)66
b(when)h(e)-7 b(x)g(ecuted)66 b(in)h(front-end)4983 4051
y @beginspecial 276 @llx 376 @lly 336 @urx 416 @ury 85
@rwi @setspecial
%%BeginDocument: green-bullet-on-white.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/fred/TeX/STYLES/Prosper/img/green-bullet-on-white.ps
%%Creator: XV Version 3.10a+FLmask  Rev: 12/29/94  -  by John Bradley
%%BoundingBox: 276 376 336 416
%%Pages: 1
%%DocumentFonts:
%%EndComments
%%EndProlog

%%Page: 1 1

% remember original state
/origstate save def

% build a temporary dictionary
20 dict begin

% define space for color conversions
/grays 60 string def  % space for gray scale line
/npixls 0 def
/rgbindx 0 def

% lower left corner
276 376 translate

% size of image (on paper, in 1/72inch coords)
59.97600 40.03200 scale

% define 'colorimage' if it isn't defined
%   ('colortogray' and 'mergeprocs' come from xwd2ps
%     via xgrab)
/colorimage where   % do we know about 'colorimage'?
  { pop }           % yes: pop off the 'dict' returned
  {                 % no:  define one
    /colortogray {  % define an RGB->I function
      /rgbdata exch store    % call input 'rgbdata'
      rgbdata length 3 idiv
      /npixls exch store
      /rgbindx 0 store
      0 1 npixls 1 sub {
        grays exch
        rgbdata rgbindx       get 20 mul    % Red
        rgbdata rgbindx 1 add get 32 mul    % Green
        rgbdata rgbindx 2 add get 12 mul    % Blue
        add add 64 idiv      % I = .5G + .31R + .18B
        put
        /rgbindx rgbindx 3 add store
      } for
      grays 0 npixls getinterval
    } bind def

    % Utility procedure for colorimage operator.
    % This procedure takes two procedures off the
    % stack and merges them into a single procedure.

    /mergeprocs { % def
      dup length
      3 -1 roll
      dup
      length
      dup
      5 1 roll
      3 -1 roll
      add
      array cvx
      dup
      3 -1 roll
      0 exch
      putinterval
      dup
      4 2 roll
      putinterval
    } bind def

    /colorimage { % def
      pop pop     % remove 'false 3' operands
      {colortogray} mergeprocs
      image
    } bind def
  } ifelse          % end of 'false' case



% define the colormap
/cmap 723 string def


% load up the colormap
currentfile cmap readhexstring
041808 049008 8c948c 045204 4c544c 04c804 84e284 449644 c4cbc4 0c380e 
04ac07 cce6cc 345e2c e4e7e4 046604 2c3a2c 347234 e4fee2 048208 64cc60 
34922c 24b224 04e404 044604 647264 242623 049f07 8cae8c 04bc06 24c61c 
f4f8f3 1c541c 04d804 1c621c 1c7220 0c280d 14910f 045e04 047c04 ccdcd0 
14ac18 1c481c 747473 04d105 0c6c0b 24852a 1c381c f4f1f3 acafac f4fef5 
0c310c acc6ac 049708 a4a4a3 3c4a44 148314 144812 9cea94 04b405 149e14 
1cbc1c 044004 e4fef4 dcdddd 748274 5c5959 4cba54 145b11 145413 147412 
c4fec4 e4f1e7 146411 088a0a 243028 09c207 fcf8f3 147c13 14c80e acceac 
3c3939 04f405 044e07 07a608 14d00f 0c1f10 0c900b d4d3d4 ecfee3 1c291d 
0c6e14 bcbfbd d4f6d4 909a94 4c5a50 0cac08 24ba24 547e54 0cbc0a 0c5c16 
0c7c0b fcf1fb acb8ac 1c311c aca7a9 e2e2e2 a4e2a4 0cc80a 6c9a6c 143715 
0c650a 0c840b 07de06 14970c 0c980a 0cb40a 848583 ecf0f0 c3c6c3 0c540d 
0c740c cccccc 74ce6c 30a02c 04ec05 54aa5c 6cb66c 9cfa9c 2c862c 5c926c 
6ca674 b4deac 9cda9c 34aa2c 6c7e6c acfeac 448244 34d22c 7d7d7c 6c6d6c 
445644 4c4d4c 1c7a19 1c3e1c 3c3f3c 2c422c 7c9a84 54c254 dceadc 144014 
343231 bccebc bcbabc 447244 6c6664 9c9d9c 7caa7c 349a38 6c7a74 84b69c 
1c4e18 898a89 ccfadc 1c6c2c b8e2c0 1c8a24 a1aaa1 3c4e3c 5f5e5c d8fed8 
24be24 78d670 688668 148a14 14a618 145624 0c480e 2c292b 142916 1c921c 
d4dad9 243828 143017 b4d2bc b4b7b5 1c961c 8c868c 247e24 144e13 04fa04 
246224 fcfefc 0c4e0c ace2b4 3caa3c 244e24 0c180c 949394 545454 ece9ec 
343634 2cb127 6c736c 0ca00c 0cda08 0c5c0b 0ccf06 146a0c b4b2b4 646464 
b4c2b4 0c3f0c ecfdf9 e4dedc ccfdcc 2c2f2b 142214 146b16 c4c2c2 545b54 
2cb62c 74ba74 346634 b4fcb0 244224 444242 246a24 e4feec 0ce204 f4f9fc 
f4eefc 444744 54b654 fcf9fc 0c9114 dcd6d4 ecfeec 0c7b14 0cc614 0c6314 
0c8414 
pop pop   % lose return values from readhexstring


% rlecmapimage expects to have 'w h bits matrix' on stack
/rlecmapimage {
  /buffer 1 string def
  /rgbval 3 string def
  /block  384 string def

  % proc to read a block from file, and return RGB data
  { currentfile buffer readhexstring pop
    /bcount exch 0 get store
    bcount 128 ge
    {  % it's a non-run block
      0 1 bcount 128 sub
      { currentfile buffer readhexstring pop pop

        % look up value in color map
        /rgbval cmap buffer 0 get 3 mul 3 getinterval store

        % and put it in position i*3 in block
        block exch 3 mul rgbval putinterval
      } for
      block  0  bcount 127 sub 3 mul  getinterval
    }

    { % else it's a run block
      currentfile buffer readhexstring pop pop

      % look up value in colormap
      /rgbval cmap buffer 0 get 3 mul 3 getinterval store

      0 1 bcount { block exch 3 mul rgbval putinterval } for

      block 0 bcount 1 add 3 mul getinterval
    } ifelse
  } % end of proc
  false 3 colorimage
} bind def


60 40 8			% dimensions of data
[60 0 0 -40 0 40]		% mapping matrix
rlecmapimage

10bf8131bf05bf03e98165e902e9046587bf3158ec31bfe9658265e9bf09bf
10bf8131bf04bf81e9bf01bf02e98265bfe982e965e901e981bf318131ec82ecbfe982e9
65bf0abf
12bf82751ebf83bf1ebf318231ec3102318111318131bf81bfe901e981bf318131bf01bf
01e90bbf
0fbf02e901bf023101ec021101a981d6a981a9118111318131bf14bf
0fbf8165e901e988e5bfd4ecd66add07808c80149dc2137f46a911d431bfe981e9bf0fbf

0fbf01e982bfe9318331a49ce28fe2454d37562456dc71567bab87a9d4bf81bfe981e9bf
81bf318131bf0abf
10bf8ac775bf311bde43224d37568656cb535f1a733c893cae8506a91131bfe9bf01bf81
58bf0abf
0fbf911ebf31b761a0442245ed56721a530a3a4e3a813a4e864e73c94246e3bf10bf
07bf81e9bf82bfe9bf92bf1ebf31ec4f0c38e2ef8e4d49561a530a3a6283624b052b8a2b
ce4e60c2dfe331bf4cbf0cbf
0abf81e9bf82bfe9ec8eec83de1f21778e786f01341a0a3a1c851c4b052b20168b162054
aa93df11312fe965bf0abf
0ebf8d3111883d77cdcf78646f0134530a810a1c911c4ece20167c517c16542893a9ec31
e965bf0abf
08bf01e999bfe91ebf316cc07743cd45786f49561a530a3a624b6b2b707c510151877c70
4edcaba9bfe981e9bf0abf
0bbf01e985bf27d34352cf90cf0e4d2656011a530a1c62ee2b20167c5102518816cc1db9
d611bfe9bf0abf
07bf81e9bf01bf90e9bf4c86d3445277d92c786f49721a0a3a853a4b0520167c827c51bd
88bd5116e44b157a11bf0cbf
0dbf8d3f0fc33d4403cfbb0e3756011a0a860a624b2b20167c817c5102510116854b897b
a911bf0bbf
08bf82e9e5bf97bf75dab209bcc021ef254d2649561a533a1c4b052b70167c037c811620
85203a853911bf0bbf
0bbf0131869eb6d3b0bc7748884845646f561acb0a7382734b2b812b1683167c16cc01cc
012b844b2813d4bf0bbf
0abf0231955e236db0c04463cf45646f5634cb533a73624b2b2016821670548854ce2b20
4b28e831bf0bbf
0abf023183b5b6d3b089b044436e45786f49341a871a0a733a626b2b200120896b4e6b05
2b1c5f9decbf0bbf
09bf8131bf97bf31d82e09d3b044cd485a786f1201cb1a530a73621c052b852b054e4b1c
0585053a282d58bf0bbf
0bbf9431bf556709b03844cd482c7864125634cb1a5f0a7382734b0501050162011c854b
0aae2d58bf0bbf
0bbf0131934a236dd3b0bc7743485a786f1201341acb535f3a813a1c011c0173023a8453
3b1458bf0bbf
0bbf8431bf0455098309d338778277ef2c852c266f1201348134cb83cb530a3a013a810a
5f815f0a850a1ab37d58bf0bbf
08bf81e9bf93bf31bf18d83209d338c044cd6e0e2c64126f0172837271cb5382530a5383
53ae531a851a01a57e58bf0bbf
0bbf01e5837600230901098138c082c0482c862c7864126f49568156728272341a811a72
0272864912bb841131bf0abf
03bf94e9bfe9bfe9bf1ebf1ebf275923b632099538c044ef81ef7881786481646f816fad
84adea01ea560156882449ad2da3115831bf0abf
04bf02e992654ce61e75bf0d185523b66d0995bcc043cd2c812c7881786483646f64f001
f08b6f496f49642d6382e3314cbf0abf
01bf85e9e5e9652fc784c7693fc7698a69c7d2b200232eb60929bc84bc6343ef2c862c78
45784d78ed82ed6f6489644d45a3afa2114c31bf0abf
01e58175c783c769d5eb8ceb797679dab87908db67c4b66d876d9538b0447743ef84ef6e
2c78458e455a457864788ecfbe9fd4315831bf0abf
88e5750d3f5779da98d083d0689b3501358d5d0236c45567b6320995b04477cd92cdef6e
2c6e5ad95acf782c4517813e31bf2fbf0bbf
887569575bd0689bc5ba83ba8a2a8a878aca2a74db5955b284b23209d3b081b077017701
cd016e02ef876e2c6e4810a4d4bf01bf814cbf0abf
873f79b835c5ba2a9a829aa8410141868de1d104c690d881d85583552e6d958b9538b0c0
77cd03cd6377afcd84cd4321c1d483d4e9654c814cbf0abf
88575b9b742ad1418de181e15081509603968450c8d759d881d8b283b2326d0981099585
9538bcb0381f871f95c3995ca931bf81bfe981e9bf0bbf
8779b8c58ad1c6e750855096d7b119b104b184d7b119d855845523b2b66d016d83952995
2987296de09211d431bf01bf01e90cbf
8979d0c52aa88de15096b181b119041901b18796c80fd74a59b2b602b6016d86326d328f
ac0b318331bf31bf01bf81e9bf0cbf
88575b9b742ad1c68de186e1c850c850c850865096c850e1e70487045e8ca7912e672e85
2e8cac33473101318158bf02bf82e9bfe981e9bf0abf
8b3f799835c5742a8bd1a8dbc683c68dc68d818dc601c68cdbd1ca40a15da66697274711
31863158bf31bf31bf82bf4ce985e9bfe9bfe9bf0abf
8bc76957dab8359bc5a1748a2a052a018a01748b029ba6665b279447ec311ebf83bf581e
bf82bf4cbf02bf82e9bfe981e9bf0abf
881e75693f57795bb8d082d068350135029b0135013088b8985b7608b40d751e811ebf83
bf1e75bf81bf4c814cbf05bf81e9bf0bbf
83e9e52fc782c7693f823f5779817976027681da760276827957b482b4c7750175822fe5
bf82bf4cbf01bf814cbf81bfe981e9bf01bf01e90dbf

%
% Compression made this file 26.36% of the uncompressed size.
%


showpage

% stop using temporary dictionary
end

% restore original state
origstate restore

%%Trailer

%%EndDocument
 @endspecial 248 w(poste)-7 b(v)h(ent:)82 b(Goes)66 b(through)i(the)f
(pipeline)4983 4374 y @beginspecial 276 @llx 376 @lly
336 @urx 416 @ury 85 @rwi @setspecial
%%BeginDocument: green-bullet-on-white.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/fred/TeX/STYLES/Prosper/img/green-bullet-on-white.ps
%%Creator: XV Version 3.10a+FLmask  Rev: 12/29/94  -  by John Bradley
%%BoundingBox: 276 376 336 416
%%Pages: 1
%%DocumentFonts:
%%EndComments
%%EndProlog

%%Page: 1 1

% remember original state
/origstate save def

% build a temporary dictionary
20 dict begin

% define space for color conversions
/grays 60 string def  % space for gray scale line
/npixls 0 def
/rgbindx 0 def

% lower left corner
276 376 translate

% size of image (on paper, in 1/72inch coords)
59.97600 40.03200 scale

% define 'colorimage' if it isn't defined
%   ('colortogray' and 'mergeprocs' come from xwd2ps
%     via xgrab)
/colorimage where   % do we know about 'colorimage'?
  { pop }           % yes: pop off the 'dict' returned
  {                 % no:  define one
    /colortogray {  % define an RGB->I function
      /rgbdata exch store    % call input 'rgbdata'
      rgbdata length 3 idiv
      /npixls exch store
      /rgbindx 0 store
      0 1 npixls 1 sub {
        grays exch
        rgbdata rgbindx       get 20 mul    % Red
        rgbdata rgbindx 1 add get 32 mul    % Green
        rgbdata rgbindx 2 add get 12 mul    % Blue
        add add 64 idiv      % I = .5G + .31R + .18B
        put
        /rgbindx rgbindx 3 add store
      } for
      grays 0 npixls getinterval
    } bind def

    % Utility procedure for colorimage operator.
    % This procedure takes two procedures off the
    % stack and merges them into a single procedure.

    /mergeprocs { % def
      dup length
      3 -1 roll
      dup
      length
      dup
      5 1 roll
      3 -1 roll
      add
      array cvx
      dup
      3 -1 roll
      0 exch
      putinterval
      dup
      4 2 roll
      putinterval
    } bind def

    /colorimage { % def
      pop pop     % remove 'false 3' operands
      {colortogray} mergeprocs
      image
    } bind def
  } ifelse          % end of 'false' case



% define the colormap
/cmap 723 string def


% load up the colormap
currentfile cmap readhexstring
041808 049008 8c948c 045204 4c544c 04c804 84e284 449644 c4cbc4 0c380e 
04ac07 cce6cc 345e2c e4e7e4 046604 2c3a2c 347234 e4fee2 048208 64cc60 
34922c 24b224 04e404 044604 647264 242623 049f07 8cae8c 04bc06 24c61c 
f4f8f3 1c541c 04d804 1c621c 1c7220 0c280d 14910f 045e04 047c04 ccdcd0 
14ac18 1c481c 747473 04d105 0c6c0b 24852a 1c381c f4f1f3 acafac f4fef5 
0c310c acc6ac 049708 a4a4a3 3c4a44 148314 144812 9cea94 04b405 149e14 
1cbc1c 044004 e4fef4 dcdddd 748274 5c5959 4cba54 145b11 145413 147412 
c4fec4 e4f1e7 146411 088a0a 243028 09c207 fcf8f3 147c13 14c80e acceac 
3c3939 04f405 044e07 07a608 14d00f 0c1f10 0c900b d4d3d4 ecfee3 1c291d 
0c6e14 bcbfbd d4f6d4 909a94 4c5a50 0cac08 24ba24 547e54 0cbc0a 0c5c16 
0c7c0b fcf1fb acb8ac 1c311c aca7a9 e2e2e2 a4e2a4 0cc80a 6c9a6c 143715 
0c650a 0c840b 07de06 14970c 0c980a 0cb40a 848583 ecf0f0 c3c6c3 0c540d 
0c740c cccccc 74ce6c 30a02c 04ec05 54aa5c 6cb66c 9cfa9c 2c862c 5c926c 
6ca674 b4deac 9cda9c 34aa2c 6c7e6c acfeac 448244 34d22c 7d7d7c 6c6d6c 
445644 4c4d4c 1c7a19 1c3e1c 3c3f3c 2c422c 7c9a84 54c254 dceadc 144014 
343231 bccebc bcbabc 447244 6c6664 9c9d9c 7caa7c 349a38 6c7a74 84b69c 
1c4e18 898a89 ccfadc 1c6c2c b8e2c0 1c8a24 a1aaa1 3c4e3c 5f5e5c d8fed8 
24be24 78d670 688668 148a14 14a618 145624 0c480e 2c292b 142916 1c921c 
d4dad9 243828 143017 b4d2bc b4b7b5 1c961c 8c868c 247e24 144e13 04fa04 
246224 fcfefc 0c4e0c ace2b4 3caa3c 244e24 0c180c 949394 545454 ece9ec 
343634 2cb127 6c736c 0ca00c 0cda08 0c5c0b 0ccf06 146a0c b4b2b4 646464 
b4c2b4 0c3f0c ecfdf9 e4dedc ccfdcc 2c2f2b 142214 146b16 c4c2c2 545b54 
2cb62c 74ba74 346634 b4fcb0 244224 444242 246a24 e4feec 0ce204 f4f9fc 
f4eefc 444744 54b654 fcf9fc 0c9114 dcd6d4 ecfeec 0c7b14 0cc614 0c6314 
0c8414 
pop pop   % lose return values from readhexstring


% rlecmapimage expects to have 'w h bits matrix' on stack
/rlecmapimage {
  /buffer 1 string def
  /rgbval 3 string def
  /block  384 string def

  % proc to read a block from file, and return RGB data
  { currentfile buffer readhexstring pop
    /bcount exch 0 get store
    bcount 128 ge
    {  % it's a non-run block
      0 1 bcount 128 sub
      { currentfile buffer readhexstring pop pop

        % look up value in color map
        /rgbval cmap buffer 0 get 3 mul 3 getinterval store

        % and put it in position i*3 in block
        block exch 3 mul rgbval putinterval
      } for
      block  0  bcount 127 sub 3 mul  getinterval
    }

    { % else it's a run block
      currentfile buffer readhexstring pop pop

      % look up value in colormap
      /rgbval cmap buffer 0 get 3 mul 3 getinterval store

      0 1 bcount { block exch 3 mul rgbval putinterval } for

      block 0 bcount 1 add 3 mul getinterval
    } ifelse
  } % end of proc
  false 3 colorimage
} bind def


60 40 8			% dimensions of data
[60 0 0 -40 0 40]		% mapping matrix
rlecmapimage

10bf8131bf05bf03e98165e902e9046587bf3158ec31bfe9658265e9bf09bf
10bf8131bf04bf81e9bf01bf02e98265bfe982e965e901e981bf318131ec82ecbfe982e9
65bf0abf
12bf82751ebf83bf1ebf318231ec3102318111318131bf81bfe901e981bf318131bf01bf
01e90bbf
0fbf02e901bf023101ec021101a981d6a981a9118111318131bf14bf
0fbf8165e901e988e5bfd4ecd66add07808c80149dc2137f46a911d431bfe981e9bf0fbf

0fbf01e982bfe9318331a49ce28fe2454d37562456dc71567bab87a9d4bf81bfe981e9bf
81bf318131bf0abf
10bf8ac775bf311bde43224d37568656cb535f1a733c893cae8506a91131bfe9bf01bf81
58bf0abf
0fbf911ebf31b761a0442245ed56721a530a3a4e3a813a4e864e73c94246e3bf10bf
07bf81e9bf82bfe9bf92bf1ebf31ec4f0c38e2ef8e4d49561a530a3a6283624b052b8a2b
ce4e60c2dfe331bf4cbf0cbf
0abf81e9bf82bfe9ec8eec83de1f21778e786f01341a0a3a1c851c4b052b20168b162054
aa93df11312fe965bf0abf
0ebf8d3111883d77cdcf78646f0134530a810a1c911c4ece20167c517c16542893a9ec31
e965bf0abf
08bf01e999bfe91ebf316cc07743cd45786f49561a530a3a624b6b2b707c510151877c70
4edcaba9bfe981e9bf0abf
0bbf01e985bf27d34352cf90cf0e4d2656011a530a1c62ee2b20167c5102518816cc1db9
d611bfe9bf0abf
07bf81e9bf01bf90e9bf4c86d3445277d92c786f49721a0a3a853a4b0520167c827c51bd
88bd5116e44b157a11bf0cbf
0dbf8d3f0fc33d4403cfbb0e3756011a0a860a624b2b20167c817c5102510116854b897b
a911bf0bbf
08bf82e9e5bf97bf75dab209bcc021ef254d2649561a533a1c4b052b70167c037c811620
85203a853911bf0bbf
0bbf0131869eb6d3b0bc7748884845646f561acb0a7382734b2b812b1683167c16cc01cc
012b844b2813d4bf0bbf
0abf0231955e236db0c04463cf45646f5634cb533a73624b2b2016821670548854ce2b20
4b28e831bf0bbf
0abf023183b5b6d3b089b044436e45786f49341a871a0a733a626b2b200120896b4e6b05
2b1c5f9decbf0bbf
09bf8131bf97bf31d82e09d3b044cd485a786f1201cb1a530a73621c052b852b054e4b1c
0585053a282d58bf0bbf
0bbf9431bf556709b03844cd482c7864125634cb1a5f0a7382734b0501050162011c854b
0aae2d58bf0bbf
0bbf0131934a236dd3b0bc7743485a786f1201341acb535f3a813a1c011c0173023a8453
3b1458bf0bbf
0bbf8431bf0455098309d338778277ef2c852c266f1201348134cb83cb530a3a013a810a
5f815f0a850a1ab37d58bf0bbf
08bf81e9bf93bf31bf18d83209d338c044cd6e0e2c64126f0172837271cb5382530a5383
53ae531a851a01a57e58bf0bbf
0bbf01e5837600230901098138c082c0482c862c7864126f49568156728272341a811a72
0272864912bb841131bf0abf
03bf94e9bfe9bfe9bf1ebf1ebf275923b632099538c044ef81ef7881786481646f816fad
84adea01ea560156882449ad2da3115831bf0abf
04bf02e992654ce61e75bf0d185523b66d0995bcc043cd2c812c7881786483646f64f001
f08b6f496f49642d6382e3314cbf0abf
01bf85e9e5e9652fc784c7693fc7698a69c7d2b200232eb60929bc84bc6343ef2c862c78
45784d78ed82ed6f6489644d45a3afa2114c31bf0abf
01e58175c783c769d5eb8ceb797679dab87908db67c4b66d876d9538b0447743ef84ef6e
2c78458e455a457864788ecfbe9fd4315831bf0abf
88e5750d3f5779da98d083d0689b3501358d5d0236c45567b6320995b04477cd92cdef6e
2c6e5ad95acf782c4517813e31bf2fbf0bbf
887569575bd0689bc5ba83ba8a2a8a878aca2a74db5955b284b23209d3b081b077017701
cd016e02ef876e2c6e4810a4d4bf01bf814cbf0abf
873f79b835c5ba2a9a829aa8410141868de1d104c690d881d85583552e6d958b9538b0c0
77cd03cd6377afcd84cd4321c1d483d4e9654c814cbf0abf
88575b9b742ad1418de181e15081509603968450c8d759d881d8b283b2326d0981099585
9538bcb0381f871f95c3995ca931bf81bfe981e9bf0bbf
8779b8c58ad1c6e750855096d7b119b104b184d7b119d855845523b2b66d016d83952995
2987296de09211d431bf01bf01e90cbf
8979d0c52aa88de15096b181b119041901b18796c80fd74a59b2b602b6016d86326d328f
ac0b318331bf31bf01bf81e9bf0cbf
88575b9b742ad1c68de186e1c850c850c850865096c850e1e70487045e8ca7912e672e85
2e8cac33473101318158bf02bf82e9bfe981e9bf0abf
8b3f799835c5742a8bd1a8dbc683c68dc68d818dc601c68cdbd1ca40a15da66697274711
31863158bf31bf31bf82bf4ce985e9bfe9bfe9bf0abf
8bc76957dab8359bc5a1748a2a052a018a01748b029ba6665b279447ec311ebf83bf581e
bf82bf4cbf02bf82e9bfe981e9bf0abf
881e75693f57795bb8d082d068350135029b0135013088b8985b7608b40d751e811ebf83
bf1e75bf81bf4c814cbf05bf81e9bf0bbf
83e9e52fc782c7693f823f5779817976027681da760276827957b482b4c7750175822fe5
bf82bf4cbf01bf814cbf81bfe981e9bf01bf01e90dbf

%
% Compression made this file 26.36% of the uncompressed size.
%


showpage

% stop using temporary dictionary
end

% restore original state
origstate restore

%%Trailer

%%EndDocument
 @endspecial 248 w(memf)-7 b(ence)66 b(:)83 b(Pre)-7
b(vious)66 b(memor)7 b(y)66 b(oper)n(ations)h(issued)4983
4695 y @beginspecial 276 @llx 376 @lly 336 @urx 416 @ury
85 @rwi @setspecial
%%BeginDocument: green-bullet-on-white.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/fred/TeX/STYLES/Prosper/img/green-bullet-on-white.ps
%%Creator: XV Version 3.10a+FLmask  Rev: 12/29/94  -  by John Bradley
%%BoundingBox: 276 376 336 416
%%Pages: 1
%%DocumentFonts:
%%EndComments
%%EndProlog

%%Page: 1 1

% remember original state
/origstate save def

% build a temporary dictionary
20 dict begin

% define space for color conversions
/grays 60 string def  % space for gray scale line
/npixls 0 def
/rgbindx 0 def

% lower left corner
276 376 translate

% size of image (on paper, in 1/72inch coords)
59.97600 40.03200 scale

% define 'colorimage' if it isn't defined
%   ('colortogray' and 'mergeprocs' come from xwd2ps
%     via xgrab)
/colorimage where   % do we know about 'colorimage'?
  { pop }           % yes: pop off the 'dict' returned
  {                 % no:  define one
    /colortogray {  % define an RGB->I function
      /rgbdata exch store    % call input 'rgbdata'
      rgbdata length 3 idiv
      /npixls exch store
      /rgbindx 0 store
      0 1 npixls 1 sub {
        grays exch
        rgbdata rgbindx       get 20 mul    % Red
        rgbdata rgbindx 1 add get 32 mul    % Green
        rgbdata rgbindx 2 add get 12 mul    % Blue
        add add 64 idiv      % I = .5G + .31R + .18B
        put
        /rgbindx rgbindx 3 add store
      } for
      grays 0 npixls getinterval
    } bind def

    % Utility procedure for colorimage operator.
    % This procedure takes two procedures off the
    % stack and merges them into a single procedure.

    /mergeprocs { % def
      dup length
      3 -1 roll
      dup
      length
      dup
      5 1 roll
      3 -1 roll
      add
      array cvx
      dup
      3 -1 roll
      0 exch
      putinterval
      dup
      4 2 roll
      putinterval
    } bind def

    /colorimage { % def
      pop pop     % remove 'false 3' operands
      {colortogray} mergeprocs
      image
    } bind def
  } ifelse          % end of 'false' case



% define the colormap
/cmap 723 string def


% load up the colormap
currentfile cmap readhexstring
041808 049008 8c948c 045204 4c544c 04c804 84e284 449644 c4cbc4 0c380e 
04ac07 cce6cc 345e2c e4e7e4 046604 2c3a2c 347234 e4fee2 048208 64cc60 
34922c 24b224 04e404 044604 647264 242623 049f07 8cae8c 04bc06 24c61c 
f4f8f3 1c541c 04d804 1c621c 1c7220 0c280d 14910f 045e04 047c04 ccdcd0 
14ac18 1c481c 747473 04d105 0c6c0b 24852a 1c381c f4f1f3 acafac f4fef5 
0c310c acc6ac 049708 a4a4a3 3c4a44 148314 144812 9cea94 04b405 149e14 
1cbc1c 044004 e4fef4 dcdddd 748274 5c5959 4cba54 145b11 145413 147412 
c4fec4 e4f1e7 146411 088a0a 243028 09c207 fcf8f3 147c13 14c80e acceac 
3c3939 04f405 044e07 07a608 14d00f 0c1f10 0c900b d4d3d4 ecfee3 1c291d 
0c6e14 bcbfbd d4f6d4 909a94 4c5a50 0cac08 24ba24 547e54 0cbc0a 0c5c16 
0c7c0b fcf1fb acb8ac 1c311c aca7a9 e2e2e2 a4e2a4 0cc80a 6c9a6c 143715 
0c650a 0c840b 07de06 14970c 0c980a 0cb40a 848583 ecf0f0 c3c6c3 0c540d 
0c740c cccccc 74ce6c 30a02c 04ec05 54aa5c 6cb66c 9cfa9c 2c862c 5c926c 
6ca674 b4deac 9cda9c 34aa2c 6c7e6c acfeac 448244 34d22c 7d7d7c 6c6d6c 
445644 4c4d4c 1c7a19 1c3e1c 3c3f3c 2c422c 7c9a84 54c254 dceadc 144014 
343231 bccebc bcbabc 447244 6c6664 9c9d9c 7caa7c 349a38 6c7a74 84b69c 
1c4e18 898a89 ccfadc 1c6c2c b8e2c0 1c8a24 a1aaa1 3c4e3c 5f5e5c d8fed8 
24be24 78d670 688668 148a14 14a618 145624 0c480e 2c292b 142916 1c921c 
d4dad9 243828 143017 b4d2bc b4b7b5 1c961c 8c868c 247e24 144e13 04fa04 
246224 fcfefc 0c4e0c ace2b4 3caa3c 244e24 0c180c 949394 545454 ece9ec 
343634 2cb127 6c736c 0ca00c 0cda08 0c5c0b 0ccf06 146a0c b4b2b4 646464 
b4c2b4 0c3f0c ecfdf9 e4dedc ccfdcc 2c2f2b 142214 146b16 c4c2c2 545b54 
2cb62c 74ba74 346634 b4fcb0 244224 444242 246a24 e4feec 0ce204 f4f9fc 
f4eefc 444744 54b654 fcf9fc 0c9114 dcd6d4 ecfeec 0c7b14 0cc614 0c6314 
0c8414 
pop pop   % lose return values from readhexstring


% rlecmapimage expects to have 'w h bits matrix' on stack
/rlecmapimage {
  /buffer 1 string def
  /rgbval 3 string def
  /block  384 string def

  % proc to read a block from file, and return RGB data
  { currentfile buffer readhexstring pop
    /bcount exch 0 get store
    bcount 128 ge
    {  % it's a non-run block
      0 1 bcount 128 sub
      { currentfile buffer readhexstring pop pop

        % look up value in color map
        /rgbval cmap buffer 0 get 3 mul 3 getinterval store

        % and put it in position i*3 in block
        block exch 3 mul rgbval putinterval
      } for
      block  0  bcount 127 sub 3 mul  getinterval
    }

    { % else it's a run block
      currentfile buffer readhexstring pop pop

      % look up value in colormap
      /rgbval cmap buffer 0 get 3 mul 3 getinterval store

      0 1 bcount { block exch 3 mul rgbval putinterval } for

      block 0 bcount 1 add 3 mul getinterval
    } ifelse
  } % end of proc
  false 3 colorimage
} bind def


60 40 8			% dimensions of data
[60 0 0 -40 0 40]		% mapping matrix
rlecmapimage

10bf8131bf05bf03e98165e902e9046587bf3158ec31bfe9658265e9bf09bf
10bf8131bf04bf81e9bf01bf02e98265bfe982e965e901e981bf318131ec82ecbfe982e9
65bf0abf
12bf82751ebf83bf1ebf318231ec3102318111318131bf81bfe901e981bf318131bf01bf
01e90bbf
0fbf02e901bf023101ec021101a981d6a981a9118111318131bf14bf
0fbf8165e901e988e5bfd4ecd66add07808c80149dc2137f46a911d431bfe981e9bf0fbf

0fbf01e982bfe9318331a49ce28fe2454d37562456dc71567bab87a9d4bf81bfe981e9bf
81bf318131bf0abf
10bf8ac775bf311bde43224d37568656cb535f1a733c893cae8506a91131bfe9bf01bf81
58bf0abf
0fbf911ebf31b761a0442245ed56721a530a3a4e3a813a4e864e73c94246e3bf10bf
07bf81e9bf82bfe9bf92bf1ebf31ec4f0c38e2ef8e4d49561a530a3a6283624b052b8a2b
ce4e60c2dfe331bf4cbf0cbf
0abf81e9bf82bfe9ec8eec83de1f21778e786f01341a0a3a1c851c4b052b20168b162054
aa93df11312fe965bf0abf
0ebf8d3111883d77cdcf78646f0134530a810a1c911c4ece20167c517c16542893a9ec31
e965bf0abf
08bf01e999bfe91ebf316cc07743cd45786f49561a530a3a624b6b2b707c510151877c70
4edcaba9bfe981e9bf0abf
0bbf01e985bf27d34352cf90cf0e4d2656011a530a1c62ee2b20167c5102518816cc1db9
d611bfe9bf0abf
07bf81e9bf01bf90e9bf4c86d3445277d92c786f49721a0a3a853a4b0520167c827c51bd
88bd5116e44b157a11bf0cbf
0dbf8d3f0fc33d4403cfbb0e3756011a0a860a624b2b20167c817c5102510116854b897b
a911bf0bbf
08bf82e9e5bf97bf75dab209bcc021ef254d2649561a533a1c4b052b70167c037c811620
85203a853911bf0bbf
0bbf0131869eb6d3b0bc7748884845646f561acb0a7382734b2b812b1683167c16cc01cc
012b844b2813d4bf0bbf
0abf0231955e236db0c04463cf45646f5634cb533a73624b2b2016821670548854ce2b20
4b28e831bf0bbf
0abf023183b5b6d3b089b044436e45786f49341a871a0a733a626b2b200120896b4e6b05
2b1c5f9decbf0bbf
09bf8131bf97bf31d82e09d3b044cd485a786f1201cb1a530a73621c052b852b054e4b1c
0585053a282d58bf0bbf
0bbf9431bf556709b03844cd482c7864125634cb1a5f0a7382734b0501050162011c854b
0aae2d58bf0bbf
0bbf0131934a236dd3b0bc7743485a786f1201341acb535f3a813a1c011c0173023a8453
3b1458bf0bbf
0bbf8431bf0455098309d338778277ef2c852c266f1201348134cb83cb530a3a013a810a
5f815f0a850a1ab37d58bf0bbf
08bf81e9bf93bf31bf18d83209d338c044cd6e0e2c64126f0172837271cb5382530a5383
53ae531a851a01a57e58bf0bbf
0bbf01e5837600230901098138c082c0482c862c7864126f49568156728272341a811a72
0272864912bb841131bf0abf
03bf94e9bfe9bfe9bf1ebf1ebf275923b632099538c044ef81ef7881786481646f816fad
84adea01ea560156882449ad2da3115831bf0abf
04bf02e992654ce61e75bf0d185523b66d0995bcc043cd2c812c7881786483646f64f001
f08b6f496f49642d6382e3314cbf0abf
01bf85e9e5e9652fc784c7693fc7698a69c7d2b200232eb60929bc84bc6343ef2c862c78
45784d78ed82ed6f6489644d45a3afa2114c31bf0abf
01e58175c783c769d5eb8ceb797679dab87908db67c4b66d876d9538b0447743ef84ef6e
2c78458e455a457864788ecfbe9fd4315831bf0abf
88e5750d3f5779da98d083d0689b3501358d5d0236c45567b6320995b04477cd92cdef6e
2c6e5ad95acf782c4517813e31bf2fbf0bbf
887569575bd0689bc5ba83ba8a2a8a878aca2a74db5955b284b23209d3b081b077017701
cd016e02ef876e2c6e4810a4d4bf01bf814cbf0abf
873f79b835c5ba2a9a829aa8410141868de1d104c690d881d85583552e6d958b9538b0c0
77cd03cd6377afcd84cd4321c1d483d4e9654c814cbf0abf
88575b9b742ad1418de181e15081509603968450c8d759d881d8b283b2326d0981099585
9538bcb0381f871f95c3995ca931bf81bfe981e9bf0bbf
8779b8c58ad1c6e750855096d7b119b104b184d7b119d855845523b2b66d016d83952995
2987296de09211d431bf01bf01e90cbf
8979d0c52aa88de15096b181b119041901b18796c80fd74a59b2b602b6016d86326d328f
ac0b318331bf31bf01bf81e9bf0cbf
88575b9b742ad1c68de186e1c850c850c850865096c850e1e70487045e8ca7912e672e85
2e8cac33473101318158bf02bf82e9bfe981e9bf0abf
8b3f799835c5742a8bd1a8dbc683c68dc68d818dc601c68cdbd1ca40a15da66697274711
31863158bf31bf31bf82bf4ce985e9bfe9bfe9bf0abf
8bc76957dab8359bc5a1748a2a052a018a01748b029ba6665b279447ec311ebf83bf581e
bf82bf4cbf02bf82e9bfe981e9bf0abf
881e75693f57795bb8d082d068350135029b0135013088b8985b7608b40d751e811ebf83
bf1e75bf81bf4c814cbf05bf81e9bf0bbf
83e9e52fc782c7693f823f5779817976027681da760276827957b482b4c7750175822fe5
bf82bf4cbf01bf814cbf81bfe981e9bf01bf01e90dbf

%
% Compression made this file 26.36% of the uncompressed size.
%


showpage

% stop using temporary dictionary
end

% restore original state
origstate restore

%%Trailer

%%EndDocument
 @endspecial 248 w(acquire)l(,release)g(:)82 b(Release)67
b(Consistency)4983 5015 y @beginspecial 276 @llx 376
@lly 336 @urx 416 @ury 85 @rwi @setspecial
%%BeginDocument: green-bullet-on-white.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/fred/TeX/STYLES/Prosper/img/green-bullet-on-white.ps
%%Creator: XV Version 3.10a+FLmask  Rev: 12/29/94  -  by John Bradley
%%BoundingBox: 276 376 336 416
%%Pages: 1
%%DocumentFonts:
%%EndComments
%%EndProlog

%%Page: 1 1

% remember original state
/origstate save def

% build a temporary dictionary
20 dict begin

% define space for color conversions
/grays 60 string def  % space for gray scale line
/npixls 0 def
/rgbindx 0 def

% lower left corner
276 376 translate

% size of image (on paper, in 1/72inch coords)
59.97600 40.03200 scale

% define 'colorimage' if it isn't defined
%   ('colortogray' and 'mergeprocs' come from xwd2ps
%     via xgrab)
/colorimage where   % do we know about 'colorimage'?
  { pop }           % yes: pop off the 'dict' returned
  {                 % no:  define one
    /colortogray {  % define an RGB->I function
      /rgbdata exch store    % call input 'rgbdata'
      rgbdata length 3 idiv
      /npixls exch store
      /rgbindx 0 store
      0 1 npixls 1 sub {
        grays exch
        rgbdata rgbindx       get 20 mul    % Red
        rgbdata rgbindx 1 add get 32 mul    % Green
        rgbdata rgbindx 2 add get 12 mul    % Blue
        add add 64 idiv      % I = .5G + .31R + .18B
        put
        /rgbindx rgbindx 3 add store
      } for
      grays 0 npixls getinterval
    } bind def

    % Utility procedure for colorimage operator.
    % This procedure takes two procedures off the
    % stack and merges them into a single procedure.

    /mergeprocs { % def
      dup length
      3 -1 roll
      dup
      length
      dup
      5 1 roll
      3 -1 roll
      add
      array cvx
      dup
      3 -1 roll
      0 exch
      putinterval
      dup
      4 2 roll
      putinterval
    } bind def

    /colorimage { % def
      pop pop     % remove 'false 3' operands
      {colortogray} mergeprocs
      image
    } bind def
  } ifelse          % end of 'false' case



% define the colormap
/cmap 723 string def


% load up the colormap
currentfile cmap readhexstring
041808 049008 8c948c 045204 4c544c 04c804 84e284 449644 c4cbc4 0c380e 
04ac07 cce6cc 345e2c e4e7e4 046604 2c3a2c 347234 e4fee2 048208 64cc60 
34922c 24b224 04e404 044604 647264 242623 049f07 8cae8c 04bc06 24c61c 
f4f8f3 1c541c 04d804 1c621c 1c7220 0c280d 14910f 045e04 047c04 ccdcd0 
14ac18 1c481c 747473 04d105 0c6c0b 24852a 1c381c f4f1f3 acafac f4fef5 
0c310c acc6ac 049708 a4a4a3 3c4a44 148314 144812 9cea94 04b405 149e14 
1cbc1c 044004 e4fef4 dcdddd 748274 5c5959 4cba54 145b11 145413 147412 
c4fec4 e4f1e7 146411 088a0a 243028 09c207 fcf8f3 147c13 14c80e acceac 
3c3939 04f405 044e07 07a608 14d00f 0c1f10 0c900b d4d3d4 ecfee3 1c291d 
0c6e14 bcbfbd d4f6d4 909a94 4c5a50 0cac08 24ba24 547e54 0cbc0a 0c5c16 
0c7c0b fcf1fb acb8ac 1c311c aca7a9 e2e2e2 a4e2a4 0cc80a 6c9a6c 143715 
0c650a 0c840b 07de06 14970c 0c980a 0cb40a 848583 ecf0f0 c3c6c3 0c540d 
0c740c cccccc 74ce6c 30a02c 04ec05 54aa5c 6cb66c 9cfa9c 2c862c 5c926c 
6ca674 b4deac 9cda9c 34aa2c 6c7e6c acfeac 448244 34d22c 7d7d7c 6c6d6c 
445644 4c4d4c 1c7a19 1c3e1c 3c3f3c 2c422c 7c9a84 54c254 dceadc 144014 
343231 bccebc bcbabc 447244 6c6664 9c9d9c 7caa7c 349a38 6c7a74 84b69c 
1c4e18 898a89 ccfadc 1c6c2c b8e2c0 1c8a24 a1aaa1 3c4e3c 5f5e5c d8fed8 
24be24 78d670 688668 148a14 14a618 145624 0c480e 2c292b 142916 1c921c 
d4dad9 243828 143017 b4d2bc b4b7b5 1c961c 8c868c 247e24 144e13 04fa04 
246224 fcfefc 0c4e0c ace2b4 3caa3c 244e24 0c180c 949394 545454 ece9ec 
343634 2cb127 6c736c 0ca00c 0cda08 0c5c0b 0ccf06 146a0c b4b2b4 646464 
b4c2b4 0c3f0c ecfdf9 e4dedc ccfdcc 2c2f2b 142214 146b16 c4c2c2 545b54 
2cb62c 74ba74 346634 b4fcb0 244224 444242 246a24 e4feec 0ce204 f4f9fc 
f4eefc 444744 54b654 fcf9fc 0c9114 dcd6d4 ecfeec 0c7b14 0cc614 0c6314 
0c8414 
pop pop   % lose return values from readhexstring


% rlecmapimage expects to have 'w h bits matrix' on stack
/rlecmapimage {
  /buffer 1 string def
  /rgbval 3 string def
  /block  384 string def

  % proc to read a block from file, and return RGB data
  { currentfile buffer readhexstring pop
    /bcount exch 0 get store
    bcount 128 ge
    {  % it's a non-run block
      0 1 bcount 128 sub
      { currentfile buffer readhexstring pop pop

        % look up value in color map
        /rgbval cmap buffer 0 get 3 mul 3 getinterval store

        % and put it in position i*3 in block
        block exch 3 mul rgbval putinterval
      } for
      block  0  bcount 127 sub 3 mul  getinterval
    }

    { % else it's a run block
      currentfile buffer readhexstring pop pop

      % look up value in colormap
      /rgbval cmap buffer 0 get 3 mul 3 getinterval store

      0 1 bcount { block exch 3 mul rgbval putinterval } for

      block 0 bcount 1 add 3 mul getinterval
    } ifelse
  } % end of proc
  false 3 colorimage
} bind def


60 40 8			% dimensions of data
[60 0 0 -40 0 40]		% mapping matrix
rlecmapimage

10bf8131bf05bf03e98165e902e9046587bf3158ec31bfe9658265e9bf09bf
10bf8131bf04bf81e9bf01bf02e98265bfe982e965e901e981bf318131ec82ecbfe982e9
65bf0abf
12bf82751ebf83bf1ebf318231ec3102318111318131bf81bfe901e981bf318131bf01bf
01e90bbf
0fbf02e901bf023101ec021101a981d6a981a9118111318131bf14bf
0fbf8165e901e988e5bfd4ecd66add07808c80149dc2137f46a911d431bfe981e9bf0fbf

0fbf01e982bfe9318331a49ce28fe2454d37562456dc71567bab87a9d4bf81bfe981e9bf
81bf318131bf0abf
10bf8ac775bf311bde43224d37568656cb535f1a733c893cae8506a91131bfe9bf01bf81
58bf0abf
0fbf911ebf31b761a0442245ed56721a530a3a4e3a813a4e864e73c94246e3bf10bf
07bf81e9bf82bfe9bf92bf1ebf31ec4f0c38e2ef8e4d49561a530a3a6283624b052b8a2b
ce4e60c2dfe331bf4cbf0cbf
0abf81e9bf82bfe9ec8eec83de1f21778e786f01341a0a3a1c851c4b052b20168b162054
aa93df11312fe965bf0abf
0ebf8d3111883d77cdcf78646f0134530a810a1c911c4ece20167c517c16542893a9ec31
e965bf0abf
08bf01e999bfe91ebf316cc07743cd45786f49561a530a3a624b6b2b707c510151877c70
4edcaba9bfe981e9bf0abf
0bbf01e985bf27d34352cf90cf0e4d2656011a530a1c62ee2b20167c5102518816cc1db9
d611bfe9bf0abf
07bf81e9bf01bf90e9bf4c86d3445277d92c786f49721a0a3a853a4b0520167c827c51bd
88bd5116e44b157a11bf0cbf
0dbf8d3f0fc33d4403cfbb0e3756011a0a860a624b2b20167c817c5102510116854b897b
a911bf0bbf
08bf82e9e5bf97bf75dab209bcc021ef254d2649561a533a1c4b052b70167c037c811620
85203a853911bf0bbf
0bbf0131869eb6d3b0bc7748884845646f561acb0a7382734b2b812b1683167c16cc01cc
012b844b2813d4bf0bbf
0abf0231955e236db0c04463cf45646f5634cb533a73624b2b2016821670548854ce2b20
4b28e831bf0bbf
0abf023183b5b6d3b089b044436e45786f49341a871a0a733a626b2b200120896b4e6b05
2b1c5f9decbf0bbf
09bf8131bf97bf31d82e09d3b044cd485a786f1201cb1a530a73621c052b852b054e4b1c
0585053a282d58bf0bbf
0bbf9431bf556709b03844cd482c7864125634cb1a5f0a7382734b0501050162011c854b
0aae2d58bf0bbf
0bbf0131934a236dd3b0bc7743485a786f1201341acb535f3a813a1c011c0173023a8453
3b1458bf0bbf
0bbf8431bf0455098309d338778277ef2c852c266f1201348134cb83cb530a3a013a810a
5f815f0a850a1ab37d58bf0bbf
08bf81e9bf93bf31bf18d83209d338c044cd6e0e2c64126f0172837271cb5382530a5383
53ae531a851a01a57e58bf0bbf
0bbf01e5837600230901098138c082c0482c862c7864126f49568156728272341a811a72
0272864912bb841131bf0abf
03bf94e9bfe9bfe9bf1ebf1ebf275923b632099538c044ef81ef7881786481646f816fad
84adea01ea560156882449ad2da3115831bf0abf
04bf02e992654ce61e75bf0d185523b66d0995bcc043cd2c812c7881786483646f64f001
f08b6f496f49642d6382e3314cbf0abf
01bf85e9e5e9652fc784c7693fc7698a69c7d2b200232eb60929bc84bc6343ef2c862c78
45784d78ed82ed6f6489644d45a3afa2114c31bf0abf
01e58175c783c769d5eb8ceb797679dab87908db67c4b66d876d9538b0447743ef84ef6e
2c78458e455a457864788ecfbe9fd4315831bf0abf
88e5750d3f5779da98d083d0689b3501358d5d0236c45567b6320995b04477cd92cdef6e
2c6e5ad95acf782c4517813e31bf2fbf0bbf
887569575bd0689bc5ba83ba8a2a8a878aca2a74db5955b284b23209d3b081b077017701
cd016e02ef876e2c6e4810a4d4bf01bf814cbf0abf
873f79b835c5ba2a9a829aa8410141868de1d104c690d881d85583552e6d958b9538b0c0
77cd03cd6377afcd84cd4321c1d483d4e9654c814cbf0abf
88575b9b742ad1418de181e15081509603968450c8d759d881d8b283b2326d0981099585
9538bcb0381f871f95c3995ca931bf81bfe981e9bf0bbf
8779b8c58ad1c6e750855096d7b119b104b184d7b119d855845523b2b66d016d83952995
2987296de09211d431bf01bf01e90cbf
8979d0c52aa88de15096b181b119041901b18796c80fd74a59b2b602b6016d86326d328f
ac0b318331bf31bf01bf81e9bf0cbf
88575b9b742ad1c68de186e1c850c850c850865096c850e1e70487045e8ca7912e672e85
2e8cac33473101318158bf02bf82e9bfe981e9bf0abf
8b3f799835c5742a8bd1a8dbc683c68dc68d818dc601c68cdbd1ca40a15da66697274711
31863158bf31bf31bf82bf4ce985e9bfe9bfe9bf0abf
8bc76957dab8359bc5a1748a2a052a018a01748b029ba6665b279447ec311ebf83bf581e
bf82bf4cbf02bf82e9bfe981e9bf0abf
881e75693f57795bb8d082d068350135029b0135013088b8985b7608b40d751e811ebf83
bf1e75bf81bf4c814cbf05bf81e9bf0bbf
83e9e52fc782c7693f823f5779817976027681da760276827957b482b4c7750175822fe5
bf82bf4cbf01bf814cbf81bfe981e9bf01bf01e90dbf

%
% Compression made this file 26.36% of the uncompressed size.
%


showpage

% stop using temporary dictionary
end

% restore original state
origstate restore

%%Trailer

%%EndDocument
 @endspecial 248 w(f)-7 b(ast_sim_begin,)65 b(f)-7 b(ast_sim_end)10245
5222 y
 0 setgray
 10245 5222 a 4500 6000 a
 tx@Dict begin -90 Rot  end
 4500 6000 a eop
%%Page: 10 10
10 9 bop 4500 6000 a
 tx@Dict begin 90 Rot  end
 4500 6000 a 5981 1792 a @beginspecial
-168 @llx 371 @lly 782 @urx 421 @ury 2834 @rwi 283 @rhi
@setspecial
%%BeginDocument: barre-rico.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /ufs/goualard/TEMP/barre_hor.ps
%%Creator: XV Version 3.10a  Rev: 12/29/94 (PNG patch 1.2)  -  by John Bradley
%%BoundingBox: -168 371 782 421
%%Pages: 1
%%DocumentFonts:
%%EndComments
%%EndProlog

%%Page: 1 1

% remember original state
/origstate save def

% build a temporary dictionary
20 dict begin

% define space for color conversions
/grays 950 string def  % space for gray scale line
/npixls 0 def
/rgbindx 0 def

% lower left corner
-168 371 translate

% size of image (on paper, in 1/72inch coords)
949.96800 49.96800 scale

% define 'colorimage' if it isn't defined
%   ('colortogray' and 'mergeprocs' come from xwd2ps
%     via xgrab)
/colorimage where   % do we know about 'colorimage'?
  { pop }           % yes: pop off the 'dict' returned
  {                 % no:  define one
    /colortogray {  % define an RGB->I function
      /rgbdata exch store    % call input 'rgbdata'
      rgbdata length 3 idiv
      /npixls exch store
      /rgbindx 0 store
      0 1 npixls 1 sub {
        grays exch
        rgbdata rgbindx       get 20 mul    % Red
        rgbdata rgbindx 1 add get 32 mul    % Green
        rgbdata rgbindx 2 add get 12 mul    % Blue
        add add 64 idiv      % I = .5G + .31R + .18B
        put
        /rgbindx rgbindx 3 add store
      } for
      grays 0 npixls getinterval
    } bind def

    % Utility procedure for colorimage operator.
    % This procedure takes two procedures off the
    % stack and merges them into a single procedure.

    /mergeprocs { % def
      dup length
      3 -1 roll
      dup
      length
      dup
      5 1 roll
      3 -1 roll
      add
      array cvx
      dup
      3 -1 roll
      0 exch
      putinterval
      dup
      4 2 roll
      putinterval
    } bind def

    /colorimage { % def
      pop pop     % remove 'false 3' operands
      {colortogray} mergeprocs
      image
    } bind def
  } ifelse          % end of 'false' case



% define the colormap
/cmap 117 string def


% load up the colormap
currentfile cmap readhexstring
bcfe04 dcfe84 ccfe44 ecfec4 c4fe24 d4fe64 f4fee4 e4fea4 bcfe14 ccfe54 
f4fed4 c4fe34 d4fe74 fcfef4 ecfeb4 e4fe94 f4fecc fcfee4 ecfeac c4fe1c 
d4fe54 ccfe3c dcfe74 bcfe0c dcfe8c ccfe4c ecfecc c4fe2c d4fe6c e4feac 
bcfe1c f4fedc c4fe3c fcfefc ecfebc e4fe9c fcfeec d4fe5c dcfe7c 
pop pop   % lose return values from readhexstring


% rlecmapimage expects to have 'w h bits matrix' on stack
/rlecmapimage {
  /buffer 1 string def
  /rgbval 3 string def
  /block  384 string def

  % proc to read a block from file, and return RGB data
  { currentfile buffer readhexstring pop
    /bcount exch 0 get store
    bcount 128 ge
    {  % it's a non-run block
      0 1 bcount 128 sub
      { currentfile buffer readhexstring pop pop

        % look up value in color map
        /rgbval cmap buffer 0 get 3 mul 3 getinterval store

        % and put it in position i*3 in block
        block exch 3 mul rgbval putinterval
      } for
      block  0  bcount 127 sub 3 mul  getinterval
    }

    { % else it's a run block
      currentfile buffer readhexstring pop pop

      % look up value in colormap
      /rgbval cmap buffer 0 get 3 mul 3 getinterval store

      0 1 bcount { block exch 3 mul rgbval putinterval } for

      block 0 bcount 1 add 3 mul getinterval
    } ifelse
  } % end of proc
  false 3 colorimage
} bind def


950 50 8			% dimensions of data
[950 0 0 -50 0 50]		% mapping matrix
rlecmapimage

7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f210221870d1f220e220311212a21
7f217f217f217f217f217f2175218211030e820e220e820e220e860e220e23050b048404
090e24212a21
7f217f217f217f217f217f2171218e110312260b041e131e131e131e131e871e17001702
1d24212c21
7f217f217f217f217f217f216921830d1f220e870e221226200408000b00841702070d21
0521842403100d212321
7f217f217f217f217f217f2121218524220f231f213a218f0d0a220e220e23051b041e13
1e0817000c008408190706210421851103221f0d212521
7f217f217f217f217f217f211e2189240e1c1b17000825242136218a0d1026021b041e13
081700110085172001030d210421840316030d212821
7f217f217f217f217f21342186111a120f070a215721860d1110220e220e860e12182504
17000300821b1f212521851f0e2326230e080e841d010908001100820820090209840c1d
1a06210521841026230d212a21
7f217f217f217f21792186241f10220e220e820e220e820e220e820e220e820e220e820e
220e830e070f01010182070a2117218b0610231c1508001708090a2151218e0d1f101d01
14201b1e131e131e08000700820c0d211021840d100311210921881103220e07050b0800
8400171e081e821e081e851e081e0817001000851e2009181a210b21850d22261d24212c
21
7f217f217f217f21472184241f10220e820e220e820e220e820e220e820e220e820e220e
820e220e810e2283221f0d210e219a241f10070f1c09151e041e131e131e131e131e131e
131e131e131e821e080002008b17081410210d1110220e220e820e220e820e220e010e81
2301880126012616191b08000500820422212f2182240d211921890d0a0e072625150417
00100082201a210921890d1110220e23011620048304051f210421891103231c15131e08
1700190082171e090309820c1a210e21841f0e0a0d212e21
7f217f217f217f213f2190241f100e070f011c1920041e131e081e0882081e0882081e08
82081e0882081e0803088304250a2107218b241f030e12181619151e08001d00811e268c
2614201b041e131e131e131e088108178117000f0082091f211521840d0610220e0f0e88
120f012625020c11211321890d0a22121809040817001300831e050a2105218a0d1f101d
0114201b1e170004008408260e220e860e230c020417001800821e2009020982181a2114
21810d213321
7f211221842422121f217f217f217f211221850d0a220e220e820e220e820e220e820e22
0e010e881d0f1605090b041e178117001a008f1e22210d1110221d0f0116190b041e1781
1700220001171f00820b2221102189111022120f0125151b1e011e81081e821e081e821e
081e821e081e821e081e821e1700030082171c0e110e861d01251b1e170015008220181d
021d81220e020e86070119150417000b0086081e131e08170019008308091d210c21830d
1f24214121
7f210721830d0a220e040e83230504088308052421492185240a22230f01130182070a21
7f2106218c240a03220e220e220e220e1d0f840f01231f217f210a2199240a221d0f0116
191b1e131e131e131e131e131e131e131e17002300810b16871609200413081700490087
171e051d1f10220e0a0e8712232625201b1e178117001b000108011e81081e821e081e82
1e081e821e081e821e081e831e0817000c0085171e201e08000300831720090c840c090b
1b1e871e081e081e0817001f0083081e201e821e20090809820c03210b21860d0a222307
0d210521010d3a21
7f21042188112218141b13081e088108178117000300821b1f2140218b241f100e070f1c
25021b1317811700140083081410217f218c241f10070f05021b04131e131e011e810817
811700010093170207220e220e220e220e220e220e22120f18018301231f216e218c0d0a
22120f0116191b130817004c000117811e208120090509822008002c008308200c188518
0c09021b1e821e081e821e081e821e081e811e08810817811700400081171e871e09181a
061c08000300851e200b1e1700250083171e200983091806211721820d110a010a841d26
1918214421
6c219a1103220e220e220e220e220e220e220e220e220e22120f050b08000d0093091d22
0e220e220e220e220e220e220e2203112127218c241f100e070f0105021b1e08001e0082
0422216a2189241f10220e230f1826018201260182012601890126160509150408170011
0085131e131e131e821e131e831e131e0882081700020083082524215e2183240a220e82
0e220e8b0e22120f011605190b1308178117004d008817081e2009181d06210821810900
22000408071e0117510085080b09181a21022182060900040082081700120082171e000f
00011e83091806210d21821a031d8e1d221d221d0e22030a110d240d240d810d21012182
2406214521
68219711030f252004131e131e131e131e131e131e131e131e131e821e08001100011e83
131e131e821e131e821e131e821e131e811e1383131c1f211e218d0d1110221d0f260519
0b041e17002500821b0c0103018426161c05250b258405160f1d0e210e82070f26012681
0126822601268426010f1f2117218a241f100e070f1609150408820817003900821b1f21
56218a0a0f0c2514190215041e0801088217081701173400011781001781170016000117
011e85200c181d06210e218105000d0083171e08000c00011781081e041e020802171e00
82081e208120090d0982201e001b00850820090c1a210721821817000b008b081e200920
1920192009200986090c1d1a060900030083171e20090209010c83181a0621082187060a
0e1d071d0e1d821d0f1802180107841d220a24215221
1d21830d1f220e820e220e820e220e820e220e860e220e221024212321840d10230f010a
01852616091b08003b00820812210421830d1f102281220e820e220e820e220e820e220e
820e220e820e220e890e1d0f011609201b1317811700470081081e821e081e821e081e82
1e081e821e081e821e081e821e081e821e081e821e081e821e081e821e081e841e081e08
000a0083170b260182012601820126018201260182012601820126018a01260126160525
19151b088108004200820c0d21032196240a03220e220e220e220e220e220e220e220e22
0e1d0f810f01150182231f210921840d0610220e0e0e8418140417002100821720090409
822017002c008317081e208520090c1d1a211621821a201e811e20832009200982092009
86092009181a0c003400011e8520090c181a211221831a0c200982092009820920091109
830c1a06210a2182062000080087082009181a0621060206812106810621052183061d0c
0984090c181d1a011a02060e21820d062482240d216021
1c21970d0702041e131e131e131e131e131e131e0420050f100d211f21840d231b17004d
00a008182212230f011609151b131e131e131e131e131e131e131e131e131e130817001b
0083170017007f0041008c201a241f10070f1c021b04131e821e131e821e131e821e131e
821e131e011e810817811700160001178205112101218a111022120f181614151b1e821e
081e821e081e821e081e821e081e821e0817811700250082090621032182060900260088
17081e20090c1d1a212e2183062017001f008317081e208120090a09830c181a21442183
240917008300081e2001208409181a0621142183061a1d1a841a062106217721
1b21830d071b000f008517080b05230e8f0e220e220e220e220e220e220e220e22842210
110d210821830d231e004f00841e041e08178117007f0065008117000e000108011e8720
0c16090b1e08003000880401181614201b1e178117003a00822006210421820620001f00
81171e861e20090c1d1a213521820609001700011788081e20090c181a0621492184060a
101a1086101a10110d210d880d061a180c09181a0601067f211b21
1b21820a1900140081081e821e131e821e131e821e131e821e131e8d1e131e13040b1925
1812221f0d210321820a20007f007f0033000108160081081e031e820817003600811700
40008308091a2106218203091e031e8120091609830c1d1a213d21821f01091409840c18
1a06214e21010d0124010685240624060d210321850a26012206217f211f21
1b21831020170029008c1708040b021925051626051e007f002f000d1782081e20812009
1e0982201e00370081171e811e208120090c0982181d0683061808007900011781081e07
1e8120090e09820c1d217f216721820611217f212221
1b21830d0e0c090c0982201e004d00820817002a000217011e8120090c09811e00380082
17081e851e090c181a068306210621822106218221062182210621822106212521821a0c
09010982201e002700011781081e811e2085200c181d06211321821a200022000117011e
82091e0035008317081e20812009090982201e0002008608091a062106217f215521810d
217f215321
2d21851a0c201e17004300850820090c1a068206200022008317081e208620090c181d1a
210f21821d08002e000117021e0120840c181a06214221821d0c09250983181d06211c21
821a20001c008817081e2009181d062101218109002d0081171e871e20090c181a06210e
21851d09200c1a217f215a2182110d215321810d217d21
30218306180c090f0983201e08002500811e09820920090109830c1a062104218203201e
081e01201309810c1d821d1a21182182062000260081171e011e8620090c181a06217f21
1521830d1d0c091909840c181d06210721821a191e091e83200920098209200982092009
8209200982092009820920098209200982092009820920098209200985090c181a06217f
217621810d215121860d1026142510217c21
462185061d0c2017002000820906214e21820618098209200981092082201e178217081e
011e01201309840c181a06217f217f217f217f214421810d2401248306240d217d21
4a21841d201e0800150081081e041e820906217f217f217f217f217f217f214521
4e2185061a18201e000b0085171e091d06217f217f217f217f217f217f214e21
5221821a0c090909830c1d06217f217f217f217f217f217f215121
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521

%
% Compression made this file 2.88% of the uncompressed size.
%


showpage

% stop using temporary dictionary
end

% restore original state
origstate restore

%%Trailer

%%EndDocument
 @endspecial 5001 5222 a @beginspecial @setspecial
 tx@Dict begin STP newpath 1.0 SLW 0.5451 0.39608 0.03137 setrgbcolor
 /ArrowA { moveto } def /ArrowB { } def [ 341.43292 -28.45274 -22.76227
-28.45274  /Lineto /lineto load def false Line  gsave 1.0 SLW 0.5451
0.39608 0.03137 setrgbcolor 0 setlinecap stroke  grestore end
 
@endspecial
621 x Fi(SESC)20 b(\(IA)n(COMA)e(g)o(roup\))2960 b(Joe)20
b(Renau,)h(Basilio)e(F)m(r)o(aguela,)h(and)g(Liu)g(W)n(ei)39
b(\226)20 b(page)40 b(10/23)4266 1057 y
 gsave currentpoint currentpoint translate 270 neg rotate neg exch
neg exch translate
 4266 1057 a @beginspecial
276 @llx 366 @lly 336 @urx 426 @ury 141 @rwi 141 @rhi
@setspecial
%%BeginDocument: angleHG.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/rico/texte/texstyle/Prosper-beta/img/angleHG.ps
%%Creator: XV Version 3.10a  Rev: 12/29/94 (PNG patch 1.2)  -  by John Bradley
%%BoundingBox: 276 366 336 426
%%Pages: 1
%%DocumentFonts:
%%EndComments
%%EndProlog

%%Page: 1 1

% remember original state
/origstate save def

% build a temporary dictionary
20 dict begin

% define string to hold a scanline's worth of data
/pix 180 string def

% define space for color conversions
/grays 60 string def  % space for gray scale line
/npixls 0 def
/rgbindx 0 def

% print in landscape mode
90 rotate 0 -612 translate

% lower left corner
366 276 translate

% size of image (on paper, in 1/72inch coords)
59.97600 59.97600 scale

% define 'colorimage' if it isn't defined
%   ('colortogray' and 'mergeprocs' come from xwd2ps
%     via xgrab)
/colorimage where   % do we know about 'colorimage'?
  { pop }           % yes: pop off the 'dict' returned
  {                 % no:  define one
    /colortogray {  % define an RGB->I function
      /rgbdata exch store    % call input 'rgbdata'
      rgbdata length 3 idiv
      /npixls exch store
      /rgbindx 0 store
      0 1 npixls 1 sub {
        grays exch
        rgbdata rgbindx       get 20 mul    % Red
        rgbdata rgbindx 1 add get 32 mul    % Green
        rgbdata rgbindx 2 add get 12 mul    % Blue
        add add 64 idiv      % I = .5G + .31R + .18B
        put
        /rgbindx rgbindx 3 add store
      } for
      grays 0 npixls getinterval
    } bind def

    % Utility procedure for colorimage operator.
    % This procedure takes two procedures off the
    % stack and merges them into a single procedure.

    /mergeprocs { % def
      dup length
      3 -1 roll
      dup
      length
      dup
      5 1 roll
      3 -1 roll
      add
      array cvx
      dup
      3 -1 roll
      0 exch
      putinterval
      dup
      4 2 roll
      putinterval
    } bind def

    /colorimage { % def
      pop pop     % remove 'false 3' operands
      {colortogray} mergeprocs
      image
    } bind def
  } ifelse          % end of 'false' case



60 60 8			% dimensions of data
[60 0 0 -60 0 60]		% mapping matrix
{currentfile pix readhexstring pop}
false 3 colorimage

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffafee3effeaaffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffafee3e3fe64ffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffe3fe64fafee3ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffe9fe88f1feb3ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffe8fe86dffe55fefefeffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffebfe96dafe37fefefeffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffedfe9edefe48f7fed5ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffedfe9ee2fe60eefea5f5fecaecfe95ecfe97ecfe98
ecfe99ecfe9bf6feceffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffeffeaadffe4fe0fe55dcfe3f
dbfe3cdbfe3ddbfe3dddfe48defe4cdcfe43d9fe32d6fe20e2fe5fe3fe67defe4ddefe4d
defe4edefe4edbfe3bdbfe3cdcfe3ddcfe3fdcfe40dcfe42ddfe43ddfe45ddfe46ddfe48
ddfe46e2fe63e5fe72e5fe74e6fe76e6fe77e6fe79e7fe7ae9fe86e8fe85ebfe94ecfe97
ecfe99ecfe9cedfe9eeffeacf2febcf3febef3fec1f4fec4f9fedfffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffeffeaaf1feb3f5fec7e9fe87
e7fe7be7fe7be7fe7be2fe60e1fe5bd6fe1dd8fe2adafe33e1fe5bdffe54defe4edffe50
dffe51dffe53e0fe54ddfe49ddfe4bdefe4cdefe4edefe50dffe52dffe54e5fe73eafe93
e9fe89e6fe7ae4fe6ce4fe6ee8fe84e8fe85e9fe87e9fe8ae8fe84e7fe7ce8fe81e9fe8a
f0feb0f8fedbf9fedff1feb8f1febaeafe8bfbfeeafbfeebfdfef5ffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff5fecddffe52e1fe5df5fec9f5fec9f5fecaf5feca
f5fecbf5feccf5feccf5fecdf6fecef6fecef6fecef6fecff6fed0f6fed1eefea5e9fe8a
f6fed1f7fed7f7fed8f7fed9f6fecdfafee8fcfef1fcfef2fdfef7fcfef3fdfef7fefefc
fefefcfefefdf9fee0f6fecff5feccf4fec2ffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff5fecde3fe64e5fe74ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffdfef5fefefdfefefdfefefcfefefcfffffffefef9
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff5fecde5fe74dffe53ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff6fecee6fe79e5fe6ff8fed8ffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff6fecee6fe7aebfe95effeaaffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff6fecee6fe7aedfe9eeefea2ffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff6fecee6fe7bedfe9eeefea3ffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff6fecfe6fe78ecfe9eeefea5ffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffefefe
fefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff6fed0e2fe63e0fe59dffe55ffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffefefe
fefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffedfe9fe2fe5fd8fe2ad8fe2dffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffecfe9adffe53d6fe1cdefe4cf6fecfffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffedfe9cd8fe2cd6fe20defe4bf6fed0ffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffefefdffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffedfe9dd8fe27d7fe22defe4ef6fed0ffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffedfe9dd7fe26d6fe20e0fe5bf6fed2ffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff3febdd7fe22d7fe22e1fe5ef7fed3ffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff4fec6d6fe20d7fe21e0fe57f7fed4ffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff4fec6d6fe20d6fe1fe0fe59f7fed5ffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff4fec6d6fe1ed6fe1ee5fe73f7fed6ffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff4fec6d6fe1dd9fe32e0fe56ffffffffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff5fecce0fe55defe48e8fe81ffffffffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffbfeede7fe7fe0fe56e9fe85ffffffffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff7fed8e8fe84e7fe7ef1feb4ffffffffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff2feb8edfea0effea6f1feb6ffffffffffffffffff
fffffffefefefefefeffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffefefceffeabf0feafeffea7f2feb7ffffffffffffffffff
fffffffefefefefefefefefeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffefefcf5fecaecfe9de7fe7af8feddffffffffffffffffff
fffffffefefefefefefefefefefefeffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffefefcf5fecce8fe85e8fe80ffffffffffffffffffffffff
fffffffefefefefefefefefeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffff8fedefdfef8fdfefbf3fec0e9fe89ecfe96ffffffffffffffffffffffff
fefefefefefefefefefefefeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffdfef6fefefafefefaf4fec2e9fe89ecfe96ffffffffffffffffffffffff
fefefefefefefefefefefefeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffdfef6fefefefefefdf4fec2e8fe85edfe9dffffffffffffffffffffffff
fefefefefefefefefefefefeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffefef9fefefdfefefce7fe7be5fe76f2feb7ffffffffffffffffffffffff
fffffffffffffefefefefefeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffdfef6fdfefafefefbe2fe65e5fe75f6fed0ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffdfef9fefefce6fe79e6fe77fafee6ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffcfef6fefefbecfe9be7fe7efbfeecffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffdfef5fdfef7f7fed5e9fe8dfcfef2ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffcfeeffbfeebedfea1fdfef7ffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffefefeffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffefefdfbfee9effeabffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffefefefefefeffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffbfeeceffea6ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff9fee3f3fec1ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffeefea2f8fedaffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff1feb2fafee4ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffcfef0fefefaffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff


showpage

% stop using temporary dictionary
end

% restore original state
origstate restore

%%Trailer

%%EndDocument
 @endspecial 4511 1057 a
 currentpoint grestore moveto
 4511 1057 a 4130 5844 a
 currentpoint currentpoint translate 0.76611 0.76611 scale neg exch
neg exch translate
 4130
5844 a 4130 5844 a
 gsave currentpoint currentpoint translate 0 neg rotate neg exch neg
exch translate
 4130 5844 a @beginspecial 0 @llx 0
@lly 37 @urx 42 @ury 370 @rwi @setspecial
%%BeginDocument: figs/uiuc.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: uiuc.eps
%%Creator: fig2dev Version 3.2 Patchlevel 3d
%%CreationDate: Sun Feb 10 22:03:46 2002
%%For: renau@nether.cs.uiuc.edu (Jose Renau)
%%BoundingBox: 0 0 37 42
%%Magnification: 1.0000
%%EndComments
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def
/col32 {0.200 0.200 0.400 srgb} bind def
/col33 {0.800 0.400 0.000 srgb} bind def

end
save
newpath 0 42 moveto 0 0 lineto 37 0 lineto 37 42 lineto closepath clip newpath
-273.7 413.7 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
 0.06000 0.06000 sc
%
% Fig objects follow
%
%  polyline 
% Polyline
n 5070 6872 m 5070 6227 l 4584 6227 l 4584 6872 l
 5070 6872 l  cp gs col32 1.00 shd ef gr 
%  polyline 
% Polyline
15.000 slw
n 5070 6872 m 5070 6227 l 4584 6227 l 4584 6872 l
 5070 6872 l  cp gs col32 s gr 
%  polyline 
% Polyline
0.000 slw
n 5056 6858 m 5056 6243 l 4598 6243 l 4598 6858 l
 5056 6858 l  cp gs col32 1.00 shd ef gr 
%  polyline 
% Polyline
7.500 slw
n 5056 6858 m 5056 6243 l 4598 6243 l 4598 6858 l
 5056 6858 l  cp gs col33 s gr 
%  spline 
% Polyline
2 slj
0.000 slw
n 4944 6783 m 4944 6781 l 4944 6773 l 4944 6759 l 4944 6751 l 4944 6749 l
 4943 6749 l 4935 6748 l 4924 6746 l 4914 6744 l 4906 6742 l
 4900 6741 l 4896 6739 l 4892 6738 l 4887 6735 l 4884 6732 l
 4880 6728 l 4877 6722 l 4875 6716 l 4873 6709 l 4872 6702 l
 4871 6693 l 4870 6683 l 4869 6670 l 4869 6654 l 4868 6637 l
 4868 6621 l 4868 6609 l 4868 6604 l 4868 6603 l 4868 6602 l
 4868 6597 l 4868 6585 l 4868 6567 l 4868 6544 l 4868 6521 l
 4868 6503 l 4868 6491 l 4868 6486 l 4868 6485 l 4868 6483 l
 4868 6474 l 4868 6457 l 4869 6438 l 4869 6420 l 4870 6406 l
 4870 6395 l 4871 6387 l 4873 6381 l 4874 6375 l 4876 6371 l
 4879 6367 l 4882 6365 l 4885 6363 l 4889 6362 l 4892 6361 l
 4898 6359 l 4905 6358 l 4915 6356 l 4925 6354 l 4933 6352 l
 4934 6352 l 4934 6350 l 4934 6343 l 4934 6331 l 4934 6324 l
 4934 6322 l 4933 6322 l 4928 6322 l 4916 6322 l 4896 6322 l
 4869 6322 l 4837 6322 l 4806 6322 l 4779 6322 l 4759 6322 l
 4747 6322 l 4742 6322 l 4741 6322 l 4740 6322 l 4737 6322 l
 4732 6322 l 4729 6322 l 4726 6322 l 4724 6322 l 4721 6323 l
 4718 6324 l 4716 6325 l 4714 6326 l 4712 6327 l 4710 6329 l
 4707 6332 l 4705 6334 l 4703 6336 l 4701 6338 l 4700 6339 l
 4699 6341 l 4698 6342 l 4697 6344 l 4696 6346 l 4696 6347 l
 4695 6349 l 4695 6351 l 4695 6353 l 4694 6356 l 4694 6358 l
 4694 6359 l 4694 6360 l 4694 6362 l 4694 6365 l 4694 6367 l
 4695 6369 l 4695 6370 l 4696 6372 l 4697 6374 l 4697 6375 l
 4698 6377 l 4699 6378 l 4701 6379 l 4702 6381 l 4704 6383 l
 4706 6385 l 4708 6386 l 4709 6388 l 4710 6389 l 4712 6389 l
 4713 6390 l 4715 6391 l 4716 6391 l 4718 6391 l 4720 6391 l
 4721 6391 l 4724 6391 l 4726 6391 l 4727 6391 l 4729 6391 l
 4732 6390 l 4735 6390 l 4737 6389 l 4740 6388 l 4742 6387 l
 4744 6385 l 4747 6383 l 4748 6381 l 4749 6379 l 4750 6376 l
 4751 6372 l 4752 6369 l 4752 6368 l 4752 6366 l 4752 6364 l
 4752 6362 l 4752 6361 l 4752 6359 l 4752 6358 l 4751 6357 l
 4751 6356 l 4750 6355 l 4749 6354 l 4749 6353 l 4748 6352 l
 4747 6351 l 4746 6350 l 4745 6349 l 4744 6348 l 4743 6348 l
 4742 6347 l 4741 6346 l 4740 6346 l 4739 6346 l 4738 6346 l
 4736 6345 l 4735 6345 l 4733 6345 l 4732 6345 l 4730 6345 l
 4729 6345 l 4728 6346 l 4727 6346 l 4725 6346 l 4724 6347 l
 4724 6348 l 4723 6348 l 4722 6349 l 4721 6351 l 4720 6352 l
 4719 6353 l 4718 6354 l 4718 6355 l 4717 6356 l 4717 6357 l
 4717 6358 l 4716 6359 l 4717 6360 l 4717 6361 l 4717 6362 l
 4717 6363 l 4718 6364 l 4718 6365 l 4719 6366 l 4719 6367 l
 4720 6367 l 4720 6368 l 4721 6368 l 4722 6369 l 4723 6369 l
 4723 6368 l 4724 6368 l 4725 6368 l 4726 6367 l 4727 6367 l
 4727 6366 l 4728 6366 l 4728 6365 l 4729 6365 l 4729 6364 l
 4729 6363 l 4729 6362 l 4729 6361 l 4728 6360 l 4728 6359 l
 4729 6359 l 4729 6358 l 4730 6357 l 4731 6357 l 4731 6356 l
 4732 6356 l 4733 6356 l 4734 6356 l 4735 6356 l 4735 6357 l
 4736 6357 l 4737 6357 l 4738 6357 l 4738 6358 l 4739 6358 l
 4739 6359 l 4739 6360 l 4740 6360 l 4740 6361 l 4740 6362 l
 4741 6362 l 4741 6363 l 4741 6364 l 4740 6364 l 4740 6365 l
 4740 6366 l 4740 6368 l 4739 6371 l 4739 6373 l 4738 6374 l
 4737 6375 l 4736 6376 l 4735 6377 l 4733 6378 l 4732 6379 l
 4731 6379 l 4729 6379 l 4727 6380 l 4725 6380 l 4724 6380 l
 4722 6380 l 4721 6380 l 4720 6380 l 4719 6380 l 4718 6380 l
 4717 6379 l 4716 6379 l 4715 6379 l 4715 6378 l 4714 6377 l
 4713 6376 l 4712 6375 l 4711 6374 l 4710 6373 l 4710 6372 l
 4709 6372 l 4708 6371 l 4708 6370 l 4707 6369 l 4707 6368 l
 4707 6367 l 4706 6365 l 4706 6363 l 4706 6361 l 4706 6359 l
 4706 6357 l 4706 6355 l 4706 6353 l 4706 6352 l 4707 6351 l
 4707 6350 l 4707 6348 l 4708 6347 l 4709 6346 l 4709 6345 l
 4710 6344 l 4712 6343 l 4713 6342 l 4715 6340 l 4717 6339 l
 4718 6337 l 4720 6337 l 4721 6336 l 4723 6335 l 4725 6334 l
 4727 6334 l 4729 6334 l 4731 6333 l 4734 6333 l 4738 6333 l
 4740 6333 l 4741 6333 l 4742 6333 l 4744 6333 l 4747 6333 l
 4753 6333 l 4759 6333 l 4767 6333 l 4776 6333 l 4785 6333 l
 4794 6333 l 4802 6333 l 4809 6333 l 4815 6333 l 4822 6333 l
 4827 6333 l 4828 6333 l 4828 6334 l 4828 6337 l 4828 6341 l
 4828 6344 l 4828 6345 l 4826 6345 l 4816 6345 l 4797 6345 l
 4779 6345 l 4769 6345 l 4767 6345 l 4766 6345 l 4765 6345 l
 4764 6346 l 4763 6346 l 4762 6347 l 4762 6348 l 4761 6349 l
 4761 6350 l 4761 6351 l 4761 6352 l 4761 6353 l 4761 6354 l
 4761 6355 l 4762 6356 l 4762 6357 l 4763 6358 l 4764 6359 l
 4765 6359 l 4766 6359 l 4767 6359 l 4769 6359 l 4779 6359 l
 4798 6359 l 4816 6359 l 4826 6359 l 4828 6359 l 4828 6360 l
 4828 6362 l 4828 6367 l 4828 6369 l 4828 6370 l 4826 6370 l
 4817 6370 l 4799 6370 l 4782 6370 l 4773 6370 l 4771 6370 l
 4770 6370 l 4769 6370 l 4768 6370 l 4767 6371 l 4766 6371 l
 4766 6372 l 4765 6373 l 4765 6374 l 4765 6375 l 4765 6376 l
 4765 6377 l 4766 6378 l 4766 6379 l 4767 6380 l 4768 6381 l
 4769 6381 l 4770 6381 l 4771 6381 l 4773 6381 l 4782 6381 l
 4800 6381 l 4817 6381 l 4826 6381 l 4828 6381 l 4828 6384 l
 4828 6391 l 4828 6404 l 4828 6423 l 4828 6449 l 4828 6480 l
 4828 6516 l 4828 6554 l 4828 6592 l 4828 6628 l 4828 6659 l
 4828 6685 l 4828 6704 l 4828 6717 l 4828 6724 l 4828 6727 l
 4827 6727 l 4819 6727 l 4802 6727 l 4780 6727 l 4757 6727 l
 4740 6727 l 4732 6727 l 4731 6727 l 4730 6727 l 4729 6727 l
 4728 6727 l 4727 6728 l 4726 6728 l 4726 6729 l 4726 6730 l
 4725 6730 l 4725 6731 l 4725 6732 l 4725 6733 l 4725 6734 l
 4725 6735 l 4725 6736 l 4725 6737 l 4726 6738 l 4726 6739 l
 4727 6739 l 4727 6740 l 4728 6740 l 4729 6740 l 4730 6740 l
 4731 6740 l 4732 6740 l 4740 6740 l 4757 6740 l 4780 6740 l
 4802 6740 l 4819 6740 l 4827 6740 l 4828 6740 l 4828 6741 l
 4828 6745 l 4828 6750 l 4828 6754 l 4828 6755 l 4827 6755 l
 4822 6755 l 4811 6755 l 4792 6755 l 4770 6755 l 4748 6755 l
 4729 6755 l 4718 6755 l 4713 6755 l 4712 6755 l 4710 6755 l
 4707 6755 l 4706 6756 l 4704 6756 l 4703 6757 l 4702 6758 l
 4701 6759 l 4700 6760 l 4699 6761 l 4699 6763 l 4698 6764 l
 4698 6767 l 4698 6769 l 4698 6770 l 4698 6773 l 4698 6779 l
 4698 6782 l 4698 6783 l 4699 6783 l 4703 6783 l 4713 6783 l
 4730 6783 l 4755 6783 l 4786 6783 l 4821 6783 l 4856 6783 l
 4887 6783 l 4912 6783 l 4929 6783 l 4939 6783 l 4943 6783 l

 4944 6783 l  cp gs col7 1.00 shd ef gr 
%  spline 
% Polyline
n 4783 6706 m 4783 6705 l 4783 6702 l 4783 6693 l 4783 6678 l 4783 6656 l
 4783 6626 l 4783 6592 l 4783 6555 l 4783 6517 l 4783 6483 l
 4783 6453 l 4783 6431 l 4783 6416 l 4783 6407 l 4783 6404 l
 4783 6403 l 4783 6402 l 4783 6401 l 4783 6400 l 4782 6400 l
 4782 6399 l 4781 6399 l 4781 6398 l 4780 6398 l 4779 6398 l
 4778 6398 l 4777 6398 l 4776 6398 l 4775 6398 l 4774 6399 l
 4773 6399 l 4773 6400 l 4772 6401 l 4772 6402 l 4772 6403 l
 4772 6404 l 4772 6407 l 4772 6416 l 4772 6431 l 4772 6453 l
 4772 6483 l 4772 6517 l 4772 6555 l 4772 6592 l 4772 6626 l
 4772 6656 l 4772 6678 l 4772 6693 l 4772 6702 l 4772 6705 l
 4772 6706 l 4772 6707 l 4772 6708 l 4773 6709 l 4773 6710 l
 4774 6711 l 4775 6712 l 4776 6712 l 4777 6712 l 4778 6712 l
 4779 6712 l 4780 6712 l 4781 6712 l 4781 6711 l 4782 6711 l
 4782 6710 l 4783 6709 l 4783 6708 l 4783 6707 l
 4783 6706 l  cp gs col7 1.00 shd ef gr 
%  spline 
% Polyline
n 4813 6705 m 4813 6704 l 4813 6701 l 4813 6692 l 4813 6677 l 4813 6655 l
 4813 6626 l 4813 6592 l 4813 6555 l 4813 6518 l 4813 6484 l
 4813 6455 l 4813 6433 l 4813 6418 l 4813 6409 l 4813 6406 l
 4813 6405 l 4813 6404 l 4813 6402 l 4813 6401 l 4812 6400 l
 4811 6399 l 4811 6398 l 4810 6398 l 4809 6398 l 4808 6397 l
 4807 6397 l 4806 6397 l 4805 6397 l 4804 6397 l 4803 6397 l
 4802 6397 l 4801 6398 l 4800 6398 l 4799 6399 l 4799 6400 l
 4798 6401 l 4798 6402 l 4798 6404 l 4798 6405 l 4798 6406 l
 4798 6409 l 4798 6418 l 4798 6433 l 4798 6455 l 4798 6484 l
 4798 6518 l 4798 6555 l 4798 6592 l 4798 6626 l 4798 6655 l
 4798 6677 l 4798 6692 l 4798 6701 l 4798 6704 l 4798 6705 l
 4798 6706 l 4798 6707 l 4798 6708 l 4799 6709 l 4799 6710 l
 4799 6711 l 4800 6711 l 4801 6712 l 4802 6713 l 4803 6713 l
 4804 6713 l 4805 6713 l 4806 6713 l 4807 6713 l 4808 6713 l
 4809 6712 l 4810 6712 l 4811 6711 l 4812 6710 l 4812 6709 l
 4813 6708 l 4813 6707 l 4813 6706 l
 4813 6705 l  cp gs col7 1.00 shd ef gr 
%  polyline 
% Polyline
0 slj
n 5136 6864 m 5124 6864 l 5124 6894 l 5119 6894 l 5119 6864 l 5108 6864 l
 5108 6860 l 5136 6860 l
 5136 6864 l  cp gs col32 1.00 shd ef gr 
%  polyline 
% Polyline
n 5172 6894 m 5167 6894 l 5167 6867 l 5157 6880 l 5156 6880 l 5146 6867 l
 5145 6867 l 5145 6894 l 5141 6894 l 5141 6860 l 5145 6860 l
 5156 6874 l 5168 6860 l 5172 6860 l
 5172 6894 l  cp gs col32 1.00 shd ef gr 
$F2psEnd
rs

%%EndDocument
 @endspecial 4769 5844 a
 currentpoint grestore moveto
 4769 5844 a 4130 5844 a
 currentpoint currentpoint translate 1 0.76611 div 1 0.76611 div scale
neg exch neg exch translate
 4130
5844 a 5001 3450 a
SDict begin H.S end
 5001 3450 a 5001 3450 a
SDict begin H.R end
 5001 3450
a 5001 3450 a
SDict begin [ /View [/XYZ H.V] /Dest (page.1) cvn H.B /DEST pdfmark
end
 5001 3450 a 5001 3450 a
SDict begin [ {ThisPage} << /Trans << /S /Replace >> >> /PUT pdfmark
end
 5001 3450 a 5001
3450 a
SDict begin [ /Page 10/View [ /XYZ null null null ] /Title (Memory Subsystem)
/OUT pdfmark end
 5001 3450 a 6878 1453 a Fm(M)18 b Fn(E)g(M)g(O)g(R)t(Y)115
b Fm(S)18 b Fn(U)g(B)g(S)g(Y)g(S)g(T)g(E)g(M)4581 2081
y Fe(class)89 b(DCache:public)d(MemoryObj)i({)4581 2264
y(protected:)4764 2447 y(void)i(read\(\))f({)4947 2630
y(MSG\("0x\045x:ld)e([0x\045x]",req->ge)o(tIa)o(dd)o(r\()o(\),r)o(eq)o
(->g)o(et)o(Vad)o(dr)o(\(\))o(\);)4947 2813 y(req->goUp\(1\);)4764
2996 y(};)4764 3361 y(void)j(write\(\))e({)4947 3544
y(MSG\("time)g(\045lld",globalCloc)o(k\))o(;)4947 3727
y(req->goUp\(1\);)4764 3910 y(};)4764 4276 y(void)i(memFence\(\))d({)k
(req->goUp\(23\);)178 b(};)4764 4459 y(void)90 b(acquire\(\))e({)182
b(req->goUp\(10\);)c(};)4764 4641 y(void)90 b(release\(\))e({)182
b(req->goUp\(13\);)c(};)4581 4824 y(};)10245 5222 y
 0 setgray
 10245
5222 a 4500 6000 a
 tx@Dict begin -90 Rot  end
 4500 6000 a eop
%%Page: 11 11
11 10 bop 4500 6000 a
 tx@Dict begin 90 Rot  end
 4500 6000 a 5981 1792 a @beginspecial
-168 @llx 371 @lly 782 @urx 421 @ury 2834 @rwi 283 @rhi
@setspecial
%%BeginDocument: barre-rico.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /ufs/goualard/TEMP/barre_hor.ps
%%Creator: XV Version 3.10a  Rev: 12/29/94 (PNG patch 1.2)  -  by John Bradley
%%BoundingBox: -168 371 782 421
%%Pages: 1
%%DocumentFonts:
%%EndComments
%%EndProlog

%%Page: 1 1

% remember original state
/origstate save def

% build a temporary dictionary
20 dict begin

% define space for color conversions
/grays 950 string def  % space for gray scale line
/npixls 0 def
/rgbindx 0 def

% lower left corner
-168 371 translate

% size of image (on paper, in 1/72inch coords)
949.96800 49.96800 scale

% define 'colorimage' if it isn't defined
%   ('colortogray' and 'mergeprocs' come from xwd2ps
%     via xgrab)
/colorimage where   % do we know about 'colorimage'?
  { pop }           % yes: pop off the 'dict' returned
  {                 % no:  define one
    /colortogray {  % define an RGB->I function
      /rgbdata exch store    % call input 'rgbdata'
      rgbdata length 3 idiv
      /npixls exch store
      /rgbindx 0 store
      0 1 npixls 1 sub {
        grays exch
        rgbdata rgbindx       get 20 mul    % Red
        rgbdata rgbindx 1 add get 32 mul    % Green
        rgbdata rgbindx 2 add get 12 mul    % Blue
        add add 64 idiv      % I = .5G + .31R + .18B
        put
        /rgbindx rgbindx 3 add store
      } for
      grays 0 npixls getinterval
    } bind def

    % Utility procedure for colorimage operator.
    % This procedure takes two procedures off the
    % stack and merges them into a single procedure.

    /mergeprocs { % def
      dup length
      3 -1 roll
      dup
      length
      dup
      5 1 roll
      3 -1 roll
      add
      array cvx
      dup
      3 -1 roll
      0 exch
      putinterval
      dup
      4 2 roll
      putinterval
    } bind def

    /colorimage { % def
      pop pop     % remove 'false 3' operands
      {colortogray} mergeprocs
      image
    } bind def
  } ifelse          % end of 'false' case



% define the colormap
/cmap 117 string def


% load up the colormap
currentfile cmap readhexstring
bcfe04 dcfe84 ccfe44 ecfec4 c4fe24 d4fe64 f4fee4 e4fea4 bcfe14 ccfe54 
f4fed4 c4fe34 d4fe74 fcfef4 ecfeb4 e4fe94 f4fecc fcfee4 ecfeac c4fe1c 
d4fe54 ccfe3c dcfe74 bcfe0c dcfe8c ccfe4c ecfecc c4fe2c d4fe6c e4feac 
bcfe1c f4fedc c4fe3c fcfefc ecfebc e4fe9c fcfeec d4fe5c dcfe7c 
pop pop   % lose return values from readhexstring


% rlecmapimage expects to have 'w h bits matrix' on stack
/rlecmapimage {
  /buffer 1 string def
  /rgbval 3 string def
  /block  384 string def

  % proc to read a block from file, and return RGB data
  { currentfile buffer readhexstring pop
    /bcount exch 0 get store
    bcount 128 ge
    {  % it's a non-run block
      0 1 bcount 128 sub
      { currentfile buffer readhexstring pop pop

        % look up value in color map
        /rgbval cmap buffer 0 get 3 mul 3 getinterval store

        % and put it in position i*3 in block
        block exch 3 mul rgbval putinterval
      } for
      block  0  bcount 127 sub 3 mul  getinterval
    }

    { % else it's a run block
      currentfile buffer readhexstring pop pop

      % look up value in colormap
      /rgbval cmap buffer 0 get 3 mul 3 getinterval store

      0 1 bcount { block exch 3 mul rgbval putinterval } for

      block 0 bcount 1 add 3 mul getinterval
    } ifelse
  } % end of proc
  false 3 colorimage
} bind def


950 50 8			% dimensions of data
[950 0 0 -50 0 50]		% mapping matrix
rlecmapimage

7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f210221870d1f220e220311212a21
7f217f217f217f217f217f2175218211030e820e220e820e220e860e220e23050b048404
090e24212a21
7f217f217f217f217f217f2171218e110312260b041e131e131e131e131e871e17001702
1d24212c21
7f217f217f217f217f217f216921830d1f220e870e221226200408000b00841702070d21
0521842403100d212321
7f217f217f217f217f217f2121218524220f231f213a218f0d0a220e220e23051b041e13
1e0817000c008408190706210421851103221f0d212521
7f217f217f217f217f217f211e2189240e1c1b17000825242136218a0d1026021b041e13
081700110085172001030d210421840316030d212821
7f217f217f217f217f21342186111a120f070a215721860d1110220e220e860e12182504
17000300821b1f212521851f0e2326230e080e841d010908001100820820090209840c1d
1a06210521841026230d212a21
7f217f217f217f21792186241f10220e220e820e220e820e220e820e220e820e220e820e
220e830e070f01010182070a2117218b0610231c1508001708090a2151218e0d1f101d01
14201b1e131e131e08000700820c0d211021840d100311210921881103220e07050b0800
8400171e081e821e081e851e081e0817001000851e2009181a210b21850d22261d24212c
21
7f217f217f217f21472184241f10220e820e220e820e220e820e220e820e220e820e220e
820e220e810e2283221f0d210e219a241f10070f1c09151e041e131e131e131e131e131e
131e131e131e821e080002008b17081410210d1110220e220e820e220e820e220e010e81
2301880126012616191b08000500820422212f2182240d211921890d0a0e072625150417
00100082201a210921890d1110220e23011620048304051f210421891103231c15131e08
1700190082171e090309820c1a210e21841f0e0a0d212e21
7f217f217f217f213f2190241f100e070f011c1920041e131e081e0882081e0882081e08
82081e0882081e0803088304250a2107218b241f030e12181619151e08001d00811e268c
2614201b041e131e131e131e088108178117000f0082091f211521840d0610220e0f0e88
120f012625020c11211321890d0a22121809040817001300831e050a2105218a0d1f101d
0114201b1e170004008408260e220e860e230c020417001800821e2009020982181a2114
21810d213321
7f211221842422121f217f217f217f211221850d0a220e220e820e220e820e220e820e22
0e010e881d0f1605090b041e178117001a008f1e22210d1110221d0f0116190b041e1781
1700220001171f00820b2221102189111022120f0125151b1e011e81081e821e081e821e
081e821e081e821e081e821e1700030082171c0e110e861d01251b1e170015008220181d
021d81220e020e86070119150417000b0086081e131e08170019008308091d210c21830d
1f24214121
7f210721830d0a220e040e83230504088308052421492185240a22230f01130182070a21
7f2106218c240a03220e220e220e220e1d0f840f01231f217f210a2199240a221d0f0116
191b1e131e131e131e131e131e131e131e17002300810b16871609200413081700490087
171e051d1f10220e0a0e8712232625201b1e178117001b000108011e81081e821e081e82
1e081e821e081e821e081e831e0817000c0085171e201e08000300831720090c840c090b
1b1e871e081e081e0817001f0083081e201e821e20090809820c03210b21860d0a222307
0d210521010d3a21
7f21042188112218141b13081e088108178117000300821b1f2140218b241f100e070f1c
25021b1317811700140083081410217f218c241f10070f05021b04131e131e011e810817
811700010093170207220e220e220e220e220e220e22120f18018301231f216e218c0d0a
22120f0116191b130817004c000117811e208120090509822008002c008308200c188518
0c09021b1e821e081e821e081e821e081e811e08810817811700400081171e871e09181a
061c08000300851e200b1e1700250083171e200983091806211721820d110a010a841d26
1918214421
6c219a1103220e220e220e220e220e220e220e220e220e22120f050b08000d0093091d22
0e220e220e220e220e220e220e2203112127218c241f100e070f0105021b1e08001e0082
0422216a2189241f10220e230f1826018201260182012601890126160509150408170011
0085131e131e131e821e131e831e131e0882081700020083082524215e2183240a220e82
0e220e8b0e22120f011605190b1308178117004d008817081e2009181d06210821810900
22000408071e0117510085080b09181a21022182060900040082081700120082171e000f
00011e83091806210d21821a031d8e1d221d221d0e22030a110d240d240d810d21012182
2406214521
68219711030f252004131e131e131e131e131e131e131e131e131e821e08001100011e83
131e131e821e131e821e131e821e131e811e1383131c1f211e218d0d1110221d0f260519
0b041e17002500821b0c0103018426161c05250b258405160f1d0e210e82070f26012681
0126822601268426010f1f2117218a241f100e070f1609150408820817003900821b1f21
56218a0a0f0c2514190215041e0801088217081701173400011781001781170016000117
011e85200c181d06210e218105000d0083171e08000c00011781081e041e020802171e00
82081e208120090d0982201e001b00850820090c1a210721821817000b008b081e200920
1920192009200986090c1d1a060900030083171e20090209010c83181a0621082187060a
0e1d071d0e1d821d0f1802180107841d220a24215221
1d21830d1f220e820e220e820e220e820e220e860e220e221024212321840d10230f010a
01852616091b08003b00820812210421830d1f102281220e820e220e820e220e820e220e
820e220e820e220e890e1d0f011609201b1317811700470081081e821e081e821e081e82
1e081e821e081e821e081e821e081e821e081e821e081e821e081e821e081e841e081e08
000a0083170b260182012601820126018201260182012601820126018a01260126160525
19151b088108004200820c0d21032196240a03220e220e220e220e220e220e220e220e22
0e1d0f810f01150182231f210921840d0610220e0e0e8418140417002100821720090409
822017002c008317081e208520090c1d1a211621821a201e811e20832009200982092009
86092009181a0c003400011e8520090c181a211221831a0c200982092009820920091109
830c1a06210a2182062000080087082009181a0621060206812106810621052183061d0c
0984090c181d1a011a02060e21820d062482240d216021
1c21970d0702041e131e131e131e131e131e131e0420050f100d211f21840d231b17004d
00a008182212230f011609151b131e131e131e131e131e131e131e131e131e130817001b
0083170017007f0041008c201a241f10070f1c021b04131e821e131e821e131e821e131e
821e131e011e810817811700160001178205112101218a111022120f181614151b1e821e
081e821e081e821e081e821e081e821e0817811700250082090621032182060900260088
17081e20090c1d1a212e2183062017001f008317081e208120090a09830c181a21442183
240917008300081e2001208409181a0621142183061a1d1a841a062106217721
1b21830d071b000f008517080b05230e8f0e220e220e220e220e220e220e220e22842210
110d210821830d231e004f00841e041e08178117007f0065008117000e000108011e8720
0c16090b1e08003000880401181614201b1e178117003a00822006210421820620001f00
81171e861e20090c1d1a213521820609001700011788081e20090c181a0621492184060a
101a1086101a10110d210d880d061a180c09181a0601067f211b21
1b21820a1900140081081e821e131e821e131e821e131e821e131e8d1e131e13040b1925
1812221f0d210321820a20007f007f0033000108160081081e031e820817003600811700
40008308091a2106218203091e031e8120091609830c1d1a213d21821f01091409840c18
1a06214e21010d0124010685240624060d210321850a26012206217f211f21
1b21831020170029008c1708040b021925051626051e007f002f000d1782081e20812009
1e0982201e00370081171e811e208120090c0982181d0683061808007900011781081e07
1e8120090e09820c1d217f216721820611217f212221
1b21830d0e0c090c0982201e004d00820817002a000217011e8120090c09811e00380082
17081e851e090c181a068306210621822106218221062182210621822106212521821a0c
09010982201e002700011781081e811e2085200c181d06211321821a200022000117011e
82091e0035008317081e20812009090982201e0002008608091a062106217f215521810d
217f215321
2d21851a0c201e17004300850820090c1a068206200022008317081e208620090c181d1a
210f21821d08002e000117021e0120840c181a06214221821d0c09250983181d06211c21
821a20001c008817081e2009181d062101218109002d0081171e871e20090c181a06210e
21851d09200c1a217f215a2182110d215321810d217d21
30218306180c090f0983201e08002500811e09820920090109830c1a062104218203201e
081e01201309810c1d821d1a21182182062000260081171e011e8620090c181a06217f21
1521830d1d0c091909840c181d06210721821a191e091e83200920098209200982092009
8209200982092009820920098209200982092009820920098209200985090c181a06217f
217621810d215121860d1026142510217c21
462185061d0c2017002000820906214e21820618098209200981092082201e178217081e
011e01201309840c181a06217f217f217f217f214421810d2401248306240d217d21
4a21841d201e0800150081081e041e820906217f217f217f217f217f217f214521
4e2185061a18201e000b0085171e091d06217f217f217f217f217f217f214e21
5221821a0c090909830c1d06217f217f217f217f217f217f215121
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521

%
% Compression made this file 2.88% of the uncompressed size.
%


showpage

% stop using temporary dictionary
end

% restore original state
origstate restore

%%Trailer

%%EndDocument
 @endspecial 5001 5222 a @beginspecial @setspecial
 tx@Dict begin STP newpath 1.0 SLW 0.5451 0.39608 0.03137 setrgbcolor
 /ArrowA { moveto } def /ArrowB { } def [ 341.43292 -28.45274 -22.76227
-28.45274  /Lineto /lineto load def false Line  gsave 1.0 SLW 0.5451
0.39608 0.03137 setrgbcolor 0 setlinecap stroke  grestore end
 
@endspecial
621 x Fi(SESC)20 b(\(IA)n(COMA)e(g)o(roup\))2960 b(Joe)20
b(Renau,)h(Basilio)e(F)m(r)o(aguela,)h(and)g(Liu)g(W)n(ei)39
b(\226)20 b(page)40 b(11/23)4266 1057 y
 gsave currentpoint currentpoint translate 270 neg rotate neg exch
neg exch translate
 4266 1057 a @beginspecial
276 @llx 366 @lly 336 @urx 426 @ury 141 @rwi 141 @rhi
@setspecial
%%BeginDocument: angleHG.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/rico/texte/texstyle/Prosper-beta/img/angleHG.ps
%%Creator: XV Version 3.10a  Rev: 12/29/94 (PNG patch 1.2)  -  by John Bradley
%%BoundingBox: 276 366 336 426
%%Pages: 1
%%DocumentFonts:
%%EndComments
%%EndProlog

%%Page: 1 1

% remember original state
/origstate save def

% build a temporary dictionary
20 dict begin

% define string to hold a scanline's worth of data
/pix 180 string def

% define space for color conversions
/grays 60 string def  % space for gray scale line
/npixls 0 def
/rgbindx 0 def

% print in landscape mode
90 rotate 0 -612 translate

% lower left corner
366 276 translate

% size of image (on paper, in 1/72inch coords)
59.97600 59.97600 scale

% define 'colorimage' if it isn't defined
%   ('colortogray' and 'mergeprocs' come from xwd2ps
%     via xgrab)
/colorimage where   % do we know about 'colorimage'?
  { pop }           % yes: pop off the 'dict' returned
  {                 % no:  define one
    /colortogray {  % define an RGB->I function
      /rgbdata exch store    % call input 'rgbdata'
      rgbdata length 3 idiv
      /npixls exch store
      /rgbindx 0 store
      0 1 npixls 1 sub {
        grays exch
        rgbdata rgbindx       get 20 mul    % Red
        rgbdata rgbindx 1 add get 32 mul    % Green
        rgbdata rgbindx 2 add get 12 mul    % Blue
        add add 64 idiv      % I = .5G + .31R + .18B
        put
        /rgbindx rgbindx 3 add store
      } for
      grays 0 npixls getinterval
    } bind def

    % Utility procedure for colorimage operator.
    % This procedure takes two procedures off the
    % stack and merges them into a single procedure.

    /mergeprocs { % def
      dup length
      3 -1 roll
      dup
      length
      dup
      5 1 roll
      3 -1 roll
      add
      array cvx
      dup
      3 -1 roll
      0 exch
      putinterval
      dup
      4 2 roll
      putinterval
    } bind def

    /colorimage { % def
      pop pop     % remove 'false 3' operands
      {colortogray} mergeprocs
      image
    } bind def
  } ifelse          % end of 'false' case



60 60 8			% dimensions of data
[60 0 0 -60 0 60]		% mapping matrix
{currentfile pix readhexstring pop}
false 3 colorimage

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffafee3effeaaffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffafee3e3fe64ffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffe3fe64fafee3ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffe9fe88f1feb3ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffe8fe86dffe55fefefeffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffebfe96dafe37fefefeffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffedfe9edefe48f7fed5ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffedfe9ee2fe60eefea5f5fecaecfe95ecfe97ecfe98
ecfe99ecfe9bf6feceffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffeffeaadffe4fe0fe55dcfe3f
dbfe3cdbfe3ddbfe3dddfe48defe4cdcfe43d9fe32d6fe20e2fe5fe3fe67defe4ddefe4d
defe4edefe4edbfe3bdbfe3cdcfe3ddcfe3fdcfe40dcfe42ddfe43ddfe45ddfe46ddfe48
ddfe46e2fe63e5fe72e5fe74e6fe76e6fe77e6fe79e7fe7ae9fe86e8fe85ebfe94ecfe97
ecfe99ecfe9cedfe9eeffeacf2febcf3febef3fec1f4fec4f9fedfffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffeffeaaf1feb3f5fec7e9fe87
e7fe7be7fe7be7fe7be2fe60e1fe5bd6fe1dd8fe2adafe33e1fe5bdffe54defe4edffe50
dffe51dffe53e0fe54ddfe49ddfe4bdefe4cdefe4edefe50dffe52dffe54e5fe73eafe93
e9fe89e6fe7ae4fe6ce4fe6ee8fe84e8fe85e9fe87e9fe8ae8fe84e7fe7ce8fe81e9fe8a
f0feb0f8fedbf9fedff1feb8f1febaeafe8bfbfeeafbfeebfdfef5ffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff5fecddffe52e1fe5df5fec9f5fec9f5fecaf5feca
f5fecbf5feccf5feccf5fecdf6fecef6fecef6fecef6fecff6fed0f6fed1eefea5e9fe8a
f6fed1f7fed7f7fed8f7fed9f6fecdfafee8fcfef1fcfef2fdfef7fcfef3fdfef7fefefc
fefefcfefefdf9fee0f6fecff5feccf4fec2ffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff5fecde3fe64e5fe74ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffdfef5fefefdfefefdfefefcfefefcfffffffefef9
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff5fecde5fe74dffe53ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff6fecee6fe79e5fe6ff8fed8ffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff6fecee6fe7aebfe95effeaaffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff6fecee6fe7aedfe9eeefea2ffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff6fecee6fe7bedfe9eeefea3ffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff6fecfe6fe78ecfe9eeefea5ffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffefefe
fefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff6fed0e2fe63e0fe59dffe55ffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffefefe
fefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffedfe9fe2fe5fd8fe2ad8fe2dffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffecfe9adffe53d6fe1cdefe4cf6fecfffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffedfe9cd8fe2cd6fe20defe4bf6fed0ffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffefefdffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffedfe9dd8fe27d7fe22defe4ef6fed0ffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffedfe9dd7fe26d6fe20e0fe5bf6fed2ffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff3febdd7fe22d7fe22e1fe5ef7fed3ffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff4fec6d6fe20d7fe21e0fe57f7fed4ffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff4fec6d6fe20d6fe1fe0fe59f7fed5ffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff4fec6d6fe1ed6fe1ee5fe73f7fed6ffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff4fec6d6fe1dd9fe32e0fe56ffffffffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff5fecce0fe55defe48e8fe81ffffffffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffbfeede7fe7fe0fe56e9fe85ffffffffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff7fed8e8fe84e7fe7ef1feb4ffffffffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff2feb8edfea0effea6f1feb6ffffffffffffffffff
fffffffefefefefefeffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffefefceffeabf0feafeffea7f2feb7ffffffffffffffffff
fffffffefefefefefefefefeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffefefcf5fecaecfe9de7fe7af8feddffffffffffffffffff
fffffffefefefefefefefefefefefeffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffefefcf5fecce8fe85e8fe80ffffffffffffffffffffffff
fffffffefefefefefefefefeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffff8fedefdfef8fdfefbf3fec0e9fe89ecfe96ffffffffffffffffffffffff
fefefefefefefefefefefefeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffdfef6fefefafefefaf4fec2e9fe89ecfe96ffffffffffffffffffffffff
fefefefefefefefefefefefeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffdfef6fefefefefefdf4fec2e8fe85edfe9dffffffffffffffffffffffff
fefefefefefefefefefefefeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffefef9fefefdfefefce7fe7be5fe76f2feb7ffffffffffffffffffffffff
fffffffffffffefefefefefeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffdfef6fdfefafefefbe2fe65e5fe75f6fed0ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffdfef9fefefce6fe79e6fe77fafee6ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffcfef6fefefbecfe9be7fe7efbfeecffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffdfef5fdfef7f7fed5e9fe8dfcfef2ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffcfeeffbfeebedfea1fdfef7ffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffefefeffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffefefdfbfee9effeabffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffefefefefefeffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffbfeeceffea6ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff9fee3f3fec1ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffeefea2f8fedaffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff1feb2fafee4ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffcfef0fefefaffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff


showpage

% stop using temporary dictionary
end

% restore original state
origstate restore

%%Trailer

%%EndDocument
 @endspecial 4511 1057 a
 currentpoint grestore moveto
 4511 1057 a 4130 5844 a
 currentpoint currentpoint translate 0.76611 0.76611 scale neg exch
neg exch translate
 4130
5844 a 4130 5844 a
 gsave currentpoint currentpoint translate 0 neg rotate neg exch neg
exch translate
 4130 5844 a @beginspecial 0 @llx 0
@lly 37 @urx 42 @ury 370 @rwi @setspecial
%%BeginDocument: figs/uiuc.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: uiuc.eps
%%Creator: fig2dev Version 3.2 Patchlevel 3d
%%CreationDate: Sun Feb 10 22:03:46 2002
%%For: renau@nether.cs.uiuc.edu (Jose Renau)
%%BoundingBox: 0 0 37 42
%%Magnification: 1.0000
%%EndComments
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def
/col32 {0.200 0.200 0.400 srgb} bind def
/col33 {0.800 0.400 0.000 srgb} bind def

end
save
newpath 0 42 moveto 0 0 lineto 37 0 lineto 37 42 lineto closepath clip newpath
-273.7 413.7 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
 0.06000 0.06000 sc
%
% Fig objects follow
%
%  polyline 
% Polyline
n 5070 6872 m 5070 6227 l 4584 6227 l 4584 6872 l
 5070 6872 l  cp gs col32 1.00 shd ef gr 
%  polyline 
% Polyline
15.000 slw
n 5070 6872 m 5070 6227 l 4584 6227 l 4584 6872 l
 5070 6872 l  cp gs col32 s gr 
%  polyline 
% Polyline
0.000 slw
n 5056 6858 m 5056 6243 l 4598 6243 l 4598 6858 l
 5056 6858 l  cp gs col32 1.00 shd ef gr 
%  polyline 
% Polyline
7.500 slw
n 5056 6858 m 5056 6243 l 4598 6243 l 4598 6858 l
 5056 6858 l  cp gs col33 s gr 
%  spline 
% Polyline
2 slj
0.000 slw
n 4944 6783 m 4944 6781 l 4944 6773 l 4944 6759 l 4944 6751 l 4944 6749 l
 4943 6749 l 4935 6748 l 4924 6746 l 4914 6744 l 4906 6742 l
 4900 6741 l 4896 6739 l 4892 6738 l 4887 6735 l 4884 6732 l
 4880 6728 l 4877 6722 l 4875 6716 l 4873 6709 l 4872 6702 l
 4871 6693 l 4870 6683 l 4869 6670 l 4869 6654 l 4868 6637 l
 4868 6621 l 4868 6609 l 4868 6604 l 4868 6603 l 4868 6602 l
 4868 6597 l 4868 6585 l 4868 6567 l 4868 6544 l 4868 6521 l
 4868 6503 l 4868 6491 l 4868 6486 l 4868 6485 l 4868 6483 l
 4868 6474 l 4868 6457 l 4869 6438 l 4869 6420 l 4870 6406 l
 4870 6395 l 4871 6387 l 4873 6381 l 4874 6375 l 4876 6371 l
 4879 6367 l 4882 6365 l 4885 6363 l 4889 6362 l 4892 6361 l
 4898 6359 l 4905 6358 l 4915 6356 l 4925 6354 l 4933 6352 l
 4934 6352 l 4934 6350 l 4934 6343 l 4934 6331 l 4934 6324 l
 4934 6322 l 4933 6322 l 4928 6322 l 4916 6322 l 4896 6322 l
 4869 6322 l 4837 6322 l 4806 6322 l 4779 6322 l 4759 6322 l
 4747 6322 l 4742 6322 l 4741 6322 l 4740 6322 l 4737 6322 l
 4732 6322 l 4729 6322 l 4726 6322 l 4724 6322 l 4721 6323 l
 4718 6324 l 4716 6325 l 4714 6326 l 4712 6327 l 4710 6329 l
 4707 6332 l 4705 6334 l 4703 6336 l 4701 6338 l 4700 6339 l
 4699 6341 l 4698 6342 l 4697 6344 l 4696 6346 l 4696 6347 l
 4695 6349 l 4695 6351 l 4695 6353 l 4694 6356 l 4694 6358 l
 4694 6359 l 4694 6360 l 4694 6362 l 4694 6365 l 4694 6367 l
 4695 6369 l 4695 6370 l 4696 6372 l 4697 6374 l 4697 6375 l
 4698 6377 l 4699 6378 l 4701 6379 l 4702 6381 l 4704 6383 l
 4706 6385 l 4708 6386 l 4709 6388 l 4710 6389 l 4712 6389 l
 4713 6390 l 4715 6391 l 4716 6391 l 4718 6391 l 4720 6391 l
 4721 6391 l 4724 6391 l 4726 6391 l 4727 6391 l 4729 6391 l
 4732 6390 l 4735 6390 l 4737 6389 l 4740 6388 l 4742 6387 l
 4744 6385 l 4747 6383 l 4748 6381 l 4749 6379 l 4750 6376 l
 4751 6372 l 4752 6369 l 4752 6368 l 4752 6366 l 4752 6364 l
 4752 6362 l 4752 6361 l 4752 6359 l 4752 6358 l 4751 6357 l
 4751 6356 l 4750 6355 l 4749 6354 l 4749 6353 l 4748 6352 l
 4747 6351 l 4746 6350 l 4745 6349 l 4744 6348 l 4743 6348 l
 4742 6347 l 4741 6346 l 4740 6346 l 4739 6346 l 4738 6346 l
 4736 6345 l 4735 6345 l 4733 6345 l 4732 6345 l 4730 6345 l
 4729 6345 l 4728 6346 l 4727 6346 l 4725 6346 l 4724 6347 l
 4724 6348 l 4723 6348 l 4722 6349 l 4721 6351 l 4720 6352 l
 4719 6353 l 4718 6354 l 4718 6355 l 4717 6356 l 4717 6357 l
 4717 6358 l 4716 6359 l 4717 6360 l 4717 6361 l 4717 6362 l
 4717 6363 l 4718 6364 l 4718 6365 l 4719 6366 l 4719 6367 l
 4720 6367 l 4720 6368 l 4721 6368 l 4722 6369 l 4723 6369 l
 4723 6368 l 4724 6368 l 4725 6368 l 4726 6367 l 4727 6367 l
 4727 6366 l 4728 6366 l 4728 6365 l 4729 6365 l 4729 6364 l
 4729 6363 l 4729 6362 l 4729 6361 l 4728 6360 l 4728 6359 l
 4729 6359 l 4729 6358 l 4730 6357 l 4731 6357 l 4731 6356 l
 4732 6356 l 4733 6356 l 4734 6356 l 4735 6356 l 4735 6357 l
 4736 6357 l 4737 6357 l 4738 6357 l 4738 6358 l 4739 6358 l
 4739 6359 l 4739 6360 l 4740 6360 l 4740 6361 l 4740 6362 l
 4741 6362 l 4741 6363 l 4741 6364 l 4740 6364 l 4740 6365 l
 4740 6366 l 4740 6368 l 4739 6371 l 4739 6373 l 4738 6374 l
 4737 6375 l 4736 6376 l 4735 6377 l 4733 6378 l 4732 6379 l
 4731 6379 l 4729 6379 l 4727 6380 l 4725 6380 l 4724 6380 l
 4722 6380 l 4721 6380 l 4720 6380 l 4719 6380 l 4718 6380 l
 4717 6379 l 4716 6379 l 4715 6379 l 4715 6378 l 4714 6377 l
 4713 6376 l 4712 6375 l 4711 6374 l 4710 6373 l 4710 6372 l
 4709 6372 l 4708 6371 l 4708 6370 l 4707 6369 l 4707 6368 l
 4707 6367 l 4706 6365 l 4706 6363 l 4706 6361 l 4706 6359 l
 4706 6357 l 4706 6355 l 4706 6353 l 4706 6352 l 4707 6351 l
 4707 6350 l 4707 6348 l 4708 6347 l 4709 6346 l 4709 6345 l
 4710 6344 l 4712 6343 l 4713 6342 l 4715 6340 l 4717 6339 l
 4718 6337 l 4720 6337 l 4721 6336 l 4723 6335 l 4725 6334 l
 4727 6334 l 4729 6334 l 4731 6333 l 4734 6333 l 4738 6333 l
 4740 6333 l 4741 6333 l 4742 6333 l 4744 6333 l 4747 6333 l
 4753 6333 l 4759 6333 l 4767 6333 l 4776 6333 l 4785 6333 l
 4794 6333 l 4802 6333 l 4809 6333 l 4815 6333 l 4822 6333 l
 4827 6333 l 4828 6333 l 4828 6334 l 4828 6337 l 4828 6341 l
 4828 6344 l 4828 6345 l 4826 6345 l 4816 6345 l 4797 6345 l
 4779 6345 l 4769 6345 l 4767 6345 l 4766 6345 l 4765 6345 l
 4764 6346 l 4763 6346 l 4762 6347 l 4762 6348 l 4761 6349 l
 4761 6350 l 4761 6351 l 4761 6352 l 4761 6353 l 4761 6354 l
 4761 6355 l 4762 6356 l 4762 6357 l 4763 6358 l 4764 6359 l
 4765 6359 l 4766 6359 l 4767 6359 l 4769 6359 l 4779 6359 l
 4798 6359 l 4816 6359 l 4826 6359 l 4828 6359 l 4828 6360 l
 4828 6362 l 4828 6367 l 4828 6369 l 4828 6370 l 4826 6370 l
 4817 6370 l 4799 6370 l 4782 6370 l 4773 6370 l 4771 6370 l
 4770 6370 l 4769 6370 l 4768 6370 l 4767 6371 l 4766 6371 l
 4766 6372 l 4765 6373 l 4765 6374 l 4765 6375 l 4765 6376 l
 4765 6377 l 4766 6378 l 4766 6379 l 4767 6380 l 4768 6381 l
 4769 6381 l 4770 6381 l 4771 6381 l 4773 6381 l 4782 6381 l
 4800 6381 l 4817 6381 l 4826 6381 l 4828 6381 l 4828 6384 l
 4828 6391 l 4828 6404 l 4828 6423 l 4828 6449 l 4828 6480 l
 4828 6516 l 4828 6554 l 4828 6592 l 4828 6628 l 4828 6659 l
 4828 6685 l 4828 6704 l 4828 6717 l 4828 6724 l 4828 6727 l
 4827 6727 l 4819 6727 l 4802 6727 l 4780 6727 l 4757 6727 l
 4740 6727 l 4732 6727 l 4731 6727 l 4730 6727 l 4729 6727 l
 4728 6727 l 4727 6728 l 4726 6728 l 4726 6729 l 4726 6730 l
 4725 6730 l 4725 6731 l 4725 6732 l 4725 6733 l 4725 6734 l
 4725 6735 l 4725 6736 l 4725 6737 l 4726 6738 l 4726 6739 l
 4727 6739 l 4727 6740 l 4728 6740 l 4729 6740 l 4730 6740 l
 4731 6740 l 4732 6740 l 4740 6740 l 4757 6740 l 4780 6740 l
 4802 6740 l 4819 6740 l 4827 6740 l 4828 6740 l 4828 6741 l
 4828 6745 l 4828 6750 l 4828 6754 l 4828 6755 l 4827 6755 l
 4822 6755 l 4811 6755 l 4792 6755 l 4770 6755 l 4748 6755 l
 4729 6755 l 4718 6755 l 4713 6755 l 4712 6755 l 4710 6755 l
 4707 6755 l 4706 6756 l 4704 6756 l 4703 6757 l 4702 6758 l
 4701 6759 l 4700 6760 l 4699 6761 l 4699 6763 l 4698 6764 l
 4698 6767 l 4698 6769 l 4698 6770 l 4698 6773 l 4698 6779 l
 4698 6782 l 4698 6783 l 4699 6783 l 4703 6783 l 4713 6783 l
 4730 6783 l 4755 6783 l 4786 6783 l 4821 6783 l 4856 6783 l
 4887 6783 l 4912 6783 l 4929 6783 l 4939 6783 l 4943 6783 l

 4944 6783 l  cp gs col7 1.00 shd ef gr 
%  spline 
% Polyline
n 4783 6706 m 4783 6705 l 4783 6702 l 4783 6693 l 4783 6678 l 4783 6656 l
 4783 6626 l 4783 6592 l 4783 6555 l 4783 6517 l 4783 6483 l
 4783 6453 l 4783 6431 l 4783 6416 l 4783 6407 l 4783 6404 l
 4783 6403 l 4783 6402 l 4783 6401 l 4783 6400 l 4782 6400 l
 4782 6399 l 4781 6399 l 4781 6398 l 4780 6398 l 4779 6398 l
 4778 6398 l 4777 6398 l 4776 6398 l 4775 6398 l 4774 6399 l
 4773 6399 l 4773 6400 l 4772 6401 l 4772 6402 l 4772 6403 l
 4772 6404 l 4772 6407 l 4772 6416 l 4772 6431 l 4772 6453 l
 4772 6483 l 4772 6517 l 4772 6555 l 4772 6592 l 4772 6626 l
 4772 6656 l 4772 6678 l 4772 6693 l 4772 6702 l 4772 6705 l
 4772 6706 l 4772 6707 l 4772 6708 l 4773 6709 l 4773 6710 l
 4774 6711 l 4775 6712 l 4776 6712 l 4777 6712 l 4778 6712 l
 4779 6712 l 4780 6712 l 4781 6712 l 4781 6711 l 4782 6711 l
 4782 6710 l 4783 6709 l 4783 6708 l 4783 6707 l
 4783 6706 l  cp gs col7 1.00 shd ef gr 
%  spline 
% Polyline
n 4813 6705 m 4813 6704 l 4813 6701 l 4813 6692 l 4813 6677 l 4813 6655 l
 4813 6626 l 4813 6592 l 4813 6555 l 4813 6518 l 4813 6484 l
 4813 6455 l 4813 6433 l 4813 6418 l 4813 6409 l 4813 6406 l
 4813 6405 l 4813 6404 l 4813 6402 l 4813 6401 l 4812 6400 l
 4811 6399 l 4811 6398 l 4810 6398 l 4809 6398 l 4808 6397 l
 4807 6397 l 4806 6397 l 4805 6397 l 4804 6397 l 4803 6397 l
 4802 6397 l 4801 6398 l 4800 6398 l 4799 6399 l 4799 6400 l
 4798 6401 l 4798 6402 l 4798 6404 l 4798 6405 l 4798 6406 l
 4798 6409 l 4798 6418 l 4798 6433 l 4798 6455 l 4798 6484 l
 4798 6518 l 4798 6555 l 4798 6592 l 4798 6626 l 4798 6655 l
 4798 6677 l 4798 6692 l 4798 6701 l 4798 6704 l 4798 6705 l
 4798 6706 l 4798 6707 l 4798 6708 l 4799 6709 l 4799 6710 l
 4799 6711 l 4800 6711 l 4801 6712 l 4802 6713 l 4803 6713 l
 4804 6713 l 4805 6713 l 4806 6713 l 4807 6713 l 4808 6713 l
 4809 6712 l 4810 6712 l 4811 6711 l 4812 6710 l 4812 6709 l
 4813 6708 l 4813 6707 l 4813 6706 l
 4813 6705 l  cp gs col7 1.00 shd ef gr 
%  polyline 
% Polyline
0 slj
n 5136 6864 m 5124 6864 l 5124 6894 l 5119 6894 l 5119 6864 l 5108 6864 l
 5108 6860 l 5136 6860 l
 5136 6864 l  cp gs col32 1.00 shd ef gr 
%  polyline 
% Polyline
n 5172 6894 m 5167 6894 l 5167 6867 l 5157 6880 l 5156 6880 l 5146 6867 l
 5145 6867 l 5145 6894 l 5141 6894 l 5141 6860 l 5145 6860 l
 5156 6874 l 5168 6860 l 5172 6860 l
 5172 6894 l  cp gs col32 1.00 shd ef gr 
$F2psEnd
rs

%%EndDocument
 @endspecial 4769 5844 a
 currentpoint grestore moveto
 4769 5844 a 4130 5844 a
 currentpoint currentpoint translate 1 0.76611 div 1 0.76611 div scale
neg exch neg exch translate
 4130
5844 a 5001 3450 a
SDict begin H.S end
 5001 3450 a 5001 3450 a
SDict begin H.R end
 5001 3450
a 5001 3450 a
SDict begin [ /View [/XYZ H.V] /Dest (page.1) cvn H.B /DEST pdfmark
end
 5001 3450 a 5001 3450 a
SDict begin [ {ThisPage} << /Trans << /S /Replace >> >> /PUT pdfmark
end
 5001 3450 a 5001
3450 a
SDict begin [ /Page 11/View [ /XYZ null null null ] /Title (Booting SESC)
/OUT pdfmark end
 5001 3450 a 7758 1453 a Fm(B)18 b Fn(O)g(O)7 b(T)18
b(I)g(N)g(G)116 b Fm(S)18 b(E)g(S)g(C)4581 2081 y Fe(int)90
b(main\(int)e(argc,)i(char)g(**argv,)e(char)i(**envp\))f({)4764
2447 y(DummyMemorySyste)o(m)c(*cm[NPROC];)4764 2630 y(MyProc)k
(*core[NPROC];)4764 2996 y(osSim)g(=)i(new)g(OSSim\(argc,)c(argv,)i
(envp\);)4764 3361 y(for\(Pid_t)f(i)j(=)g(0;)g(i)g(<)g(NPROC;)e(i)i
(++\))g({)4947 3544 y(cm[i])273 b(=)91 b(new)f(DummyMemorySystem)o(\(i)
o(\);)4947 3727 y(core[i])f(=)i(new)f(MyProc\(cm[i],)c(i\);)4764
3910 y(})4764 4276 y(osSim->boot\(\);)4764 4641 y(for\(int)i(i)k(=)f
(0;)g(i)g(<)g(NPROC;)e(i)i(++\))g({)4947 4824 y(delete)e(core[i];)4947
5007 y(delete)g(cm[i];)4764 5190 y(})4764 5373 y(delete)g(osSim;)4581
5556 y(})10245 5222 y
 0 setgray
 10245 5222 a 4500 6000 a
 tx@Dict begin -90 Rot  end
 4500 6000
a eop
%%Page: 12 12
12 11 bop 4500 6000 a
 tx@Dict begin 90 Rot  end
 4500 6000 a 5981 1792 a @beginspecial
-168 @llx 371 @lly 782 @urx 421 @ury 2834 @rwi 283 @rhi
@setspecial
%%BeginDocument: barre-rico.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /ufs/goualard/TEMP/barre_hor.ps
%%Creator: XV Version 3.10a  Rev: 12/29/94 (PNG patch 1.2)  -  by John Bradley
%%BoundingBox: -168 371 782 421
%%Pages: 1
%%DocumentFonts:
%%EndComments
%%EndProlog

%%Page: 1 1

% remember original state
/origstate save def

% build a temporary dictionary
20 dict begin

% define space for color conversions
/grays 950 string def  % space for gray scale line
/npixls 0 def
/rgbindx 0 def

% lower left corner
-168 371 translate

% size of image (on paper, in 1/72inch coords)
949.96800 49.96800 scale

% define 'colorimage' if it isn't defined
%   ('colortogray' and 'mergeprocs' come from xwd2ps
%     via xgrab)
/colorimage where   % do we know about 'colorimage'?
  { pop }           % yes: pop off the 'dict' returned
  {                 % no:  define one
    /colortogray {  % define an RGB->I function
      /rgbdata exch store    % call input 'rgbdata'
      rgbdata length 3 idiv
      /npixls exch store
      /rgbindx 0 store
      0 1 npixls 1 sub {
        grays exch
        rgbdata rgbindx       get 20 mul    % Red
        rgbdata rgbindx 1 add get 32 mul    % Green
        rgbdata rgbindx 2 add get 12 mul    % Blue
        add add 64 idiv      % I = .5G + .31R + .18B
        put
        /rgbindx rgbindx 3 add store
      } for
      grays 0 npixls getinterval
    } bind def

    % Utility procedure for colorimage operator.
    % This procedure takes two procedures off the
    % stack and merges them into a single procedure.

    /mergeprocs { % def
      dup length
      3 -1 roll
      dup
      length
      dup
      5 1 roll
      3 -1 roll
      add
      array cvx
      dup
      3 -1 roll
      0 exch
      putinterval
      dup
      4 2 roll
      putinterval
    } bind def

    /colorimage { % def
      pop pop     % remove 'false 3' operands
      {colortogray} mergeprocs
      image
    } bind def
  } ifelse          % end of 'false' case



% define the colormap
/cmap 117 string def


% load up the colormap
currentfile cmap readhexstring
bcfe04 dcfe84 ccfe44 ecfec4 c4fe24 d4fe64 f4fee4 e4fea4 bcfe14 ccfe54 
f4fed4 c4fe34 d4fe74 fcfef4 ecfeb4 e4fe94 f4fecc fcfee4 ecfeac c4fe1c 
d4fe54 ccfe3c dcfe74 bcfe0c dcfe8c ccfe4c ecfecc c4fe2c d4fe6c e4feac 
bcfe1c f4fedc c4fe3c fcfefc ecfebc e4fe9c fcfeec d4fe5c dcfe7c 
pop pop   % lose return values from readhexstring


% rlecmapimage expects to have 'w h bits matrix' on stack
/rlecmapimage {
  /buffer 1 string def
  /rgbval 3 string def
  /block  384 string def

  % proc to read a block from file, and return RGB data
  { currentfile buffer readhexstring pop
    /bcount exch 0 get store
    bcount 128 ge
    {  % it's a non-run block
      0 1 bcount 128 sub
      { currentfile buffer readhexstring pop pop

        % look up value in color map
        /rgbval cmap buffer 0 get 3 mul 3 getinterval store

        % and put it in position i*3 in block
        block exch 3 mul rgbval putinterval
      } for
      block  0  bcount 127 sub 3 mul  getinterval
    }

    { % else it's a run block
      currentfile buffer readhexstring pop pop

      % look up value in colormap
      /rgbval cmap buffer 0 get 3 mul 3 getinterval store

      0 1 bcount { block exch 3 mul rgbval putinterval } for

      block 0 bcount 1 add 3 mul getinterval
    } ifelse
  } % end of proc
  false 3 colorimage
} bind def


950 50 8			% dimensions of data
[950 0 0 -50 0 50]		% mapping matrix
rlecmapimage

7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f210221870d1f220e220311212a21
7f217f217f217f217f217f2175218211030e820e220e820e220e860e220e23050b048404
090e24212a21
7f217f217f217f217f217f2171218e110312260b041e131e131e131e131e871e17001702
1d24212c21
7f217f217f217f217f217f216921830d1f220e870e221226200408000b00841702070d21
0521842403100d212321
7f217f217f217f217f217f2121218524220f231f213a218f0d0a220e220e23051b041e13
1e0817000c008408190706210421851103221f0d212521
7f217f217f217f217f217f211e2189240e1c1b17000825242136218a0d1026021b041e13
081700110085172001030d210421840316030d212821
7f217f217f217f217f21342186111a120f070a215721860d1110220e220e860e12182504
17000300821b1f212521851f0e2326230e080e841d010908001100820820090209840c1d
1a06210521841026230d212a21
7f217f217f217f21792186241f10220e220e820e220e820e220e820e220e820e220e820e
220e830e070f01010182070a2117218b0610231c1508001708090a2151218e0d1f101d01
14201b1e131e131e08000700820c0d211021840d100311210921881103220e07050b0800
8400171e081e821e081e851e081e0817001000851e2009181a210b21850d22261d24212c
21
7f217f217f217f21472184241f10220e820e220e820e220e820e220e820e220e820e220e
820e220e810e2283221f0d210e219a241f10070f1c09151e041e131e131e131e131e131e
131e131e131e821e080002008b17081410210d1110220e220e820e220e820e220e010e81
2301880126012616191b08000500820422212f2182240d211921890d0a0e072625150417
00100082201a210921890d1110220e23011620048304051f210421891103231c15131e08
1700190082171e090309820c1a210e21841f0e0a0d212e21
7f217f217f217f213f2190241f100e070f011c1920041e131e081e0882081e0882081e08
82081e0882081e0803088304250a2107218b241f030e12181619151e08001d00811e268c
2614201b041e131e131e131e088108178117000f0082091f211521840d0610220e0f0e88
120f012625020c11211321890d0a22121809040817001300831e050a2105218a0d1f101d
0114201b1e170004008408260e220e860e230c020417001800821e2009020982181a2114
21810d213321
7f211221842422121f217f217f217f211221850d0a220e220e820e220e820e220e820e22
0e010e881d0f1605090b041e178117001a008f1e22210d1110221d0f0116190b041e1781
1700220001171f00820b2221102189111022120f0125151b1e011e81081e821e081e821e
081e821e081e821e081e821e1700030082171c0e110e861d01251b1e170015008220181d
021d81220e020e86070119150417000b0086081e131e08170019008308091d210c21830d
1f24214121
7f210721830d0a220e040e83230504088308052421492185240a22230f01130182070a21
7f2106218c240a03220e220e220e220e1d0f840f01231f217f210a2199240a221d0f0116
191b1e131e131e131e131e131e131e131e17002300810b16871609200413081700490087
171e051d1f10220e0a0e8712232625201b1e178117001b000108011e81081e821e081e82
1e081e821e081e821e081e831e0817000c0085171e201e08000300831720090c840c090b
1b1e871e081e081e0817001f0083081e201e821e20090809820c03210b21860d0a222307
0d210521010d3a21
7f21042188112218141b13081e088108178117000300821b1f2140218b241f100e070f1c
25021b1317811700140083081410217f218c241f10070f05021b04131e131e011e810817
811700010093170207220e220e220e220e220e220e22120f18018301231f216e218c0d0a
22120f0116191b130817004c000117811e208120090509822008002c008308200c188518
0c09021b1e821e081e821e081e821e081e811e08810817811700400081171e871e09181a
061c08000300851e200b1e1700250083171e200983091806211721820d110a010a841d26
1918214421
6c219a1103220e220e220e220e220e220e220e220e220e22120f050b08000d0093091d22
0e220e220e220e220e220e220e2203112127218c241f100e070f0105021b1e08001e0082
0422216a2189241f10220e230f1826018201260182012601890126160509150408170011
0085131e131e131e821e131e831e131e0882081700020083082524215e2183240a220e82
0e220e8b0e22120f011605190b1308178117004d008817081e2009181d06210821810900
22000408071e0117510085080b09181a21022182060900040082081700120082171e000f
00011e83091806210d21821a031d8e1d221d221d0e22030a110d240d240d810d21012182
2406214521
68219711030f252004131e131e131e131e131e131e131e131e131e821e08001100011e83
131e131e821e131e821e131e821e131e811e1383131c1f211e218d0d1110221d0f260519
0b041e17002500821b0c0103018426161c05250b258405160f1d0e210e82070f26012681
0126822601268426010f1f2117218a241f100e070f1609150408820817003900821b1f21
56218a0a0f0c2514190215041e0801088217081701173400011781001781170016000117
011e85200c181d06210e218105000d0083171e08000c00011781081e041e020802171e00
82081e208120090d0982201e001b00850820090c1a210721821817000b008b081e200920
1920192009200986090c1d1a060900030083171e20090209010c83181a0621082187060a
0e1d071d0e1d821d0f1802180107841d220a24215221
1d21830d1f220e820e220e820e220e820e220e860e220e221024212321840d10230f010a
01852616091b08003b00820812210421830d1f102281220e820e220e820e220e820e220e
820e220e820e220e890e1d0f011609201b1317811700470081081e821e081e821e081e82
1e081e821e081e821e081e821e081e821e081e821e081e821e081e821e081e841e081e08
000a0083170b260182012601820126018201260182012601820126018a01260126160525
19151b088108004200820c0d21032196240a03220e220e220e220e220e220e220e220e22
0e1d0f810f01150182231f210921840d0610220e0e0e8418140417002100821720090409
822017002c008317081e208520090c1d1a211621821a201e811e20832009200982092009
86092009181a0c003400011e8520090c181a211221831a0c200982092009820920091109
830c1a06210a2182062000080087082009181a0621060206812106810621052183061d0c
0984090c181d1a011a02060e21820d062482240d216021
1c21970d0702041e131e131e131e131e131e131e0420050f100d211f21840d231b17004d
00a008182212230f011609151b131e131e131e131e131e131e131e131e131e130817001b
0083170017007f0041008c201a241f10070f1c021b04131e821e131e821e131e821e131e
821e131e011e810817811700160001178205112101218a111022120f181614151b1e821e
081e821e081e821e081e821e081e821e0817811700250082090621032182060900260088
17081e20090c1d1a212e2183062017001f008317081e208120090a09830c181a21442183
240917008300081e2001208409181a0621142183061a1d1a841a062106217721
1b21830d071b000f008517080b05230e8f0e220e220e220e220e220e220e220e22842210
110d210821830d231e004f00841e041e08178117007f0065008117000e000108011e8720
0c16090b1e08003000880401181614201b1e178117003a00822006210421820620001f00
81171e861e20090c1d1a213521820609001700011788081e20090c181a0621492184060a
101a1086101a10110d210d880d061a180c09181a0601067f211b21
1b21820a1900140081081e821e131e821e131e821e131e821e131e8d1e131e13040b1925
1812221f0d210321820a20007f007f0033000108160081081e031e820817003600811700
40008308091a2106218203091e031e8120091609830c1d1a213d21821f01091409840c18
1a06214e21010d0124010685240624060d210321850a26012206217f211f21
1b21831020170029008c1708040b021925051626051e007f002f000d1782081e20812009
1e0982201e00370081171e811e208120090c0982181d0683061808007900011781081e07
1e8120090e09820c1d217f216721820611217f212221
1b21830d0e0c090c0982201e004d00820817002a000217011e8120090c09811e00380082
17081e851e090c181a068306210621822106218221062182210621822106212521821a0c
09010982201e002700011781081e811e2085200c181d06211321821a200022000117011e
82091e0035008317081e20812009090982201e0002008608091a062106217f215521810d
217f215321
2d21851a0c201e17004300850820090c1a068206200022008317081e208620090c181d1a
210f21821d08002e000117021e0120840c181a06214221821d0c09250983181d06211c21
821a20001c008817081e2009181d062101218109002d0081171e871e20090c181a06210e
21851d09200c1a217f215a2182110d215321810d217d21
30218306180c090f0983201e08002500811e09820920090109830c1a062104218203201e
081e01201309810c1d821d1a21182182062000260081171e011e8620090c181a06217f21
1521830d1d0c091909840c181d06210721821a191e091e83200920098209200982092009
8209200982092009820920098209200982092009820920098209200985090c181a06217f
217621810d215121860d1026142510217c21
462185061d0c2017002000820906214e21820618098209200981092082201e178217081e
011e01201309840c181a06217f217f217f217f214421810d2401248306240d217d21
4a21841d201e0800150081081e041e820906217f217f217f217f217f217f214521
4e2185061a18201e000b0085171e091d06217f217f217f217f217f217f214e21
5221821a0c090909830c1d06217f217f217f217f217f217f215121
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521

%
% Compression made this file 2.88% of the uncompressed size.
%


showpage

% stop using temporary dictionary
end

% restore original state
origstate restore

%%Trailer

%%EndDocument
 @endspecial 5001 5222 a @beginspecial @setspecial
 tx@Dict begin STP newpath 1.0 SLW 0.5451 0.39608 0.03137 setrgbcolor
 /ArrowA { moveto } def /ArrowB { } def [ 341.43292 -28.45274 -22.76227
-28.45274  /Lineto /lineto load def false Line  gsave 1.0 SLW 0.5451
0.39608 0.03137 setrgbcolor 0 setlinecap stroke  grestore end
 
@endspecial
621 x Fi(SESC)20 b(\(IA)n(COMA)e(g)o(roup\))2960 b(Joe)20
b(Renau,)h(Basilio)e(F)m(r)o(aguela,)h(and)g(Liu)g(W)n(ei)39
b(\226)20 b(page)40 b(12/23)4266 1057 y
 gsave currentpoint currentpoint translate 270 neg rotate neg exch
neg exch translate
 4266 1057 a @beginspecial
276 @llx 366 @lly 336 @urx 426 @ury 141 @rwi 141 @rhi
@setspecial
%%BeginDocument: angleHG.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/rico/texte/texstyle/Prosper-beta/img/angleHG.ps
%%Creator: XV Version 3.10a  Rev: 12/29/94 (PNG patch 1.2)  -  by John Bradley
%%BoundingBox: 276 366 336 426
%%Pages: 1
%%DocumentFonts:
%%EndComments
%%EndProlog

%%Page: 1 1

% remember original state
/origstate save def

% build a temporary dictionary
20 dict begin

% define string to hold a scanline's worth of data
/pix 180 string def

% define space for color conversions
/grays 60 string def  % space for gray scale line
/npixls 0 def
/rgbindx 0 def

% print in landscape mode
90 rotate 0 -612 translate

% lower left corner
366 276 translate

% size of image (on paper, in 1/72inch coords)
59.97600 59.97600 scale

% define 'colorimage' if it isn't defined
%   ('colortogray' and 'mergeprocs' come from xwd2ps
%     via xgrab)
/colorimage where   % do we know about 'colorimage'?
  { pop }           % yes: pop off the 'dict' returned
  {                 % no:  define one
    /colortogray {  % define an RGB->I function
      /rgbdata exch store    % call input 'rgbdata'
      rgbdata length 3 idiv
      /npixls exch store
      /rgbindx 0 store
      0 1 npixls 1 sub {
        grays exch
        rgbdata rgbindx       get 20 mul    % Red
        rgbdata rgbindx 1 add get 32 mul    % Green
        rgbdata rgbindx 2 add get 12 mul    % Blue
        add add 64 idiv      % I = .5G + .31R + .18B
        put
        /rgbindx rgbindx 3 add store
      } for
      grays 0 npixls getinterval
    } bind def

    % Utility procedure for colorimage operator.
    % This procedure takes two procedures off the
    % stack and merges them into a single procedure.

    /mergeprocs { % def
      dup length
      3 -1 roll
      dup
      length
      dup
      5 1 roll
      3 -1 roll
      add
      array cvx
      dup
      3 -1 roll
      0 exch
      putinterval
      dup
      4 2 roll
      putinterval
    } bind def

    /colorimage { % def
      pop pop     % remove 'false 3' operands
      {colortogray} mergeprocs
      image
    } bind def
  } ifelse          % end of 'false' case



60 60 8			% dimensions of data
[60 0 0 -60 0 60]		% mapping matrix
{currentfile pix readhexstring pop}
false 3 colorimage

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffafee3effeaaffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffafee3e3fe64ffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffe3fe64fafee3ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffe9fe88f1feb3ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffe8fe86dffe55fefefeffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffebfe96dafe37fefefeffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffedfe9edefe48f7fed5ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffedfe9ee2fe60eefea5f5fecaecfe95ecfe97ecfe98
ecfe99ecfe9bf6feceffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffeffeaadffe4fe0fe55dcfe3f
dbfe3cdbfe3ddbfe3dddfe48defe4cdcfe43d9fe32d6fe20e2fe5fe3fe67defe4ddefe4d
defe4edefe4edbfe3bdbfe3cdcfe3ddcfe3fdcfe40dcfe42ddfe43ddfe45ddfe46ddfe48
ddfe46e2fe63e5fe72e5fe74e6fe76e6fe77e6fe79e7fe7ae9fe86e8fe85ebfe94ecfe97
ecfe99ecfe9cedfe9eeffeacf2febcf3febef3fec1f4fec4f9fedfffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffeffeaaf1feb3f5fec7e9fe87
e7fe7be7fe7be7fe7be2fe60e1fe5bd6fe1dd8fe2adafe33e1fe5bdffe54defe4edffe50
dffe51dffe53e0fe54ddfe49ddfe4bdefe4cdefe4edefe50dffe52dffe54e5fe73eafe93
e9fe89e6fe7ae4fe6ce4fe6ee8fe84e8fe85e9fe87e9fe8ae8fe84e7fe7ce8fe81e9fe8a
f0feb0f8fedbf9fedff1feb8f1febaeafe8bfbfeeafbfeebfdfef5ffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff5fecddffe52e1fe5df5fec9f5fec9f5fecaf5feca
f5fecbf5feccf5feccf5fecdf6fecef6fecef6fecef6fecff6fed0f6fed1eefea5e9fe8a
f6fed1f7fed7f7fed8f7fed9f6fecdfafee8fcfef1fcfef2fdfef7fcfef3fdfef7fefefc
fefefcfefefdf9fee0f6fecff5feccf4fec2ffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff5fecde3fe64e5fe74ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffdfef5fefefdfefefdfefefcfefefcfffffffefef9
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff5fecde5fe74dffe53ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff6fecee6fe79e5fe6ff8fed8ffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff6fecee6fe7aebfe95effeaaffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff6fecee6fe7aedfe9eeefea2ffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff6fecee6fe7bedfe9eeefea3ffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff6fecfe6fe78ecfe9eeefea5ffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffefefe
fefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff6fed0e2fe63e0fe59dffe55ffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffefefe
fefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffedfe9fe2fe5fd8fe2ad8fe2dffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffecfe9adffe53d6fe1cdefe4cf6fecfffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffedfe9cd8fe2cd6fe20defe4bf6fed0ffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffefefdffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffedfe9dd8fe27d7fe22defe4ef6fed0ffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffedfe9dd7fe26d6fe20e0fe5bf6fed2ffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff3febdd7fe22d7fe22e1fe5ef7fed3ffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff4fec6d6fe20d7fe21e0fe57f7fed4ffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff4fec6d6fe20d6fe1fe0fe59f7fed5ffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff4fec6d6fe1ed6fe1ee5fe73f7fed6ffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff4fec6d6fe1dd9fe32e0fe56ffffffffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff5fecce0fe55defe48e8fe81ffffffffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffbfeede7fe7fe0fe56e9fe85ffffffffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff7fed8e8fe84e7fe7ef1feb4ffffffffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff2feb8edfea0effea6f1feb6ffffffffffffffffff
fffffffefefefefefeffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffefefceffeabf0feafeffea7f2feb7ffffffffffffffffff
fffffffefefefefefefefefeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffefefcf5fecaecfe9de7fe7af8feddffffffffffffffffff
fffffffefefefefefefefefefefefeffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffefefcf5fecce8fe85e8fe80ffffffffffffffffffffffff
fffffffefefefefefefefefeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffff8fedefdfef8fdfefbf3fec0e9fe89ecfe96ffffffffffffffffffffffff
fefefefefefefefefefefefeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffdfef6fefefafefefaf4fec2e9fe89ecfe96ffffffffffffffffffffffff
fefefefefefefefefefefefeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffdfef6fefefefefefdf4fec2e8fe85edfe9dffffffffffffffffffffffff
fefefefefefefefefefefefeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffefef9fefefdfefefce7fe7be5fe76f2feb7ffffffffffffffffffffffff
fffffffffffffefefefefefeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffdfef6fdfefafefefbe2fe65e5fe75f6fed0ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffdfef9fefefce6fe79e6fe77fafee6ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffcfef6fefefbecfe9be7fe7efbfeecffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffdfef5fdfef7f7fed5e9fe8dfcfef2ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffcfeeffbfeebedfea1fdfef7ffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffefefeffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffefefdfbfee9effeabffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffefefefefefeffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffbfeeceffea6ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff9fee3f3fec1ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffeefea2f8fedaffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff1feb2fafee4ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffcfef0fefefaffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff


showpage

% stop using temporary dictionary
end

% restore original state
origstate restore

%%Trailer

%%EndDocument
 @endspecial 4511 1057 a
 currentpoint grestore moveto
 4511 1057 a 4130 5844 a
 currentpoint currentpoint translate 0.76611 0.76611 scale neg exch
neg exch translate
 4130
5844 a 4130 5844 a
 gsave currentpoint currentpoint translate 0 neg rotate neg exch neg
exch translate
 4130 5844 a @beginspecial 0 @llx 0
@lly 37 @urx 42 @ury 370 @rwi @setspecial
%%BeginDocument: figs/uiuc.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: uiuc.eps
%%Creator: fig2dev Version 3.2 Patchlevel 3d
%%CreationDate: Sun Feb 10 22:03:46 2002
%%For: renau@nether.cs.uiuc.edu (Jose Renau)
%%BoundingBox: 0 0 37 42
%%Magnification: 1.0000
%%EndComments
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def
/col32 {0.200 0.200 0.400 srgb} bind def
/col33 {0.800 0.400 0.000 srgb} bind def

end
save
newpath 0 42 moveto 0 0 lineto 37 0 lineto 37 42 lineto closepath clip newpath
-273.7 413.7 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
 0.06000 0.06000 sc
%
% Fig objects follow
%
%  polyline 
% Polyline
n 5070 6872 m 5070 6227 l 4584 6227 l 4584 6872 l
 5070 6872 l  cp gs col32 1.00 shd ef gr 
%  polyline 
% Polyline
15.000 slw
n 5070 6872 m 5070 6227 l 4584 6227 l 4584 6872 l
 5070 6872 l  cp gs col32 s gr 
%  polyline 
% Polyline
0.000 slw
n 5056 6858 m 5056 6243 l 4598 6243 l 4598 6858 l
 5056 6858 l  cp gs col32 1.00 shd ef gr 
%  polyline 
% Polyline
7.500 slw
n 5056 6858 m 5056 6243 l 4598 6243 l 4598 6858 l
 5056 6858 l  cp gs col33 s gr 
%  spline 
% Polyline
2 slj
0.000 slw
n 4944 6783 m 4944 6781 l 4944 6773 l 4944 6759 l 4944 6751 l 4944 6749 l
 4943 6749 l 4935 6748 l 4924 6746 l 4914 6744 l 4906 6742 l
 4900 6741 l 4896 6739 l 4892 6738 l 4887 6735 l 4884 6732 l
 4880 6728 l 4877 6722 l 4875 6716 l 4873 6709 l 4872 6702 l
 4871 6693 l 4870 6683 l 4869 6670 l 4869 6654 l 4868 6637 l
 4868 6621 l 4868 6609 l 4868 6604 l 4868 6603 l 4868 6602 l
 4868 6597 l 4868 6585 l 4868 6567 l 4868 6544 l 4868 6521 l
 4868 6503 l 4868 6491 l 4868 6486 l 4868 6485 l 4868 6483 l
 4868 6474 l 4868 6457 l 4869 6438 l 4869 6420 l 4870 6406 l
 4870 6395 l 4871 6387 l 4873 6381 l 4874 6375 l 4876 6371 l
 4879 6367 l 4882 6365 l 4885 6363 l 4889 6362 l 4892 6361 l
 4898 6359 l 4905 6358 l 4915 6356 l 4925 6354 l 4933 6352 l
 4934 6352 l 4934 6350 l 4934 6343 l 4934 6331 l 4934 6324 l
 4934 6322 l 4933 6322 l 4928 6322 l 4916 6322 l 4896 6322 l
 4869 6322 l 4837 6322 l 4806 6322 l 4779 6322 l 4759 6322 l
 4747 6322 l 4742 6322 l 4741 6322 l 4740 6322 l 4737 6322 l
 4732 6322 l 4729 6322 l 4726 6322 l 4724 6322 l 4721 6323 l
 4718 6324 l 4716 6325 l 4714 6326 l 4712 6327 l 4710 6329 l
 4707 6332 l 4705 6334 l 4703 6336 l 4701 6338 l 4700 6339 l
 4699 6341 l 4698 6342 l 4697 6344 l 4696 6346 l 4696 6347 l
 4695 6349 l 4695 6351 l 4695 6353 l 4694 6356 l 4694 6358 l
 4694 6359 l 4694 6360 l 4694 6362 l 4694 6365 l 4694 6367 l
 4695 6369 l 4695 6370 l 4696 6372 l 4697 6374 l 4697 6375 l
 4698 6377 l 4699 6378 l 4701 6379 l 4702 6381 l 4704 6383 l
 4706 6385 l 4708 6386 l 4709 6388 l 4710 6389 l 4712 6389 l
 4713 6390 l 4715 6391 l 4716 6391 l 4718 6391 l 4720 6391 l
 4721 6391 l 4724 6391 l 4726 6391 l 4727 6391 l 4729 6391 l
 4732 6390 l 4735 6390 l 4737 6389 l 4740 6388 l 4742 6387 l
 4744 6385 l 4747 6383 l 4748 6381 l 4749 6379 l 4750 6376 l
 4751 6372 l 4752 6369 l 4752 6368 l 4752 6366 l 4752 6364 l
 4752 6362 l 4752 6361 l 4752 6359 l 4752 6358 l 4751 6357 l
 4751 6356 l 4750 6355 l 4749 6354 l 4749 6353 l 4748 6352 l
 4747 6351 l 4746 6350 l 4745 6349 l 4744 6348 l 4743 6348 l
 4742 6347 l 4741 6346 l 4740 6346 l 4739 6346 l 4738 6346 l
 4736 6345 l 4735 6345 l 4733 6345 l 4732 6345 l 4730 6345 l
 4729 6345 l 4728 6346 l 4727 6346 l 4725 6346 l 4724 6347 l
 4724 6348 l 4723 6348 l 4722 6349 l 4721 6351 l 4720 6352 l
 4719 6353 l 4718 6354 l 4718 6355 l 4717 6356 l 4717 6357 l
 4717 6358 l 4716 6359 l 4717 6360 l 4717 6361 l 4717 6362 l
 4717 6363 l 4718 6364 l 4718 6365 l 4719 6366 l 4719 6367 l
 4720 6367 l 4720 6368 l 4721 6368 l 4722 6369 l 4723 6369 l
 4723 6368 l 4724 6368 l 4725 6368 l 4726 6367 l 4727 6367 l
 4727 6366 l 4728 6366 l 4728 6365 l 4729 6365 l 4729 6364 l
 4729 6363 l 4729 6362 l 4729 6361 l 4728 6360 l 4728 6359 l
 4729 6359 l 4729 6358 l 4730 6357 l 4731 6357 l 4731 6356 l
 4732 6356 l 4733 6356 l 4734 6356 l 4735 6356 l 4735 6357 l
 4736 6357 l 4737 6357 l 4738 6357 l 4738 6358 l 4739 6358 l
 4739 6359 l 4739 6360 l 4740 6360 l 4740 6361 l 4740 6362 l
 4741 6362 l 4741 6363 l 4741 6364 l 4740 6364 l 4740 6365 l
 4740 6366 l 4740 6368 l 4739 6371 l 4739 6373 l 4738 6374 l
 4737 6375 l 4736 6376 l 4735 6377 l 4733 6378 l 4732 6379 l
 4731 6379 l 4729 6379 l 4727 6380 l 4725 6380 l 4724 6380 l
 4722 6380 l 4721 6380 l 4720 6380 l 4719 6380 l 4718 6380 l
 4717 6379 l 4716 6379 l 4715 6379 l 4715 6378 l 4714 6377 l
 4713 6376 l 4712 6375 l 4711 6374 l 4710 6373 l 4710 6372 l
 4709 6372 l 4708 6371 l 4708 6370 l 4707 6369 l 4707 6368 l
 4707 6367 l 4706 6365 l 4706 6363 l 4706 6361 l 4706 6359 l
 4706 6357 l 4706 6355 l 4706 6353 l 4706 6352 l 4707 6351 l
 4707 6350 l 4707 6348 l 4708 6347 l 4709 6346 l 4709 6345 l
 4710 6344 l 4712 6343 l 4713 6342 l 4715 6340 l 4717 6339 l
 4718 6337 l 4720 6337 l 4721 6336 l 4723 6335 l 4725 6334 l
 4727 6334 l 4729 6334 l 4731 6333 l 4734 6333 l 4738 6333 l
 4740 6333 l 4741 6333 l 4742 6333 l 4744 6333 l 4747 6333 l
 4753 6333 l 4759 6333 l 4767 6333 l 4776 6333 l 4785 6333 l
 4794 6333 l 4802 6333 l 4809 6333 l 4815 6333 l 4822 6333 l
 4827 6333 l 4828 6333 l 4828 6334 l 4828 6337 l 4828 6341 l
 4828 6344 l 4828 6345 l 4826 6345 l 4816 6345 l 4797 6345 l
 4779 6345 l 4769 6345 l 4767 6345 l 4766 6345 l 4765 6345 l
 4764 6346 l 4763 6346 l 4762 6347 l 4762 6348 l 4761 6349 l
 4761 6350 l 4761 6351 l 4761 6352 l 4761 6353 l 4761 6354 l
 4761 6355 l 4762 6356 l 4762 6357 l 4763 6358 l 4764 6359 l
 4765 6359 l 4766 6359 l 4767 6359 l 4769 6359 l 4779 6359 l
 4798 6359 l 4816 6359 l 4826 6359 l 4828 6359 l 4828 6360 l
 4828 6362 l 4828 6367 l 4828 6369 l 4828 6370 l 4826 6370 l
 4817 6370 l 4799 6370 l 4782 6370 l 4773 6370 l 4771 6370 l
 4770 6370 l 4769 6370 l 4768 6370 l 4767 6371 l 4766 6371 l
 4766 6372 l 4765 6373 l 4765 6374 l 4765 6375 l 4765 6376 l
 4765 6377 l 4766 6378 l 4766 6379 l 4767 6380 l 4768 6381 l
 4769 6381 l 4770 6381 l 4771 6381 l 4773 6381 l 4782 6381 l
 4800 6381 l 4817 6381 l 4826 6381 l 4828 6381 l 4828 6384 l
 4828 6391 l 4828 6404 l 4828 6423 l 4828 6449 l 4828 6480 l
 4828 6516 l 4828 6554 l 4828 6592 l 4828 6628 l 4828 6659 l
 4828 6685 l 4828 6704 l 4828 6717 l 4828 6724 l 4828 6727 l
 4827 6727 l 4819 6727 l 4802 6727 l 4780 6727 l 4757 6727 l
 4740 6727 l 4732 6727 l 4731 6727 l 4730 6727 l 4729 6727 l
 4728 6727 l 4727 6728 l 4726 6728 l 4726 6729 l 4726 6730 l
 4725 6730 l 4725 6731 l 4725 6732 l 4725 6733 l 4725 6734 l
 4725 6735 l 4725 6736 l 4725 6737 l 4726 6738 l 4726 6739 l
 4727 6739 l 4727 6740 l 4728 6740 l 4729 6740 l 4730 6740 l
 4731 6740 l 4732 6740 l 4740 6740 l 4757 6740 l 4780 6740 l
 4802 6740 l 4819 6740 l 4827 6740 l 4828 6740 l 4828 6741 l
 4828 6745 l 4828 6750 l 4828 6754 l 4828 6755 l 4827 6755 l
 4822 6755 l 4811 6755 l 4792 6755 l 4770 6755 l 4748 6755 l
 4729 6755 l 4718 6755 l 4713 6755 l 4712 6755 l 4710 6755 l
 4707 6755 l 4706 6756 l 4704 6756 l 4703 6757 l 4702 6758 l
 4701 6759 l 4700 6760 l 4699 6761 l 4699 6763 l 4698 6764 l
 4698 6767 l 4698 6769 l 4698 6770 l 4698 6773 l 4698 6779 l
 4698 6782 l 4698 6783 l 4699 6783 l 4703 6783 l 4713 6783 l
 4730 6783 l 4755 6783 l 4786 6783 l 4821 6783 l 4856 6783 l
 4887 6783 l 4912 6783 l 4929 6783 l 4939 6783 l 4943 6783 l

 4944 6783 l  cp gs col7 1.00 shd ef gr 
%  spline 
% Polyline
n 4783 6706 m 4783 6705 l 4783 6702 l 4783 6693 l 4783 6678 l 4783 6656 l
 4783 6626 l 4783 6592 l 4783 6555 l 4783 6517 l 4783 6483 l
 4783 6453 l 4783 6431 l 4783 6416 l 4783 6407 l 4783 6404 l
 4783 6403 l 4783 6402 l 4783 6401 l 4783 6400 l 4782 6400 l
 4782 6399 l 4781 6399 l 4781 6398 l 4780 6398 l 4779 6398 l
 4778 6398 l 4777 6398 l 4776 6398 l 4775 6398 l 4774 6399 l
 4773 6399 l 4773 6400 l 4772 6401 l 4772 6402 l 4772 6403 l
 4772 6404 l 4772 6407 l 4772 6416 l 4772 6431 l 4772 6453 l
 4772 6483 l 4772 6517 l 4772 6555 l 4772 6592 l 4772 6626 l
 4772 6656 l 4772 6678 l 4772 6693 l 4772 6702 l 4772 6705 l
 4772 6706 l 4772 6707 l 4772 6708 l 4773 6709 l 4773 6710 l
 4774 6711 l 4775 6712 l 4776 6712 l 4777 6712 l 4778 6712 l
 4779 6712 l 4780 6712 l 4781 6712 l 4781 6711 l 4782 6711 l
 4782 6710 l 4783 6709 l 4783 6708 l 4783 6707 l
 4783 6706 l  cp gs col7 1.00 shd ef gr 
%  spline 
% Polyline
n 4813 6705 m 4813 6704 l 4813 6701 l 4813 6692 l 4813 6677 l 4813 6655 l
 4813 6626 l 4813 6592 l 4813 6555 l 4813 6518 l 4813 6484 l
 4813 6455 l 4813 6433 l 4813 6418 l 4813 6409 l 4813 6406 l
 4813 6405 l 4813 6404 l 4813 6402 l 4813 6401 l 4812 6400 l
 4811 6399 l 4811 6398 l 4810 6398 l 4809 6398 l 4808 6397 l
 4807 6397 l 4806 6397 l 4805 6397 l 4804 6397 l 4803 6397 l
 4802 6397 l 4801 6398 l 4800 6398 l 4799 6399 l 4799 6400 l
 4798 6401 l 4798 6402 l 4798 6404 l 4798 6405 l 4798 6406 l
 4798 6409 l 4798 6418 l 4798 6433 l 4798 6455 l 4798 6484 l
 4798 6518 l 4798 6555 l 4798 6592 l 4798 6626 l 4798 6655 l
 4798 6677 l 4798 6692 l 4798 6701 l 4798 6704 l 4798 6705 l
 4798 6706 l 4798 6707 l 4798 6708 l 4799 6709 l 4799 6710 l
 4799 6711 l 4800 6711 l 4801 6712 l 4802 6713 l 4803 6713 l
 4804 6713 l 4805 6713 l 4806 6713 l 4807 6713 l 4808 6713 l
 4809 6712 l 4810 6712 l 4811 6711 l 4812 6710 l 4812 6709 l
 4813 6708 l 4813 6707 l 4813 6706 l
 4813 6705 l  cp gs col7 1.00 shd ef gr 
%  polyline 
% Polyline
0 slj
n 5136 6864 m 5124 6864 l 5124 6894 l 5119 6894 l 5119 6864 l 5108 6864 l
 5108 6860 l 5136 6860 l
 5136 6864 l  cp gs col32 1.00 shd ef gr 
%  polyline 
% Polyline
n 5172 6894 m 5167 6894 l 5167 6867 l 5157 6880 l 5156 6880 l 5146 6867 l
 5145 6867 l 5145 6894 l 5141 6894 l 5141 6860 l 5145 6860 l
 5156 6874 l 5168 6860 l 5172 6860 l
 5172 6894 l  cp gs col32 1.00 shd ef gr 
$F2psEnd
rs

%%EndDocument
 @endspecial 4769 5844 a
 currentpoint grestore moveto
 4769 5844 a 4130 5844 a
 currentpoint currentpoint translate 1 0.76611 div 1 0.76611 div scale
neg exch neg exch translate
 4130
5844 a 5001 3450 a
SDict begin H.S end
 5001 3450 a 5001 3450 a
SDict begin H.R end
 5001 3450
a 5001 3450 a
SDict begin [ /View [/XYZ H.V] /Dest (page.1) cvn H.B /DEST pdfmark
end
 5001 3450 a 5001 3450 a
SDict begin [ {ThisPage} << /Trans << /S /Replace >> >> /PUT pdfmark
end
 5001 3450 a 5001
3450 a
SDict begin [ /Page 12/View [ /XYZ null null null ] /Title (Running sesc)
/OUT pdfmark end
 5001 3450 a 7949 1453 a Fm(R)12 b Fn(U)18 b(N)g(N)g(I)g(N)g(G)
116 b(S)18 b(E)g(S)g(C)4649 2157 y @beginspecial 276
@llx 376 @lly 336 @urx 416 @ury 113 @rwi @setspecial
%%BeginDocument: green-bullet-on-white.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/fred/TeX/STYLES/Prosper/img/green-bullet-on-white.ps
%%Creator: XV Version 3.10a+FLmask  Rev: 12/29/94  -  by John Bradley
%%BoundingBox: 276 376 336 416
%%Pages: 1
%%DocumentFonts:
%%EndComments
%%EndProlog

%%Page: 1 1

% remember original state
/origstate save def

% build a temporary dictionary
20 dict begin

% define space for color conversions
/grays 60 string def  % space for gray scale line
/npixls 0 def
/rgbindx 0 def

% lower left corner
276 376 translate

% size of image (on paper, in 1/72inch coords)
59.97600 40.03200 scale

% define 'colorimage' if it isn't defined
%   ('colortogray' and 'mergeprocs' come from xwd2ps
%     via xgrab)
/colorimage where   % do we know about 'colorimage'?
  { pop }           % yes: pop off the 'dict' returned
  {                 % no:  define one
    /colortogray {  % define an RGB->I function
      /rgbdata exch store    % call input 'rgbdata'
      rgbdata length 3 idiv
      /npixls exch store
      /rgbindx 0 store
      0 1 npixls 1 sub {
        grays exch
        rgbdata rgbindx       get 20 mul    % Red
        rgbdata rgbindx 1 add get 32 mul    % Green
        rgbdata rgbindx 2 add get 12 mul    % Blue
        add add 64 idiv      % I = .5G + .31R + .18B
        put
        /rgbindx rgbindx 3 add store
      } for
      grays 0 npixls getinterval
    } bind def

    % Utility procedure for colorimage operator.
    % This procedure takes two procedures off the
    % stack and merges them into a single procedure.

    /mergeprocs { % def
      dup length
      3 -1 roll
      dup
      length
      dup
      5 1 roll
      3 -1 roll
      add
      array cvx
      dup
      3 -1 roll
      0 exch
      putinterval
      dup
      4 2 roll
      putinterval
    } bind def

    /colorimage { % def
      pop pop     % remove 'false 3' operands
      {colortogray} mergeprocs
      image
    } bind def
  } ifelse          % end of 'false' case



% define the colormap
/cmap 723 string def


% load up the colormap
currentfile cmap readhexstring
041808 049008 8c948c 045204 4c544c 04c804 84e284 449644 c4cbc4 0c380e 
04ac07 cce6cc 345e2c e4e7e4 046604 2c3a2c 347234 e4fee2 048208 64cc60 
34922c 24b224 04e404 044604 647264 242623 049f07 8cae8c 04bc06 24c61c 
f4f8f3 1c541c 04d804 1c621c 1c7220 0c280d 14910f 045e04 047c04 ccdcd0 
14ac18 1c481c 747473 04d105 0c6c0b 24852a 1c381c f4f1f3 acafac f4fef5 
0c310c acc6ac 049708 a4a4a3 3c4a44 148314 144812 9cea94 04b405 149e14 
1cbc1c 044004 e4fef4 dcdddd 748274 5c5959 4cba54 145b11 145413 147412 
c4fec4 e4f1e7 146411 088a0a 243028 09c207 fcf8f3 147c13 14c80e acceac 
3c3939 04f405 044e07 07a608 14d00f 0c1f10 0c900b d4d3d4 ecfee3 1c291d 
0c6e14 bcbfbd d4f6d4 909a94 4c5a50 0cac08 24ba24 547e54 0cbc0a 0c5c16 
0c7c0b fcf1fb acb8ac 1c311c aca7a9 e2e2e2 a4e2a4 0cc80a 6c9a6c 143715 
0c650a 0c840b 07de06 14970c 0c980a 0cb40a 848583 ecf0f0 c3c6c3 0c540d 
0c740c cccccc 74ce6c 30a02c 04ec05 54aa5c 6cb66c 9cfa9c 2c862c 5c926c 
6ca674 b4deac 9cda9c 34aa2c 6c7e6c acfeac 448244 34d22c 7d7d7c 6c6d6c 
445644 4c4d4c 1c7a19 1c3e1c 3c3f3c 2c422c 7c9a84 54c254 dceadc 144014 
343231 bccebc bcbabc 447244 6c6664 9c9d9c 7caa7c 349a38 6c7a74 84b69c 
1c4e18 898a89 ccfadc 1c6c2c b8e2c0 1c8a24 a1aaa1 3c4e3c 5f5e5c d8fed8 
24be24 78d670 688668 148a14 14a618 145624 0c480e 2c292b 142916 1c921c 
d4dad9 243828 143017 b4d2bc b4b7b5 1c961c 8c868c 247e24 144e13 04fa04 
246224 fcfefc 0c4e0c ace2b4 3caa3c 244e24 0c180c 949394 545454 ece9ec 
343634 2cb127 6c736c 0ca00c 0cda08 0c5c0b 0ccf06 146a0c b4b2b4 646464 
b4c2b4 0c3f0c ecfdf9 e4dedc ccfdcc 2c2f2b 142214 146b16 c4c2c2 545b54 
2cb62c 74ba74 346634 b4fcb0 244224 444242 246a24 e4feec 0ce204 f4f9fc 
f4eefc 444744 54b654 fcf9fc 0c9114 dcd6d4 ecfeec 0c7b14 0cc614 0c6314 
0c8414 
pop pop   % lose return values from readhexstring


% rlecmapimage expects to have 'w h bits matrix' on stack
/rlecmapimage {
  /buffer 1 string def
  /rgbval 3 string def
  /block  384 string def

  % proc to read a block from file, and return RGB data
  { currentfile buffer readhexstring pop
    /bcount exch 0 get store
    bcount 128 ge
    {  % it's a non-run block
      0 1 bcount 128 sub
      { currentfile buffer readhexstring pop pop

        % look up value in color map
        /rgbval cmap buffer 0 get 3 mul 3 getinterval store

        % and put it in position i*3 in block
        block exch 3 mul rgbval putinterval
      } for
      block  0  bcount 127 sub 3 mul  getinterval
    }

    { % else it's a run block
      currentfile buffer readhexstring pop pop

      % look up value in colormap
      /rgbval cmap buffer 0 get 3 mul 3 getinterval store

      0 1 bcount { block exch 3 mul rgbval putinterval } for

      block 0 bcount 1 add 3 mul getinterval
    } ifelse
  } % end of proc
  false 3 colorimage
} bind def


60 40 8			% dimensions of data
[60 0 0 -40 0 40]		% mapping matrix
rlecmapimage

10bf8131bf05bf03e98165e902e9046587bf3158ec31bfe9658265e9bf09bf
10bf8131bf04bf81e9bf01bf02e98265bfe982e965e901e981bf318131ec82ecbfe982e9
65bf0abf
12bf82751ebf83bf1ebf318231ec3102318111318131bf81bfe901e981bf318131bf01bf
01e90bbf
0fbf02e901bf023101ec021101a981d6a981a9118111318131bf14bf
0fbf8165e901e988e5bfd4ecd66add07808c80149dc2137f46a911d431bfe981e9bf0fbf

0fbf01e982bfe9318331a49ce28fe2454d37562456dc71567bab87a9d4bf81bfe981e9bf
81bf318131bf0abf
10bf8ac775bf311bde43224d37568656cb535f1a733c893cae8506a91131bfe9bf01bf81
58bf0abf
0fbf911ebf31b761a0442245ed56721a530a3a4e3a813a4e864e73c94246e3bf10bf
07bf81e9bf82bfe9bf92bf1ebf31ec4f0c38e2ef8e4d49561a530a3a6283624b052b8a2b
ce4e60c2dfe331bf4cbf0cbf
0abf81e9bf82bfe9ec8eec83de1f21778e786f01341a0a3a1c851c4b052b20168b162054
aa93df11312fe965bf0abf
0ebf8d3111883d77cdcf78646f0134530a810a1c911c4ece20167c517c16542893a9ec31
e965bf0abf
08bf01e999bfe91ebf316cc07743cd45786f49561a530a3a624b6b2b707c510151877c70
4edcaba9bfe981e9bf0abf
0bbf01e985bf27d34352cf90cf0e4d2656011a530a1c62ee2b20167c5102518816cc1db9
d611bfe9bf0abf
07bf81e9bf01bf90e9bf4c86d3445277d92c786f49721a0a3a853a4b0520167c827c51bd
88bd5116e44b157a11bf0cbf
0dbf8d3f0fc33d4403cfbb0e3756011a0a860a624b2b20167c817c5102510116854b897b
a911bf0bbf
08bf82e9e5bf97bf75dab209bcc021ef254d2649561a533a1c4b052b70167c037c811620
85203a853911bf0bbf
0bbf0131869eb6d3b0bc7748884845646f561acb0a7382734b2b812b1683167c16cc01cc
012b844b2813d4bf0bbf
0abf0231955e236db0c04463cf45646f5634cb533a73624b2b2016821670548854ce2b20
4b28e831bf0bbf
0abf023183b5b6d3b089b044436e45786f49341a871a0a733a626b2b200120896b4e6b05
2b1c5f9decbf0bbf
09bf8131bf97bf31d82e09d3b044cd485a786f1201cb1a530a73621c052b852b054e4b1c
0585053a282d58bf0bbf
0bbf9431bf556709b03844cd482c7864125634cb1a5f0a7382734b0501050162011c854b
0aae2d58bf0bbf
0bbf0131934a236dd3b0bc7743485a786f1201341acb535f3a813a1c011c0173023a8453
3b1458bf0bbf
0bbf8431bf0455098309d338778277ef2c852c266f1201348134cb83cb530a3a013a810a
5f815f0a850a1ab37d58bf0bbf
08bf81e9bf93bf31bf18d83209d338c044cd6e0e2c64126f0172837271cb5382530a5383
53ae531a851a01a57e58bf0bbf
0bbf01e5837600230901098138c082c0482c862c7864126f49568156728272341a811a72
0272864912bb841131bf0abf
03bf94e9bfe9bfe9bf1ebf1ebf275923b632099538c044ef81ef7881786481646f816fad
84adea01ea560156882449ad2da3115831bf0abf
04bf02e992654ce61e75bf0d185523b66d0995bcc043cd2c812c7881786483646f64f001
f08b6f496f49642d6382e3314cbf0abf
01bf85e9e5e9652fc784c7693fc7698a69c7d2b200232eb60929bc84bc6343ef2c862c78
45784d78ed82ed6f6489644d45a3afa2114c31bf0abf
01e58175c783c769d5eb8ceb797679dab87908db67c4b66d876d9538b0447743ef84ef6e
2c78458e455a457864788ecfbe9fd4315831bf0abf
88e5750d3f5779da98d083d0689b3501358d5d0236c45567b6320995b04477cd92cdef6e
2c6e5ad95acf782c4517813e31bf2fbf0bbf
887569575bd0689bc5ba83ba8a2a8a878aca2a74db5955b284b23209d3b081b077017701
cd016e02ef876e2c6e4810a4d4bf01bf814cbf0abf
873f79b835c5ba2a9a829aa8410141868de1d104c690d881d85583552e6d958b9538b0c0
77cd03cd6377afcd84cd4321c1d483d4e9654c814cbf0abf
88575b9b742ad1418de181e15081509603968450c8d759d881d8b283b2326d0981099585
9538bcb0381f871f95c3995ca931bf81bfe981e9bf0bbf
8779b8c58ad1c6e750855096d7b119b104b184d7b119d855845523b2b66d016d83952995
2987296de09211d431bf01bf01e90cbf
8979d0c52aa88de15096b181b119041901b18796c80fd74a59b2b602b6016d86326d328f
ac0b318331bf31bf01bf81e9bf0cbf
88575b9b742ad1c68de186e1c850c850c850865096c850e1e70487045e8ca7912e672e85
2e8cac33473101318158bf02bf82e9bfe981e9bf0abf
8b3f799835c5742a8bd1a8dbc683c68dc68d818dc601c68cdbd1ca40a15da66697274711
31863158bf31bf31bf82bf4ce985e9bfe9bfe9bf0abf
8bc76957dab8359bc5a1748a2a052a018a01748b029ba6665b279447ec311ebf83bf581e
bf82bf4cbf02bf82e9bfe981e9bf0abf
881e75693f57795bb8d082d068350135029b0135013088b8985b7608b40d751e811ebf83
bf1e75bf81bf4c814cbf05bf81e9bf0bbf
83e9e52fc782c7693f823f5779817976027681da760276827957b482b4c7750175822fe5
bf82bf4cbf01bf814cbf81bfe981e9bf01bf01e90dbf

%
% Compression made this file 26.36% of the uncompressed size.
%


showpage

% stop using temporary dictionary
end

% restore original state
origstate restore

%%Trailer

%%EndDocument
 @endspecial 298 w Fg(Compile)66 b(a)h(prog)n(r)n(am)f(f)-7
b(or)67 b(O32)g(in)g(SGI)f(\(link)g(libapp\))4649 2531
y @beginspecial 276 @llx 376 @lly 336 @urx 416 @ury 113
@rwi @setspecial
%%BeginDocument: green-bullet-on-white.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/fred/TeX/STYLES/Prosper/img/green-bullet-on-white.ps
%%Creator: XV Version 3.10a+FLmask  Rev: 12/29/94  -  by John Bradley
%%BoundingBox: 276 376 336 416
%%Pages: 1
%%DocumentFonts:
%%EndComments
%%EndProlog

%%Page: 1 1

% remember original state
/origstate save def

% build a temporary dictionary
20 dict begin

% define space for color conversions
/grays 60 string def  % space for gray scale line
/npixls 0 def
/rgbindx 0 def

% lower left corner
276 376 translate

% size of image (on paper, in 1/72inch coords)
59.97600 40.03200 scale

% define 'colorimage' if it isn't defined
%   ('colortogray' and 'mergeprocs' come from xwd2ps
%     via xgrab)
/colorimage where   % do we know about 'colorimage'?
  { pop }           % yes: pop off the 'dict' returned
  {                 % no:  define one
    /colortogray {  % define an RGB->I function
      /rgbdata exch store    % call input 'rgbdata'
      rgbdata length 3 idiv
      /npixls exch store
      /rgbindx 0 store
      0 1 npixls 1 sub {
        grays exch
        rgbdata rgbindx       get 20 mul    % Red
        rgbdata rgbindx 1 add get 32 mul    % Green
        rgbdata rgbindx 2 add get 12 mul    % Blue
        add add 64 idiv      % I = .5G + .31R + .18B
        put
        /rgbindx rgbindx 3 add store
      } for
      grays 0 npixls getinterval
    } bind def

    % Utility procedure for colorimage operator.
    % This procedure takes two procedures off the
    % stack and merges them into a single procedure.

    /mergeprocs { % def
      dup length
      3 -1 roll
      dup
      length
      dup
      5 1 roll
      3 -1 roll
      add
      array cvx
      dup
      3 -1 roll
      0 exch
      putinterval
      dup
      4 2 roll
      putinterval
    } bind def

    /colorimage { % def
      pop pop     % remove 'false 3' operands
      {colortogray} mergeprocs
      image
    } bind def
  } ifelse          % end of 'false' case



% define the colormap
/cmap 723 string def


% load up the colormap
currentfile cmap readhexstring
041808 049008 8c948c 045204 4c544c 04c804 84e284 449644 c4cbc4 0c380e 
04ac07 cce6cc 345e2c e4e7e4 046604 2c3a2c 347234 e4fee2 048208 64cc60 
34922c 24b224 04e404 044604 647264 242623 049f07 8cae8c 04bc06 24c61c 
f4f8f3 1c541c 04d804 1c621c 1c7220 0c280d 14910f 045e04 047c04 ccdcd0 
14ac18 1c481c 747473 04d105 0c6c0b 24852a 1c381c f4f1f3 acafac f4fef5 
0c310c acc6ac 049708 a4a4a3 3c4a44 148314 144812 9cea94 04b405 149e14 
1cbc1c 044004 e4fef4 dcdddd 748274 5c5959 4cba54 145b11 145413 147412 
c4fec4 e4f1e7 146411 088a0a 243028 09c207 fcf8f3 147c13 14c80e acceac 
3c3939 04f405 044e07 07a608 14d00f 0c1f10 0c900b d4d3d4 ecfee3 1c291d 
0c6e14 bcbfbd d4f6d4 909a94 4c5a50 0cac08 24ba24 547e54 0cbc0a 0c5c16 
0c7c0b fcf1fb acb8ac 1c311c aca7a9 e2e2e2 a4e2a4 0cc80a 6c9a6c 143715 
0c650a 0c840b 07de06 14970c 0c980a 0cb40a 848583 ecf0f0 c3c6c3 0c540d 
0c740c cccccc 74ce6c 30a02c 04ec05 54aa5c 6cb66c 9cfa9c 2c862c 5c926c 
6ca674 b4deac 9cda9c 34aa2c 6c7e6c acfeac 448244 34d22c 7d7d7c 6c6d6c 
445644 4c4d4c 1c7a19 1c3e1c 3c3f3c 2c422c 7c9a84 54c254 dceadc 144014 
343231 bccebc bcbabc 447244 6c6664 9c9d9c 7caa7c 349a38 6c7a74 84b69c 
1c4e18 898a89 ccfadc 1c6c2c b8e2c0 1c8a24 a1aaa1 3c4e3c 5f5e5c d8fed8 
24be24 78d670 688668 148a14 14a618 145624 0c480e 2c292b 142916 1c921c 
d4dad9 243828 143017 b4d2bc b4b7b5 1c961c 8c868c 247e24 144e13 04fa04 
246224 fcfefc 0c4e0c ace2b4 3caa3c 244e24 0c180c 949394 545454 ece9ec 
343634 2cb127 6c736c 0ca00c 0cda08 0c5c0b 0ccf06 146a0c b4b2b4 646464 
b4c2b4 0c3f0c ecfdf9 e4dedc ccfdcc 2c2f2b 142214 146b16 c4c2c2 545b54 
2cb62c 74ba74 346634 b4fcb0 244224 444242 246a24 e4feec 0ce204 f4f9fc 
f4eefc 444744 54b654 fcf9fc 0c9114 dcd6d4 ecfeec 0c7b14 0cc614 0c6314 
0c8414 
pop pop   % lose return values from readhexstring


% rlecmapimage expects to have 'w h bits matrix' on stack
/rlecmapimage {
  /buffer 1 string def
  /rgbval 3 string def
  /block  384 string def

  % proc to read a block from file, and return RGB data
  { currentfile buffer readhexstring pop
    /bcount exch 0 get store
    bcount 128 ge
    {  % it's a non-run block
      0 1 bcount 128 sub
      { currentfile buffer readhexstring pop pop

        % look up value in color map
        /rgbval cmap buffer 0 get 3 mul 3 getinterval store

        % and put it in position i*3 in block
        block exch 3 mul rgbval putinterval
      } for
      block  0  bcount 127 sub 3 mul  getinterval
    }

    { % else it's a run block
      currentfile buffer readhexstring pop pop

      % look up value in colormap
      /rgbval cmap buffer 0 get 3 mul 3 getinterval store

      0 1 bcount { block exch 3 mul rgbval putinterval } for

      block 0 bcount 1 add 3 mul getinterval
    } ifelse
  } % end of proc
  false 3 colorimage
} bind def


60 40 8			% dimensions of data
[60 0 0 -40 0 40]		% mapping matrix
rlecmapimage

10bf8131bf05bf03e98165e902e9046587bf3158ec31bfe9658265e9bf09bf
10bf8131bf04bf81e9bf01bf02e98265bfe982e965e901e981bf318131ec82ecbfe982e9
65bf0abf
12bf82751ebf83bf1ebf318231ec3102318111318131bf81bfe901e981bf318131bf01bf
01e90bbf
0fbf02e901bf023101ec021101a981d6a981a9118111318131bf14bf
0fbf8165e901e988e5bfd4ecd66add07808c80149dc2137f46a911d431bfe981e9bf0fbf

0fbf01e982bfe9318331a49ce28fe2454d37562456dc71567bab87a9d4bf81bfe981e9bf
81bf318131bf0abf
10bf8ac775bf311bde43224d37568656cb535f1a733c893cae8506a91131bfe9bf01bf81
58bf0abf
0fbf911ebf31b761a0442245ed56721a530a3a4e3a813a4e864e73c94246e3bf10bf
07bf81e9bf82bfe9bf92bf1ebf31ec4f0c38e2ef8e4d49561a530a3a6283624b052b8a2b
ce4e60c2dfe331bf4cbf0cbf
0abf81e9bf82bfe9ec8eec83de1f21778e786f01341a0a3a1c851c4b052b20168b162054
aa93df11312fe965bf0abf
0ebf8d3111883d77cdcf78646f0134530a810a1c911c4ece20167c517c16542893a9ec31
e965bf0abf
08bf01e999bfe91ebf316cc07743cd45786f49561a530a3a624b6b2b707c510151877c70
4edcaba9bfe981e9bf0abf
0bbf01e985bf27d34352cf90cf0e4d2656011a530a1c62ee2b20167c5102518816cc1db9
d611bfe9bf0abf
07bf81e9bf01bf90e9bf4c86d3445277d92c786f49721a0a3a853a4b0520167c827c51bd
88bd5116e44b157a11bf0cbf
0dbf8d3f0fc33d4403cfbb0e3756011a0a860a624b2b20167c817c5102510116854b897b
a911bf0bbf
08bf82e9e5bf97bf75dab209bcc021ef254d2649561a533a1c4b052b70167c037c811620
85203a853911bf0bbf
0bbf0131869eb6d3b0bc7748884845646f561acb0a7382734b2b812b1683167c16cc01cc
012b844b2813d4bf0bbf
0abf0231955e236db0c04463cf45646f5634cb533a73624b2b2016821670548854ce2b20
4b28e831bf0bbf
0abf023183b5b6d3b089b044436e45786f49341a871a0a733a626b2b200120896b4e6b05
2b1c5f9decbf0bbf
09bf8131bf97bf31d82e09d3b044cd485a786f1201cb1a530a73621c052b852b054e4b1c
0585053a282d58bf0bbf
0bbf9431bf556709b03844cd482c7864125634cb1a5f0a7382734b0501050162011c854b
0aae2d58bf0bbf
0bbf0131934a236dd3b0bc7743485a786f1201341acb535f3a813a1c011c0173023a8453
3b1458bf0bbf
0bbf8431bf0455098309d338778277ef2c852c266f1201348134cb83cb530a3a013a810a
5f815f0a850a1ab37d58bf0bbf
08bf81e9bf93bf31bf18d83209d338c044cd6e0e2c64126f0172837271cb5382530a5383
53ae531a851a01a57e58bf0bbf
0bbf01e5837600230901098138c082c0482c862c7864126f49568156728272341a811a72
0272864912bb841131bf0abf
03bf94e9bfe9bfe9bf1ebf1ebf275923b632099538c044ef81ef7881786481646f816fad
84adea01ea560156882449ad2da3115831bf0abf
04bf02e992654ce61e75bf0d185523b66d0995bcc043cd2c812c7881786483646f64f001
f08b6f496f49642d6382e3314cbf0abf
01bf85e9e5e9652fc784c7693fc7698a69c7d2b200232eb60929bc84bc6343ef2c862c78
45784d78ed82ed6f6489644d45a3afa2114c31bf0abf
01e58175c783c769d5eb8ceb797679dab87908db67c4b66d876d9538b0447743ef84ef6e
2c78458e455a457864788ecfbe9fd4315831bf0abf
88e5750d3f5779da98d083d0689b3501358d5d0236c45567b6320995b04477cd92cdef6e
2c6e5ad95acf782c4517813e31bf2fbf0bbf
887569575bd0689bc5ba83ba8a2a8a878aca2a74db5955b284b23209d3b081b077017701
cd016e02ef876e2c6e4810a4d4bf01bf814cbf0abf
873f79b835c5ba2a9a829aa8410141868de1d104c690d881d85583552e6d958b9538b0c0
77cd03cd6377afcd84cd4321c1d483d4e9654c814cbf0abf
88575b9b742ad1418de181e15081509603968450c8d759d881d8b283b2326d0981099585
9538bcb0381f871f95c3995ca931bf81bfe981e9bf0bbf
8779b8c58ad1c6e750855096d7b119b104b184d7b119d855845523b2b66d016d83952995
2987296de09211d431bf01bf01e90cbf
8979d0c52aa88de15096b181b119041901b18796c80fd74a59b2b602b6016d86326d328f
ac0b318331bf31bf01bf81e9bf0cbf
88575b9b742ad1c68de186e1c850c850c850865096c850e1e70487045e8ca7912e672e85
2e8cac33473101318158bf02bf82e9bfe981e9bf0abf
8b3f799835c5742a8bd1a8dbc683c68dc68d818dc601c68cdbd1ca40a15da66697274711
31863158bf31bf31bf82bf4ce985e9bfe9bfe9bf0abf
8bc76957dab8359bc5a1748a2a052a018a01748b029ba6665b279447ec311ebf83bf581e
bf82bf4cbf02bf82e9bfe981e9bf0abf
881e75693f57795bb8d082d068350135029b0135013088b8985b7608b40d751e811ebf83
bf1e75bf81bf4c814cbf05bf81e9bf0bbf
83e9e52fc782c7693f823f5779817976027681da760276827957b482b4c7750175822fe5
bf82bf4cbf01bf814cbf81bfe981e9bf01bf01e90dbf

%
% Compression made this file 26.36% of the uncompressed size.
%


showpage

% stop using temporary dictionary
end

% restore original state
origstate restore

%%Trailer

%%EndDocument
 @endspecial 298 w(Chec)-5 b(k)66 b(con\002gur)n(ation)g(\002le)g
(\(sesc.conf\))4649 2905 y @beginspecial 276 @llx 376
@lly 336 @urx 416 @ury 113 @rwi @setspecial
%%BeginDocument: green-bullet-on-white.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/fred/TeX/STYLES/Prosper/img/green-bullet-on-white.ps
%%Creator: XV Version 3.10a+FLmask  Rev: 12/29/94  -  by John Bradley
%%BoundingBox: 276 376 336 416
%%Pages: 1
%%DocumentFonts:
%%EndComments
%%EndProlog

%%Page: 1 1

% remember original state
/origstate save def

% build a temporary dictionary
20 dict begin

% define space for color conversions
/grays 60 string def  % space for gray scale line
/npixls 0 def
/rgbindx 0 def

% lower left corner
276 376 translate

% size of image (on paper, in 1/72inch coords)
59.97600 40.03200 scale

% define 'colorimage' if it isn't defined
%   ('colortogray' and 'mergeprocs' come from xwd2ps
%     via xgrab)
/colorimage where   % do we know about 'colorimage'?
  { pop }           % yes: pop off the 'dict' returned
  {                 % no:  define one
    /colortogray {  % define an RGB->I function
      /rgbdata exch store    % call input 'rgbdata'
      rgbdata length 3 idiv
      /npixls exch store
      /rgbindx 0 store
      0 1 npixls 1 sub {
        grays exch
        rgbdata rgbindx       get 20 mul    % Red
        rgbdata rgbindx 1 add get 32 mul    % Green
        rgbdata rgbindx 2 add get 12 mul    % Blue
        add add 64 idiv      % I = .5G + .31R + .18B
        put
        /rgbindx rgbindx 3 add store
      } for
      grays 0 npixls getinterval
    } bind def

    % Utility procedure for colorimage operator.
    % This procedure takes two procedures off the
    % stack and merges them into a single procedure.

    /mergeprocs { % def
      dup length
      3 -1 roll
      dup
      length
      dup
      5 1 roll
      3 -1 roll
      add
      array cvx
      dup
      3 -1 roll
      0 exch
      putinterval
      dup
      4 2 roll
      putinterval
    } bind def

    /colorimage { % def
      pop pop     % remove 'false 3' operands
      {colortogray} mergeprocs
      image
    } bind def
  } ifelse          % end of 'false' case



% define the colormap
/cmap 723 string def


% load up the colormap
currentfile cmap readhexstring
041808 049008 8c948c 045204 4c544c 04c804 84e284 449644 c4cbc4 0c380e 
04ac07 cce6cc 345e2c e4e7e4 046604 2c3a2c 347234 e4fee2 048208 64cc60 
34922c 24b224 04e404 044604 647264 242623 049f07 8cae8c 04bc06 24c61c 
f4f8f3 1c541c 04d804 1c621c 1c7220 0c280d 14910f 045e04 047c04 ccdcd0 
14ac18 1c481c 747473 04d105 0c6c0b 24852a 1c381c f4f1f3 acafac f4fef5 
0c310c acc6ac 049708 a4a4a3 3c4a44 148314 144812 9cea94 04b405 149e14 
1cbc1c 044004 e4fef4 dcdddd 748274 5c5959 4cba54 145b11 145413 147412 
c4fec4 e4f1e7 146411 088a0a 243028 09c207 fcf8f3 147c13 14c80e acceac 
3c3939 04f405 044e07 07a608 14d00f 0c1f10 0c900b d4d3d4 ecfee3 1c291d 
0c6e14 bcbfbd d4f6d4 909a94 4c5a50 0cac08 24ba24 547e54 0cbc0a 0c5c16 
0c7c0b fcf1fb acb8ac 1c311c aca7a9 e2e2e2 a4e2a4 0cc80a 6c9a6c 143715 
0c650a 0c840b 07de06 14970c 0c980a 0cb40a 848583 ecf0f0 c3c6c3 0c540d 
0c740c cccccc 74ce6c 30a02c 04ec05 54aa5c 6cb66c 9cfa9c 2c862c 5c926c 
6ca674 b4deac 9cda9c 34aa2c 6c7e6c acfeac 448244 34d22c 7d7d7c 6c6d6c 
445644 4c4d4c 1c7a19 1c3e1c 3c3f3c 2c422c 7c9a84 54c254 dceadc 144014 
343231 bccebc bcbabc 447244 6c6664 9c9d9c 7caa7c 349a38 6c7a74 84b69c 
1c4e18 898a89 ccfadc 1c6c2c b8e2c0 1c8a24 a1aaa1 3c4e3c 5f5e5c d8fed8 
24be24 78d670 688668 148a14 14a618 145624 0c480e 2c292b 142916 1c921c 
d4dad9 243828 143017 b4d2bc b4b7b5 1c961c 8c868c 247e24 144e13 04fa04 
246224 fcfefc 0c4e0c ace2b4 3caa3c 244e24 0c180c 949394 545454 ece9ec 
343634 2cb127 6c736c 0ca00c 0cda08 0c5c0b 0ccf06 146a0c b4b2b4 646464 
b4c2b4 0c3f0c ecfdf9 e4dedc ccfdcc 2c2f2b 142214 146b16 c4c2c2 545b54 
2cb62c 74ba74 346634 b4fcb0 244224 444242 246a24 e4feec 0ce204 f4f9fc 
f4eefc 444744 54b654 fcf9fc 0c9114 dcd6d4 ecfeec 0c7b14 0cc614 0c6314 
0c8414 
pop pop   % lose return values from readhexstring


% rlecmapimage expects to have 'w h bits matrix' on stack
/rlecmapimage {
  /buffer 1 string def
  /rgbval 3 string def
  /block  384 string def

  % proc to read a block from file, and return RGB data
  { currentfile buffer readhexstring pop
    /bcount exch 0 get store
    bcount 128 ge
    {  % it's a non-run block
      0 1 bcount 128 sub
      { currentfile buffer readhexstring pop pop

        % look up value in color map
        /rgbval cmap buffer 0 get 3 mul 3 getinterval store

        % and put it in position i*3 in block
        block exch 3 mul rgbval putinterval
      } for
      block  0  bcount 127 sub 3 mul  getinterval
    }

    { % else it's a run block
      currentfile buffer readhexstring pop pop

      % look up value in colormap
      /rgbval cmap buffer 0 get 3 mul 3 getinterval store

      0 1 bcount { block exch 3 mul rgbval putinterval } for

      block 0 bcount 1 add 3 mul getinterval
    } ifelse
  } % end of proc
  false 3 colorimage
} bind def


60 40 8			% dimensions of data
[60 0 0 -40 0 40]		% mapping matrix
rlecmapimage

10bf8131bf05bf03e98165e902e9046587bf3158ec31bfe9658265e9bf09bf
10bf8131bf04bf81e9bf01bf02e98265bfe982e965e901e981bf318131ec82ecbfe982e9
65bf0abf
12bf82751ebf83bf1ebf318231ec3102318111318131bf81bfe901e981bf318131bf01bf
01e90bbf
0fbf02e901bf023101ec021101a981d6a981a9118111318131bf14bf
0fbf8165e901e988e5bfd4ecd66add07808c80149dc2137f46a911d431bfe981e9bf0fbf

0fbf01e982bfe9318331a49ce28fe2454d37562456dc71567bab87a9d4bf81bfe981e9bf
81bf318131bf0abf
10bf8ac775bf311bde43224d37568656cb535f1a733c893cae8506a91131bfe9bf01bf81
58bf0abf
0fbf911ebf31b761a0442245ed56721a530a3a4e3a813a4e864e73c94246e3bf10bf
07bf81e9bf82bfe9bf92bf1ebf31ec4f0c38e2ef8e4d49561a530a3a6283624b052b8a2b
ce4e60c2dfe331bf4cbf0cbf
0abf81e9bf82bfe9ec8eec83de1f21778e786f01341a0a3a1c851c4b052b20168b162054
aa93df11312fe965bf0abf
0ebf8d3111883d77cdcf78646f0134530a810a1c911c4ece20167c517c16542893a9ec31
e965bf0abf
08bf01e999bfe91ebf316cc07743cd45786f49561a530a3a624b6b2b707c510151877c70
4edcaba9bfe981e9bf0abf
0bbf01e985bf27d34352cf90cf0e4d2656011a530a1c62ee2b20167c5102518816cc1db9
d611bfe9bf0abf
07bf81e9bf01bf90e9bf4c86d3445277d92c786f49721a0a3a853a4b0520167c827c51bd
88bd5116e44b157a11bf0cbf
0dbf8d3f0fc33d4403cfbb0e3756011a0a860a624b2b20167c817c5102510116854b897b
a911bf0bbf
08bf82e9e5bf97bf75dab209bcc021ef254d2649561a533a1c4b052b70167c037c811620
85203a853911bf0bbf
0bbf0131869eb6d3b0bc7748884845646f561acb0a7382734b2b812b1683167c16cc01cc
012b844b2813d4bf0bbf
0abf0231955e236db0c04463cf45646f5634cb533a73624b2b2016821670548854ce2b20
4b28e831bf0bbf
0abf023183b5b6d3b089b044436e45786f49341a871a0a733a626b2b200120896b4e6b05
2b1c5f9decbf0bbf
09bf8131bf97bf31d82e09d3b044cd485a786f1201cb1a530a73621c052b852b054e4b1c
0585053a282d58bf0bbf
0bbf9431bf556709b03844cd482c7864125634cb1a5f0a7382734b0501050162011c854b
0aae2d58bf0bbf
0bbf0131934a236dd3b0bc7743485a786f1201341acb535f3a813a1c011c0173023a8453
3b1458bf0bbf
0bbf8431bf0455098309d338778277ef2c852c266f1201348134cb83cb530a3a013a810a
5f815f0a850a1ab37d58bf0bbf
08bf81e9bf93bf31bf18d83209d338c044cd6e0e2c64126f0172837271cb5382530a5383
53ae531a851a01a57e58bf0bbf
0bbf01e5837600230901098138c082c0482c862c7864126f49568156728272341a811a72
0272864912bb841131bf0abf
03bf94e9bfe9bfe9bf1ebf1ebf275923b632099538c044ef81ef7881786481646f816fad
84adea01ea560156882449ad2da3115831bf0abf
04bf02e992654ce61e75bf0d185523b66d0995bcc043cd2c812c7881786483646f64f001
f08b6f496f49642d6382e3314cbf0abf
01bf85e9e5e9652fc784c7693fc7698a69c7d2b200232eb60929bc84bc6343ef2c862c78
45784d78ed82ed6f6489644d45a3afa2114c31bf0abf
01e58175c783c769d5eb8ceb797679dab87908db67c4b66d876d9538b0447743ef84ef6e
2c78458e455a457864788ecfbe9fd4315831bf0abf
88e5750d3f5779da98d083d0689b3501358d5d0236c45567b6320995b04477cd92cdef6e
2c6e5ad95acf782c4517813e31bf2fbf0bbf
887569575bd0689bc5ba83ba8a2a8a878aca2a74db5955b284b23209d3b081b077017701
cd016e02ef876e2c6e4810a4d4bf01bf814cbf0abf
873f79b835c5ba2a9a829aa8410141868de1d104c690d881d85583552e6d958b9538b0c0
77cd03cd6377afcd84cd4321c1d483d4e9654c814cbf0abf
88575b9b742ad1418de181e15081509603968450c8d759d881d8b283b2326d0981099585
9538bcb0381f871f95c3995ca931bf81bfe981e9bf0bbf
8779b8c58ad1c6e750855096d7b119b104b184d7b119d855845523b2b66d016d83952995
2987296de09211d431bf01bf01e90cbf
8979d0c52aa88de15096b181b119041901b18796c80fd74a59b2b602b6016d86326d328f
ac0b318331bf31bf01bf81e9bf0cbf
88575b9b742ad1c68de186e1c850c850c850865096c850e1e70487045e8ca7912e672e85
2e8cac33473101318158bf02bf82e9bfe981e9bf0abf
8b3f799835c5742a8bd1a8dbc683c68dc68d818dc601c68cdbd1ca40a15da66697274711
31863158bf31bf31bf82bf4ce985e9bfe9bfe9bf0abf
8bc76957dab8359bc5a1748a2a052a018a01748b029ba6665b279447ec311ebf83bf581e
bf82bf4cbf02bf82e9bfe981e9bf0abf
881e75693f57795bb8d082d068350135029b0135013088b8985b7608b40d751e811ebf83
bf1e75bf81bf4c814cbf05bf81e9bf0bbf
83e9e52fc782c7693f823f5779817976027681da760276827957b482b4c7750175822fe5
bf82bf4cbf01bf814cbf81bfe981e9bf01bf01e90dbf

%
% Compression made this file 26.36% of the uncompressed size.
%


showpage

% stop using temporary dictionary
end

% restore original state
origstate restore

%%Trailer

%%EndDocument
 @endspecial 298 w(./mtst1)g(-h0x8000000)h(cr)n(afty)f(<tt.in)4649
3275 y @beginspecial 276 @llx 376 @lly 336 @urx 416 @ury
113 @rwi @setspecial
%%BeginDocument: green-bullet-on-white.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/fred/TeX/STYLES/Prosper/img/green-bullet-on-white.ps
%%Creator: XV Version 3.10a+FLmask  Rev: 12/29/94  -  by John Bradley
%%BoundingBox: 276 376 336 416
%%Pages: 1
%%DocumentFonts:
%%EndComments
%%EndProlog

%%Page: 1 1

% remember original state
/origstate save def

% build a temporary dictionary
20 dict begin

% define space for color conversions
/grays 60 string def  % space for gray scale line
/npixls 0 def
/rgbindx 0 def

% lower left corner
276 376 translate

% size of image (on paper, in 1/72inch coords)
59.97600 40.03200 scale

% define 'colorimage' if it isn't defined
%   ('colortogray' and 'mergeprocs' come from xwd2ps
%     via xgrab)
/colorimage where   % do we know about 'colorimage'?
  { pop }           % yes: pop off the 'dict' returned
  {                 % no:  define one
    /colortogray {  % define an RGB->I function
      /rgbdata exch store    % call input 'rgbdata'
      rgbdata length 3 idiv
      /npixls exch store
      /rgbindx 0 store
      0 1 npixls 1 sub {
        grays exch
        rgbdata rgbindx       get 20 mul    % Red
        rgbdata rgbindx 1 add get 32 mul    % Green
        rgbdata rgbindx 2 add get 12 mul    % Blue
        add add 64 idiv      % I = .5G + .31R + .18B
        put
        /rgbindx rgbindx 3 add store
      } for
      grays 0 npixls getinterval
    } bind def

    % Utility procedure for colorimage operator.
    % This procedure takes two procedures off the
    % stack and merges them into a single procedure.

    /mergeprocs { % def
      dup length
      3 -1 roll
      dup
      length
      dup
      5 1 roll
      3 -1 roll
      add
      array cvx
      dup
      3 -1 roll
      0 exch
      putinterval
      dup
      4 2 roll
      putinterval
    } bind def

    /colorimage { % def
      pop pop     % remove 'false 3' operands
      {colortogray} mergeprocs
      image
    } bind def
  } ifelse          % end of 'false' case



% define the colormap
/cmap 723 string def


% load up the colormap
currentfile cmap readhexstring
041808 049008 8c948c 045204 4c544c 04c804 84e284 449644 c4cbc4 0c380e 
04ac07 cce6cc 345e2c e4e7e4 046604 2c3a2c 347234 e4fee2 048208 64cc60 
34922c 24b224 04e404 044604 647264 242623 049f07 8cae8c 04bc06 24c61c 
f4f8f3 1c541c 04d804 1c621c 1c7220 0c280d 14910f 045e04 047c04 ccdcd0 
14ac18 1c481c 747473 04d105 0c6c0b 24852a 1c381c f4f1f3 acafac f4fef5 
0c310c acc6ac 049708 a4a4a3 3c4a44 148314 144812 9cea94 04b405 149e14 
1cbc1c 044004 e4fef4 dcdddd 748274 5c5959 4cba54 145b11 145413 147412 
c4fec4 e4f1e7 146411 088a0a 243028 09c207 fcf8f3 147c13 14c80e acceac 
3c3939 04f405 044e07 07a608 14d00f 0c1f10 0c900b d4d3d4 ecfee3 1c291d 
0c6e14 bcbfbd d4f6d4 909a94 4c5a50 0cac08 24ba24 547e54 0cbc0a 0c5c16 
0c7c0b fcf1fb acb8ac 1c311c aca7a9 e2e2e2 a4e2a4 0cc80a 6c9a6c 143715 
0c650a 0c840b 07de06 14970c 0c980a 0cb40a 848583 ecf0f0 c3c6c3 0c540d 
0c740c cccccc 74ce6c 30a02c 04ec05 54aa5c 6cb66c 9cfa9c 2c862c 5c926c 
6ca674 b4deac 9cda9c 34aa2c 6c7e6c acfeac 448244 34d22c 7d7d7c 6c6d6c 
445644 4c4d4c 1c7a19 1c3e1c 3c3f3c 2c422c 7c9a84 54c254 dceadc 144014 
343231 bccebc bcbabc 447244 6c6664 9c9d9c 7caa7c 349a38 6c7a74 84b69c 
1c4e18 898a89 ccfadc 1c6c2c b8e2c0 1c8a24 a1aaa1 3c4e3c 5f5e5c d8fed8 
24be24 78d670 688668 148a14 14a618 145624 0c480e 2c292b 142916 1c921c 
d4dad9 243828 143017 b4d2bc b4b7b5 1c961c 8c868c 247e24 144e13 04fa04 
246224 fcfefc 0c4e0c ace2b4 3caa3c 244e24 0c180c 949394 545454 ece9ec 
343634 2cb127 6c736c 0ca00c 0cda08 0c5c0b 0ccf06 146a0c b4b2b4 646464 
b4c2b4 0c3f0c ecfdf9 e4dedc ccfdcc 2c2f2b 142214 146b16 c4c2c2 545b54 
2cb62c 74ba74 346634 b4fcb0 244224 444242 246a24 e4feec 0ce204 f4f9fc 
f4eefc 444744 54b654 fcf9fc 0c9114 dcd6d4 ecfeec 0c7b14 0cc614 0c6314 
0c8414 
pop pop   % lose return values from readhexstring


% rlecmapimage expects to have 'w h bits matrix' on stack
/rlecmapimage {
  /buffer 1 string def
  /rgbval 3 string def
  /block  384 string def

  % proc to read a block from file, and return RGB data
  { currentfile buffer readhexstring pop
    /bcount exch 0 get store
    bcount 128 ge
    {  % it's a non-run block
      0 1 bcount 128 sub
      { currentfile buffer readhexstring pop pop

        % look up value in color map
        /rgbval cmap buffer 0 get 3 mul 3 getinterval store

        % and put it in position i*3 in block
        block exch 3 mul rgbval putinterval
      } for
      block  0  bcount 127 sub 3 mul  getinterval
    }

    { % else it's a run block
      currentfile buffer readhexstring pop pop

      % look up value in colormap
      /rgbval cmap buffer 0 get 3 mul 3 getinterval store

      0 1 bcount { block exch 3 mul rgbval putinterval } for

      block 0 bcount 1 add 3 mul getinterval
    } ifelse
  } % end of proc
  false 3 colorimage
} bind def


60 40 8			% dimensions of data
[60 0 0 -40 0 40]		% mapping matrix
rlecmapimage

10bf8131bf05bf03e98165e902e9046587bf3158ec31bfe9658265e9bf09bf
10bf8131bf04bf81e9bf01bf02e98265bfe982e965e901e981bf318131ec82ecbfe982e9
65bf0abf
12bf82751ebf83bf1ebf318231ec3102318111318131bf81bfe901e981bf318131bf01bf
01e90bbf
0fbf02e901bf023101ec021101a981d6a981a9118111318131bf14bf
0fbf8165e901e988e5bfd4ecd66add07808c80149dc2137f46a911d431bfe981e9bf0fbf

0fbf01e982bfe9318331a49ce28fe2454d37562456dc71567bab87a9d4bf81bfe981e9bf
81bf318131bf0abf
10bf8ac775bf311bde43224d37568656cb535f1a733c893cae8506a91131bfe9bf01bf81
58bf0abf
0fbf911ebf31b761a0442245ed56721a530a3a4e3a813a4e864e73c94246e3bf10bf
07bf81e9bf82bfe9bf92bf1ebf31ec4f0c38e2ef8e4d49561a530a3a6283624b052b8a2b
ce4e60c2dfe331bf4cbf0cbf
0abf81e9bf82bfe9ec8eec83de1f21778e786f01341a0a3a1c851c4b052b20168b162054
aa93df11312fe965bf0abf
0ebf8d3111883d77cdcf78646f0134530a810a1c911c4ece20167c517c16542893a9ec31
e965bf0abf
08bf01e999bfe91ebf316cc07743cd45786f49561a530a3a624b6b2b707c510151877c70
4edcaba9bfe981e9bf0abf
0bbf01e985bf27d34352cf90cf0e4d2656011a530a1c62ee2b20167c5102518816cc1db9
d611bfe9bf0abf
07bf81e9bf01bf90e9bf4c86d3445277d92c786f49721a0a3a853a4b0520167c827c51bd
88bd5116e44b157a11bf0cbf
0dbf8d3f0fc33d4403cfbb0e3756011a0a860a624b2b20167c817c5102510116854b897b
a911bf0bbf
08bf82e9e5bf97bf75dab209bcc021ef254d2649561a533a1c4b052b70167c037c811620
85203a853911bf0bbf
0bbf0131869eb6d3b0bc7748884845646f561acb0a7382734b2b812b1683167c16cc01cc
012b844b2813d4bf0bbf
0abf0231955e236db0c04463cf45646f5634cb533a73624b2b2016821670548854ce2b20
4b28e831bf0bbf
0abf023183b5b6d3b089b044436e45786f49341a871a0a733a626b2b200120896b4e6b05
2b1c5f9decbf0bbf
09bf8131bf97bf31d82e09d3b044cd485a786f1201cb1a530a73621c052b852b054e4b1c
0585053a282d58bf0bbf
0bbf9431bf556709b03844cd482c7864125634cb1a5f0a7382734b0501050162011c854b
0aae2d58bf0bbf
0bbf0131934a236dd3b0bc7743485a786f1201341acb535f3a813a1c011c0173023a8453
3b1458bf0bbf
0bbf8431bf0455098309d338778277ef2c852c266f1201348134cb83cb530a3a013a810a
5f815f0a850a1ab37d58bf0bbf
08bf81e9bf93bf31bf18d83209d338c044cd6e0e2c64126f0172837271cb5382530a5383
53ae531a851a01a57e58bf0bbf
0bbf01e5837600230901098138c082c0482c862c7864126f49568156728272341a811a72
0272864912bb841131bf0abf
03bf94e9bfe9bfe9bf1ebf1ebf275923b632099538c044ef81ef7881786481646f816fad
84adea01ea560156882449ad2da3115831bf0abf
04bf02e992654ce61e75bf0d185523b66d0995bcc043cd2c812c7881786483646f64f001
f08b6f496f49642d6382e3314cbf0abf
01bf85e9e5e9652fc784c7693fc7698a69c7d2b200232eb60929bc84bc6343ef2c862c78
45784d78ed82ed6f6489644d45a3afa2114c31bf0abf
01e58175c783c769d5eb8ceb797679dab87908db67c4b66d876d9538b0447743ef84ef6e
2c78458e455a457864788ecfbe9fd4315831bf0abf
88e5750d3f5779da98d083d0689b3501358d5d0236c45567b6320995b04477cd92cdef6e
2c6e5ad95acf782c4517813e31bf2fbf0bbf
887569575bd0689bc5ba83ba8a2a8a878aca2a74db5955b284b23209d3b081b077017701
cd016e02ef876e2c6e4810a4d4bf01bf814cbf0abf
873f79b835c5ba2a9a829aa8410141868de1d104c690d881d85583552e6d958b9538b0c0
77cd03cd6377afcd84cd4321c1d483d4e9654c814cbf0abf
88575b9b742ad1418de181e15081509603968450c8d759d881d8b283b2326d0981099585
9538bcb0381f871f95c3995ca931bf81bfe981e9bf0bbf
8779b8c58ad1c6e750855096d7b119b104b184d7b119d855845523b2b66d016d83952995
2987296de09211d431bf01bf01e90cbf
8979d0c52aa88de15096b181b119041901b18796c80fd74a59b2b602b6016d86326d328f
ac0b318331bf31bf01bf81e9bf0cbf
88575b9b742ad1c68de186e1c850c850c850865096c850e1e70487045e8ca7912e672e85
2e8cac33473101318158bf02bf82e9bfe981e9bf0abf
8b3f799835c5742a8bd1a8dbc683c68dc68d818dc601c68cdbd1ca40a15da66697274711
31863158bf31bf31bf82bf4ce985e9bfe9bfe9bf0abf
8bc76957dab8359bc5a1748a2a052a018a01748b029ba6665b279447ec311ebf83bf581e
bf82bf4cbf02bf82e9bfe981e9bf0abf
881e75693f57795bb8d082d068350135029b0135013088b8985b7608b40d751e811ebf83
bf1e75bf81bf4c814cbf05bf81e9bf0bbf
83e9e52fc782c7693f823f5779817976027681da760276827957b482b4c7750175822fe5
bf82bf4cbf01bf814cbf81bfe981e9bf01bf01e90dbf

%
% Compression made this file 26.36% of the uncompressed size.
%


showpage

% stop using temporary dictionary
end

% restore original state
origstate restore

%%Trailer

%%EndDocument
 @endspecial 298 w(Chec)-5 b(k)66 b(output)h(sesc_cr)n(afty)-24
b(.xxxxxx)4649 3646 y @beginspecial 276 @llx 376 @lly
336 @urx 416 @ury 113 @rwi @setspecial
%%BeginDocument: green-bullet-on-white.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/fred/TeX/STYLES/Prosper/img/green-bullet-on-white.ps
%%Creator: XV Version 3.10a+FLmask  Rev: 12/29/94  -  by John Bradley
%%BoundingBox: 276 376 336 416
%%Pages: 1
%%DocumentFonts:
%%EndComments
%%EndProlog

%%Page: 1 1

% remember original state
/origstate save def

% build a temporary dictionary
20 dict begin

% define space for color conversions
/grays 60 string def  % space for gray scale line
/npixls 0 def
/rgbindx 0 def

% lower left corner
276 376 translate

% size of image (on paper, in 1/72inch coords)
59.97600 40.03200 scale

% define 'colorimage' if it isn't defined
%   ('colortogray' and 'mergeprocs' come from xwd2ps
%     via xgrab)
/colorimage where   % do we know about 'colorimage'?
  { pop }           % yes: pop off the 'dict' returned
  {                 % no:  define one
    /colortogray {  % define an RGB->I function
      /rgbdata exch store    % call input 'rgbdata'
      rgbdata length 3 idiv
      /npixls exch store
      /rgbindx 0 store
      0 1 npixls 1 sub {
        grays exch
        rgbdata rgbindx       get 20 mul    % Red
        rgbdata rgbindx 1 add get 32 mul    % Green
        rgbdata rgbindx 2 add get 12 mul    % Blue
        add add 64 idiv      % I = .5G + .31R + .18B
        put
        /rgbindx rgbindx 3 add store
      } for
      grays 0 npixls getinterval
    } bind def

    % Utility procedure for colorimage operator.
    % This procedure takes two procedures off the
    % stack and merges them into a single procedure.

    /mergeprocs { % def
      dup length
      3 -1 roll
      dup
      length
      dup
      5 1 roll
      3 -1 roll
      add
      array cvx
      dup
      3 -1 roll
      0 exch
      putinterval
      dup
      4 2 roll
      putinterval
    } bind def

    /colorimage { % def
      pop pop     % remove 'false 3' operands
      {colortogray} mergeprocs
      image
    } bind def
  } ifelse          % end of 'false' case



% define the colormap
/cmap 723 string def


% load up the colormap
currentfile cmap readhexstring
041808 049008 8c948c 045204 4c544c 04c804 84e284 449644 c4cbc4 0c380e 
04ac07 cce6cc 345e2c e4e7e4 046604 2c3a2c 347234 e4fee2 048208 64cc60 
34922c 24b224 04e404 044604 647264 242623 049f07 8cae8c 04bc06 24c61c 
f4f8f3 1c541c 04d804 1c621c 1c7220 0c280d 14910f 045e04 047c04 ccdcd0 
14ac18 1c481c 747473 04d105 0c6c0b 24852a 1c381c f4f1f3 acafac f4fef5 
0c310c acc6ac 049708 a4a4a3 3c4a44 148314 144812 9cea94 04b405 149e14 
1cbc1c 044004 e4fef4 dcdddd 748274 5c5959 4cba54 145b11 145413 147412 
c4fec4 e4f1e7 146411 088a0a 243028 09c207 fcf8f3 147c13 14c80e acceac 
3c3939 04f405 044e07 07a608 14d00f 0c1f10 0c900b d4d3d4 ecfee3 1c291d 
0c6e14 bcbfbd d4f6d4 909a94 4c5a50 0cac08 24ba24 547e54 0cbc0a 0c5c16 
0c7c0b fcf1fb acb8ac 1c311c aca7a9 e2e2e2 a4e2a4 0cc80a 6c9a6c 143715 
0c650a 0c840b 07de06 14970c 0c980a 0cb40a 848583 ecf0f0 c3c6c3 0c540d 
0c740c cccccc 74ce6c 30a02c 04ec05 54aa5c 6cb66c 9cfa9c 2c862c 5c926c 
6ca674 b4deac 9cda9c 34aa2c 6c7e6c acfeac 448244 34d22c 7d7d7c 6c6d6c 
445644 4c4d4c 1c7a19 1c3e1c 3c3f3c 2c422c 7c9a84 54c254 dceadc 144014 
343231 bccebc bcbabc 447244 6c6664 9c9d9c 7caa7c 349a38 6c7a74 84b69c 
1c4e18 898a89 ccfadc 1c6c2c b8e2c0 1c8a24 a1aaa1 3c4e3c 5f5e5c d8fed8 
24be24 78d670 688668 148a14 14a618 145624 0c480e 2c292b 142916 1c921c 
d4dad9 243828 143017 b4d2bc b4b7b5 1c961c 8c868c 247e24 144e13 04fa04 
246224 fcfefc 0c4e0c ace2b4 3caa3c 244e24 0c180c 949394 545454 ece9ec 
343634 2cb127 6c736c 0ca00c 0cda08 0c5c0b 0ccf06 146a0c b4b2b4 646464 
b4c2b4 0c3f0c ecfdf9 e4dedc ccfdcc 2c2f2b 142214 146b16 c4c2c2 545b54 
2cb62c 74ba74 346634 b4fcb0 244224 444242 246a24 e4feec 0ce204 f4f9fc 
f4eefc 444744 54b654 fcf9fc 0c9114 dcd6d4 ecfeec 0c7b14 0cc614 0c6314 
0c8414 
pop pop   % lose return values from readhexstring


% rlecmapimage expects to have 'w h bits matrix' on stack
/rlecmapimage {
  /buffer 1 string def
  /rgbval 3 string def
  /block  384 string def

  % proc to read a block from file, and return RGB data
  { currentfile buffer readhexstring pop
    /bcount exch 0 get store
    bcount 128 ge
    {  % it's a non-run block
      0 1 bcount 128 sub
      { currentfile buffer readhexstring pop pop

        % look up value in color map
        /rgbval cmap buffer 0 get 3 mul 3 getinterval store

        % and put it in position i*3 in block
        block exch 3 mul rgbval putinterval
      } for
      block  0  bcount 127 sub 3 mul  getinterval
    }

    { % else it's a run block
      currentfile buffer readhexstring pop pop

      % look up value in colormap
      /rgbval cmap buffer 0 get 3 mul 3 getinterval store

      0 1 bcount { block exch 3 mul rgbval putinterval } for

      block 0 bcount 1 add 3 mul getinterval
    } ifelse
  } % end of proc
  false 3 colorimage
} bind def


60 40 8			% dimensions of data
[60 0 0 -40 0 40]		% mapping matrix
rlecmapimage

10bf8131bf05bf03e98165e902e9046587bf3158ec31bfe9658265e9bf09bf
10bf8131bf04bf81e9bf01bf02e98265bfe982e965e901e981bf318131ec82ecbfe982e9
65bf0abf
12bf82751ebf83bf1ebf318231ec3102318111318131bf81bfe901e981bf318131bf01bf
01e90bbf
0fbf02e901bf023101ec021101a981d6a981a9118111318131bf14bf
0fbf8165e901e988e5bfd4ecd66add07808c80149dc2137f46a911d431bfe981e9bf0fbf

0fbf01e982bfe9318331a49ce28fe2454d37562456dc71567bab87a9d4bf81bfe981e9bf
81bf318131bf0abf
10bf8ac775bf311bde43224d37568656cb535f1a733c893cae8506a91131bfe9bf01bf81
58bf0abf
0fbf911ebf31b761a0442245ed56721a530a3a4e3a813a4e864e73c94246e3bf10bf
07bf81e9bf82bfe9bf92bf1ebf31ec4f0c38e2ef8e4d49561a530a3a6283624b052b8a2b
ce4e60c2dfe331bf4cbf0cbf
0abf81e9bf82bfe9ec8eec83de1f21778e786f01341a0a3a1c851c4b052b20168b162054
aa93df11312fe965bf0abf
0ebf8d3111883d77cdcf78646f0134530a810a1c911c4ece20167c517c16542893a9ec31
e965bf0abf
08bf01e999bfe91ebf316cc07743cd45786f49561a530a3a624b6b2b707c510151877c70
4edcaba9bfe981e9bf0abf
0bbf01e985bf27d34352cf90cf0e4d2656011a530a1c62ee2b20167c5102518816cc1db9
d611bfe9bf0abf
07bf81e9bf01bf90e9bf4c86d3445277d92c786f49721a0a3a853a4b0520167c827c51bd
88bd5116e44b157a11bf0cbf
0dbf8d3f0fc33d4403cfbb0e3756011a0a860a624b2b20167c817c5102510116854b897b
a911bf0bbf
08bf82e9e5bf97bf75dab209bcc021ef254d2649561a533a1c4b052b70167c037c811620
85203a853911bf0bbf
0bbf0131869eb6d3b0bc7748884845646f561acb0a7382734b2b812b1683167c16cc01cc
012b844b2813d4bf0bbf
0abf0231955e236db0c04463cf45646f5634cb533a73624b2b2016821670548854ce2b20
4b28e831bf0bbf
0abf023183b5b6d3b089b044436e45786f49341a871a0a733a626b2b200120896b4e6b05
2b1c5f9decbf0bbf
09bf8131bf97bf31d82e09d3b044cd485a786f1201cb1a530a73621c052b852b054e4b1c
0585053a282d58bf0bbf
0bbf9431bf556709b03844cd482c7864125634cb1a5f0a7382734b0501050162011c854b
0aae2d58bf0bbf
0bbf0131934a236dd3b0bc7743485a786f1201341acb535f3a813a1c011c0173023a8453
3b1458bf0bbf
0bbf8431bf0455098309d338778277ef2c852c266f1201348134cb83cb530a3a013a810a
5f815f0a850a1ab37d58bf0bbf
08bf81e9bf93bf31bf18d83209d338c044cd6e0e2c64126f0172837271cb5382530a5383
53ae531a851a01a57e58bf0bbf
0bbf01e5837600230901098138c082c0482c862c7864126f49568156728272341a811a72
0272864912bb841131bf0abf
03bf94e9bfe9bfe9bf1ebf1ebf275923b632099538c044ef81ef7881786481646f816fad
84adea01ea560156882449ad2da3115831bf0abf
04bf02e992654ce61e75bf0d185523b66d0995bcc043cd2c812c7881786483646f64f001
f08b6f496f49642d6382e3314cbf0abf
01bf85e9e5e9652fc784c7693fc7698a69c7d2b200232eb60929bc84bc6343ef2c862c78
45784d78ed82ed6f6489644d45a3afa2114c31bf0abf
01e58175c783c769d5eb8ceb797679dab87908db67c4b66d876d9538b0447743ef84ef6e
2c78458e455a457864788ecfbe9fd4315831bf0abf
88e5750d3f5779da98d083d0689b3501358d5d0236c45567b6320995b04477cd92cdef6e
2c6e5ad95acf782c4517813e31bf2fbf0bbf
887569575bd0689bc5ba83ba8a2a8a878aca2a74db5955b284b23209d3b081b077017701
cd016e02ef876e2c6e4810a4d4bf01bf814cbf0abf
873f79b835c5ba2a9a829aa8410141868de1d104c690d881d85583552e6d958b9538b0c0
77cd03cd6377afcd84cd4321c1d483d4e9654c814cbf0abf
88575b9b742ad1418de181e15081509603968450c8d759d881d8b283b2326d0981099585
9538bcb0381f871f95c3995ca931bf81bfe981e9bf0bbf
8779b8c58ad1c6e750855096d7b119b104b184d7b119d855845523b2b66d016d83952995
2987296de09211d431bf01bf01e90cbf
8979d0c52aa88de15096b181b119041901b18796c80fd74a59b2b602b6016d86326d328f
ac0b318331bf31bf01bf81e9bf0cbf
88575b9b742ad1c68de186e1c850c850c850865096c850e1e70487045e8ca7912e672e85
2e8cac33473101318158bf02bf82e9bfe981e9bf0abf
8b3f799835c5742a8bd1a8dbc683c68dc68d818dc601c68cdbd1ca40a15da66697274711
31863158bf31bf31bf82bf4ce985e9bfe9bfe9bf0abf
8bc76957dab8359bc5a1748a2a052a018a01748b029ba6665b279447ec311ebf83bf581e
bf82bf4cbf02bf82e9bfe981e9bf0abf
881e75693f57795bb8d082d068350135029b0135013088b8985b7608b40d751e811ebf83
bf1e75bf81bf4c814cbf05bf81e9bf0bbf
83e9e52fc782c7693f823f5779817976027681da760276827957b482b4c7750175822fe5
bf82bf4cbf01bf814cbf81bfe981e9bf01bf01e90dbf

%
% Compression made this file 26.36% of the uncompressed size.
%


showpage

% stop using temporary dictionary
end

% restore original state
origstate restore

%%Trailer

%%EndDocument
 @endspecial 298 w(Process)65 b(it)i(../scr)t(ipts/repor)10
b(t.pl)65 b(sesc_cr)n(afty)-24 b(.xxxxxx)10245 5222 y
 0 setgray

10245 5222 a 4500 6000 a
 tx@Dict begin -90 Rot  end
 4500 6000 a eop
%%Page: 13 13
13 12 bop 4500 6000 a
 tx@Dict begin 90 Rot  end
 4500 6000 a 5981 1792 a @beginspecial
-168 @llx 371 @lly 782 @urx 421 @ury 2834 @rwi 283 @rhi
@setspecial
%%BeginDocument: barre-rico.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /ufs/goualard/TEMP/barre_hor.ps
%%Creator: XV Version 3.10a  Rev: 12/29/94 (PNG patch 1.2)  -  by John Bradley
%%BoundingBox: -168 371 782 421
%%Pages: 1
%%DocumentFonts:
%%EndComments
%%EndProlog

%%Page: 1 1

% remember original state
/origstate save def

% build a temporary dictionary
20 dict begin

% define space for color conversions
/grays 950 string def  % space for gray scale line
/npixls 0 def
/rgbindx 0 def

% lower left corner
-168 371 translate

% size of image (on paper, in 1/72inch coords)
949.96800 49.96800 scale

% define 'colorimage' if it isn't defined
%   ('colortogray' and 'mergeprocs' come from xwd2ps
%     via xgrab)
/colorimage where   % do we know about 'colorimage'?
  { pop }           % yes: pop off the 'dict' returned
  {                 % no:  define one
    /colortogray {  % define an RGB->I function
      /rgbdata exch store    % call input 'rgbdata'
      rgbdata length 3 idiv
      /npixls exch store
      /rgbindx 0 store
      0 1 npixls 1 sub {
        grays exch
        rgbdata rgbindx       get 20 mul    % Red
        rgbdata rgbindx 1 add get 32 mul    % Green
        rgbdata rgbindx 2 add get 12 mul    % Blue
        add add 64 idiv      % I = .5G + .31R + .18B
        put
        /rgbindx rgbindx 3 add store
      } for
      grays 0 npixls getinterval
    } bind def

    % Utility procedure for colorimage operator.
    % This procedure takes two procedures off the
    % stack and merges them into a single procedure.

    /mergeprocs { % def
      dup length
      3 -1 roll
      dup
      length
      dup
      5 1 roll
      3 -1 roll
      add
      array cvx
      dup
      3 -1 roll
      0 exch
      putinterval
      dup
      4 2 roll
      putinterval
    } bind def

    /colorimage { % def
      pop pop     % remove 'false 3' operands
      {colortogray} mergeprocs
      image
    } bind def
  } ifelse          % end of 'false' case



% define the colormap
/cmap 117 string def


% load up the colormap
currentfile cmap readhexstring
bcfe04 dcfe84 ccfe44 ecfec4 c4fe24 d4fe64 f4fee4 e4fea4 bcfe14 ccfe54 
f4fed4 c4fe34 d4fe74 fcfef4 ecfeb4 e4fe94 f4fecc fcfee4 ecfeac c4fe1c 
d4fe54 ccfe3c dcfe74 bcfe0c dcfe8c ccfe4c ecfecc c4fe2c d4fe6c e4feac 
bcfe1c f4fedc c4fe3c fcfefc ecfebc e4fe9c fcfeec d4fe5c dcfe7c 
pop pop   % lose return values from readhexstring


% rlecmapimage expects to have 'w h bits matrix' on stack
/rlecmapimage {
  /buffer 1 string def
  /rgbval 3 string def
  /block  384 string def

  % proc to read a block from file, and return RGB data
  { currentfile buffer readhexstring pop
    /bcount exch 0 get store
    bcount 128 ge
    {  % it's a non-run block
      0 1 bcount 128 sub
      { currentfile buffer readhexstring pop pop

        % look up value in color map
        /rgbval cmap buffer 0 get 3 mul 3 getinterval store

        % and put it in position i*3 in block
        block exch 3 mul rgbval putinterval
      } for
      block  0  bcount 127 sub 3 mul  getinterval
    }

    { % else it's a run block
      currentfile buffer readhexstring pop pop

      % look up value in colormap
      /rgbval cmap buffer 0 get 3 mul 3 getinterval store

      0 1 bcount { block exch 3 mul rgbval putinterval } for

      block 0 bcount 1 add 3 mul getinterval
    } ifelse
  } % end of proc
  false 3 colorimage
} bind def


950 50 8			% dimensions of data
[950 0 0 -50 0 50]		% mapping matrix
rlecmapimage

7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f210221870d1f220e220311212a21
7f217f217f217f217f217f2175218211030e820e220e820e220e860e220e23050b048404
090e24212a21
7f217f217f217f217f217f2171218e110312260b041e131e131e131e131e871e17001702
1d24212c21
7f217f217f217f217f217f216921830d1f220e870e221226200408000b00841702070d21
0521842403100d212321
7f217f217f217f217f217f2121218524220f231f213a218f0d0a220e220e23051b041e13
1e0817000c008408190706210421851103221f0d212521
7f217f217f217f217f217f211e2189240e1c1b17000825242136218a0d1026021b041e13
081700110085172001030d210421840316030d212821
7f217f217f217f217f21342186111a120f070a215721860d1110220e220e860e12182504
17000300821b1f212521851f0e2326230e080e841d010908001100820820090209840c1d
1a06210521841026230d212a21
7f217f217f217f21792186241f10220e220e820e220e820e220e820e220e820e220e820e
220e830e070f01010182070a2117218b0610231c1508001708090a2151218e0d1f101d01
14201b1e131e131e08000700820c0d211021840d100311210921881103220e07050b0800
8400171e081e821e081e851e081e0817001000851e2009181a210b21850d22261d24212c
21
7f217f217f217f21472184241f10220e820e220e820e220e820e220e820e220e820e220e
820e220e810e2283221f0d210e219a241f10070f1c09151e041e131e131e131e131e131e
131e131e131e821e080002008b17081410210d1110220e220e820e220e820e220e010e81
2301880126012616191b08000500820422212f2182240d211921890d0a0e072625150417
00100082201a210921890d1110220e23011620048304051f210421891103231c15131e08
1700190082171e090309820c1a210e21841f0e0a0d212e21
7f217f217f217f213f2190241f100e070f011c1920041e131e081e0882081e0882081e08
82081e0882081e0803088304250a2107218b241f030e12181619151e08001d00811e268c
2614201b041e131e131e131e088108178117000f0082091f211521840d0610220e0f0e88
120f012625020c11211321890d0a22121809040817001300831e050a2105218a0d1f101d
0114201b1e170004008408260e220e860e230c020417001800821e2009020982181a2114
21810d213321
7f211221842422121f217f217f217f211221850d0a220e220e820e220e820e220e820e22
0e010e881d0f1605090b041e178117001a008f1e22210d1110221d0f0116190b041e1781
1700220001171f00820b2221102189111022120f0125151b1e011e81081e821e081e821e
081e821e081e821e081e821e1700030082171c0e110e861d01251b1e170015008220181d
021d81220e020e86070119150417000b0086081e131e08170019008308091d210c21830d
1f24214121
7f210721830d0a220e040e83230504088308052421492185240a22230f01130182070a21
7f2106218c240a03220e220e220e220e1d0f840f01231f217f210a2199240a221d0f0116
191b1e131e131e131e131e131e131e131e17002300810b16871609200413081700490087
171e051d1f10220e0a0e8712232625201b1e178117001b000108011e81081e821e081e82
1e081e821e081e821e081e831e0817000c0085171e201e08000300831720090c840c090b
1b1e871e081e081e0817001f0083081e201e821e20090809820c03210b21860d0a222307
0d210521010d3a21
7f21042188112218141b13081e088108178117000300821b1f2140218b241f100e070f1c
25021b1317811700140083081410217f218c241f10070f05021b04131e131e011e810817
811700010093170207220e220e220e220e220e220e22120f18018301231f216e218c0d0a
22120f0116191b130817004c000117811e208120090509822008002c008308200c188518
0c09021b1e821e081e821e081e821e081e811e08810817811700400081171e871e09181a
061c08000300851e200b1e1700250083171e200983091806211721820d110a010a841d26
1918214421
6c219a1103220e220e220e220e220e220e220e220e220e22120f050b08000d0093091d22
0e220e220e220e220e220e220e2203112127218c241f100e070f0105021b1e08001e0082
0422216a2189241f10220e230f1826018201260182012601890126160509150408170011
0085131e131e131e821e131e831e131e0882081700020083082524215e2183240a220e82
0e220e8b0e22120f011605190b1308178117004d008817081e2009181d06210821810900
22000408071e0117510085080b09181a21022182060900040082081700120082171e000f
00011e83091806210d21821a031d8e1d221d221d0e22030a110d240d240d810d21012182
2406214521
68219711030f252004131e131e131e131e131e131e131e131e131e821e08001100011e83
131e131e821e131e821e131e821e131e811e1383131c1f211e218d0d1110221d0f260519
0b041e17002500821b0c0103018426161c05250b258405160f1d0e210e82070f26012681
0126822601268426010f1f2117218a241f100e070f1609150408820817003900821b1f21
56218a0a0f0c2514190215041e0801088217081701173400011781001781170016000117
011e85200c181d06210e218105000d0083171e08000c00011781081e041e020802171e00
82081e208120090d0982201e001b00850820090c1a210721821817000b008b081e200920
1920192009200986090c1d1a060900030083171e20090209010c83181a0621082187060a
0e1d071d0e1d821d0f1802180107841d220a24215221
1d21830d1f220e820e220e820e220e820e220e860e220e221024212321840d10230f010a
01852616091b08003b00820812210421830d1f102281220e820e220e820e220e820e220e
820e220e820e220e890e1d0f011609201b1317811700470081081e821e081e821e081e82
1e081e821e081e821e081e821e081e821e081e821e081e821e081e821e081e841e081e08
000a0083170b260182012601820126018201260182012601820126018a01260126160525
19151b088108004200820c0d21032196240a03220e220e220e220e220e220e220e220e22
0e1d0f810f01150182231f210921840d0610220e0e0e8418140417002100821720090409
822017002c008317081e208520090c1d1a211621821a201e811e20832009200982092009
86092009181a0c003400011e8520090c181a211221831a0c200982092009820920091109
830c1a06210a2182062000080087082009181a0621060206812106810621052183061d0c
0984090c181d1a011a02060e21820d062482240d216021
1c21970d0702041e131e131e131e131e131e131e0420050f100d211f21840d231b17004d
00a008182212230f011609151b131e131e131e131e131e131e131e131e131e130817001b
0083170017007f0041008c201a241f10070f1c021b04131e821e131e821e131e821e131e
821e131e011e810817811700160001178205112101218a111022120f181614151b1e821e
081e821e081e821e081e821e081e821e0817811700250082090621032182060900260088
17081e20090c1d1a212e2183062017001f008317081e208120090a09830c181a21442183
240917008300081e2001208409181a0621142183061a1d1a841a062106217721
1b21830d071b000f008517080b05230e8f0e220e220e220e220e220e220e220e22842210
110d210821830d231e004f00841e041e08178117007f0065008117000e000108011e8720
0c16090b1e08003000880401181614201b1e178117003a00822006210421820620001f00
81171e861e20090c1d1a213521820609001700011788081e20090c181a0621492184060a
101a1086101a10110d210d880d061a180c09181a0601067f211b21
1b21820a1900140081081e821e131e821e131e821e131e821e131e8d1e131e13040b1925
1812221f0d210321820a20007f007f0033000108160081081e031e820817003600811700
40008308091a2106218203091e031e8120091609830c1d1a213d21821f01091409840c18
1a06214e21010d0124010685240624060d210321850a26012206217f211f21
1b21831020170029008c1708040b021925051626051e007f002f000d1782081e20812009
1e0982201e00370081171e811e208120090c0982181d0683061808007900011781081e07
1e8120090e09820c1d217f216721820611217f212221
1b21830d0e0c090c0982201e004d00820817002a000217011e8120090c09811e00380082
17081e851e090c181a068306210621822106218221062182210621822106212521821a0c
09010982201e002700011781081e811e2085200c181d06211321821a200022000117011e
82091e0035008317081e20812009090982201e0002008608091a062106217f215521810d
217f215321
2d21851a0c201e17004300850820090c1a068206200022008317081e208620090c181d1a
210f21821d08002e000117021e0120840c181a06214221821d0c09250983181d06211c21
821a20001c008817081e2009181d062101218109002d0081171e871e20090c181a06210e
21851d09200c1a217f215a2182110d215321810d217d21
30218306180c090f0983201e08002500811e09820920090109830c1a062104218203201e
081e01201309810c1d821d1a21182182062000260081171e011e8620090c181a06217f21
1521830d1d0c091909840c181d06210721821a191e091e83200920098209200982092009
8209200982092009820920098209200982092009820920098209200985090c181a06217f
217621810d215121860d1026142510217c21
462185061d0c2017002000820906214e21820618098209200981092082201e178217081e
011e01201309840c181a06217f217f217f217f214421810d2401248306240d217d21
4a21841d201e0800150081081e041e820906217f217f217f217f217f217f214521
4e2185061a18201e000b0085171e091d06217f217f217f217f217f217f214e21
5221821a0c090909830c1d06217f217f217f217f217f217f215121
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521

%
% Compression made this file 2.88% of the uncompressed size.
%


showpage

% stop using temporary dictionary
end

% restore original state
origstate restore

%%Trailer

%%EndDocument
 @endspecial 5001 5222 a @beginspecial @setspecial
 tx@Dict begin STP newpath 1.0 SLW 0.5451 0.39608 0.03137 setrgbcolor
 /ArrowA { moveto } def /ArrowB { } def [ 341.43292 -28.45274 -22.76227
-28.45274  /Lineto /lineto load def false Line  gsave 1.0 SLW 0.5451
0.39608 0.03137 setrgbcolor 0 setlinecap stroke  grestore end
 
@endspecial
621 x Fi(SESC)20 b(\(IA)n(COMA)e(g)o(roup\))2960 b(Joe)20
b(Renau,)h(Basilio)e(F)m(r)o(aguela,)h(and)g(Liu)g(W)n(ei)39
b(\226)20 b(page)40 b(13/23)4266 1057 y
 gsave currentpoint currentpoint translate 270 neg rotate neg exch
neg exch translate
 4266 1057 a @beginspecial
276 @llx 366 @lly 336 @urx 426 @ury 141 @rwi 141 @rhi
@setspecial
%%BeginDocument: angleHG.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/rico/texte/texstyle/Prosper-beta/img/angleHG.ps
%%Creator: XV Version 3.10a  Rev: 12/29/94 (PNG patch 1.2)  -  by John Bradley
%%BoundingBox: 276 366 336 426
%%Pages: 1
%%DocumentFonts:
%%EndComments
%%EndProlog

%%Page: 1 1

% remember original state
/origstate save def

% build a temporary dictionary
20 dict begin

% define string to hold a scanline's worth of data
/pix 180 string def

% define space for color conversions
/grays 60 string def  % space for gray scale line
/npixls 0 def
/rgbindx 0 def

% print in landscape mode
90 rotate 0 -612 translate

% lower left corner
366 276 translate

% size of image (on paper, in 1/72inch coords)
59.97600 59.97600 scale

% define 'colorimage' if it isn't defined
%   ('colortogray' and 'mergeprocs' come from xwd2ps
%     via xgrab)
/colorimage where   % do we know about 'colorimage'?
  { pop }           % yes: pop off the 'dict' returned
  {                 % no:  define one
    /colortogray {  % define an RGB->I function
      /rgbdata exch store    % call input 'rgbdata'
      rgbdata length 3 idiv
      /npixls exch store
      /rgbindx 0 store
      0 1 npixls 1 sub {
        grays exch
        rgbdata rgbindx       get 20 mul    % Red
        rgbdata rgbindx 1 add get 32 mul    % Green
        rgbdata rgbindx 2 add get 12 mul    % Blue
        add add 64 idiv      % I = .5G + .31R + .18B
        put
        /rgbindx rgbindx 3 add store
      } for
      grays 0 npixls getinterval
    } bind def

    % Utility procedure for colorimage operator.
    % This procedure takes two procedures off the
    % stack and merges them into a single procedure.

    /mergeprocs { % def
      dup length
      3 -1 roll
      dup
      length
      dup
      5 1 roll
      3 -1 roll
      add
      array cvx
      dup
      3 -1 roll
      0 exch
      putinterval
      dup
      4 2 roll
      putinterval
    } bind def

    /colorimage { % def
      pop pop     % remove 'false 3' operands
      {colortogray} mergeprocs
      image
    } bind def
  } ifelse          % end of 'false' case



60 60 8			% dimensions of data
[60 0 0 -60 0 60]		% mapping matrix
{currentfile pix readhexstring pop}
false 3 colorimage

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffafee3effeaaffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffafee3e3fe64ffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffe3fe64fafee3ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffe9fe88f1feb3ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffe8fe86dffe55fefefeffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffebfe96dafe37fefefeffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffedfe9edefe48f7fed5ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffedfe9ee2fe60eefea5f5fecaecfe95ecfe97ecfe98
ecfe99ecfe9bf6feceffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffeffeaadffe4fe0fe55dcfe3f
dbfe3cdbfe3ddbfe3dddfe48defe4cdcfe43d9fe32d6fe20e2fe5fe3fe67defe4ddefe4d
defe4edefe4edbfe3bdbfe3cdcfe3ddcfe3fdcfe40dcfe42ddfe43ddfe45ddfe46ddfe48
ddfe46e2fe63e5fe72e5fe74e6fe76e6fe77e6fe79e7fe7ae9fe86e8fe85ebfe94ecfe97
ecfe99ecfe9cedfe9eeffeacf2febcf3febef3fec1f4fec4f9fedfffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffeffeaaf1feb3f5fec7e9fe87
e7fe7be7fe7be7fe7be2fe60e1fe5bd6fe1dd8fe2adafe33e1fe5bdffe54defe4edffe50
dffe51dffe53e0fe54ddfe49ddfe4bdefe4cdefe4edefe50dffe52dffe54e5fe73eafe93
e9fe89e6fe7ae4fe6ce4fe6ee8fe84e8fe85e9fe87e9fe8ae8fe84e7fe7ce8fe81e9fe8a
f0feb0f8fedbf9fedff1feb8f1febaeafe8bfbfeeafbfeebfdfef5ffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff5fecddffe52e1fe5df5fec9f5fec9f5fecaf5feca
f5fecbf5feccf5feccf5fecdf6fecef6fecef6fecef6fecff6fed0f6fed1eefea5e9fe8a
f6fed1f7fed7f7fed8f7fed9f6fecdfafee8fcfef1fcfef2fdfef7fcfef3fdfef7fefefc
fefefcfefefdf9fee0f6fecff5feccf4fec2ffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff5fecde3fe64e5fe74ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffdfef5fefefdfefefdfefefcfefefcfffffffefef9
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff5fecde5fe74dffe53ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff6fecee6fe79e5fe6ff8fed8ffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff6fecee6fe7aebfe95effeaaffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff6fecee6fe7aedfe9eeefea2ffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff6fecee6fe7bedfe9eeefea3ffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff6fecfe6fe78ecfe9eeefea5ffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffefefe
fefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff6fed0e2fe63e0fe59dffe55ffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffefefe
fefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffedfe9fe2fe5fd8fe2ad8fe2dffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffecfe9adffe53d6fe1cdefe4cf6fecfffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffedfe9cd8fe2cd6fe20defe4bf6fed0ffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffefefdffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffedfe9dd8fe27d7fe22defe4ef6fed0ffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffedfe9dd7fe26d6fe20e0fe5bf6fed2ffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff3febdd7fe22d7fe22e1fe5ef7fed3ffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff4fec6d6fe20d7fe21e0fe57f7fed4ffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff4fec6d6fe20d6fe1fe0fe59f7fed5ffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff4fec6d6fe1ed6fe1ee5fe73f7fed6ffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff4fec6d6fe1dd9fe32e0fe56ffffffffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff5fecce0fe55defe48e8fe81ffffffffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffbfeede7fe7fe0fe56e9fe85ffffffffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff7fed8e8fe84e7fe7ef1feb4ffffffffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff2feb8edfea0effea6f1feb6ffffffffffffffffff
fffffffefefefefefeffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffefefceffeabf0feafeffea7f2feb7ffffffffffffffffff
fffffffefefefefefefefefeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffefefcf5fecaecfe9de7fe7af8feddffffffffffffffffff
fffffffefefefefefefefefefefefeffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffefefcf5fecce8fe85e8fe80ffffffffffffffffffffffff
fffffffefefefefefefefefeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffff8fedefdfef8fdfefbf3fec0e9fe89ecfe96ffffffffffffffffffffffff
fefefefefefefefefefefefeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffdfef6fefefafefefaf4fec2e9fe89ecfe96ffffffffffffffffffffffff
fefefefefefefefefefefefeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffdfef6fefefefefefdf4fec2e8fe85edfe9dffffffffffffffffffffffff
fefefefefefefefefefefefeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffefef9fefefdfefefce7fe7be5fe76f2feb7ffffffffffffffffffffffff
fffffffffffffefefefefefeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffdfef6fdfefafefefbe2fe65e5fe75f6fed0ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffdfef9fefefce6fe79e6fe77fafee6ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffcfef6fefefbecfe9be7fe7efbfeecffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffdfef5fdfef7f7fed5e9fe8dfcfef2ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffcfeeffbfeebedfea1fdfef7ffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffefefeffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffefefdfbfee9effeabffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffefefefefefeffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffbfeeceffea6ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff9fee3f3fec1ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffeefea2f8fedaffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff1feb2fafee4ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffcfef0fefefaffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff


showpage

% stop using temporary dictionary
end

% restore original state
origstate restore

%%Trailer

%%EndDocument
 @endspecial 4511 1057 a
 currentpoint grestore moveto
 4511 1057 a 4130 5844 a
 currentpoint currentpoint translate 0.76611 0.76611 scale neg exch
neg exch translate
 4130
5844 a 4130 5844 a
 gsave currentpoint currentpoint translate 0 neg rotate neg exch neg
exch translate
 4130 5844 a @beginspecial 0 @llx 0
@lly 37 @urx 42 @ury 370 @rwi @setspecial
%%BeginDocument: figs/uiuc.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: uiuc.eps
%%Creator: fig2dev Version 3.2 Patchlevel 3d
%%CreationDate: Sun Feb 10 22:03:46 2002
%%For: renau@nether.cs.uiuc.edu (Jose Renau)
%%BoundingBox: 0 0 37 42
%%Magnification: 1.0000
%%EndComments
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def
/col32 {0.200 0.200 0.400 srgb} bind def
/col33 {0.800 0.400 0.000 srgb} bind def

end
save
newpath 0 42 moveto 0 0 lineto 37 0 lineto 37 42 lineto closepath clip newpath
-273.7 413.7 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
 0.06000 0.06000 sc
%
% Fig objects follow
%
%  polyline 
% Polyline
n 5070 6872 m 5070 6227 l 4584 6227 l 4584 6872 l
 5070 6872 l  cp gs col32 1.00 shd ef gr 
%  polyline 
% Polyline
15.000 slw
n 5070 6872 m 5070 6227 l 4584 6227 l 4584 6872 l
 5070 6872 l  cp gs col32 s gr 
%  polyline 
% Polyline
0.000 slw
n 5056 6858 m 5056 6243 l 4598 6243 l 4598 6858 l
 5056 6858 l  cp gs col32 1.00 shd ef gr 
%  polyline 
% Polyline
7.500 slw
n 5056 6858 m 5056 6243 l 4598 6243 l 4598 6858 l
 5056 6858 l  cp gs col33 s gr 
%  spline 
% Polyline
2 slj
0.000 slw
n 4944 6783 m 4944 6781 l 4944 6773 l 4944 6759 l 4944 6751 l 4944 6749 l
 4943 6749 l 4935 6748 l 4924 6746 l 4914 6744 l 4906 6742 l
 4900 6741 l 4896 6739 l 4892 6738 l 4887 6735 l 4884 6732 l
 4880 6728 l 4877 6722 l 4875 6716 l 4873 6709 l 4872 6702 l
 4871 6693 l 4870 6683 l 4869 6670 l 4869 6654 l 4868 6637 l
 4868 6621 l 4868 6609 l 4868 6604 l 4868 6603 l 4868 6602 l
 4868 6597 l 4868 6585 l 4868 6567 l 4868 6544 l 4868 6521 l
 4868 6503 l 4868 6491 l 4868 6486 l 4868 6485 l 4868 6483 l
 4868 6474 l 4868 6457 l 4869 6438 l 4869 6420 l 4870 6406 l
 4870 6395 l 4871 6387 l 4873 6381 l 4874 6375 l 4876 6371 l
 4879 6367 l 4882 6365 l 4885 6363 l 4889 6362 l 4892 6361 l
 4898 6359 l 4905 6358 l 4915 6356 l 4925 6354 l 4933 6352 l
 4934 6352 l 4934 6350 l 4934 6343 l 4934 6331 l 4934 6324 l
 4934 6322 l 4933 6322 l 4928 6322 l 4916 6322 l 4896 6322 l
 4869 6322 l 4837 6322 l 4806 6322 l 4779 6322 l 4759 6322 l
 4747 6322 l 4742 6322 l 4741 6322 l 4740 6322 l 4737 6322 l
 4732 6322 l 4729 6322 l 4726 6322 l 4724 6322 l 4721 6323 l
 4718 6324 l 4716 6325 l 4714 6326 l 4712 6327 l 4710 6329 l
 4707 6332 l 4705 6334 l 4703 6336 l 4701 6338 l 4700 6339 l
 4699 6341 l 4698 6342 l 4697 6344 l 4696 6346 l 4696 6347 l
 4695 6349 l 4695 6351 l 4695 6353 l 4694 6356 l 4694 6358 l
 4694 6359 l 4694 6360 l 4694 6362 l 4694 6365 l 4694 6367 l
 4695 6369 l 4695 6370 l 4696 6372 l 4697 6374 l 4697 6375 l
 4698 6377 l 4699 6378 l 4701 6379 l 4702 6381 l 4704 6383 l
 4706 6385 l 4708 6386 l 4709 6388 l 4710 6389 l 4712 6389 l
 4713 6390 l 4715 6391 l 4716 6391 l 4718 6391 l 4720 6391 l
 4721 6391 l 4724 6391 l 4726 6391 l 4727 6391 l 4729 6391 l
 4732 6390 l 4735 6390 l 4737 6389 l 4740 6388 l 4742 6387 l
 4744 6385 l 4747 6383 l 4748 6381 l 4749 6379 l 4750 6376 l
 4751 6372 l 4752 6369 l 4752 6368 l 4752 6366 l 4752 6364 l
 4752 6362 l 4752 6361 l 4752 6359 l 4752 6358 l 4751 6357 l
 4751 6356 l 4750 6355 l 4749 6354 l 4749 6353 l 4748 6352 l
 4747 6351 l 4746 6350 l 4745 6349 l 4744 6348 l 4743 6348 l
 4742 6347 l 4741 6346 l 4740 6346 l 4739 6346 l 4738 6346 l
 4736 6345 l 4735 6345 l 4733 6345 l 4732 6345 l 4730 6345 l
 4729 6345 l 4728 6346 l 4727 6346 l 4725 6346 l 4724 6347 l
 4724 6348 l 4723 6348 l 4722 6349 l 4721 6351 l 4720 6352 l
 4719 6353 l 4718 6354 l 4718 6355 l 4717 6356 l 4717 6357 l
 4717 6358 l 4716 6359 l 4717 6360 l 4717 6361 l 4717 6362 l
 4717 6363 l 4718 6364 l 4718 6365 l 4719 6366 l 4719 6367 l
 4720 6367 l 4720 6368 l 4721 6368 l 4722 6369 l 4723 6369 l
 4723 6368 l 4724 6368 l 4725 6368 l 4726 6367 l 4727 6367 l
 4727 6366 l 4728 6366 l 4728 6365 l 4729 6365 l 4729 6364 l
 4729 6363 l 4729 6362 l 4729 6361 l 4728 6360 l 4728 6359 l
 4729 6359 l 4729 6358 l 4730 6357 l 4731 6357 l 4731 6356 l
 4732 6356 l 4733 6356 l 4734 6356 l 4735 6356 l 4735 6357 l
 4736 6357 l 4737 6357 l 4738 6357 l 4738 6358 l 4739 6358 l
 4739 6359 l 4739 6360 l 4740 6360 l 4740 6361 l 4740 6362 l
 4741 6362 l 4741 6363 l 4741 6364 l 4740 6364 l 4740 6365 l
 4740 6366 l 4740 6368 l 4739 6371 l 4739 6373 l 4738 6374 l
 4737 6375 l 4736 6376 l 4735 6377 l 4733 6378 l 4732 6379 l
 4731 6379 l 4729 6379 l 4727 6380 l 4725 6380 l 4724 6380 l
 4722 6380 l 4721 6380 l 4720 6380 l 4719 6380 l 4718 6380 l
 4717 6379 l 4716 6379 l 4715 6379 l 4715 6378 l 4714 6377 l
 4713 6376 l 4712 6375 l 4711 6374 l 4710 6373 l 4710 6372 l
 4709 6372 l 4708 6371 l 4708 6370 l 4707 6369 l 4707 6368 l
 4707 6367 l 4706 6365 l 4706 6363 l 4706 6361 l 4706 6359 l
 4706 6357 l 4706 6355 l 4706 6353 l 4706 6352 l 4707 6351 l
 4707 6350 l 4707 6348 l 4708 6347 l 4709 6346 l 4709 6345 l
 4710 6344 l 4712 6343 l 4713 6342 l 4715 6340 l 4717 6339 l
 4718 6337 l 4720 6337 l 4721 6336 l 4723 6335 l 4725 6334 l
 4727 6334 l 4729 6334 l 4731 6333 l 4734 6333 l 4738 6333 l
 4740 6333 l 4741 6333 l 4742 6333 l 4744 6333 l 4747 6333 l
 4753 6333 l 4759 6333 l 4767 6333 l 4776 6333 l 4785 6333 l
 4794 6333 l 4802 6333 l 4809 6333 l 4815 6333 l 4822 6333 l
 4827 6333 l 4828 6333 l 4828 6334 l 4828 6337 l 4828 6341 l
 4828 6344 l 4828 6345 l 4826 6345 l 4816 6345 l 4797 6345 l
 4779 6345 l 4769 6345 l 4767 6345 l 4766 6345 l 4765 6345 l
 4764 6346 l 4763 6346 l 4762 6347 l 4762 6348 l 4761 6349 l
 4761 6350 l 4761 6351 l 4761 6352 l 4761 6353 l 4761 6354 l
 4761 6355 l 4762 6356 l 4762 6357 l 4763 6358 l 4764 6359 l
 4765 6359 l 4766 6359 l 4767 6359 l 4769 6359 l 4779 6359 l
 4798 6359 l 4816 6359 l 4826 6359 l 4828 6359 l 4828 6360 l
 4828 6362 l 4828 6367 l 4828 6369 l 4828 6370 l 4826 6370 l
 4817 6370 l 4799 6370 l 4782 6370 l 4773 6370 l 4771 6370 l
 4770 6370 l 4769 6370 l 4768 6370 l 4767 6371 l 4766 6371 l
 4766 6372 l 4765 6373 l 4765 6374 l 4765 6375 l 4765 6376 l
 4765 6377 l 4766 6378 l 4766 6379 l 4767 6380 l 4768 6381 l
 4769 6381 l 4770 6381 l 4771 6381 l 4773 6381 l 4782 6381 l
 4800 6381 l 4817 6381 l 4826 6381 l 4828 6381 l 4828 6384 l
 4828 6391 l 4828 6404 l 4828 6423 l 4828 6449 l 4828 6480 l
 4828 6516 l 4828 6554 l 4828 6592 l 4828 6628 l 4828 6659 l
 4828 6685 l 4828 6704 l 4828 6717 l 4828 6724 l 4828 6727 l
 4827 6727 l 4819 6727 l 4802 6727 l 4780 6727 l 4757 6727 l
 4740 6727 l 4732 6727 l 4731 6727 l 4730 6727 l 4729 6727 l
 4728 6727 l 4727 6728 l 4726 6728 l 4726 6729 l 4726 6730 l
 4725 6730 l 4725 6731 l 4725 6732 l 4725 6733 l 4725 6734 l
 4725 6735 l 4725 6736 l 4725 6737 l 4726 6738 l 4726 6739 l
 4727 6739 l 4727 6740 l 4728 6740 l 4729 6740 l 4730 6740 l
 4731 6740 l 4732 6740 l 4740 6740 l 4757 6740 l 4780 6740 l
 4802 6740 l 4819 6740 l 4827 6740 l 4828 6740 l 4828 6741 l
 4828 6745 l 4828 6750 l 4828 6754 l 4828 6755 l 4827 6755 l
 4822 6755 l 4811 6755 l 4792 6755 l 4770 6755 l 4748 6755 l
 4729 6755 l 4718 6755 l 4713 6755 l 4712 6755 l 4710 6755 l
 4707 6755 l 4706 6756 l 4704 6756 l 4703 6757 l 4702 6758 l
 4701 6759 l 4700 6760 l 4699 6761 l 4699 6763 l 4698 6764 l
 4698 6767 l 4698 6769 l 4698 6770 l 4698 6773 l 4698 6779 l
 4698 6782 l 4698 6783 l 4699 6783 l 4703 6783 l 4713 6783 l
 4730 6783 l 4755 6783 l 4786 6783 l 4821 6783 l 4856 6783 l
 4887 6783 l 4912 6783 l 4929 6783 l 4939 6783 l 4943 6783 l

 4944 6783 l  cp gs col7 1.00 shd ef gr 
%  spline 
% Polyline
n 4783 6706 m 4783 6705 l 4783 6702 l 4783 6693 l 4783 6678 l 4783 6656 l
 4783 6626 l 4783 6592 l 4783 6555 l 4783 6517 l 4783 6483 l
 4783 6453 l 4783 6431 l 4783 6416 l 4783 6407 l 4783 6404 l
 4783 6403 l 4783 6402 l 4783 6401 l 4783 6400 l 4782 6400 l
 4782 6399 l 4781 6399 l 4781 6398 l 4780 6398 l 4779 6398 l
 4778 6398 l 4777 6398 l 4776 6398 l 4775 6398 l 4774 6399 l
 4773 6399 l 4773 6400 l 4772 6401 l 4772 6402 l 4772 6403 l
 4772 6404 l 4772 6407 l 4772 6416 l 4772 6431 l 4772 6453 l
 4772 6483 l 4772 6517 l 4772 6555 l 4772 6592 l 4772 6626 l
 4772 6656 l 4772 6678 l 4772 6693 l 4772 6702 l 4772 6705 l
 4772 6706 l 4772 6707 l 4772 6708 l 4773 6709 l 4773 6710 l
 4774 6711 l 4775 6712 l 4776 6712 l 4777 6712 l 4778 6712 l
 4779 6712 l 4780 6712 l 4781 6712 l 4781 6711 l 4782 6711 l
 4782 6710 l 4783 6709 l 4783 6708 l 4783 6707 l
 4783 6706 l  cp gs col7 1.00 shd ef gr 
%  spline 
% Polyline
n 4813 6705 m 4813 6704 l 4813 6701 l 4813 6692 l 4813 6677 l 4813 6655 l
 4813 6626 l 4813 6592 l 4813 6555 l 4813 6518 l 4813 6484 l
 4813 6455 l 4813 6433 l 4813 6418 l 4813 6409 l 4813 6406 l
 4813 6405 l 4813 6404 l 4813 6402 l 4813 6401 l 4812 6400 l
 4811 6399 l 4811 6398 l 4810 6398 l 4809 6398 l 4808 6397 l
 4807 6397 l 4806 6397 l 4805 6397 l 4804 6397 l 4803 6397 l
 4802 6397 l 4801 6398 l 4800 6398 l 4799 6399 l 4799 6400 l
 4798 6401 l 4798 6402 l 4798 6404 l 4798 6405 l 4798 6406 l
 4798 6409 l 4798 6418 l 4798 6433 l 4798 6455 l 4798 6484 l
 4798 6518 l 4798 6555 l 4798 6592 l 4798 6626 l 4798 6655 l
 4798 6677 l 4798 6692 l 4798 6701 l 4798 6704 l 4798 6705 l
 4798 6706 l 4798 6707 l 4798 6708 l 4799 6709 l 4799 6710 l
 4799 6711 l 4800 6711 l 4801 6712 l 4802 6713 l 4803 6713 l
 4804 6713 l 4805 6713 l 4806 6713 l 4807 6713 l 4808 6713 l
 4809 6712 l 4810 6712 l 4811 6711 l 4812 6710 l 4812 6709 l
 4813 6708 l 4813 6707 l 4813 6706 l
 4813 6705 l  cp gs col7 1.00 shd ef gr 
%  polyline 
% Polyline
0 slj
n 5136 6864 m 5124 6864 l 5124 6894 l 5119 6894 l 5119 6864 l 5108 6864 l
 5108 6860 l 5136 6860 l
 5136 6864 l  cp gs col32 1.00 shd ef gr 
%  polyline 
% Polyline
n 5172 6894 m 5167 6894 l 5167 6867 l 5157 6880 l 5156 6880 l 5146 6867 l
 5145 6867 l 5145 6894 l 5141 6894 l 5141 6860 l 5145 6860 l
 5156 6874 l 5168 6860 l 5172 6860 l
 5172 6894 l  cp gs col32 1.00 shd ef gr 
$F2psEnd
rs

%%EndDocument
 @endspecial 4769 5844 a
 currentpoint grestore moveto
 4769 5844 a 4130 5844 a
 currentpoint currentpoint translate 1 0.76611 div 1 0.76611 div scale
neg exch neg exch translate
 4130
5844 a 5001 3450 a
SDict begin H.S end
 5001 3450 a 5001 3450 a
SDict begin H.R end
 5001 3450
a 5001 3450 a
SDict begin [ /View [/XYZ H.V] /Dest (page.1) cvn H.B /DEST pdfmark
end
 5001 3450 a 5001 3450 a
SDict begin [ {ThisPage} << /Trans << /S /Replace >> >> /PUT pdfmark
end
 5001 3450 a 5001
3450 a
SDict begin [ /Page 13/View [ /XYZ null null null ] /Title (Sample Configuration)
/OUT pdfmark end
 5001 3450 a 6305 1453 a Fm(S)18 b Fn(A)g(M)g(P)g(L)g(E)115
b Fm(C)18 b Fn(O)g(N)g(FI)g(G)g(U)g(R)g(A)-8 b(T)18 b(I)g(O)g(N)4581
2077 y Fe(foo)182 b(=)91 b(4)4581 2260 y(cpucore[0:31])86
b(=)91 b('r10')f(#)h(iacoma3)4581 2442 y([r10])4581 2625
y(fetchWidth)179 b(=)91 b(4)4581 2808 y(issueWidth)179
b(=)91 b($\(foo\))4581 2991 y(branchDelay)c(=)k($\(foo\)+2)180
b(#)91 b(6)g(minimum)e(\(deps)g(enforced\))4581 3174
y(maxBranches)e(=)k(4)274 b(#)91 b(outstanding)c(branches)i(limit)4581
3357 y(maxIRequests=)d(2)4581 3540 y(iALUUnits)271 b(=)91
b(2)4581 3723 y(iFPUnits)363 b(=)91 b(2)4581 3905 y(iBJUnits)363
b(=)91 b(1)4581 4088 y(LDSTQueue)271 b(=)91 b(16)182
b(#)91 b(Unified)e(LD/ST)h(buffer)f(queue)4581 4271 y(winsize)455
b(=)91 b(32)4581 4454 y(bb4Cycle)363 b(=)91 b(1)274 b(#)91
b(max)g(BB)f(fetch)g(per)g(cycle)4581 4637 y(bpred)639
b(=)91 b('r10kBPred')4581 5003 y(<../benchs/bran)o(chM)o(od)o(els)o(.c)
o(on)o(f>)177 b(#)91 b(Include)e(different)f(branch)h(models)10245
5222 y
 0 setgray
 10245 5222 a 4500 6000 a
 tx@Dict begin -90 Rot  end
 4500 6000 a eop
%%Page: 14 14
14 13 bop 4500 6000 a
 tx@Dict begin 90 Rot  end
 4500 6000 a 5981 1792 a @beginspecial
-168 @llx 371 @lly 782 @urx 421 @ury 2834 @rwi 283 @rhi
@setspecial
%%BeginDocument: barre-rico.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /ufs/goualard/TEMP/barre_hor.ps
%%Creator: XV Version 3.10a  Rev: 12/29/94 (PNG patch 1.2)  -  by John Bradley
%%BoundingBox: -168 371 782 421
%%Pages: 1
%%DocumentFonts:
%%EndComments
%%EndProlog

%%Page: 1 1

% remember original state
/origstate save def

% build a temporary dictionary
20 dict begin

% define space for color conversions
/grays 950 string def  % space for gray scale line
/npixls 0 def
/rgbindx 0 def

% lower left corner
-168 371 translate

% size of image (on paper, in 1/72inch coords)
949.96800 49.96800 scale

% define 'colorimage' if it isn't defined
%   ('colortogray' and 'mergeprocs' come from xwd2ps
%     via xgrab)
/colorimage where   % do we know about 'colorimage'?
  { pop }           % yes: pop off the 'dict' returned
  {                 % no:  define one
    /colortogray {  % define an RGB->I function
      /rgbdata exch store    % call input 'rgbdata'
      rgbdata length 3 idiv
      /npixls exch store
      /rgbindx 0 store
      0 1 npixls 1 sub {
        grays exch
        rgbdata rgbindx       get 20 mul    % Red
        rgbdata rgbindx 1 add get 32 mul    % Green
        rgbdata rgbindx 2 add get 12 mul    % Blue
        add add 64 idiv      % I = .5G + .31R + .18B
        put
        /rgbindx rgbindx 3 add store
      } for
      grays 0 npixls getinterval
    } bind def

    % Utility procedure for colorimage operator.
    % This procedure takes two procedures off the
    % stack and merges them into a single procedure.

    /mergeprocs { % def
      dup length
      3 -1 roll
      dup
      length
      dup
      5 1 roll
      3 -1 roll
      add
      array cvx
      dup
      3 -1 roll
      0 exch
      putinterval
      dup
      4 2 roll
      putinterval
    } bind def

    /colorimage { % def
      pop pop     % remove 'false 3' operands
      {colortogray} mergeprocs
      image
    } bind def
  } ifelse          % end of 'false' case



% define the colormap
/cmap 117 string def


% load up the colormap
currentfile cmap readhexstring
bcfe04 dcfe84 ccfe44 ecfec4 c4fe24 d4fe64 f4fee4 e4fea4 bcfe14 ccfe54 
f4fed4 c4fe34 d4fe74 fcfef4 ecfeb4 e4fe94 f4fecc fcfee4 ecfeac c4fe1c 
d4fe54 ccfe3c dcfe74 bcfe0c dcfe8c ccfe4c ecfecc c4fe2c d4fe6c e4feac 
bcfe1c f4fedc c4fe3c fcfefc ecfebc e4fe9c fcfeec d4fe5c dcfe7c 
pop pop   % lose return values from readhexstring


% rlecmapimage expects to have 'w h bits matrix' on stack
/rlecmapimage {
  /buffer 1 string def
  /rgbval 3 string def
  /block  384 string def

  % proc to read a block from file, and return RGB data
  { currentfile buffer readhexstring pop
    /bcount exch 0 get store
    bcount 128 ge
    {  % it's a non-run block
      0 1 bcount 128 sub
      { currentfile buffer readhexstring pop pop

        % look up value in color map
        /rgbval cmap buffer 0 get 3 mul 3 getinterval store

        % and put it in position i*3 in block
        block exch 3 mul rgbval putinterval
      } for
      block  0  bcount 127 sub 3 mul  getinterval
    }

    { % else it's a run block
      currentfile buffer readhexstring pop pop

      % look up value in colormap
      /rgbval cmap buffer 0 get 3 mul 3 getinterval store

      0 1 bcount { block exch 3 mul rgbval putinterval } for

      block 0 bcount 1 add 3 mul getinterval
    } ifelse
  } % end of proc
  false 3 colorimage
} bind def


950 50 8			% dimensions of data
[950 0 0 -50 0 50]		% mapping matrix
rlecmapimage

7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f210221870d1f220e220311212a21
7f217f217f217f217f217f2175218211030e820e220e820e220e860e220e23050b048404
090e24212a21
7f217f217f217f217f217f2171218e110312260b041e131e131e131e131e871e17001702
1d24212c21
7f217f217f217f217f217f216921830d1f220e870e221226200408000b00841702070d21
0521842403100d212321
7f217f217f217f217f217f2121218524220f231f213a218f0d0a220e220e23051b041e13
1e0817000c008408190706210421851103221f0d212521
7f217f217f217f217f217f211e2189240e1c1b17000825242136218a0d1026021b041e13
081700110085172001030d210421840316030d212821
7f217f217f217f217f21342186111a120f070a215721860d1110220e220e860e12182504
17000300821b1f212521851f0e2326230e080e841d010908001100820820090209840c1d
1a06210521841026230d212a21
7f217f217f217f21792186241f10220e220e820e220e820e220e820e220e820e220e820e
220e830e070f01010182070a2117218b0610231c1508001708090a2151218e0d1f101d01
14201b1e131e131e08000700820c0d211021840d100311210921881103220e07050b0800
8400171e081e821e081e851e081e0817001000851e2009181a210b21850d22261d24212c
21
7f217f217f217f21472184241f10220e820e220e820e220e820e220e820e220e820e220e
820e220e810e2283221f0d210e219a241f10070f1c09151e041e131e131e131e131e131e
131e131e131e821e080002008b17081410210d1110220e220e820e220e820e220e010e81
2301880126012616191b08000500820422212f2182240d211921890d0a0e072625150417
00100082201a210921890d1110220e23011620048304051f210421891103231c15131e08
1700190082171e090309820c1a210e21841f0e0a0d212e21
7f217f217f217f213f2190241f100e070f011c1920041e131e081e0882081e0882081e08
82081e0882081e0803088304250a2107218b241f030e12181619151e08001d00811e268c
2614201b041e131e131e131e088108178117000f0082091f211521840d0610220e0f0e88
120f012625020c11211321890d0a22121809040817001300831e050a2105218a0d1f101d
0114201b1e170004008408260e220e860e230c020417001800821e2009020982181a2114
21810d213321
7f211221842422121f217f217f217f211221850d0a220e220e820e220e820e220e820e22
0e010e881d0f1605090b041e178117001a008f1e22210d1110221d0f0116190b041e1781
1700220001171f00820b2221102189111022120f0125151b1e011e81081e821e081e821e
081e821e081e821e081e821e1700030082171c0e110e861d01251b1e170015008220181d
021d81220e020e86070119150417000b0086081e131e08170019008308091d210c21830d
1f24214121
7f210721830d0a220e040e83230504088308052421492185240a22230f01130182070a21
7f2106218c240a03220e220e220e220e1d0f840f01231f217f210a2199240a221d0f0116
191b1e131e131e131e131e131e131e131e17002300810b16871609200413081700490087
171e051d1f10220e0a0e8712232625201b1e178117001b000108011e81081e821e081e82
1e081e821e081e821e081e831e0817000c0085171e201e08000300831720090c840c090b
1b1e871e081e081e0817001f0083081e201e821e20090809820c03210b21860d0a222307
0d210521010d3a21
7f21042188112218141b13081e088108178117000300821b1f2140218b241f100e070f1c
25021b1317811700140083081410217f218c241f10070f05021b04131e131e011e810817
811700010093170207220e220e220e220e220e220e22120f18018301231f216e218c0d0a
22120f0116191b130817004c000117811e208120090509822008002c008308200c188518
0c09021b1e821e081e821e081e821e081e811e08810817811700400081171e871e09181a
061c08000300851e200b1e1700250083171e200983091806211721820d110a010a841d26
1918214421
6c219a1103220e220e220e220e220e220e220e220e220e22120f050b08000d0093091d22
0e220e220e220e220e220e220e2203112127218c241f100e070f0105021b1e08001e0082
0422216a2189241f10220e230f1826018201260182012601890126160509150408170011
0085131e131e131e821e131e831e131e0882081700020083082524215e2183240a220e82
0e220e8b0e22120f011605190b1308178117004d008817081e2009181d06210821810900
22000408071e0117510085080b09181a21022182060900040082081700120082171e000f
00011e83091806210d21821a031d8e1d221d221d0e22030a110d240d240d810d21012182
2406214521
68219711030f252004131e131e131e131e131e131e131e131e131e821e08001100011e83
131e131e821e131e821e131e821e131e811e1383131c1f211e218d0d1110221d0f260519
0b041e17002500821b0c0103018426161c05250b258405160f1d0e210e82070f26012681
0126822601268426010f1f2117218a241f100e070f1609150408820817003900821b1f21
56218a0a0f0c2514190215041e0801088217081701173400011781001781170016000117
011e85200c181d06210e218105000d0083171e08000c00011781081e041e020802171e00
82081e208120090d0982201e001b00850820090c1a210721821817000b008b081e200920
1920192009200986090c1d1a060900030083171e20090209010c83181a0621082187060a
0e1d071d0e1d821d0f1802180107841d220a24215221
1d21830d1f220e820e220e820e220e820e220e860e220e221024212321840d10230f010a
01852616091b08003b00820812210421830d1f102281220e820e220e820e220e820e220e
820e220e820e220e890e1d0f011609201b1317811700470081081e821e081e821e081e82
1e081e821e081e821e081e821e081e821e081e821e081e821e081e821e081e841e081e08
000a0083170b260182012601820126018201260182012601820126018a01260126160525
19151b088108004200820c0d21032196240a03220e220e220e220e220e220e220e220e22
0e1d0f810f01150182231f210921840d0610220e0e0e8418140417002100821720090409
822017002c008317081e208520090c1d1a211621821a201e811e20832009200982092009
86092009181a0c003400011e8520090c181a211221831a0c200982092009820920091109
830c1a06210a2182062000080087082009181a0621060206812106810621052183061d0c
0984090c181d1a011a02060e21820d062482240d216021
1c21970d0702041e131e131e131e131e131e131e0420050f100d211f21840d231b17004d
00a008182212230f011609151b131e131e131e131e131e131e131e131e131e130817001b
0083170017007f0041008c201a241f10070f1c021b04131e821e131e821e131e821e131e
821e131e011e810817811700160001178205112101218a111022120f181614151b1e821e
081e821e081e821e081e821e081e821e0817811700250082090621032182060900260088
17081e20090c1d1a212e2183062017001f008317081e208120090a09830c181a21442183
240917008300081e2001208409181a0621142183061a1d1a841a062106217721
1b21830d071b000f008517080b05230e8f0e220e220e220e220e220e220e220e22842210
110d210821830d231e004f00841e041e08178117007f0065008117000e000108011e8720
0c16090b1e08003000880401181614201b1e178117003a00822006210421820620001f00
81171e861e20090c1d1a213521820609001700011788081e20090c181a0621492184060a
101a1086101a10110d210d880d061a180c09181a0601067f211b21
1b21820a1900140081081e821e131e821e131e821e131e821e131e8d1e131e13040b1925
1812221f0d210321820a20007f007f0033000108160081081e031e820817003600811700
40008308091a2106218203091e031e8120091609830c1d1a213d21821f01091409840c18
1a06214e21010d0124010685240624060d210321850a26012206217f211f21
1b21831020170029008c1708040b021925051626051e007f002f000d1782081e20812009
1e0982201e00370081171e811e208120090c0982181d0683061808007900011781081e07
1e8120090e09820c1d217f216721820611217f212221
1b21830d0e0c090c0982201e004d00820817002a000217011e8120090c09811e00380082
17081e851e090c181a068306210621822106218221062182210621822106212521821a0c
09010982201e002700011781081e811e2085200c181d06211321821a200022000117011e
82091e0035008317081e20812009090982201e0002008608091a062106217f215521810d
217f215321
2d21851a0c201e17004300850820090c1a068206200022008317081e208620090c181d1a
210f21821d08002e000117021e0120840c181a06214221821d0c09250983181d06211c21
821a20001c008817081e2009181d062101218109002d0081171e871e20090c181a06210e
21851d09200c1a217f215a2182110d215321810d217d21
30218306180c090f0983201e08002500811e09820920090109830c1a062104218203201e
081e01201309810c1d821d1a21182182062000260081171e011e8620090c181a06217f21
1521830d1d0c091909840c181d06210721821a191e091e83200920098209200982092009
8209200982092009820920098209200982092009820920098209200985090c181a06217f
217621810d215121860d1026142510217c21
462185061d0c2017002000820906214e21820618098209200981092082201e178217081e
011e01201309840c181a06217f217f217f217f214421810d2401248306240d217d21
4a21841d201e0800150081081e041e820906217f217f217f217f217f217f214521
4e2185061a18201e000b0085171e091d06217f217f217f217f217f217f214e21
5221821a0c090909830c1d06217f217f217f217f217f217f215121
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521

%
% Compression made this file 2.88% of the uncompressed size.
%


showpage

% stop using temporary dictionary
end

% restore original state
origstate restore

%%Trailer

%%EndDocument
 @endspecial 5001 5222 a @beginspecial @setspecial
 tx@Dict begin STP newpath 1.0 SLW 0.5451 0.39608 0.03137 setrgbcolor
 /ArrowA { moveto } def /ArrowB { } def [ 341.43292 -28.45274 -22.76227
-28.45274  /Lineto /lineto load def false Line  gsave 1.0 SLW 0.5451
0.39608 0.03137 setrgbcolor 0 setlinecap stroke  grestore end
 
@endspecial
621 x Fi(SESC)20 b(\(IA)n(COMA)e(g)o(roup\))2960 b(Joe)20
b(Renau,)h(Basilio)e(F)m(r)o(aguela,)h(and)g(Liu)g(W)n(ei)39
b(\226)20 b(page)40 b(14/23)4266 1057 y
 gsave currentpoint currentpoint translate 270 neg rotate neg exch
neg exch translate
 4266 1057 a @beginspecial
276 @llx 366 @lly 336 @urx 426 @ury 141 @rwi 141 @rhi
@setspecial
%%BeginDocument: angleHG.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/rico/texte/texstyle/Prosper-beta/img/angleHG.ps
%%Creator: XV Version 3.10a  Rev: 12/29/94 (PNG patch 1.2)  -  by John Bradley
%%BoundingBox: 276 366 336 426
%%Pages: 1
%%DocumentFonts:
%%EndComments
%%EndProlog

%%Page: 1 1

% remember original state
/origstate save def

% build a temporary dictionary
20 dict begin

% define string to hold a scanline's worth of data
/pix 180 string def

% define space for color conversions
/grays 60 string def  % space for gray scale line
/npixls 0 def
/rgbindx 0 def

% print in landscape mode
90 rotate 0 -612 translate

% lower left corner
366 276 translate

% size of image (on paper, in 1/72inch coords)
59.97600 59.97600 scale

% define 'colorimage' if it isn't defined
%   ('colortogray' and 'mergeprocs' come from xwd2ps
%     via xgrab)
/colorimage where   % do we know about 'colorimage'?
  { pop }           % yes: pop off the 'dict' returned
  {                 % no:  define one
    /colortogray {  % define an RGB->I function
      /rgbdata exch store    % call input 'rgbdata'
      rgbdata length 3 idiv
      /npixls exch store
      /rgbindx 0 store
      0 1 npixls 1 sub {
        grays exch
        rgbdata rgbindx       get 20 mul    % Red
        rgbdata rgbindx 1 add get 32 mul    % Green
        rgbdata rgbindx 2 add get 12 mul    % Blue
        add add 64 idiv      % I = .5G + .31R + .18B
        put
        /rgbindx rgbindx 3 add store
      } for
      grays 0 npixls getinterval
    } bind def

    % Utility procedure for colorimage operator.
    % This procedure takes two procedures off the
    % stack and merges them into a single procedure.

    /mergeprocs { % def
      dup length
      3 -1 roll
      dup
      length
      dup
      5 1 roll
      3 -1 roll
      add
      array cvx
      dup
      3 -1 roll
      0 exch
      putinterval
      dup
      4 2 roll
      putinterval
    } bind def

    /colorimage { % def
      pop pop     % remove 'false 3' operands
      {colortogray} mergeprocs
      image
    } bind def
  } ifelse          % end of 'false' case



60 60 8			% dimensions of data
[60 0 0 -60 0 60]		% mapping matrix
{currentfile pix readhexstring pop}
false 3 colorimage

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffafee3effeaaffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffafee3e3fe64ffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffe3fe64fafee3ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffe9fe88f1feb3ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffe8fe86dffe55fefefeffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffebfe96dafe37fefefeffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffedfe9edefe48f7fed5ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffedfe9ee2fe60eefea5f5fecaecfe95ecfe97ecfe98
ecfe99ecfe9bf6feceffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffeffeaadffe4fe0fe55dcfe3f
dbfe3cdbfe3ddbfe3dddfe48defe4cdcfe43d9fe32d6fe20e2fe5fe3fe67defe4ddefe4d
defe4edefe4edbfe3bdbfe3cdcfe3ddcfe3fdcfe40dcfe42ddfe43ddfe45ddfe46ddfe48
ddfe46e2fe63e5fe72e5fe74e6fe76e6fe77e6fe79e7fe7ae9fe86e8fe85ebfe94ecfe97
ecfe99ecfe9cedfe9eeffeacf2febcf3febef3fec1f4fec4f9fedfffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffeffeaaf1feb3f5fec7e9fe87
e7fe7be7fe7be7fe7be2fe60e1fe5bd6fe1dd8fe2adafe33e1fe5bdffe54defe4edffe50
dffe51dffe53e0fe54ddfe49ddfe4bdefe4cdefe4edefe50dffe52dffe54e5fe73eafe93
e9fe89e6fe7ae4fe6ce4fe6ee8fe84e8fe85e9fe87e9fe8ae8fe84e7fe7ce8fe81e9fe8a
f0feb0f8fedbf9fedff1feb8f1febaeafe8bfbfeeafbfeebfdfef5ffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff5fecddffe52e1fe5df5fec9f5fec9f5fecaf5feca
f5fecbf5feccf5feccf5fecdf6fecef6fecef6fecef6fecff6fed0f6fed1eefea5e9fe8a
f6fed1f7fed7f7fed8f7fed9f6fecdfafee8fcfef1fcfef2fdfef7fcfef3fdfef7fefefc
fefefcfefefdf9fee0f6fecff5feccf4fec2ffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff5fecde3fe64e5fe74ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffdfef5fefefdfefefdfefefcfefefcfffffffefef9
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff5fecde5fe74dffe53ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff6fecee6fe79e5fe6ff8fed8ffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff6fecee6fe7aebfe95effeaaffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff6fecee6fe7aedfe9eeefea2ffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff6fecee6fe7bedfe9eeefea3ffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff6fecfe6fe78ecfe9eeefea5ffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffefefe
fefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff6fed0e2fe63e0fe59dffe55ffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffefefe
fefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffedfe9fe2fe5fd8fe2ad8fe2dffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffecfe9adffe53d6fe1cdefe4cf6fecfffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffedfe9cd8fe2cd6fe20defe4bf6fed0ffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffefefdffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffedfe9dd8fe27d7fe22defe4ef6fed0ffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffedfe9dd7fe26d6fe20e0fe5bf6fed2ffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff3febdd7fe22d7fe22e1fe5ef7fed3ffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff4fec6d6fe20d7fe21e0fe57f7fed4ffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff4fec6d6fe20d6fe1fe0fe59f7fed5ffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff4fec6d6fe1ed6fe1ee5fe73f7fed6ffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff4fec6d6fe1dd9fe32e0fe56ffffffffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff5fecce0fe55defe48e8fe81ffffffffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffbfeede7fe7fe0fe56e9fe85ffffffffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff7fed8e8fe84e7fe7ef1feb4ffffffffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff2feb8edfea0effea6f1feb6ffffffffffffffffff
fffffffefefefefefeffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffefefceffeabf0feafeffea7f2feb7ffffffffffffffffff
fffffffefefefefefefefefeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffefefcf5fecaecfe9de7fe7af8feddffffffffffffffffff
fffffffefefefefefefefefefefefeffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffefefcf5fecce8fe85e8fe80ffffffffffffffffffffffff
fffffffefefefefefefefefeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffff8fedefdfef8fdfefbf3fec0e9fe89ecfe96ffffffffffffffffffffffff
fefefefefefefefefefefefeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffdfef6fefefafefefaf4fec2e9fe89ecfe96ffffffffffffffffffffffff
fefefefefefefefefefefefeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffdfef6fefefefefefdf4fec2e8fe85edfe9dffffffffffffffffffffffff
fefefefefefefefefefefefeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffefef9fefefdfefefce7fe7be5fe76f2feb7ffffffffffffffffffffffff
fffffffffffffefefefefefeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffdfef6fdfefafefefbe2fe65e5fe75f6fed0ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffdfef9fefefce6fe79e6fe77fafee6ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffcfef6fefefbecfe9be7fe7efbfeecffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffdfef5fdfef7f7fed5e9fe8dfcfef2ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffcfeeffbfeebedfea1fdfef7ffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffefefeffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffefefdfbfee9effeabffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffefefefefefeffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffbfeeceffea6ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff9fee3f3fec1ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffeefea2f8fedaffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff1feb2fafee4ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffcfef0fefefaffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff


showpage

% stop using temporary dictionary
end

% restore original state
origstate restore

%%Trailer

%%EndDocument
 @endspecial 4511 1057 a
 currentpoint grestore moveto
 4511 1057 a 4130 5844 a
 currentpoint currentpoint translate 0.76611 0.76611 scale neg exch
neg exch translate
 4130
5844 a 4130 5844 a
 gsave currentpoint currentpoint translate 0 neg rotate neg exch neg
exch translate
 4130 5844 a @beginspecial 0 @llx 0
@lly 37 @urx 42 @ury 370 @rwi @setspecial
%%BeginDocument: figs/uiuc.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: uiuc.eps
%%Creator: fig2dev Version 3.2 Patchlevel 3d
%%CreationDate: Sun Feb 10 22:03:46 2002
%%For: renau@nether.cs.uiuc.edu (Jose Renau)
%%BoundingBox: 0 0 37 42
%%Magnification: 1.0000
%%EndComments
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def
/col32 {0.200 0.200 0.400 srgb} bind def
/col33 {0.800 0.400 0.000 srgb} bind def

end
save
newpath 0 42 moveto 0 0 lineto 37 0 lineto 37 42 lineto closepath clip newpath
-273.7 413.7 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
 0.06000 0.06000 sc
%
% Fig objects follow
%
%  polyline 
% Polyline
n 5070 6872 m 5070 6227 l 4584 6227 l 4584 6872 l
 5070 6872 l  cp gs col32 1.00 shd ef gr 
%  polyline 
% Polyline
15.000 slw
n 5070 6872 m 5070 6227 l 4584 6227 l 4584 6872 l
 5070 6872 l  cp gs col32 s gr 
%  polyline 
% Polyline
0.000 slw
n 5056 6858 m 5056 6243 l 4598 6243 l 4598 6858 l
 5056 6858 l  cp gs col32 1.00 shd ef gr 
%  polyline 
% Polyline
7.500 slw
n 5056 6858 m 5056 6243 l 4598 6243 l 4598 6858 l
 5056 6858 l  cp gs col33 s gr 
%  spline 
% Polyline
2 slj
0.000 slw
n 4944 6783 m 4944 6781 l 4944 6773 l 4944 6759 l 4944 6751 l 4944 6749 l
 4943 6749 l 4935 6748 l 4924 6746 l 4914 6744 l 4906 6742 l
 4900 6741 l 4896 6739 l 4892 6738 l 4887 6735 l 4884 6732 l
 4880 6728 l 4877 6722 l 4875 6716 l 4873 6709 l 4872 6702 l
 4871 6693 l 4870 6683 l 4869 6670 l 4869 6654 l 4868 6637 l
 4868 6621 l 4868 6609 l 4868 6604 l 4868 6603 l 4868 6602 l
 4868 6597 l 4868 6585 l 4868 6567 l 4868 6544 l 4868 6521 l
 4868 6503 l 4868 6491 l 4868 6486 l 4868 6485 l 4868 6483 l
 4868 6474 l 4868 6457 l 4869 6438 l 4869 6420 l 4870 6406 l
 4870 6395 l 4871 6387 l 4873 6381 l 4874 6375 l 4876 6371 l
 4879 6367 l 4882 6365 l 4885 6363 l 4889 6362 l 4892 6361 l
 4898 6359 l 4905 6358 l 4915 6356 l 4925 6354 l 4933 6352 l
 4934 6352 l 4934 6350 l 4934 6343 l 4934 6331 l 4934 6324 l
 4934 6322 l 4933 6322 l 4928 6322 l 4916 6322 l 4896 6322 l
 4869 6322 l 4837 6322 l 4806 6322 l 4779 6322 l 4759 6322 l
 4747 6322 l 4742 6322 l 4741 6322 l 4740 6322 l 4737 6322 l
 4732 6322 l 4729 6322 l 4726 6322 l 4724 6322 l 4721 6323 l
 4718 6324 l 4716 6325 l 4714 6326 l 4712 6327 l 4710 6329 l
 4707 6332 l 4705 6334 l 4703 6336 l 4701 6338 l 4700 6339 l
 4699 6341 l 4698 6342 l 4697 6344 l 4696 6346 l 4696 6347 l
 4695 6349 l 4695 6351 l 4695 6353 l 4694 6356 l 4694 6358 l
 4694 6359 l 4694 6360 l 4694 6362 l 4694 6365 l 4694 6367 l
 4695 6369 l 4695 6370 l 4696 6372 l 4697 6374 l 4697 6375 l
 4698 6377 l 4699 6378 l 4701 6379 l 4702 6381 l 4704 6383 l
 4706 6385 l 4708 6386 l 4709 6388 l 4710 6389 l 4712 6389 l
 4713 6390 l 4715 6391 l 4716 6391 l 4718 6391 l 4720 6391 l
 4721 6391 l 4724 6391 l 4726 6391 l 4727 6391 l 4729 6391 l
 4732 6390 l 4735 6390 l 4737 6389 l 4740 6388 l 4742 6387 l
 4744 6385 l 4747 6383 l 4748 6381 l 4749 6379 l 4750 6376 l
 4751 6372 l 4752 6369 l 4752 6368 l 4752 6366 l 4752 6364 l
 4752 6362 l 4752 6361 l 4752 6359 l 4752 6358 l 4751 6357 l
 4751 6356 l 4750 6355 l 4749 6354 l 4749 6353 l 4748 6352 l
 4747 6351 l 4746 6350 l 4745 6349 l 4744 6348 l 4743 6348 l
 4742 6347 l 4741 6346 l 4740 6346 l 4739 6346 l 4738 6346 l
 4736 6345 l 4735 6345 l 4733 6345 l 4732 6345 l 4730 6345 l
 4729 6345 l 4728 6346 l 4727 6346 l 4725 6346 l 4724 6347 l
 4724 6348 l 4723 6348 l 4722 6349 l 4721 6351 l 4720 6352 l
 4719 6353 l 4718 6354 l 4718 6355 l 4717 6356 l 4717 6357 l
 4717 6358 l 4716 6359 l 4717 6360 l 4717 6361 l 4717 6362 l
 4717 6363 l 4718 6364 l 4718 6365 l 4719 6366 l 4719 6367 l
 4720 6367 l 4720 6368 l 4721 6368 l 4722 6369 l 4723 6369 l
 4723 6368 l 4724 6368 l 4725 6368 l 4726 6367 l 4727 6367 l
 4727 6366 l 4728 6366 l 4728 6365 l 4729 6365 l 4729 6364 l
 4729 6363 l 4729 6362 l 4729 6361 l 4728 6360 l 4728 6359 l
 4729 6359 l 4729 6358 l 4730 6357 l 4731 6357 l 4731 6356 l
 4732 6356 l 4733 6356 l 4734 6356 l 4735 6356 l 4735 6357 l
 4736 6357 l 4737 6357 l 4738 6357 l 4738 6358 l 4739 6358 l
 4739 6359 l 4739 6360 l 4740 6360 l 4740 6361 l 4740 6362 l
 4741 6362 l 4741 6363 l 4741 6364 l 4740 6364 l 4740 6365 l
 4740 6366 l 4740 6368 l 4739 6371 l 4739 6373 l 4738 6374 l
 4737 6375 l 4736 6376 l 4735 6377 l 4733 6378 l 4732 6379 l
 4731 6379 l 4729 6379 l 4727 6380 l 4725 6380 l 4724 6380 l
 4722 6380 l 4721 6380 l 4720 6380 l 4719 6380 l 4718 6380 l
 4717 6379 l 4716 6379 l 4715 6379 l 4715 6378 l 4714 6377 l
 4713 6376 l 4712 6375 l 4711 6374 l 4710 6373 l 4710 6372 l
 4709 6372 l 4708 6371 l 4708 6370 l 4707 6369 l 4707 6368 l
 4707 6367 l 4706 6365 l 4706 6363 l 4706 6361 l 4706 6359 l
 4706 6357 l 4706 6355 l 4706 6353 l 4706 6352 l 4707 6351 l
 4707 6350 l 4707 6348 l 4708 6347 l 4709 6346 l 4709 6345 l
 4710 6344 l 4712 6343 l 4713 6342 l 4715 6340 l 4717 6339 l
 4718 6337 l 4720 6337 l 4721 6336 l 4723 6335 l 4725 6334 l
 4727 6334 l 4729 6334 l 4731 6333 l 4734 6333 l 4738 6333 l
 4740 6333 l 4741 6333 l 4742 6333 l 4744 6333 l 4747 6333 l
 4753 6333 l 4759 6333 l 4767 6333 l 4776 6333 l 4785 6333 l
 4794 6333 l 4802 6333 l 4809 6333 l 4815 6333 l 4822 6333 l
 4827 6333 l 4828 6333 l 4828 6334 l 4828 6337 l 4828 6341 l
 4828 6344 l 4828 6345 l 4826 6345 l 4816 6345 l 4797 6345 l
 4779 6345 l 4769 6345 l 4767 6345 l 4766 6345 l 4765 6345 l
 4764 6346 l 4763 6346 l 4762 6347 l 4762 6348 l 4761 6349 l
 4761 6350 l 4761 6351 l 4761 6352 l 4761 6353 l 4761 6354 l
 4761 6355 l 4762 6356 l 4762 6357 l 4763 6358 l 4764 6359 l
 4765 6359 l 4766 6359 l 4767 6359 l 4769 6359 l 4779 6359 l
 4798 6359 l 4816 6359 l 4826 6359 l 4828 6359 l 4828 6360 l
 4828 6362 l 4828 6367 l 4828 6369 l 4828 6370 l 4826 6370 l
 4817 6370 l 4799 6370 l 4782 6370 l 4773 6370 l 4771 6370 l
 4770 6370 l 4769 6370 l 4768 6370 l 4767 6371 l 4766 6371 l
 4766 6372 l 4765 6373 l 4765 6374 l 4765 6375 l 4765 6376 l
 4765 6377 l 4766 6378 l 4766 6379 l 4767 6380 l 4768 6381 l
 4769 6381 l 4770 6381 l 4771 6381 l 4773 6381 l 4782 6381 l
 4800 6381 l 4817 6381 l 4826 6381 l 4828 6381 l 4828 6384 l
 4828 6391 l 4828 6404 l 4828 6423 l 4828 6449 l 4828 6480 l
 4828 6516 l 4828 6554 l 4828 6592 l 4828 6628 l 4828 6659 l
 4828 6685 l 4828 6704 l 4828 6717 l 4828 6724 l 4828 6727 l
 4827 6727 l 4819 6727 l 4802 6727 l 4780 6727 l 4757 6727 l
 4740 6727 l 4732 6727 l 4731 6727 l 4730 6727 l 4729 6727 l
 4728 6727 l 4727 6728 l 4726 6728 l 4726 6729 l 4726 6730 l
 4725 6730 l 4725 6731 l 4725 6732 l 4725 6733 l 4725 6734 l
 4725 6735 l 4725 6736 l 4725 6737 l 4726 6738 l 4726 6739 l
 4727 6739 l 4727 6740 l 4728 6740 l 4729 6740 l 4730 6740 l
 4731 6740 l 4732 6740 l 4740 6740 l 4757 6740 l 4780 6740 l
 4802 6740 l 4819 6740 l 4827 6740 l 4828 6740 l 4828 6741 l
 4828 6745 l 4828 6750 l 4828 6754 l 4828 6755 l 4827 6755 l
 4822 6755 l 4811 6755 l 4792 6755 l 4770 6755 l 4748 6755 l
 4729 6755 l 4718 6755 l 4713 6755 l 4712 6755 l 4710 6755 l
 4707 6755 l 4706 6756 l 4704 6756 l 4703 6757 l 4702 6758 l
 4701 6759 l 4700 6760 l 4699 6761 l 4699 6763 l 4698 6764 l
 4698 6767 l 4698 6769 l 4698 6770 l 4698 6773 l 4698 6779 l
 4698 6782 l 4698 6783 l 4699 6783 l 4703 6783 l 4713 6783 l
 4730 6783 l 4755 6783 l 4786 6783 l 4821 6783 l 4856 6783 l
 4887 6783 l 4912 6783 l 4929 6783 l 4939 6783 l 4943 6783 l

 4944 6783 l  cp gs col7 1.00 shd ef gr 
%  spline 
% Polyline
n 4783 6706 m 4783 6705 l 4783 6702 l 4783 6693 l 4783 6678 l 4783 6656 l
 4783 6626 l 4783 6592 l 4783 6555 l 4783 6517 l 4783 6483 l
 4783 6453 l 4783 6431 l 4783 6416 l 4783 6407 l 4783 6404 l
 4783 6403 l 4783 6402 l 4783 6401 l 4783 6400 l 4782 6400 l
 4782 6399 l 4781 6399 l 4781 6398 l 4780 6398 l 4779 6398 l
 4778 6398 l 4777 6398 l 4776 6398 l 4775 6398 l 4774 6399 l
 4773 6399 l 4773 6400 l 4772 6401 l 4772 6402 l 4772 6403 l
 4772 6404 l 4772 6407 l 4772 6416 l 4772 6431 l 4772 6453 l
 4772 6483 l 4772 6517 l 4772 6555 l 4772 6592 l 4772 6626 l
 4772 6656 l 4772 6678 l 4772 6693 l 4772 6702 l 4772 6705 l
 4772 6706 l 4772 6707 l 4772 6708 l 4773 6709 l 4773 6710 l
 4774 6711 l 4775 6712 l 4776 6712 l 4777 6712 l 4778 6712 l
 4779 6712 l 4780 6712 l 4781 6712 l 4781 6711 l 4782 6711 l
 4782 6710 l 4783 6709 l 4783 6708 l 4783 6707 l
 4783 6706 l  cp gs col7 1.00 shd ef gr 
%  spline 
% Polyline
n 4813 6705 m 4813 6704 l 4813 6701 l 4813 6692 l 4813 6677 l 4813 6655 l
 4813 6626 l 4813 6592 l 4813 6555 l 4813 6518 l 4813 6484 l
 4813 6455 l 4813 6433 l 4813 6418 l 4813 6409 l 4813 6406 l
 4813 6405 l 4813 6404 l 4813 6402 l 4813 6401 l 4812 6400 l
 4811 6399 l 4811 6398 l 4810 6398 l 4809 6398 l 4808 6397 l
 4807 6397 l 4806 6397 l 4805 6397 l 4804 6397 l 4803 6397 l
 4802 6397 l 4801 6398 l 4800 6398 l 4799 6399 l 4799 6400 l
 4798 6401 l 4798 6402 l 4798 6404 l 4798 6405 l 4798 6406 l
 4798 6409 l 4798 6418 l 4798 6433 l 4798 6455 l 4798 6484 l
 4798 6518 l 4798 6555 l 4798 6592 l 4798 6626 l 4798 6655 l
 4798 6677 l 4798 6692 l 4798 6701 l 4798 6704 l 4798 6705 l
 4798 6706 l 4798 6707 l 4798 6708 l 4799 6709 l 4799 6710 l
 4799 6711 l 4800 6711 l 4801 6712 l 4802 6713 l 4803 6713 l
 4804 6713 l 4805 6713 l 4806 6713 l 4807 6713 l 4808 6713 l
 4809 6712 l 4810 6712 l 4811 6711 l 4812 6710 l 4812 6709 l
 4813 6708 l 4813 6707 l 4813 6706 l
 4813 6705 l  cp gs col7 1.00 shd ef gr 
%  polyline 
% Polyline
0 slj
n 5136 6864 m 5124 6864 l 5124 6894 l 5119 6894 l 5119 6864 l 5108 6864 l
 5108 6860 l 5136 6860 l
 5136 6864 l  cp gs col32 1.00 shd ef gr 
%  polyline 
% Polyline
n 5172 6894 m 5167 6894 l 5167 6867 l 5157 6880 l 5156 6880 l 5146 6867 l
 5145 6867 l 5145 6894 l 5141 6894 l 5141 6860 l 5145 6860 l
 5156 6874 l 5168 6860 l 5172 6860 l
 5172 6894 l  cp gs col32 1.00 shd ef gr 
$F2psEnd
rs

%%EndDocument
 @endspecial 4769 5844 a
 currentpoint grestore moveto
 4769 5844 a 4130 5844 a
 currentpoint currentpoint translate 1 0.76611 div 1 0.76611 div scale
neg exch neg exch translate
 4130
5844 a 5001 3450 a
SDict begin H.S end
 5001 3450 a 5001 3450 a
SDict begin H.R end
 5001 3450
a 5001 3450 a
SDict begin [ /View [/XYZ H.V] /Dest (page.1) cvn H.B /DEST pdfmark
end
 5001 3450 a 5001 3450 a
SDict begin [ {ThisPage} << /Trans << /S /Replace >> >> /PUT pdfmark
end
 5001 3450 a 5001
3450 a
SDict begin [ /Page 14/View [ /XYZ null null null ] /Title (Report format)
/OUT pdfmark end
 5001 3450 a 7655 1453 a Fm(R)18 b Fn(E)g(P)g(O)g(R)12
b(T)115 b(F)18 b(O)g(R)g(M)g(A)-8 b(T)4649 2157 y @beginspecial
276 @llx 376 @lly 336 @urx 416 @ury 113 @rwi @setspecial
%%BeginDocument: green-bullet-on-white.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/fred/TeX/STYLES/Prosper/img/green-bullet-on-white.ps
%%Creator: XV Version 3.10a+FLmask  Rev: 12/29/94  -  by John Bradley
%%BoundingBox: 276 376 336 416
%%Pages: 1
%%DocumentFonts:
%%EndComments
%%EndProlog

%%Page: 1 1

% remember original state
/origstate save def

% build a temporary dictionary
20 dict begin

% define space for color conversions
/grays 60 string def  % space for gray scale line
/npixls 0 def
/rgbindx 0 def

% lower left corner
276 376 translate

% size of image (on paper, in 1/72inch coords)
59.97600 40.03200 scale

% define 'colorimage' if it isn't defined
%   ('colortogray' and 'mergeprocs' come from xwd2ps
%     via xgrab)
/colorimage where   % do we know about 'colorimage'?
  { pop }           % yes: pop off the 'dict' returned
  {                 % no:  define one
    /colortogray {  % define an RGB->I function
      /rgbdata exch store    % call input 'rgbdata'
      rgbdata length 3 idiv
      /npixls exch store
      /rgbindx 0 store
      0 1 npixls 1 sub {
        grays exch
        rgbdata rgbindx       get 20 mul    % Red
        rgbdata rgbindx 1 add get 32 mul    % Green
        rgbdata rgbindx 2 add get 12 mul    % Blue
        add add 64 idiv      % I = .5G + .31R + .18B
        put
        /rgbindx rgbindx 3 add store
      } for
      grays 0 npixls getinterval
    } bind def

    % Utility procedure for colorimage operator.
    % This procedure takes two procedures off the
    % stack and merges them into a single procedure.

    /mergeprocs { % def
      dup length
      3 -1 roll
      dup
      length
      dup
      5 1 roll
      3 -1 roll
      add
      array cvx
      dup
      3 -1 roll
      0 exch
      putinterval
      dup
      4 2 roll
      putinterval
    } bind def

    /colorimage { % def
      pop pop     % remove 'false 3' operands
      {colortogray} mergeprocs
      image
    } bind def
  } ifelse          % end of 'false' case



% define the colormap
/cmap 723 string def


% load up the colormap
currentfile cmap readhexstring
041808 049008 8c948c 045204 4c544c 04c804 84e284 449644 c4cbc4 0c380e 
04ac07 cce6cc 345e2c e4e7e4 046604 2c3a2c 347234 e4fee2 048208 64cc60 
34922c 24b224 04e404 044604 647264 242623 049f07 8cae8c 04bc06 24c61c 
f4f8f3 1c541c 04d804 1c621c 1c7220 0c280d 14910f 045e04 047c04 ccdcd0 
14ac18 1c481c 747473 04d105 0c6c0b 24852a 1c381c f4f1f3 acafac f4fef5 
0c310c acc6ac 049708 a4a4a3 3c4a44 148314 144812 9cea94 04b405 149e14 
1cbc1c 044004 e4fef4 dcdddd 748274 5c5959 4cba54 145b11 145413 147412 
c4fec4 e4f1e7 146411 088a0a 243028 09c207 fcf8f3 147c13 14c80e acceac 
3c3939 04f405 044e07 07a608 14d00f 0c1f10 0c900b d4d3d4 ecfee3 1c291d 
0c6e14 bcbfbd d4f6d4 909a94 4c5a50 0cac08 24ba24 547e54 0cbc0a 0c5c16 
0c7c0b fcf1fb acb8ac 1c311c aca7a9 e2e2e2 a4e2a4 0cc80a 6c9a6c 143715 
0c650a 0c840b 07de06 14970c 0c980a 0cb40a 848583 ecf0f0 c3c6c3 0c540d 
0c740c cccccc 74ce6c 30a02c 04ec05 54aa5c 6cb66c 9cfa9c 2c862c 5c926c 
6ca674 b4deac 9cda9c 34aa2c 6c7e6c acfeac 448244 34d22c 7d7d7c 6c6d6c 
445644 4c4d4c 1c7a19 1c3e1c 3c3f3c 2c422c 7c9a84 54c254 dceadc 144014 
343231 bccebc bcbabc 447244 6c6664 9c9d9c 7caa7c 349a38 6c7a74 84b69c 
1c4e18 898a89 ccfadc 1c6c2c b8e2c0 1c8a24 a1aaa1 3c4e3c 5f5e5c d8fed8 
24be24 78d670 688668 148a14 14a618 145624 0c480e 2c292b 142916 1c921c 
d4dad9 243828 143017 b4d2bc b4b7b5 1c961c 8c868c 247e24 144e13 04fa04 
246224 fcfefc 0c4e0c ace2b4 3caa3c 244e24 0c180c 949394 545454 ece9ec 
343634 2cb127 6c736c 0ca00c 0cda08 0c5c0b 0ccf06 146a0c b4b2b4 646464 
b4c2b4 0c3f0c ecfdf9 e4dedc ccfdcc 2c2f2b 142214 146b16 c4c2c2 545b54 
2cb62c 74ba74 346634 b4fcb0 244224 444242 246a24 e4feec 0ce204 f4f9fc 
f4eefc 444744 54b654 fcf9fc 0c9114 dcd6d4 ecfeec 0c7b14 0cc614 0c6314 
0c8414 
pop pop   % lose return values from readhexstring


% rlecmapimage expects to have 'w h bits matrix' on stack
/rlecmapimage {
  /buffer 1 string def
  /rgbval 3 string def
  /block  384 string def

  % proc to read a block from file, and return RGB data
  { currentfile buffer readhexstring pop
    /bcount exch 0 get store
    bcount 128 ge
    {  % it's a non-run block
      0 1 bcount 128 sub
      { currentfile buffer readhexstring pop pop

        % look up value in color map
        /rgbval cmap buffer 0 get 3 mul 3 getinterval store

        % and put it in position i*3 in block
        block exch 3 mul rgbval putinterval
      } for
      block  0  bcount 127 sub 3 mul  getinterval
    }

    { % else it's a run block
      currentfile buffer readhexstring pop pop

      % look up value in colormap
      /rgbval cmap buffer 0 get 3 mul 3 getinterval store

      0 1 bcount { block exch 3 mul rgbval putinterval } for

      block 0 bcount 1 add 3 mul getinterval
    } ifelse
  } % end of proc
  false 3 colorimage
} bind def


60 40 8			% dimensions of data
[60 0 0 -40 0 40]		% mapping matrix
rlecmapimage

10bf8131bf05bf03e98165e902e9046587bf3158ec31bfe9658265e9bf09bf
10bf8131bf04bf81e9bf01bf02e98265bfe982e965e901e981bf318131ec82ecbfe982e9
65bf0abf
12bf82751ebf83bf1ebf318231ec3102318111318131bf81bfe901e981bf318131bf01bf
01e90bbf
0fbf02e901bf023101ec021101a981d6a981a9118111318131bf14bf
0fbf8165e901e988e5bfd4ecd66add07808c80149dc2137f46a911d431bfe981e9bf0fbf

0fbf01e982bfe9318331a49ce28fe2454d37562456dc71567bab87a9d4bf81bfe981e9bf
81bf318131bf0abf
10bf8ac775bf311bde43224d37568656cb535f1a733c893cae8506a91131bfe9bf01bf81
58bf0abf
0fbf911ebf31b761a0442245ed56721a530a3a4e3a813a4e864e73c94246e3bf10bf
07bf81e9bf82bfe9bf92bf1ebf31ec4f0c38e2ef8e4d49561a530a3a6283624b052b8a2b
ce4e60c2dfe331bf4cbf0cbf
0abf81e9bf82bfe9ec8eec83de1f21778e786f01341a0a3a1c851c4b052b20168b162054
aa93df11312fe965bf0abf
0ebf8d3111883d77cdcf78646f0134530a810a1c911c4ece20167c517c16542893a9ec31
e965bf0abf
08bf01e999bfe91ebf316cc07743cd45786f49561a530a3a624b6b2b707c510151877c70
4edcaba9bfe981e9bf0abf
0bbf01e985bf27d34352cf90cf0e4d2656011a530a1c62ee2b20167c5102518816cc1db9
d611bfe9bf0abf
07bf81e9bf01bf90e9bf4c86d3445277d92c786f49721a0a3a853a4b0520167c827c51bd
88bd5116e44b157a11bf0cbf
0dbf8d3f0fc33d4403cfbb0e3756011a0a860a624b2b20167c817c5102510116854b897b
a911bf0bbf
08bf82e9e5bf97bf75dab209bcc021ef254d2649561a533a1c4b052b70167c037c811620
85203a853911bf0bbf
0bbf0131869eb6d3b0bc7748884845646f561acb0a7382734b2b812b1683167c16cc01cc
012b844b2813d4bf0bbf
0abf0231955e236db0c04463cf45646f5634cb533a73624b2b2016821670548854ce2b20
4b28e831bf0bbf
0abf023183b5b6d3b089b044436e45786f49341a871a0a733a626b2b200120896b4e6b05
2b1c5f9decbf0bbf
09bf8131bf97bf31d82e09d3b044cd485a786f1201cb1a530a73621c052b852b054e4b1c
0585053a282d58bf0bbf
0bbf9431bf556709b03844cd482c7864125634cb1a5f0a7382734b0501050162011c854b
0aae2d58bf0bbf
0bbf0131934a236dd3b0bc7743485a786f1201341acb535f3a813a1c011c0173023a8453
3b1458bf0bbf
0bbf8431bf0455098309d338778277ef2c852c266f1201348134cb83cb530a3a013a810a
5f815f0a850a1ab37d58bf0bbf
08bf81e9bf93bf31bf18d83209d338c044cd6e0e2c64126f0172837271cb5382530a5383
53ae531a851a01a57e58bf0bbf
0bbf01e5837600230901098138c082c0482c862c7864126f49568156728272341a811a72
0272864912bb841131bf0abf
03bf94e9bfe9bfe9bf1ebf1ebf275923b632099538c044ef81ef7881786481646f816fad
84adea01ea560156882449ad2da3115831bf0abf
04bf02e992654ce61e75bf0d185523b66d0995bcc043cd2c812c7881786483646f64f001
f08b6f496f49642d6382e3314cbf0abf
01bf85e9e5e9652fc784c7693fc7698a69c7d2b200232eb60929bc84bc6343ef2c862c78
45784d78ed82ed6f6489644d45a3afa2114c31bf0abf
01e58175c783c769d5eb8ceb797679dab87908db67c4b66d876d9538b0447743ef84ef6e
2c78458e455a457864788ecfbe9fd4315831bf0abf
88e5750d3f5779da98d083d0689b3501358d5d0236c45567b6320995b04477cd92cdef6e
2c6e5ad95acf782c4517813e31bf2fbf0bbf
887569575bd0689bc5ba83ba8a2a8a878aca2a74db5955b284b23209d3b081b077017701
cd016e02ef876e2c6e4810a4d4bf01bf814cbf0abf
873f79b835c5ba2a9a829aa8410141868de1d104c690d881d85583552e6d958b9538b0c0
77cd03cd6377afcd84cd4321c1d483d4e9654c814cbf0abf
88575b9b742ad1418de181e15081509603968450c8d759d881d8b283b2326d0981099585
9538bcb0381f871f95c3995ca931bf81bfe981e9bf0bbf
8779b8c58ad1c6e750855096d7b119b104b184d7b119d855845523b2b66d016d83952995
2987296de09211d431bf01bf01e90cbf
8979d0c52aa88de15096b181b119041901b18796c80fd74a59b2b602b6016d86326d328f
ac0b318331bf31bf01bf81e9bf0cbf
88575b9b742ad1c68de186e1c850c850c850865096c850e1e70487045e8ca7912e672e85
2e8cac33473101318158bf02bf82e9bfe981e9bf0abf
8b3f799835c5742a8bd1a8dbc683c68dc68d818dc601c68cdbd1ca40a15da66697274711
31863158bf31bf31bf82bf4ce985e9bfe9bfe9bf0abf
8bc76957dab8359bc5a1748a2a052a018a01748b029ba6665b279447ec311ebf83bf581e
bf82bf4cbf02bf82e9bfe981e9bf0abf
881e75693f57795bb8d082d068350135029b0135013088b8985b7608b40d751e811ebf83
bf1e75bf81bf4c814cbf05bf81e9bf0bbf
83e9e52fc782c7693f823f5779817976027681da760276827957b482b4c7750175822fe5
bf82bf4cbf01bf814cbf81bfe981e9bf01bf01e90dbf

%
% Compression made this file 26.36% of the uncompressed size.
%


showpage

% stop using temporary dictionary
end

% restore original state
origstate restore

%%Trailer

%%EndDocument
 @endspecial 298 w Fg(By)66 b(def)-7 b(ault)66 b(is)g
(sesc_bench.xxxxxx)4649 2528 y @beginspecial 276 @llx
376 @lly 336 @urx 416 @ury 113 @rwi @setspecial
%%BeginDocument: green-bullet-on-white.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/fred/TeX/STYLES/Prosper/img/green-bullet-on-white.ps
%%Creator: XV Version 3.10a+FLmask  Rev: 12/29/94  -  by John Bradley
%%BoundingBox: 276 376 336 416
%%Pages: 1
%%DocumentFonts:
%%EndComments
%%EndProlog

%%Page: 1 1

% remember original state
/origstate save def

% build a temporary dictionary
20 dict begin

% define space for color conversions
/grays 60 string def  % space for gray scale line
/npixls 0 def
/rgbindx 0 def

% lower left corner
276 376 translate

% size of image (on paper, in 1/72inch coords)
59.97600 40.03200 scale

% define 'colorimage' if it isn't defined
%   ('colortogray' and 'mergeprocs' come from xwd2ps
%     via xgrab)
/colorimage where   % do we know about 'colorimage'?
  { pop }           % yes: pop off the 'dict' returned
  {                 % no:  define one
    /colortogray {  % define an RGB->I function
      /rgbdata exch store    % call input 'rgbdata'
      rgbdata length 3 idiv
      /npixls exch store
      /rgbindx 0 store
      0 1 npixls 1 sub {
        grays exch
        rgbdata rgbindx       get 20 mul    % Red
        rgbdata rgbindx 1 add get 32 mul    % Green
        rgbdata rgbindx 2 add get 12 mul    % Blue
        add add 64 idiv      % I = .5G + .31R + .18B
        put
        /rgbindx rgbindx 3 add store
      } for
      grays 0 npixls getinterval
    } bind def

    % Utility procedure for colorimage operator.
    % This procedure takes two procedures off the
    % stack and merges them into a single procedure.

    /mergeprocs { % def
      dup length
      3 -1 roll
      dup
      length
      dup
      5 1 roll
      3 -1 roll
      add
      array cvx
      dup
      3 -1 roll
      0 exch
      putinterval
      dup
      4 2 roll
      putinterval
    } bind def

    /colorimage { % def
      pop pop     % remove 'false 3' operands
      {colortogray} mergeprocs
      image
    } bind def
  } ifelse          % end of 'false' case



% define the colormap
/cmap 723 string def


% load up the colormap
currentfile cmap readhexstring
041808 049008 8c948c 045204 4c544c 04c804 84e284 449644 c4cbc4 0c380e 
04ac07 cce6cc 345e2c e4e7e4 046604 2c3a2c 347234 e4fee2 048208 64cc60 
34922c 24b224 04e404 044604 647264 242623 049f07 8cae8c 04bc06 24c61c 
f4f8f3 1c541c 04d804 1c621c 1c7220 0c280d 14910f 045e04 047c04 ccdcd0 
14ac18 1c481c 747473 04d105 0c6c0b 24852a 1c381c f4f1f3 acafac f4fef5 
0c310c acc6ac 049708 a4a4a3 3c4a44 148314 144812 9cea94 04b405 149e14 
1cbc1c 044004 e4fef4 dcdddd 748274 5c5959 4cba54 145b11 145413 147412 
c4fec4 e4f1e7 146411 088a0a 243028 09c207 fcf8f3 147c13 14c80e acceac 
3c3939 04f405 044e07 07a608 14d00f 0c1f10 0c900b d4d3d4 ecfee3 1c291d 
0c6e14 bcbfbd d4f6d4 909a94 4c5a50 0cac08 24ba24 547e54 0cbc0a 0c5c16 
0c7c0b fcf1fb acb8ac 1c311c aca7a9 e2e2e2 a4e2a4 0cc80a 6c9a6c 143715 
0c650a 0c840b 07de06 14970c 0c980a 0cb40a 848583 ecf0f0 c3c6c3 0c540d 
0c740c cccccc 74ce6c 30a02c 04ec05 54aa5c 6cb66c 9cfa9c 2c862c 5c926c 
6ca674 b4deac 9cda9c 34aa2c 6c7e6c acfeac 448244 34d22c 7d7d7c 6c6d6c 
445644 4c4d4c 1c7a19 1c3e1c 3c3f3c 2c422c 7c9a84 54c254 dceadc 144014 
343231 bccebc bcbabc 447244 6c6664 9c9d9c 7caa7c 349a38 6c7a74 84b69c 
1c4e18 898a89 ccfadc 1c6c2c b8e2c0 1c8a24 a1aaa1 3c4e3c 5f5e5c d8fed8 
24be24 78d670 688668 148a14 14a618 145624 0c480e 2c292b 142916 1c921c 
d4dad9 243828 143017 b4d2bc b4b7b5 1c961c 8c868c 247e24 144e13 04fa04 
246224 fcfefc 0c4e0c ace2b4 3caa3c 244e24 0c180c 949394 545454 ece9ec 
343634 2cb127 6c736c 0ca00c 0cda08 0c5c0b 0ccf06 146a0c b4b2b4 646464 
b4c2b4 0c3f0c ecfdf9 e4dedc ccfdcc 2c2f2b 142214 146b16 c4c2c2 545b54 
2cb62c 74ba74 346634 b4fcb0 244224 444242 246a24 e4feec 0ce204 f4f9fc 
f4eefc 444744 54b654 fcf9fc 0c9114 dcd6d4 ecfeec 0c7b14 0cc614 0c6314 
0c8414 
pop pop   % lose return values from readhexstring


% rlecmapimage expects to have 'w h bits matrix' on stack
/rlecmapimage {
  /buffer 1 string def
  /rgbval 3 string def
  /block  384 string def

  % proc to read a block from file, and return RGB data
  { currentfile buffer readhexstring pop
    /bcount exch 0 get store
    bcount 128 ge
    {  % it's a non-run block
      0 1 bcount 128 sub
      { currentfile buffer readhexstring pop pop

        % look up value in color map
        /rgbval cmap buffer 0 get 3 mul 3 getinterval store

        % and put it in position i*3 in block
        block exch 3 mul rgbval putinterval
      } for
      block  0  bcount 127 sub 3 mul  getinterval
    }

    { % else it's a run block
      currentfile buffer readhexstring pop pop

      % look up value in colormap
      /rgbval cmap buffer 0 get 3 mul 3 getinterval store

      0 1 bcount { block exch 3 mul rgbval putinterval } for

      block 0 bcount 1 add 3 mul getinterval
    } ifelse
  } % end of proc
  false 3 colorimage
} bind def


60 40 8			% dimensions of data
[60 0 0 -40 0 40]		% mapping matrix
rlecmapimage

10bf8131bf05bf03e98165e902e9046587bf3158ec31bfe9658265e9bf09bf
10bf8131bf04bf81e9bf01bf02e98265bfe982e965e901e981bf318131ec82ecbfe982e9
65bf0abf
12bf82751ebf83bf1ebf318231ec3102318111318131bf81bfe901e981bf318131bf01bf
01e90bbf
0fbf02e901bf023101ec021101a981d6a981a9118111318131bf14bf
0fbf8165e901e988e5bfd4ecd66add07808c80149dc2137f46a911d431bfe981e9bf0fbf

0fbf01e982bfe9318331a49ce28fe2454d37562456dc71567bab87a9d4bf81bfe981e9bf
81bf318131bf0abf
10bf8ac775bf311bde43224d37568656cb535f1a733c893cae8506a91131bfe9bf01bf81
58bf0abf
0fbf911ebf31b761a0442245ed56721a530a3a4e3a813a4e864e73c94246e3bf10bf
07bf81e9bf82bfe9bf92bf1ebf31ec4f0c38e2ef8e4d49561a530a3a6283624b052b8a2b
ce4e60c2dfe331bf4cbf0cbf
0abf81e9bf82bfe9ec8eec83de1f21778e786f01341a0a3a1c851c4b052b20168b162054
aa93df11312fe965bf0abf
0ebf8d3111883d77cdcf78646f0134530a810a1c911c4ece20167c517c16542893a9ec31
e965bf0abf
08bf01e999bfe91ebf316cc07743cd45786f49561a530a3a624b6b2b707c510151877c70
4edcaba9bfe981e9bf0abf
0bbf01e985bf27d34352cf90cf0e4d2656011a530a1c62ee2b20167c5102518816cc1db9
d611bfe9bf0abf
07bf81e9bf01bf90e9bf4c86d3445277d92c786f49721a0a3a853a4b0520167c827c51bd
88bd5116e44b157a11bf0cbf
0dbf8d3f0fc33d4403cfbb0e3756011a0a860a624b2b20167c817c5102510116854b897b
a911bf0bbf
08bf82e9e5bf97bf75dab209bcc021ef254d2649561a533a1c4b052b70167c037c811620
85203a853911bf0bbf
0bbf0131869eb6d3b0bc7748884845646f561acb0a7382734b2b812b1683167c16cc01cc
012b844b2813d4bf0bbf
0abf0231955e236db0c04463cf45646f5634cb533a73624b2b2016821670548854ce2b20
4b28e831bf0bbf
0abf023183b5b6d3b089b044436e45786f49341a871a0a733a626b2b200120896b4e6b05
2b1c5f9decbf0bbf
09bf8131bf97bf31d82e09d3b044cd485a786f1201cb1a530a73621c052b852b054e4b1c
0585053a282d58bf0bbf
0bbf9431bf556709b03844cd482c7864125634cb1a5f0a7382734b0501050162011c854b
0aae2d58bf0bbf
0bbf0131934a236dd3b0bc7743485a786f1201341acb535f3a813a1c011c0173023a8453
3b1458bf0bbf
0bbf8431bf0455098309d338778277ef2c852c266f1201348134cb83cb530a3a013a810a
5f815f0a850a1ab37d58bf0bbf
08bf81e9bf93bf31bf18d83209d338c044cd6e0e2c64126f0172837271cb5382530a5383
53ae531a851a01a57e58bf0bbf
0bbf01e5837600230901098138c082c0482c862c7864126f49568156728272341a811a72
0272864912bb841131bf0abf
03bf94e9bfe9bfe9bf1ebf1ebf275923b632099538c044ef81ef7881786481646f816fad
84adea01ea560156882449ad2da3115831bf0abf
04bf02e992654ce61e75bf0d185523b66d0995bcc043cd2c812c7881786483646f64f001
f08b6f496f49642d6382e3314cbf0abf
01bf85e9e5e9652fc784c7693fc7698a69c7d2b200232eb60929bc84bc6343ef2c862c78
45784d78ed82ed6f6489644d45a3afa2114c31bf0abf
01e58175c783c769d5eb8ceb797679dab87908db67c4b66d876d9538b0447743ef84ef6e
2c78458e455a457864788ecfbe9fd4315831bf0abf
88e5750d3f5779da98d083d0689b3501358d5d0236c45567b6320995b04477cd92cdef6e
2c6e5ad95acf782c4517813e31bf2fbf0bbf
887569575bd0689bc5ba83ba8a2a8a878aca2a74db5955b284b23209d3b081b077017701
cd016e02ef876e2c6e4810a4d4bf01bf814cbf0abf
873f79b835c5ba2a9a829aa8410141868de1d104c690d881d85583552e6d958b9538b0c0
77cd03cd6377afcd84cd4321c1d483d4e9654c814cbf0abf
88575b9b742ad1418de181e15081509603968450c8d759d881d8b283b2326d0981099585
9538bcb0381f871f95c3995ca931bf81bfe981e9bf0bbf
8779b8c58ad1c6e750855096d7b119b104b184d7b119d855845523b2b66d016d83952995
2987296de09211d431bf01bf01e90cbf
8979d0c52aa88de15096b181b119041901b18796c80fd74a59b2b602b6016d86326d328f
ac0b318331bf31bf01bf81e9bf0cbf
88575b9b742ad1c68de186e1c850c850c850865096c850e1e70487045e8ca7912e672e85
2e8cac33473101318158bf02bf82e9bfe981e9bf0abf
8b3f799835c5742a8bd1a8dbc683c68dc68d818dc601c68cdbd1ca40a15da66697274711
31863158bf31bf31bf82bf4ce985e9bfe9bfe9bf0abf
8bc76957dab8359bc5a1748a2a052a018a01748b029ba6665b279447ec311ebf83bf581e
bf82bf4cbf02bf82e9bfe981e9bf0abf
881e75693f57795bb8d082d068350135029b0135013088b8985b7608b40d751e811ebf83
bf1e75bf81bf4c814cbf05bf81e9bf0bbf
83e9e52fc782c7693f823f5779817976027681da760276827957b482b4c7750175822fe5
bf82bf4cbf01bf814cbf81bfe981e9bf01bf01e90dbf

%
% Compression made this file 26.36% of the uncompressed size.
%


showpage

% stop using temporary dictionary
end

% restore original state
origstate restore

%%Trailer

%%EndDocument
 @endspecial 298 w(Includes)f(the)i(input)g(con\002gur)n(ation)f
(\002le)4649 2902 y @beginspecial 276 @llx 376 @lly 336
@urx 416 @ury 113 @rwi @setspecial
%%BeginDocument: green-bullet-on-white.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/fred/TeX/STYLES/Prosper/img/green-bullet-on-white.ps
%%Creator: XV Version 3.10a+FLmask  Rev: 12/29/94  -  by John Bradley
%%BoundingBox: 276 376 336 416
%%Pages: 1
%%DocumentFonts:
%%EndComments
%%EndProlog

%%Page: 1 1

% remember original state
/origstate save def

% build a temporary dictionary
20 dict begin

% define space for color conversions
/grays 60 string def  % space for gray scale line
/npixls 0 def
/rgbindx 0 def

% lower left corner
276 376 translate

% size of image (on paper, in 1/72inch coords)
59.97600 40.03200 scale

% define 'colorimage' if it isn't defined
%   ('colortogray' and 'mergeprocs' come from xwd2ps
%     via xgrab)
/colorimage where   % do we know about 'colorimage'?
  { pop }           % yes: pop off the 'dict' returned
  {                 % no:  define one
    /colortogray {  % define an RGB->I function
      /rgbdata exch store    % call input 'rgbdata'
      rgbdata length 3 idiv
      /npixls exch store
      /rgbindx 0 store
      0 1 npixls 1 sub {
        grays exch
        rgbdata rgbindx       get 20 mul    % Red
        rgbdata rgbindx 1 add get 32 mul    % Green
        rgbdata rgbindx 2 add get 12 mul    % Blue
        add add 64 idiv      % I = .5G + .31R + .18B
        put
        /rgbindx rgbindx 3 add store
      } for
      grays 0 npixls getinterval
    } bind def

    % Utility procedure for colorimage operator.
    % This procedure takes two procedures off the
    % stack and merges them into a single procedure.

    /mergeprocs { % def
      dup length
      3 -1 roll
      dup
      length
      dup
      5 1 roll
      3 -1 roll
      add
      array cvx
      dup
      3 -1 roll
      0 exch
      putinterval
      dup
      4 2 roll
      putinterval
    } bind def

    /colorimage { % def
      pop pop     % remove 'false 3' operands
      {colortogray} mergeprocs
      image
    } bind def
  } ifelse          % end of 'false' case



% define the colormap
/cmap 723 string def


% load up the colormap
currentfile cmap readhexstring
041808 049008 8c948c 045204 4c544c 04c804 84e284 449644 c4cbc4 0c380e 
04ac07 cce6cc 345e2c e4e7e4 046604 2c3a2c 347234 e4fee2 048208 64cc60 
34922c 24b224 04e404 044604 647264 242623 049f07 8cae8c 04bc06 24c61c 
f4f8f3 1c541c 04d804 1c621c 1c7220 0c280d 14910f 045e04 047c04 ccdcd0 
14ac18 1c481c 747473 04d105 0c6c0b 24852a 1c381c f4f1f3 acafac f4fef5 
0c310c acc6ac 049708 a4a4a3 3c4a44 148314 144812 9cea94 04b405 149e14 
1cbc1c 044004 e4fef4 dcdddd 748274 5c5959 4cba54 145b11 145413 147412 
c4fec4 e4f1e7 146411 088a0a 243028 09c207 fcf8f3 147c13 14c80e acceac 
3c3939 04f405 044e07 07a608 14d00f 0c1f10 0c900b d4d3d4 ecfee3 1c291d 
0c6e14 bcbfbd d4f6d4 909a94 4c5a50 0cac08 24ba24 547e54 0cbc0a 0c5c16 
0c7c0b fcf1fb acb8ac 1c311c aca7a9 e2e2e2 a4e2a4 0cc80a 6c9a6c 143715 
0c650a 0c840b 07de06 14970c 0c980a 0cb40a 848583 ecf0f0 c3c6c3 0c540d 
0c740c cccccc 74ce6c 30a02c 04ec05 54aa5c 6cb66c 9cfa9c 2c862c 5c926c 
6ca674 b4deac 9cda9c 34aa2c 6c7e6c acfeac 448244 34d22c 7d7d7c 6c6d6c 
445644 4c4d4c 1c7a19 1c3e1c 3c3f3c 2c422c 7c9a84 54c254 dceadc 144014 
343231 bccebc bcbabc 447244 6c6664 9c9d9c 7caa7c 349a38 6c7a74 84b69c 
1c4e18 898a89 ccfadc 1c6c2c b8e2c0 1c8a24 a1aaa1 3c4e3c 5f5e5c d8fed8 
24be24 78d670 688668 148a14 14a618 145624 0c480e 2c292b 142916 1c921c 
d4dad9 243828 143017 b4d2bc b4b7b5 1c961c 8c868c 247e24 144e13 04fa04 
246224 fcfefc 0c4e0c ace2b4 3caa3c 244e24 0c180c 949394 545454 ece9ec 
343634 2cb127 6c736c 0ca00c 0cda08 0c5c0b 0ccf06 146a0c b4b2b4 646464 
b4c2b4 0c3f0c ecfdf9 e4dedc ccfdcc 2c2f2b 142214 146b16 c4c2c2 545b54 
2cb62c 74ba74 346634 b4fcb0 244224 444242 246a24 e4feec 0ce204 f4f9fc 
f4eefc 444744 54b654 fcf9fc 0c9114 dcd6d4 ecfeec 0c7b14 0cc614 0c6314 
0c8414 
pop pop   % lose return values from readhexstring


% rlecmapimage expects to have 'w h bits matrix' on stack
/rlecmapimage {
  /buffer 1 string def
  /rgbval 3 string def
  /block  384 string def

  % proc to read a block from file, and return RGB data
  { currentfile buffer readhexstring pop
    /bcount exch 0 get store
    bcount 128 ge
    {  % it's a non-run block
      0 1 bcount 128 sub
      { currentfile buffer readhexstring pop pop

        % look up value in color map
        /rgbval cmap buffer 0 get 3 mul 3 getinterval store

        % and put it in position i*3 in block
        block exch 3 mul rgbval putinterval
      } for
      block  0  bcount 127 sub 3 mul  getinterval
    }

    { % else it's a run block
      currentfile buffer readhexstring pop pop

      % look up value in colormap
      /rgbval cmap buffer 0 get 3 mul 3 getinterval store

      0 1 bcount { block exch 3 mul rgbval putinterval } for

      block 0 bcount 1 add 3 mul getinterval
    } ifelse
  } % end of proc
  false 3 colorimage
} bind def


60 40 8			% dimensions of data
[60 0 0 -40 0 40]		% mapping matrix
rlecmapimage

10bf8131bf05bf03e98165e902e9046587bf3158ec31bfe9658265e9bf09bf
10bf8131bf04bf81e9bf01bf02e98265bfe982e965e901e981bf318131ec82ecbfe982e9
65bf0abf
12bf82751ebf83bf1ebf318231ec3102318111318131bf81bfe901e981bf318131bf01bf
01e90bbf
0fbf02e901bf023101ec021101a981d6a981a9118111318131bf14bf
0fbf8165e901e988e5bfd4ecd66add07808c80149dc2137f46a911d431bfe981e9bf0fbf

0fbf01e982bfe9318331a49ce28fe2454d37562456dc71567bab87a9d4bf81bfe981e9bf
81bf318131bf0abf
10bf8ac775bf311bde43224d37568656cb535f1a733c893cae8506a91131bfe9bf01bf81
58bf0abf
0fbf911ebf31b761a0442245ed56721a530a3a4e3a813a4e864e73c94246e3bf10bf
07bf81e9bf82bfe9bf92bf1ebf31ec4f0c38e2ef8e4d49561a530a3a6283624b052b8a2b
ce4e60c2dfe331bf4cbf0cbf
0abf81e9bf82bfe9ec8eec83de1f21778e786f01341a0a3a1c851c4b052b20168b162054
aa93df11312fe965bf0abf
0ebf8d3111883d77cdcf78646f0134530a810a1c911c4ece20167c517c16542893a9ec31
e965bf0abf
08bf01e999bfe91ebf316cc07743cd45786f49561a530a3a624b6b2b707c510151877c70
4edcaba9bfe981e9bf0abf
0bbf01e985bf27d34352cf90cf0e4d2656011a530a1c62ee2b20167c5102518816cc1db9
d611bfe9bf0abf
07bf81e9bf01bf90e9bf4c86d3445277d92c786f49721a0a3a853a4b0520167c827c51bd
88bd5116e44b157a11bf0cbf
0dbf8d3f0fc33d4403cfbb0e3756011a0a860a624b2b20167c817c5102510116854b897b
a911bf0bbf
08bf82e9e5bf97bf75dab209bcc021ef254d2649561a533a1c4b052b70167c037c811620
85203a853911bf0bbf
0bbf0131869eb6d3b0bc7748884845646f561acb0a7382734b2b812b1683167c16cc01cc
012b844b2813d4bf0bbf
0abf0231955e236db0c04463cf45646f5634cb533a73624b2b2016821670548854ce2b20
4b28e831bf0bbf
0abf023183b5b6d3b089b044436e45786f49341a871a0a733a626b2b200120896b4e6b05
2b1c5f9decbf0bbf
09bf8131bf97bf31d82e09d3b044cd485a786f1201cb1a530a73621c052b852b054e4b1c
0585053a282d58bf0bbf
0bbf9431bf556709b03844cd482c7864125634cb1a5f0a7382734b0501050162011c854b
0aae2d58bf0bbf
0bbf0131934a236dd3b0bc7743485a786f1201341acb535f3a813a1c011c0173023a8453
3b1458bf0bbf
0bbf8431bf0455098309d338778277ef2c852c266f1201348134cb83cb530a3a013a810a
5f815f0a850a1ab37d58bf0bbf
08bf81e9bf93bf31bf18d83209d338c044cd6e0e2c64126f0172837271cb5382530a5383
53ae531a851a01a57e58bf0bbf
0bbf01e5837600230901098138c082c0482c862c7864126f49568156728272341a811a72
0272864912bb841131bf0abf
03bf94e9bfe9bfe9bf1ebf1ebf275923b632099538c044ef81ef7881786481646f816fad
84adea01ea560156882449ad2da3115831bf0abf
04bf02e992654ce61e75bf0d185523b66d0995bcc043cd2c812c7881786483646f64f001
f08b6f496f49642d6382e3314cbf0abf
01bf85e9e5e9652fc784c7693fc7698a69c7d2b200232eb60929bc84bc6343ef2c862c78
45784d78ed82ed6f6489644d45a3afa2114c31bf0abf
01e58175c783c769d5eb8ceb797679dab87908db67c4b66d876d9538b0447743ef84ef6e
2c78458e455a457864788ecfbe9fd4315831bf0abf
88e5750d3f5779da98d083d0689b3501358d5d0236c45567b6320995b04477cd92cdef6e
2c6e5ad95acf782c4517813e31bf2fbf0bbf
887569575bd0689bc5ba83ba8a2a8a878aca2a74db5955b284b23209d3b081b077017701
cd016e02ef876e2c6e4810a4d4bf01bf814cbf0abf
873f79b835c5ba2a9a829aa8410141868de1d104c690d881d85583552e6d958b9538b0c0
77cd03cd6377afcd84cd4321c1d483d4e9654c814cbf0abf
88575b9b742ad1418de181e15081509603968450c8d759d881d8b283b2326d0981099585
9538bcb0381f871f95c3995ca931bf81bfe981e9bf0bbf
8779b8c58ad1c6e750855096d7b119b104b184d7b119d855845523b2b66d016d83952995
2987296de09211d431bf01bf01e90cbf
8979d0c52aa88de15096b181b119041901b18796c80fd74a59b2b602b6016d86326d328f
ac0b318331bf31bf01bf81e9bf0cbf
88575b9b742ad1c68de186e1c850c850c850865096c850e1e70487045e8ca7912e672e85
2e8cac33473101318158bf02bf82e9bfe981e9bf0abf
8b3f799835c5742a8bd1a8dbc683c68dc68d818dc601c68cdbd1ca40a15da66697274711
31863158bf31bf31bf82bf4ce985e9bfe9bfe9bf0abf
8bc76957dab8359bc5a1748a2a052a018a01748b029ba6665b279447ec311ebf83bf581e
bf82bf4cbf02bf82e9bfe981e9bf0abf
881e75693f57795bb8d082d068350135029b0135013088b8985b7608b40d751e811ebf83
bf1e75bf81bf4c814cbf05bf81e9bf0bbf
83e9e52fc782c7693f823f5779817976027681da760276827957b482b4c7750175822fe5
bf82bf4cbf01bf814cbf81bfe981e9bf01bf01e90dbf

%
% Compression made this file 26.36% of the uncompressed size.
%


showpage

% stop using temporary dictionary
end

% restore original state
origstate restore

%%Trailer

%%EndDocument
 @endspecial 298 w(Homogenous)g(w)l(a)-7 b(y)67 b(to)g(repor)10
b(t)67 b(data)g(\(GStats)l(.h\))5089 3267 y Fd(KEY:field1=val)q(ue)q
(1:f)q(ie)q(ld)q(2=)q(va)q(lu)q(e2)q(:.)q(..)4649 3632
y @beginspecial 276 @llx 376 @lly 336 @urx 416 @ury 113
@rwi @setspecial
%%BeginDocument: green-bullet-on-white.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/fred/TeX/STYLES/Prosper/img/green-bullet-on-white.ps
%%Creator: XV Version 3.10a+FLmask  Rev: 12/29/94  -  by John Bradley
%%BoundingBox: 276 376 336 416
%%Pages: 1
%%DocumentFonts:
%%EndComments
%%EndProlog

%%Page: 1 1

% remember original state
/origstate save def

% build a temporary dictionary
20 dict begin

% define space for color conversions
/grays 60 string def  % space for gray scale line
/npixls 0 def
/rgbindx 0 def

% lower left corner
276 376 translate

% size of image (on paper, in 1/72inch coords)
59.97600 40.03200 scale

% define 'colorimage' if it isn't defined
%   ('colortogray' and 'mergeprocs' come from xwd2ps
%     via xgrab)
/colorimage where   % do we know about 'colorimage'?
  { pop }           % yes: pop off the 'dict' returned
  {                 % no:  define one
    /colortogray {  % define an RGB->I function
      /rgbdata exch store    % call input 'rgbdata'
      rgbdata length 3 idiv
      /npixls exch store
      /rgbindx 0 store
      0 1 npixls 1 sub {
        grays exch
        rgbdata rgbindx       get 20 mul    % Red
        rgbdata rgbindx 1 add get 32 mul    % Green
        rgbdata rgbindx 2 add get 12 mul    % Blue
        add add 64 idiv      % I = .5G + .31R + .18B
        put
        /rgbindx rgbindx 3 add store
      } for
      grays 0 npixls getinterval
    } bind def

    % Utility procedure for colorimage operator.
    % This procedure takes two procedures off the
    % stack and merges them into a single procedure.

    /mergeprocs { % def
      dup length
      3 -1 roll
      dup
      length
      dup
      5 1 roll
      3 -1 roll
      add
      array cvx
      dup
      3 -1 roll
      0 exch
      putinterval
      dup
      4 2 roll
      putinterval
    } bind def

    /colorimage { % def
      pop pop     % remove 'false 3' operands
      {colortogray} mergeprocs
      image
    } bind def
  } ifelse          % end of 'false' case



% define the colormap
/cmap 723 string def


% load up the colormap
currentfile cmap readhexstring
041808 049008 8c948c 045204 4c544c 04c804 84e284 449644 c4cbc4 0c380e 
04ac07 cce6cc 345e2c e4e7e4 046604 2c3a2c 347234 e4fee2 048208 64cc60 
34922c 24b224 04e404 044604 647264 242623 049f07 8cae8c 04bc06 24c61c 
f4f8f3 1c541c 04d804 1c621c 1c7220 0c280d 14910f 045e04 047c04 ccdcd0 
14ac18 1c481c 747473 04d105 0c6c0b 24852a 1c381c f4f1f3 acafac f4fef5 
0c310c acc6ac 049708 a4a4a3 3c4a44 148314 144812 9cea94 04b405 149e14 
1cbc1c 044004 e4fef4 dcdddd 748274 5c5959 4cba54 145b11 145413 147412 
c4fec4 e4f1e7 146411 088a0a 243028 09c207 fcf8f3 147c13 14c80e acceac 
3c3939 04f405 044e07 07a608 14d00f 0c1f10 0c900b d4d3d4 ecfee3 1c291d 
0c6e14 bcbfbd d4f6d4 909a94 4c5a50 0cac08 24ba24 547e54 0cbc0a 0c5c16 
0c7c0b fcf1fb acb8ac 1c311c aca7a9 e2e2e2 a4e2a4 0cc80a 6c9a6c 143715 
0c650a 0c840b 07de06 14970c 0c980a 0cb40a 848583 ecf0f0 c3c6c3 0c540d 
0c740c cccccc 74ce6c 30a02c 04ec05 54aa5c 6cb66c 9cfa9c 2c862c 5c926c 
6ca674 b4deac 9cda9c 34aa2c 6c7e6c acfeac 448244 34d22c 7d7d7c 6c6d6c 
445644 4c4d4c 1c7a19 1c3e1c 3c3f3c 2c422c 7c9a84 54c254 dceadc 144014 
343231 bccebc bcbabc 447244 6c6664 9c9d9c 7caa7c 349a38 6c7a74 84b69c 
1c4e18 898a89 ccfadc 1c6c2c b8e2c0 1c8a24 a1aaa1 3c4e3c 5f5e5c d8fed8 
24be24 78d670 688668 148a14 14a618 145624 0c480e 2c292b 142916 1c921c 
d4dad9 243828 143017 b4d2bc b4b7b5 1c961c 8c868c 247e24 144e13 04fa04 
246224 fcfefc 0c4e0c ace2b4 3caa3c 244e24 0c180c 949394 545454 ece9ec 
343634 2cb127 6c736c 0ca00c 0cda08 0c5c0b 0ccf06 146a0c b4b2b4 646464 
b4c2b4 0c3f0c ecfdf9 e4dedc ccfdcc 2c2f2b 142214 146b16 c4c2c2 545b54 
2cb62c 74ba74 346634 b4fcb0 244224 444242 246a24 e4feec 0ce204 f4f9fc 
f4eefc 444744 54b654 fcf9fc 0c9114 dcd6d4 ecfeec 0c7b14 0cc614 0c6314 
0c8414 
pop pop   % lose return values from readhexstring


% rlecmapimage expects to have 'w h bits matrix' on stack
/rlecmapimage {
  /buffer 1 string def
  /rgbval 3 string def
  /block  384 string def

  % proc to read a block from file, and return RGB data
  { currentfile buffer readhexstring pop
    /bcount exch 0 get store
    bcount 128 ge
    {  % it's a non-run block
      0 1 bcount 128 sub
      { currentfile buffer readhexstring pop pop

        % look up value in color map
        /rgbval cmap buffer 0 get 3 mul 3 getinterval store

        % and put it in position i*3 in block
        block exch 3 mul rgbval putinterval
      } for
      block  0  bcount 127 sub 3 mul  getinterval
    }

    { % else it's a run block
      currentfile buffer readhexstring pop pop

      % look up value in colormap
      /rgbval cmap buffer 0 get 3 mul 3 getinterval store

      0 1 bcount { block exch 3 mul rgbval putinterval } for

      block 0 bcount 1 add 3 mul getinterval
    } ifelse
  } % end of proc
  false 3 colorimage
} bind def


60 40 8			% dimensions of data
[60 0 0 -40 0 40]		% mapping matrix
rlecmapimage

10bf8131bf05bf03e98165e902e9046587bf3158ec31bfe9658265e9bf09bf
10bf8131bf04bf81e9bf01bf02e98265bfe982e965e901e981bf318131ec82ecbfe982e9
65bf0abf
12bf82751ebf83bf1ebf318231ec3102318111318131bf81bfe901e981bf318131bf01bf
01e90bbf
0fbf02e901bf023101ec021101a981d6a981a9118111318131bf14bf
0fbf8165e901e988e5bfd4ecd66add07808c80149dc2137f46a911d431bfe981e9bf0fbf

0fbf01e982bfe9318331a49ce28fe2454d37562456dc71567bab87a9d4bf81bfe981e9bf
81bf318131bf0abf
10bf8ac775bf311bde43224d37568656cb535f1a733c893cae8506a91131bfe9bf01bf81
58bf0abf
0fbf911ebf31b761a0442245ed56721a530a3a4e3a813a4e864e73c94246e3bf10bf
07bf81e9bf82bfe9bf92bf1ebf31ec4f0c38e2ef8e4d49561a530a3a6283624b052b8a2b
ce4e60c2dfe331bf4cbf0cbf
0abf81e9bf82bfe9ec8eec83de1f21778e786f01341a0a3a1c851c4b052b20168b162054
aa93df11312fe965bf0abf
0ebf8d3111883d77cdcf78646f0134530a810a1c911c4ece20167c517c16542893a9ec31
e965bf0abf
08bf01e999bfe91ebf316cc07743cd45786f49561a530a3a624b6b2b707c510151877c70
4edcaba9bfe981e9bf0abf
0bbf01e985bf27d34352cf90cf0e4d2656011a530a1c62ee2b20167c5102518816cc1db9
d611bfe9bf0abf
07bf81e9bf01bf90e9bf4c86d3445277d92c786f49721a0a3a853a4b0520167c827c51bd
88bd5116e44b157a11bf0cbf
0dbf8d3f0fc33d4403cfbb0e3756011a0a860a624b2b20167c817c5102510116854b897b
a911bf0bbf
08bf82e9e5bf97bf75dab209bcc021ef254d2649561a533a1c4b052b70167c037c811620
85203a853911bf0bbf
0bbf0131869eb6d3b0bc7748884845646f561acb0a7382734b2b812b1683167c16cc01cc
012b844b2813d4bf0bbf
0abf0231955e236db0c04463cf45646f5634cb533a73624b2b2016821670548854ce2b20
4b28e831bf0bbf
0abf023183b5b6d3b089b044436e45786f49341a871a0a733a626b2b200120896b4e6b05
2b1c5f9decbf0bbf
09bf8131bf97bf31d82e09d3b044cd485a786f1201cb1a530a73621c052b852b054e4b1c
0585053a282d58bf0bbf
0bbf9431bf556709b03844cd482c7864125634cb1a5f0a7382734b0501050162011c854b
0aae2d58bf0bbf
0bbf0131934a236dd3b0bc7743485a786f1201341acb535f3a813a1c011c0173023a8453
3b1458bf0bbf
0bbf8431bf0455098309d338778277ef2c852c266f1201348134cb83cb530a3a013a810a
5f815f0a850a1ab37d58bf0bbf
08bf81e9bf93bf31bf18d83209d338c044cd6e0e2c64126f0172837271cb5382530a5383
53ae531a851a01a57e58bf0bbf
0bbf01e5837600230901098138c082c0482c862c7864126f49568156728272341a811a72
0272864912bb841131bf0abf
03bf94e9bfe9bfe9bf1ebf1ebf275923b632099538c044ef81ef7881786481646f816fad
84adea01ea560156882449ad2da3115831bf0abf
04bf02e992654ce61e75bf0d185523b66d0995bcc043cd2c812c7881786483646f64f001
f08b6f496f49642d6382e3314cbf0abf
01bf85e9e5e9652fc784c7693fc7698a69c7d2b200232eb60929bc84bc6343ef2c862c78
45784d78ed82ed6f6489644d45a3afa2114c31bf0abf
01e58175c783c769d5eb8ceb797679dab87908db67c4b66d876d9538b0447743ef84ef6e
2c78458e455a457864788ecfbe9fd4315831bf0abf
88e5750d3f5779da98d083d0689b3501358d5d0236c45567b6320995b04477cd92cdef6e
2c6e5ad95acf782c4517813e31bf2fbf0bbf
887569575bd0689bc5ba83ba8a2a8a878aca2a74db5955b284b23209d3b081b077017701
cd016e02ef876e2c6e4810a4d4bf01bf814cbf0abf
873f79b835c5ba2a9a829aa8410141868de1d104c690d881d85583552e6d958b9538b0c0
77cd03cd6377afcd84cd4321c1d483d4e9654c814cbf0abf
88575b9b742ad1418de181e15081509603968450c8d759d881d8b283b2326d0981099585
9538bcb0381f871f95c3995ca931bf81bfe981e9bf0bbf
8779b8c58ad1c6e750855096d7b119b104b184d7b119d855845523b2b66d016d83952995
2987296de09211d431bf01bf01e90cbf
8979d0c52aa88de15096b181b119041901b18796c80fd74a59b2b602b6016d86326d328f
ac0b318331bf31bf01bf81e9bf0cbf
88575b9b742ad1c68de186e1c850c850c850865096c850e1e70487045e8ca7912e672e85
2e8cac33473101318158bf02bf82e9bfe981e9bf0abf
8b3f799835c5742a8bd1a8dbc683c68dc68d818dc601c68cdbd1ca40a15da66697274711
31863158bf31bf31bf82bf4ce985e9bfe9bfe9bf0abf
8bc76957dab8359bc5a1748a2a052a018a01748b029ba6665b279447ec311ebf83bf581e
bf82bf4cbf02bf82e9bfe981e9bf0abf
881e75693f57795bb8d082d068350135029b0135013088b8985b7608b40d751e811ebf83
bf1e75bf81bf4c814cbf05bf81e9bf0bbf
83e9e52fc782c7693f823f5779817976027681da760276827957b482b4c7750175822fe5
bf82bf4cbf01bf814cbf81bfe981e9bf01bf01e90dbf

%
% Compression made this file 26.36% of the uncompressed size.
%


showpage

% stop using temporary dictionary
end

% restore original state
origstate restore

%%Trailer

%%EndDocument
 @endspecial 298 w Fg(Example:)4947 3926 y Fe(ProcessId\(0\):to)o(tal)o
(Ti)o(me)o(=35)o(81)o(002)o(88)o(:wa)o(it)o(Ti)o(me=)o(0:)o(spa)o(wn)o
(Tim)o(e=)o(0)4947 4109 y(Proc\(0\):clockTi)o(cks)o(=3)o(58)o(100)o(28)
o(9)4947 4292 y(BPred_RAS\(0\):nH)o(it=)543 b(13)4947
4475 y(BPred_RAS\(0\):nM)o(iss)o(=)452 b(0)4947 4658
y(cache\(0\):readHi)o(t=)635 b(6788685)10245 5222 y
 0 setgray
 10245
5222 a 4500 6000 a
 tx@Dict begin -90 Rot  end
 4500 6000 a eop
%%Page: 15 15
15 14 bop 4500 6000 a
 tx@Dict begin 90 Rot  end
 4500 6000 a 5981 1792 a @beginspecial
-168 @llx 371 @lly 782 @urx 421 @ury 2834 @rwi 283 @rhi
@setspecial
%%BeginDocument: barre-rico.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /ufs/goualard/TEMP/barre_hor.ps
%%Creator: XV Version 3.10a  Rev: 12/29/94 (PNG patch 1.2)  -  by John Bradley
%%BoundingBox: -168 371 782 421
%%Pages: 1
%%DocumentFonts:
%%EndComments
%%EndProlog

%%Page: 1 1

% remember original state
/origstate save def

% build a temporary dictionary
20 dict begin

% define space for color conversions
/grays 950 string def  % space for gray scale line
/npixls 0 def
/rgbindx 0 def

% lower left corner
-168 371 translate

% size of image (on paper, in 1/72inch coords)
949.96800 49.96800 scale

% define 'colorimage' if it isn't defined
%   ('colortogray' and 'mergeprocs' come from xwd2ps
%     via xgrab)
/colorimage where   % do we know about 'colorimage'?
  { pop }           % yes: pop off the 'dict' returned
  {                 % no:  define one
    /colortogray {  % define an RGB->I function
      /rgbdata exch store    % call input 'rgbdata'
      rgbdata length 3 idiv
      /npixls exch store
      /rgbindx 0 store
      0 1 npixls 1 sub {
        grays exch
        rgbdata rgbindx       get 20 mul    % Red
        rgbdata rgbindx 1 add get 32 mul    % Green
        rgbdata rgbindx 2 add get 12 mul    % Blue
        add add 64 idiv      % I = .5G + .31R + .18B
        put
        /rgbindx rgbindx 3 add store
      } for
      grays 0 npixls getinterval
    } bind def

    % Utility procedure for colorimage operator.
    % This procedure takes two procedures off the
    % stack and merges them into a single procedure.

    /mergeprocs { % def
      dup length
      3 -1 roll
      dup
      length
      dup
      5 1 roll
      3 -1 roll
      add
      array cvx
      dup
      3 -1 roll
      0 exch
      putinterval
      dup
      4 2 roll
      putinterval
    } bind def

    /colorimage { % def
      pop pop     % remove 'false 3' operands
      {colortogray} mergeprocs
      image
    } bind def
  } ifelse          % end of 'false' case



% define the colormap
/cmap 117 string def


% load up the colormap
currentfile cmap readhexstring
bcfe04 dcfe84 ccfe44 ecfec4 c4fe24 d4fe64 f4fee4 e4fea4 bcfe14 ccfe54 
f4fed4 c4fe34 d4fe74 fcfef4 ecfeb4 e4fe94 f4fecc fcfee4 ecfeac c4fe1c 
d4fe54 ccfe3c dcfe74 bcfe0c dcfe8c ccfe4c ecfecc c4fe2c d4fe6c e4feac 
bcfe1c f4fedc c4fe3c fcfefc ecfebc e4fe9c fcfeec d4fe5c dcfe7c 
pop pop   % lose return values from readhexstring


% rlecmapimage expects to have 'w h bits matrix' on stack
/rlecmapimage {
  /buffer 1 string def
  /rgbval 3 string def
  /block  384 string def

  % proc to read a block from file, and return RGB data
  { currentfile buffer readhexstring pop
    /bcount exch 0 get store
    bcount 128 ge
    {  % it's a non-run block
      0 1 bcount 128 sub
      { currentfile buffer readhexstring pop pop

        % look up value in color map
        /rgbval cmap buffer 0 get 3 mul 3 getinterval store

        % and put it in position i*3 in block
        block exch 3 mul rgbval putinterval
      } for
      block  0  bcount 127 sub 3 mul  getinterval
    }

    { % else it's a run block
      currentfile buffer readhexstring pop pop

      % look up value in colormap
      /rgbval cmap buffer 0 get 3 mul 3 getinterval store

      0 1 bcount { block exch 3 mul rgbval putinterval } for

      block 0 bcount 1 add 3 mul getinterval
    } ifelse
  } % end of proc
  false 3 colorimage
} bind def


950 50 8			% dimensions of data
[950 0 0 -50 0 50]		% mapping matrix
rlecmapimage

7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f210221870d1f220e220311212a21
7f217f217f217f217f217f2175218211030e820e220e820e220e860e220e23050b048404
090e24212a21
7f217f217f217f217f217f2171218e110312260b041e131e131e131e131e871e17001702
1d24212c21
7f217f217f217f217f217f216921830d1f220e870e221226200408000b00841702070d21
0521842403100d212321
7f217f217f217f217f217f2121218524220f231f213a218f0d0a220e220e23051b041e13
1e0817000c008408190706210421851103221f0d212521
7f217f217f217f217f217f211e2189240e1c1b17000825242136218a0d1026021b041e13
081700110085172001030d210421840316030d212821
7f217f217f217f217f21342186111a120f070a215721860d1110220e220e860e12182504
17000300821b1f212521851f0e2326230e080e841d010908001100820820090209840c1d
1a06210521841026230d212a21
7f217f217f217f21792186241f10220e220e820e220e820e220e820e220e820e220e820e
220e830e070f01010182070a2117218b0610231c1508001708090a2151218e0d1f101d01
14201b1e131e131e08000700820c0d211021840d100311210921881103220e07050b0800
8400171e081e821e081e851e081e0817001000851e2009181a210b21850d22261d24212c
21
7f217f217f217f21472184241f10220e820e220e820e220e820e220e820e220e820e220e
820e220e810e2283221f0d210e219a241f10070f1c09151e041e131e131e131e131e131e
131e131e131e821e080002008b17081410210d1110220e220e820e220e820e220e010e81
2301880126012616191b08000500820422212f2182240d211921890d0a0e072625150417
00100082201a210921890d1110220e23011620048304051f210421891103231c15131e08
1700190082171e090309820c1a210e21841f0e0a0d212e21
7f217f217f217f213f2190241f100e070f011c1920041e131e081e0882081e0882081e08
82081e0882081e0803088304250a2107218b241f030e12181619151e08001d00811e268c
2614201b041e131e131e131e088108178117000f0082091f211521840d0610220e0f0e88
120f012625020c11211321890d0a22121809040817001300831e050a2105218a0d1f101d
0114201b1e170004008408260e220e860e230c020417001800821e2009020982181a2114
21810d213321
7f211221842422121f217f217f217f211221850d0a220e220e820e220e820e220e820e22
0e010e881d0f1605090b041e178117001a008f1e22210d1110221d0f0116190b041e1781
1700220001171f00820b2221102189111022120f0125151b1e011e81081e821e081e821e
081e821e081e821e081e821e1700030082171c0e110e861d01251b1e170015008220181d
021d81220e020e86070119150417000b0086081e131e08170019008308091d210c21830d
1f24214121
7f210721830d0a220e040e83230504088308052421492185240a22230f01130182070a21
7f2106218c240a03220e220e220e220e1d0f840f01231f217f210a2199240a221d0f0116
191b1e131e131e131e131e131e131e131e17002300810b16871609200413081700490087
171e051d1f10220e0a0e8712232625201b1e178117001b000108011e81081e821e081e82
1e081e821e081e821e081e831e0817000c0085171e201e08000300831720090c840c090b
1b1e871e081e081e0817001f0083081e201e821e20090809820c03210b21860d0a222307
0d210521010d3a21
7f21042188112218141b13081e088108178117000300821b1f2140218b241f100e070f1c
25021b1317811700140083081410217f218c241f10070f05021b04131e131e011e810817
811700010093170207220e220e220e220e220e220e22120f18018301231f216e218c0d0a
22120f0116191b130817004c000117811e208120090509822008002c008308200c188518
0c09021b1e821e081e821e081e821e081e811e08810817811700400081171e871e09181a
061c08000300851e200b1e1700250083171e200983091806211721820d110a010a841d26
1918214421
6c219a1103220e220e220e220e220e220e220e220e220e22120f050b08000d0093091d22
0e220e220e220e220e220e220e2203112127218c241f100e070f0105021b1e08001e0082
0422216a2189241f10220e230f1826018201260182012601890126160509150408170011
0085131e131e131e821e131e831e131e0882081700020083082524215e2183240a220e82
0e220e8b0e22120f011605190b1308178117004d008817081e2009181d06210821810900
22000408071e0117510085080b09181a21022182060900040082081700120082171e000f
00011e83091806210d21821a031d8e1d221d221d0e22030a110d240d240d810d21012182
2406214521
68219711030f252004131e131e131e131e131e131e131e131e131e821e08001100011e83
131e131e821e131e821e131e821e131e811e1383131c1f211e218d0d1110221d0f260519
0b041e17002500821b0c0103018426161c05250b258405160f1d0e210e82070f26012681
0126822601268426010f1f2117218a241f100e070f1609150408820817003900821b1f21
56218a0a0f0c2514190215041e0801088217081701173400011781001781170016000117
011e85200c181d06210e218105000d0083171e08000c00011781081e041e020802171e00
82081e208120090d0982201e001b00850820090c1a210721821817000b008b081e200920
1920192009200986090c1d1a060900030083171e20090209010c83181a0621082187060a
0e1d071d0e1d821d0f1802180107841d220a24215221
1d21830d1f220e820e220e820e220e820e220e860e220e221024212321840d10230f010a
01852616091b08003b00820812210421830d1f102281220e820e220e820e220e820e220e
820e220e820e220e890e1d0f011609201b1317811700470081081e821e081e821e081e82
1e081e821e081e821e081e821e081e821e081e821e081e821e081e821e081e841e081e08
000a0083170b260182012601820126018201260182012601820126018a01260126160525
19151b088108004200820c0d21032196240a03220e220e220e220e220e220e220e220e22
0e1d0f810f01150182231f210921840d0610220e0e0e8418140417002100821720090409
822017002c008317081e208520090c1d1a211621821a201e811e20832009200982092009
86092009181a0c003400011e8520090c181a211221831a0c200982092009820920091109
830c1a06210a2182062000080087082009181a0621060206812106810621052183061d0c
0984090c181d1a011a02060e21820d062482240d216021
1c21970d0702041e131e131e131e131e131e131e0420050f100d211f21840d231b17004d
00a008182212230f011609151b131e131e131e131e131e131e131e131e131e130817001b
0083170017007f0041008c201a241f10070f1c021b04131e821e131e821e131e821e131e
821e131e011e810817811700160001178205112101218a111022120f181614151b1e821e
081e821e081e821e081e821e081e821e0817811700250082090621032182060900260088
17081e20090c1d1a212e2183062017001f008317081e208120090a09830c181a21442183
240917008300081e2001208409181a0621142183061a1d1a841a062106217721
1b21830d071b000f008517080b05230e8f0e220e220e220e220e220e220e220e22842210
110d210821830d231e004f00841e041e08178117007f0065008117000e000108011e8720
0c16090b1e08003000880401181614201b1e178117003a00822006210421820620001f00
81171e861e20090c1d1a213521820609001700011788081e20090c181a0621492184060a
101a1086101a10110d210d880d061a180c09181a0601067f211b21
1b21820a1900140081081e821e131e821e131e821e131e821e131e8d1e131e13040b1925
1812221f0d210321820a20007f007f0033000108160081081e031e820817003600811700
40008308091a2106218203091e031e8120091609830c1d1a213d21821f01091409840c18
1a06214e21010d0124010685240624060d210321850a26012206217f211f21
1b21831020170029008c1708040b021925051626051e007f002f000d1782081e20812009
1e0982201e00370081171e811e208120090c0982181d0683061808007900011781081e07
1e8120090e09820c1d217f216721820611217f212221
1b21830d0e0c090c0982201e004d00820817002a000217011e8120090c09811e00380082
17081e851e090c181a068306210621822106218221062182210621822106212521821a0c
09010982201e002700011781081e811e2085200c181d06211321821a200022000117011e
82091e0035008317081e20812009090982201e0002008608091a062106217f215521810d
217f215321
2d21851a0c201e17004300850820090c1a068206200022008317081e208620090c181d1a
210f21821d08002e000117021e0120840c181a06214221821d0c09250983181d06211c21
821a20001c008817081e2009181d062101218109002d0081171e871e20090c181a06210e
21851d09200c1a217f215a2182110d215321810d217d21
30218306180c090f0983201e08002500811e09820920090109830c1a062104218203201e
081e01201309810c1d821d1a21182182062000260081171e011e8620090c181a06217f21
1521830d1d0c091909840c181d06210721821a191e091e83200920098209200982092009
8209200982092009820920098209200982092009820920098209200985090c181a06217f
217621810d215121860d1026142510217c21
462185061d0c2017002000820906214e21820618098209200981092082201e178217081e
011e01201309840c181a06217f217f217f217f214421810d2401248306240d217d21
4a21841d201e0800150081081e041e820906217f217f217f217f217f217f214521
4e2185061a18201e000b0085171e091d06217f217f217f217f217f217f214e21
5221821a0c090909830c1d06217f217f217f217f217f217f215121
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521

%
% Compression made this file 2.88% of the uncompressed size.
%


showpage

% stop using temporary dictionary
end

% restore original state
origstate restore

%%Trailer

%%EndDocument
 @endspecial 5001 5222 a @beginspecial @setspecial
 tx@Dict begin STP newpath 1.0 SLW 0.5451 0.39608 0.03137 setrgbcolor
 /ArrowA { moveto } def /ArrowB { } def [ 341.43292 -28.45274 -22.76227
-28.45274  /Lineto /lineto load def false Line  gsave 1.0 SLW 0.5451
0.39608 0.03137 setrgbcolor 0 setlinecap stroke  grestore end
 
@endspecial
621 x Fi(SESC)20 b(\(IA)n(COMA)e(g)o(roup\))2960 b(Joe)20
b(Renau,)h(Basilio)e(F)m(r)o(aguela,)h(and)g(Liu)g(W)n(ei)39
b(\226)20 b(page)40 b(15/23)4266 1057 y
 gsave currentpoint currentpoint translate 270 neg rotate neg exch
neg exch translate
 4266 1057 a @beginspecial
276 @llx 366 @lly 336 @urx 426 @ury 141 @rwi 141 @rhi
@setspecial
%%BeginDocument: angleHG.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/rico/texte/texstyle/Prosper-beta/img/angleHG.ps
%%Creator: XV Version 3.10a  Rev: 12/29/94 (PNG patch 1.2)  -  by John Bradley
%%BoundingBox: 276 366 336 426
%%Pages: 1
%%DocumentFonts:
%%EndComments
%%EndProlog

%%Page: 1 1

% remember original state
/origstate save def

% build a temporary dictionary
20 dict begin

% define string to hold a scanline's worth of data
/pix 180 string def

% define space for color conversions
/grays 60 string def  % space for gray scale line
/npixls 0 def
/rgbindx 0 def

% print in landscape mode
90 rotate 0 -612 translate

% lower left corner
366 276 translate

% size of image (on paper, in 1/72inch coords)
59.97600 59.97600 scale

% define 'colorimage' if it isn't defined
%   ('colortogray' and 'mergeprocs' come from xwd2ps
%     via xgrab)
/colorimage where   % do we know about 'colorimage'?
  { pop }           % yes: pop off the 'dict' returned
  {                 % no:  define one
    /colortogray {  % define an RGB->I function
      /rgbdata exch store    % call input 'rgbdata'
      rgbdata length 3 idiv
      /npixls exch store
      /rgbindx 0 store
      0 1 npixls 1 sub {
        grays exch
        rgbdata rgbindx       get 20 mul    % Red
        rgbdata rgbindx 1 add get 32 mul    % Green
        rgbdata rgbindx 2 add get 12 mul    % Blue
        add add 64 idiv      % I = .5G + .31R + .18B
        put
        /rgbindx rgbindx 3 add store
      } for
      grays 0 npixls getinterval
    } bind def

    % Utility procedure for colorimage operator.
    % This procedure takes two procedures off the
    % stack and merges them into a single procedure.

    /mergeprocs { % def
      dup length
      3 -1 roll
      dup
      length
      dup
      5 1 roll
      3 -1 roll
      add
      array cvx
      dup
      3 -1 roll
      0 exch
      putinterval
      dup
      4 2 roll
      putinterval
    } bind def

    /colorimage { % def
      pop pop     % remove 'false 3' operands
      {colortogray} mergeprocs
      image
    } bind def
  } ifelse          % end of 'false' case



60 60 8			% dimensions of data
[60 0 0 -60 0 60]		% mapping matrix
{currentfile pix readhexstring pop}
false 3 colorimage

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffafee3effeaaffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffafee3e3fe64ffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffe3fe64fafee3ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffe9fe88f1feb3ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffe8fe86dffe55fefefeffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffebfe96dafe37fefefeffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffedfe9edefe48f7fed5ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffedfe9ee2fe60eefea5f5fecaecfe95ecfe97ecfe98
ecfe99ecfe9bf6feceffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffeffeaadffe4fe0fe55dcfe3f
dbfe3cdbfe3ddbfe3dddfe48defe4cdcfe43d9fe32d6fe20e2fe5fe3fe67defe4ddefe4d
defe4edefe4edbfe3bdbfe3cdcfe3ddcfe3fdcfe40dcfe42ddfe43ddfe45ddfe46ddfe48
ddfe46e2fe63e5fe72e5fe74e6fe76e6fe77e6fe79e7fe7ae9fe86e8fe85ebfe94ecfe97
ecfe99ecfe9cedfe9eeffeacf2febcf3febef3fec1f4fec4f9fedfffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffeffeaaf1feb3f5fec7e9fe87
e7fe7be7fe7be7fe7be2fe60e1fe5bd6fe1dd8fe2adafe33e1fe5bdffe54defe4edffe50
dffe51dffe53e0fe54ddfe49ddfe4bdefe4cdefe4edefe50dffe52dffe54e5fe73eafe93
e9fe89e6fe7ae4fe6ce4fe6ee8fe84e8fe85e9fe87e9fe8ae8fe84e7fe7ce8fe81e9fe8a
f0feb0f8fedbf9fedff1feb8f1febaeafe8bfbfeeafbfeebfdfef5ffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff5fecddffe52e1fe5df5fec9f5fec9f5fecaf5feca
f5fecbf5feccf5feccf5fecdf6fecef6fecef6fecef6fecff6fed0f6fed1eefea5e9fe8a
f6fed1f7fed7f7fed8f7fed9f6fecdfafee8fcfef1fcfef2fdfef7fcfef3fdfef7fefefc
fefefcfefefdf9fee0f6fecff5feccf4fec2ffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff5fecde3fe64e5fe74ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffdfef5fefefdfefefdfefefcfefefcfffffffefef9
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff5fecde5fe74dffe53ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff6fecee6fe79e5fe6ff8fed8ffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff6fecee6fe7aebfe95effeaaffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff6fecee6fe7aedfe9eeefea2ffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff6fecee6fe7bedfe9eeefea3ffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff6fecfe6fe78ecfe9eeefea5ffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffefefe
fefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff6fed0e2fe63e0fe59dffe55ffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffefefe
fefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffedfe9fe2fe5fd8fe2ad8fe2dffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffecfe9adffe53d6fe1cdefe4cf6fecfffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffedfe9cd8fe2cd6fe20defe4bf6fed0ffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffefefdffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffedfe9dd8fe27d7fe22defe4ef6fed0ffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffedfe9dd7fe26d6fe20e0fe5bf6fed2ffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff3febdd7fe22d7fe22e1fe5ef7fed3ffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff4fec6d6fe20d7fe21e0fe57f7fed4ffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff4fec6d6fe20d6fe1fe0fe59f7fed5ffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff4fec6d6fe1ed6fe1ee5fe73f7fed6ffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff4fec6d6fe1dd9fe32e0fe56ffffffffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff5fecce0fe55defe48e8fe81ffffffffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffbfeede7fe7fe0fe56e9fe85ffffffffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff7fed8e8fe84e7fe7ef1feb4ffffffffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff2feb8edfea0effea6f1feb6ffffffffffffffffff
fffffffefefefefefeffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffefefceffeabf0feafeffea7f2feb7ffffffffffffffffff
fffffffefefefefefefefefeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffefefcf5fecaecfe9de7fe7af8feddffffffffffffffffff
fffffffefefefefefefefefefefefeffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffefefcf5fecce8fe85e8fe80ffffffffffffffffffffffff
fffffffefefefefefefefefeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffff8fedefdfef8fdfefbf3fec0e9fe89ecfe96ffffffffffffffffffffffff
fefefefefefefefefefefefeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffdfef6fefefafefefaf4fec2e9fe89ecfe96ffffffffffffffffffffffff
fefefefefefefefefefefefeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffdfef6fefefefefefdf4fec2e8fe85edfe9dffffffffffffffffffffffff
fefefefefefefefefefefefeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffefef9fefefdfefefce7fe7be5fe76f2feb7ffffffffffffffffffffffff
fffffffffffffefefefefefeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffdfef6fdfefafefefbe2fe65e5fe75f6fed0ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffdfef9fefefce6fe79e6fe77fafee6ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffcfef6fefefbecfe9be7fe7efbfeecffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffdfef5fdfef7f7fed5e9fe8dfcfef2ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffcfeeffbfeebedfea1fdfef7ffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffefefeffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffefefdfbfee9effeabffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffefefefefefeffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffbfeeceffea6ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff9fee3f3fec1ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffeefea2f8fedaffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff1feb2fafee4ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffcfef0fefefaffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff


showpage

% stop using temporary dictionary
end

% restore original state
origstate restore

%%Trailer

%%EndDocument
 @endspecial 4511 1057 a
 currentpoint grestore moveto
 4511 1057 a 4130 5844 a
 currentpoint currentpoint translate 0.76611 0.76611 scale neg exch
neg exch translate
 4130
5844 a 4130 5844 a
 gsave currentpoint currentpoint translate 0 neg rotate neg exch neg
exch translate
 4130 5844 a @beginspecial 0 @llx 0
@lly 37 @urx 42 @ury 370 @rwi @setspecial
%%BeginDocument: figs/uiuc.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: uiuc.eps
%%Creator: fig2dev Version 3.2 Patchlevel 3d
%%CreationDate: Sun Feb 10 22:03:46 2002
%%For: renau@nether.cs.uiuc.edu (Jose Renau)
%%BoundingBox: 0 0 37 42
%%Magnification: 1.0000
%%EndComments
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def
/col32 {0.200 0.200 0.400 srgb} bind def
/col33 {0.800 0.400 0.000 srgb} bind def

end
save
newpath 0 42 moveto 0 0 lineto 37 0 lineto 37 42 lineto closepath clip newpath
-273.7 413.7 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
 0.06000 0.06000 sc
%
% Fig objects follow
%
%  polyline 
% Polyline
n 5070 6872 m 5070 6227 l 4584 6227 l 4584 6872 l
 5070 6872 l  cp gs col32 1.00 shd ef gr 
%  polyline 
% Polyline
15.000 slw
n 5070 6872 m 5070 6227 l 4584 6227 l 4584 6872 l
 5070 6872 l  cp gs col32 s gr 
%  polyline 
% Polyline
0.000 slw
n 5056 6858 m 5056 6243 l 4598 6243 l 4598 6858 l
 5056 6858 l  cp gs col32 1.00 shd ef gr 
%  polyline 
% Polyline
7.500 slw
n 5056 6858 m 5056 6243 l 4598 6243 l 4598 6858 l
 5056 6858 l  cp gs col33 s gr 
%  spline 
% Polyline
2 slj
0.000 slw
n 4944 6783 m 4944 6781 l 4944 6773 l 4944 6759 l 4944 6751 l 4944 6749 l
 4943 6749 l 4935 6748 l 4924 6746 l 4914 6744 l 4906 6742 l
 4900 6741 l 4896 6739 l 4892 6738 l 4887 6735 l 4884 6732 l
 4880 6728 l 4877 6722 l 4875 6716 l 4873 6709 l 4872 6702 l
 4871 6693 l 4870 6683 l 4869 6670 l 4869 6654 l 4868 6637 l
 4868 6621 l 4868 6609 l 4868 6604 l 4868 6603 l 4868 6602 l
 4868 6597 l 4868 6585 l 4868 6567 l 4868 6544 l 4868 6521 l
 4868 6503 l 4868 6491 l 4868 6486 l 4868 6485 l 4868 6483 l
 4868 6474 l 4868 6457 l 4869 6438 l 4869 6420 l 4870 6406 l
 4870 6395 l 4871 6387 l 4873 6381 l 4874 6375 l 4876 6371 l
 4879 6367 l 4882 6365 l 4885 6363 l 4889 6362 l 4892 6361 l
 4898 6359 l 4905 6358 l 4915 6356 l 4925 6354 l 4933 6352 l
 4934 6352 l 4934 6350 l 4934 6343 l 4934 6331 l 4934 6324 l
 4934 6322 l 4933 6322 l 4928 6322 l 4916 6322 l 4896 6322 l
 4869 6322 l 4837 6322 l 4806 6322 l 4779 6322 l 4759 6322 l
 4747 6322 l 4742 6322 l 4741 6322 l 4740 6322 l 4737 6322 l
 4732 6322 l 4729 6322 l 4726 6322 l 4724 6322 l 4721 6323 l
 4718 6324 l 4716 6325 l 4714 6326 l 4712 6327 l 4710 6329 l
 4707 6332 l 4705 6334 l 4703 6336 l 4701 6338 l 4700 6339 l
 4699 6341 l 4698 6342 l 4697 6344 l 4696 6346 l 4696 6347 l
 4695 6349 l 4695 6351 l 4695 6353 l 4694 6356 l 4694 6358 l
 4694 6359 l 4694 6360 l 4694 6362 l 4694 6365 l 4694 6367 l
 4695 6369 l 4695 6370 l 4696 6372 l 4697 6374 l 4697 6375 l
 4698 6377 l 4699 6378 l 4701 6379 l 4702 6381 l 4704 6383 l
 4706 6385 l 4708 6386 l 4709 6388 l 4710 6389 l 4712 6389 l
 4713 6390 l 4715 6391 l 4716 6391 l 4718 6391 l 4720 6391 l
 4721 6391 l 4724 6391 l 4726 6391 l 4727 6391 l 4729 6391 l
 4732 6390 l 4735 6390 l 4737 6389 l 4740 6388 l 4742 6387 l
 4744 6385 l 4747 6383 l 4748 6381 l 4749 6379 l 4750 6376 l
 4751 6372 l 4752 6369 l 4752 6368 l 4752 6366 l 4752 6364 l
 4752 6362 l 4752 6361 l 4752 6359 l 4752 6358 l 4751 6357 l
 4751 6356 l 4750 6355 l 4749 6354 l 4749 6353 l 4748 6352 l
 4747 6351 l 4746 6350 l 4745 6349 l 4744 6348 l 4743 6348 l
 4742 6347 l 4741 6346 l 4740 6346 l 4739 6346 l 4738 6346 l
 4736 6345 l 4735 6345 l 4733 6345 l 4732 6345 l 4730 6345 l
 4729 6345 l 4728 6346 l 4727 6346 l 4725 6346 l 4724 6347 l
 4724 6348 l 4723 6348 l 4722 6349 l 4721 6351 l 4720 6352 l
 4719 6353 l 4718 6354 l 4718 6355 l 4717 6356 l 4717 6357 l
 4717 6358 l 4716 6359 l 4717 6360 l 4717 6361 l 4717 6362 l
 4717 6363 l 4718 6364 l 4718 6365 l 4719 6366 l 4719 6367 l
 4720 6367 l 4720 6368 l 4721 6368 l 4722 6369 l 4723 6369 l
 4723 6368 l 4724 6368 l 4725 6368 l 4726 6367 l 4727 6367 l
 4727 6366 l 4728 6366 l 4728 6365 l 4729 6365 l 4729 6364 l
 4729 6363 l 4729 6362 l 4729 6361 l 4728 6360 l 4728 6359 l
 4729 6359 l 4729 6358 l 4730 6357 l 4731 6357 l 4731 6356 l
 4732 6356 l 4733 6356 l 4734 6356 l 4735 6356 l 4735 6357 l
 4736 6357 l 4737 6357 l 4738 6357 l 4738 6358 l 4739 6358 l
 4739 6359 l 4739 6360 l 4740 6360 l 4740 6361 l 4740 6362 l
 4741 6362 l 4741 6363 l 4741 6364 l 4740 6364 l 4740 6365 l
 4740 6366 l 4740 6368 l 4739 6371 l 4739 6373 l 4738 6374 l
 4737 6375 l 4736 6376 l 4735 6377 l 4733 6378 l 4732 6379 l
 4731 6379 l 4729 6379 l 4727 6380 l 4725 6380 l 4724 6380 l
 4722 6380 l 4721 6380 l 4720 6380 l 4719 6380 l 4718 6380 l
 4717 6379 l 4716 6379 l 4715 6379 l 4715 6378 l 4714 6377 l
 4713 6376 l 4712 6375 l 4711 6374 l 4710 6373 l 4710 6372 l
 4709 6372 l 4708 6371 l 4708 6370 l 4707 6369 l 4707 6368 l
 4707 6367 l 4706 6365 l 4706 6363 l 4706 6361 l 4706 6359 l
 4706 6357 l 4706 6355 l 4706 6353 l 4706 6352 l 4707 6351 l
 4707 6350 l 4707 6348 l 4708 6347 l 4709 6346 l 4709 6345 l
 4710 6344 l 4712 6343 l 4713 6342 l 4715 6340 l 4717 6339 l
 4718 6337 l 4720 6337 l 4721 6336 l 4723 6335 l 4725 6334 l
 4727 6334 l 4729 6334 l 4731 6333 l 4734 6333 l 4738 6333 l
 4740 6333 l 4741 6333 l 4742 6333 l 4744 6333 l 4747 6333 l
 4753 6333 l 4759 6333 l 4767 6333 l 4776 6333 l 4785 6333 l
 4794 6333 l 4802 6333 l 4809 6333 l 4815 6333 l 4822 6333 l
 4827 6333 l 4828 6333 l 4828 6334 l 4828 6337 l 4828 6341 l
 4828 6344 l 4828 6345 l 4826 6345 l 4816 6345 l 4797 6345 l
 4779 6345 l 4769 6345 l 4767 6345 l 4766 6345 l 4765 6345 l
 4764 6346 l 4763 6346 l 4762 6347 l 4762 6348 l 4761 6349 l
 4761 6350 l 4761 6351 l 4761 6352 l 4761 6353 l 4761 6354 l
 4761 6355 l 4762 6356 l 4762 6357 l 4763 6358 l 4764 6359 l
 4765 6359 l 4766 6359 l 4767 6359 l 4769 6359 l 4779 6359 l
 4798 6359 l 4816 6359 l 4826 6359 l 4828 6359 l 4828 6360 l
 4828 6362 l 4828 6367 l 4828 6369 l 4828 6370 l 4826 6370 l
 4817 6370 l 4799 6370 l 4782 6370 l 4773 6370 l 4771 6370 l
 4770 6370 l 4769 6370 l 4768 6370 l 4767 6371 l 4766 6371 l
 4766 6372 l 4765 6373 l 4765 6374 l 4765 6375 l 4765 6376 l
 4765 6377 l 4766 6378 l 4766 6379 l 4767 6380 l 4768 6381 l
 4769 6381 l 4770 6381 l 4771 6381 l 4773 6381 l 4782 6381 l
 4800 6381 l 4817 6381 l 4826 6381 l 4828 6381 l 4828 6384 l
 4828 6391 l 4828 6404 l 4828 6423 l 4828 6449 l 4828 6480 l
 4828 6516 l 4828 6554 l 4828 6592 l 4828 6628 l 4828 6659 l
 4828 6685 l 4828 6704 l 4828 6717 l 4828 6724 l 4828 6727 l
 4827 6727 l 4819 6727 l 4802 6727 l 4780 6727 l 4757 6727 l
 4740 6727 l 4732 6727 l 4731 6727 l 4730 6727 l 4729 6727 l
 4728 6727 l 4727 6728 l 4726 6728 l 4726 6729 l 4726 6730 l
 4725 6730 l 4725 6731 l 4725 6732 l 4725 6733 l 4725 6734 l
 4725 6735 l 4725 6736 l 4725 6737 l 4726 6738 l 4726 6739 l
 4727 6739 l 4727 6740 l 4728 6740 l 4729 6740 l 4730 6740 l
 4731 6740 l 4732 6740 l 4740 6740 l 4757 6740 l 4780 6740 l
 4802 6740 l 4819 6740 l 4827 6740 l 4828 6740 l 4828 6741 l
 4828 6745 l 4828 6750 l 4828 6754 l 4828 6755 l 4827 6755 l
 4822 6755 l 4811 6755 l 4792 6755 l 4770 6755 l 4748 6755 l
 4729 6755 l 4718 6755 l 4713 6755 l 4712 6755 l 4710 6755 l
 4707 6755 l 4706 6756 l 4704 6756 l 4703 6757 l 4702 6758 l
 4701 6759 l 4700 6760 l 4699 6761 l 4699 6763 l 4698 6764 l
 4698 6767 l 4698 6769 l 4698 6770 l 4698 6773 l 4698 6779 l
 4698 6782 l 4698 6783 l 4699 6783 l 4703 6783 l 4713 6783 l
 4730 6783 l 4755 6783 l 4786 6783 l 4821 6783 l 4856 6783 l
 4887 6783 l 4912 6783 l 4929 6783 l 4939 6783 l 4943 6783 l

 4944 6783 l  cp gs col7 1.00 shd ef gr 
%  spline 
% Polyline
n 4783 6706 m 4783 6705 l 4783 6702 l 4783 6693 l 4783 6678 l 4783 6656 l
 4783 6626 l 4783 6592 l 4783 6555 l 4783 6517 l 4783 6483 l
 4783 6453 l 4783 6431 l 4783 6416 l 4783 6407 l 4783 6404 l
 4783 6403 l 4783 6402 l 4783 6401 l 4783 6400 l 4782 6400 l
 4782 6399 l 4781 6399 l 4781 6398 l 4780 6398 l 4779 6398 l
 4778 6398 l 4777 6398 l 4776 6398 l 4775 6398 l 4774 6399 l
 4773 6399 l 4773 6400 l 4772 6401 l 4772 6402 l 4772 6403 l
 4772 6404 l 4772 6407 l 4772 6416 l 4772 6431 l 4772 6453 l
 4772 6483 l 4772 6517 l 4772 6555 l 4772 6592 l 4772 6626 l
 4772 6656 l 4772 6678 l 4772 6693 l 4772 6702 l 4772 6705 l
 4772 6706 l 4772 6707 l 4772 6708 l 4773 6709 l 4773 6710 l
 4774 6711 l 4775 6712 l 4776 6712 l 4777 6712 l 4778 6712 l
 4779 6712 l 4780 6712 l 4781 6712 l 4781 6711 l 4782 6711 l
 4782 6710 l 4783 6709 l 4783 6708 l 4783 6707 l
 4783 6706 l  cp gs col7 1.00 shd ef gr 
%  spline 
% Polyline
n 4813 6705 m 4813 6704 l 4813 6701 l 4813 6692 l 4813 6677 l 4813 6655 l
 4813 6626 l 4813 6592 l 4813 6555 l 4813 6518 l 4813 6484 l
 4813 6455 l 4813 6433 l 4813 6418 l 4813 6409 l 4813 6406 l
 4813 6405 l 4813 6404 l 4813 6402 l 4813 6401 l 4812 6400 l
 4811 6399 l 4811 6398 l 4810 6398 l 4809 6398 l 4808 6397 l
 4807 6397 l 4806 6397 l 4805 6397 l 4804 6397 l 4803 6397 l
 4802 6397 l 4801 6398 l 4800 6398 l 4799 6399 l 4799 6400 l
 4798 6401 l 4798 6402 l 4798 6404 l 4798 6405 l 4798 6406 l
 4798 6409 l 4798 6418 l 4798 6433 l 4798 6455 l 4798 6484 l
 4798 6518 l 4798 6555 l 4798 6592 l 4798 6626 l 4798 6655 l
 4798 6677 l 4798 6692 l 4798 6701 l 4798 6704 l 4798 6705 l
 4798 6706 l 4798 6707 l 4798 6708 l 4799 6709 l 4799 6710 l
 4799 6711 l 4800 6711 l 4801 6712 l 4802 6713 l 4803 6713 l
 4804 6713 l 4805 6713 l 4806 6713 l 4807 6713 l 4808 6713 l
 4809 6712 l 4810 6712 l 4811 6711 l 4812 6710 l 4812 6709 l
 4813 6708 l 4813 6707 l 4813 6706 l
 4813 6705 l  cp gs col7 1.00 shd ef gr 
%  polyline 
% Polyline
0 slj
n 5136 6864 m 5124 6864 l 5124 6894 l 5119 6894 l 5119 6864 l 5108 6864 l
 5108 6860 l 5136 6860 l
 5136 6864 l  cp gs col32 1.00 shd ef gr 
%  polyline 
% Polyline
n 5172 6894 m 5167 6894 l 5167 6867 l 5157 6880 l 5156 6880 l 5146 6867 l
 5145 6867 l 5145 6894 l 5141 6894 l 5141 6860 l 5145 6860 l
 5156 6874 l 5168 6860 l 5172 6860 l
 5172 6894 l  cp gs col32 1.00 shd ef gr 
$F2psEnd
rs

%%EndDocument
 @endspecial 4769 5844 a
 currentpoint grestore moveto
 4769 5844 a 4130 5844 a
 currentpoint currentpoint translate 1 0.76611 div 1 0.76611 div scale
neg exch neg exch translate
 4130
5844 a 5001 3450 a
SDict begin H.S end
 5001 3450 a 5001 3450 a
SDict begin H.R end
 5001 3450
a 5001 3450 a
SDict begin [ /View [/XYZ H.V] /Dest (page.1) cvn H.B /DEST pdfmark
end
 5001 3450 a 5001 3450 a
SDict begin [ {ThisPage} << /Trans << /S /Replace >> >> /PUT pdfmark
end
 5001 3450 a 5001
3450 a
SDict begin [ /Page 15/View [ /XYZ null null null ] /Title (Report Output)
/OUT pdfmark end
 5001 3450 a 7621 1453 a Fm(R)18 b Fn(E)g(P)g(O)g(R)12
b(T)115 b Fm(O)18 b Fn(U)g(T)g(P)g(U)g(T)4649 2157 y
@beginspecial 276 @llx 376 @lly 336 @urx 416 @ury 113
@rwi @setspecial
%%BeginDocument: green-bullet-on-white.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/fred/TeX/STYLES/Prosper/img/green-bullet-on-white.ps
%%Creator: XV Version 3.10a+FLmask  Rev: 12/29/94  -  by John Bradley
%%BoundingBox: 276 376 336 416
%%Pages: 1
%%DocumentFonts:
%%EndComments
%%EndProlog

%%Page: 1 1

% remember original state
/origstate save def

% build a temporary dictionary
20 dict begin

% define space for color conversions
/grays 60 string def  % space for gray scale line
/npixls 0 def
/rgbindx 0 def

% lower left corner
276 376 translate

% size of image (on paper, in 1/72inch coords)
59.97600 40.03200 scale

% define 'colorimage' if it isn't defined
%   ('colortogray' and 'mergeprocs' come from xwd2ps
%     via xgrab)
/colorimage where   % do we know about 'colorimage'?
  { pop }           % yes: pop off the 'dict' returned
  {                 % no:  define one
    /colortogray {  % define an RGB->I function
      /rgbdata exch store    % call input 'rgbdata'
      rgbdata length 3 idiv
      /npixls exch store
      /rgbindx 0 store
      0 1 npixls 1 sub {
        grays exch
        rgbdata rgbindx       get 20 mul    % Red
        rgbdata rgbindx 1 add get 32 mul    % Green
        rgbdata rgbindx 2 add get 12 mul    % Blue
        add add 64 idiv      % I = .5G + .31R + .18B
        put
        /rgbindx rgbindx 3 add store
      } for
      grays 0 npixls getinterval
    } bind def

    % Utility procedure for colorimage operator.
    % This procedure takes two procedures off the
    % stack and merges them into a single procedure.

    /mergeprocs { % def
      dup length
      3 -1 roll
      dup
      length
      dup
      5 1 roll
      3 -1 roll
      add
      array cvx
      dup
      3 -1 roll
      0 exch
      putinterval
      dup
      4 2 roll
      putinterval
    } bind def

    /colorimage { % def
      pop pop     % remove 'false 3' operands
      {colortogray} mergeprocs
      image
    } bind def
  } ifelse          % end of 'false' case



% define the colormap
/cmap 723 string def


% load up the colormap
currentfile cmap readhexstring
041808 049008 8c948c 045204 4c544c 04c804 84e284 449644 c4cbc4 0c380e 
04ac07 cce6cc 345e2c e4e7e4 046604 2c3a2c 347234 e4fee2 048208 64cc60 
34922c 24b224 04e404 044604 647264 242623 049f07 8cae8c 04bc06 24c61c 
f4f8f3 1c541c 04d804 1c621c 1c7220 0c280d 14910f 045e04 047c04 ccdcd0 
14ac18 1c481c 747473 04d105 0c6c0b 24852a 1c381c f4f1f3 acafac f4fef5 
0c310c acc6ac 049708 a4a4a3 3c4a44 148314 144812 9cea94 04b405 149e14 
1cbc1c 044004 e4fef4 dcdddd 748274 5c5959 4cba54 145b11 145413 147412 
c4fec4 e4f1e7 146411 088a0a 243028 09c207 fcf8f3 147c13 14c80e acceac 
3c3939 04f405 044e07 07a608 14d00f 0c1f10 0c900b d4d3d4 ecfee3 1c291d 
0c6e14 bcbfbd d4f6d4 909a94 4c5a50 0cac08 24ba24 547e54 0cbc0a 0c5c16 
0c7c0b fcf1fb acb8ac 1c311c aca7a9 e2e2e2 a4e2a4 0cc80a 6c9a6c 143715 
0c650a 0c840b 07de06 14970c 0c980a 0cb40a 848583 ecf0f0 c3c6c3 0c540d 
0c740c cccccc 74ce6c 30a02c 04ec05 54aa5c 6cb66c 9cfa9c 2c862c 5c926c 
6ca674 b4deac 9cda9c 34aa2c 6c7e6c acfeac 448244 34d22c 7d7d7c 6c6d6c 
445644 4c4d4c 1c7a19 1c3e1c 3c3f3c 2c422c 7c9a84 54c254 dceadc 144014 
343231 bccebc bcbabc 447244 6c6664 9c9d9c 7caa7c 349a38 6c7a74 84b69c 
1c4e18 898a89 ccfadc 1c6c2c b8e2c0 1c8a24 a1aaa1 3c4e3c 5f5e5c d8fed8 
24be24 78d670 688668 148a14 14a618 145624 0c480e 2c292b 142916 1c921c 
d4dad9 243828 143017 b4d2bc b4b7b5 1c961c 8c868c 247e24 144e13 04fa04 
246224 fcfefc 0c4e0c ace2b4 3caa3c 244e24 0c180c 949394 545454 ece9ec 
343634 2cb127 6c736c 0ca00c 0cda08 0c5c0b 0ccf06 146a0c b4b2b4 646464 
b4c2b4 0c3f0c ecfdf9 e4dedc ccfdcc 2c2f2b 142214 146b16 c4c2c2 545b54 
2cb62c 74ba74 346634 b4fcb0 244224 444242 246a24 e4feec 0ce204 f4f9fc 
f4eefc 444744 54b654 fcf9fc 0c9114 dcd6d4 ecfeec 0c7b14 0cc614 0c6314 
0c8414 
pop pop   % lose return values from readhexstring


% rlecmapimage expects to have 'w h bits matrix' on stack
/rlecmapimage {
  /buffer 1 string def
  /rgbval 3 string def
  /block  384 string def

  % proc to read a block from file, and return RGB data
  { currentfile buffer readhexstring pop
    /bcount exch 0 get store
    bcount 128 ge
    {  % it's a non-run block
      0 1 bcount 128 sub
      { currentfile buffer readhexstring pop pop

        % look up value in color map
        /rgbval cmap buffer 0 get 3 mul 3 getinterval store

        % and put it in position i*3 in block
        block exch 3 mul rgbval putinterval
      } for
      block  0  bcount 127 sub 3 mul  getinterval
    }

    { % else it's a run block
      currentfile buffer readhexstring pop pop

      % look up value in colormap
      /rgbval cmap buffer 0 get 3 mul 3 getinterval store

      0 1 bcount { block exch 3 mul rgbval putinterval } for

      block 0 bcount 1 add 3 mul getinterval
    } ifelse
  } % end of proc
  false 3 colorimage
} bind def


60 40 8			% dimensions of data
[60 0 0 -40 0 40]		% mapping matrix
rlecmapimage

10bf8131bf05bf03e98165e902e9046587bf3158ec31bfe9658265e9bf09bf
10bf8131bf04bf81e9bf01bf02e98265bfe982e965e901e981bf318131ec82ecbfe982e9
65bf0abf
12bf82751ebf83bf1ebf318231ec3102318111318131bf81bfe901e981bf318131bf01bf
01e90bbf
0fbf02e901bf023101ec021101a981d6a981a9118111318131bf14bf
0fbf8165e901e988e5bfd4ecd66add07808c80149dc2137f46a911d431bfe981e9bf0fbf

0fbf01e982bfe9318331a49ce28fe2454d37562456dc71567bab87a9d4bf81bfe981e9bf
81bf318131bf0abf
10bf8ac775bf311bde43224d37568656cb535f1a733c893cae8506a91131bfe9bf01bf81
58bf0abf
0fbf911ebf31b761a0442245ed56721a530a3a4e3a813a4e864e73c94246e3bf10bf
07bf81e9bf82bfe9bf92bf1ebf31ec4f0c38e2ef8e4d49561a530a3a6283624b052b8a2b
ce4e60c2dfe331bf4cbf0cbf
0abf81e9bf82bfe9ec8eec83de1f21778e786f01341a0a3a1c851c4b052b20168b162054
aa93df11312fe965bf0abf
0ebf8d3111883d77cdcf78646f0134530a810a1c911c4ece20167c517c16542893a9ec31
e965bf0abf
08bf01e999bfe91ebf316cc07743cd45786f49561a530a3a624b6b2b707c510151877c70
4edcaba9bfe981e9bf0abf
0bbf01e985bf27d34352cf90cf0e4d2656011a530a1c62ee2b20167c5102518816cc1db9
d611bfe9bf0abf
07bf81e9bf01bf90e9bf4c86d3445277d92c786f49721a0a3a853a4b0520167c827c51bd
88bd5116e44b157a11bf0cbf
0dbf8d3f0fc33d4403cfbb0e3756011a0a860a624b2b20167c817c5102510116854b897b
a911bf0bbf
08bf82e9e5bf97bf75dab209bcc021ef254d2649561a533a1c4b052b70167c037c811620
85203a853911bf0bbf
0bbf0131869eb6d3b0bc7748884845646f561acb0a7382734b2b812b1683167c16cc01cc
012b844b2813d4bf0bbf
0abf0231955e236db0c04463cf45646f5634cb533a73624b2b2016821670548854ce2b20
4b28e831bf0bbf
0abf023183b5b6d3b089b044436e45786f49341a871a0a733a626b2b200120896b4e6b05
2b1c5f9decbf0bbf
09bf8131bf97bf31d82e09d3b044cd485a786f1201cb1a530a73621c052b852b054e4b1c
0585053a282d58bf0bbf
0bbf9431bf556709b03844cd482c7864125634cb1a5f0a7382734b0501050162011c854b
0aae2d58bf0bbf
0bbf0131934a236dd3b0bc7743485a786f1201341acb535f3a813a1c011c0173023a8453
3b1458bf0bbf
0bbf8431bf0455098309d338778277ef2c852c266f1201348134cb83cb530a3a013a810a
5f815f0a850a1ab37d58bf0bbf
08bf81e9bf93bf31bf18d83209d338c044cd6e0e2c64126f0172837271cb5382530a5383
53ae531a851a01a57e58bf0bbf
0bbf01e5837600230901098138c082c0482c862c7864126f49568156728272341a811a72
0272864912bb841131bf0abf
03bf94e9bfe9bfe9bf1ebf1ebf275923b632099538c044ef81ef7881786481646f816fad
84adea01ea560156882449ad2da3115831bf0abf
04bf02e992654ce61e75bf0d185523b66d0995bcc043cd2c812c7881786483646f64f001
f08b6f496f49642d6382e3314cbf0abf
01bf85e9e5e9652fc784c7693fc7698a69c7d2b200232eb60929bc84bc6343ef2c862c78
45784d78ed82ed6f6489644d45a3afa2114c31bf0abf
01e58175c783c769d5eb8ceb797679dab87908db67c4b66d876d9538b0447743ef84ef6e
2c78458e455a457864788ecfbe9fd4315831bf0abf
88e5750d3f5779da98d083d0689b3501358d5d0236c45567b6320995b04477cd92cdef6e
2c6e5ad95acf782c4517813e31bf2fbf0bbf
887569575bd0689bc5ba83ba8a2a8a878aca2a74db5955b284b23209d3b081b077017701
cd016e02ef876e2c6e4810a4d4bf01bf814cbf0abf
873f79b835c5ba2a9a829aa8410141868de1d104c690d881d85583552e6d958b9538b0c0
77cd03cd6377afcd84cd4321c1d483d4e9654c814cbf0abf
88575b9b742ad1418de181e15081509603968450c8d759d881d8b283b2326d0981099585
9538bcb0381f871f95c3995ca931bf81bfe981e9bf0bbf
8779b8c58ad1c6e750855096d7b119b104b184d7b119d855845523b2b66d016d83952995
2987296de09211d431bf01bf01e90cbf
8979d0c52aa88de15096b181b119041901b18796c80fd74a59b2b602b6016d86326d328f
ac0b318331bf31bf01bf81e9bf0cbf
88575b9b742ad1c68de186e1c850c850c850865096c850e1e70487045e8ca7912e672e85
2e8cac33473101318158bf02bf82e9bfe981e9bf0abf
8b3f799835c5742a8bd1a8dbc683c68dc68d818dc601c68cdbd1ca40a15da66697274711
31863158bf31bf31bf82bf4ce985e9bfe9bfe9bf0abf
8bc76957dab8359bc5a1748a2a052a018a01748b029ba6665b279447ec311ebf83bf581e
bf82bf4cbf02bf82e9bfe981e9bf0abf
881e75693f57795bb8d082d068350135029b0135013088b8985b7608b40d751e811ebf83
bf1e75bf81bf4c814cbf05bf81e9bf0bbf
83e9e52fc782c7693f823f5779817976027681da760276827957b482b4c7750175822fe5
bf82bf4cbf01bf814cbf81bfe981e9bf01bf01e90dbf

%
% Compression made this file 26.36% of the uncompressed size.
%


showpage

% stop using temporary dictionary
end

% restore original state
origstate restore

%%Trailer

%%EndDocument
 @endspecial 298 w Fg(Sim)n(ulating)64 b(an)k(R10K)e(at)h(180Mhz)4649
2531 y @beginspecial 276 @llx 376 @lly 336 @urx 416 @ury
113 @rwi @setspecial
%%BeginDocument: green-bullet-on-white.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/fred/TeX/STYLES/Prosper/img/green-bullet-on-white.ps
%%Creator: XV Version 3.10a+FLmask  Rev: 12/29/94  -  by John Bradley
%%BoundingBox: 276 376 336 416
%%Pages: 1
%%DocumentFonts:
%%EndComments
%%EndProlog

%%Page: 1 1

% remember original state
/origstate save def

% build a temporary dictionary
20 dict begin

% define space for color conversions
/grays 60 string def  % space for gray scale line
/npixls 0 def
/rgbindx 0 def

% lower left corner
276 376 translate

% size of image (on paper, in 1/72inch coords)
59.97600 40.03200 scale

% define 'colorimage' if it isn't defined
%   ('colortogray' and 'mergeprocs' come from xwd2ps
%     via xgrab)
/colorimage where   % do we know about 'colorimage'?
  { pop }           % yes: pop off the 'dict' returned
  {                 % no:  define one
    /colortogray {  % define an RGB->I function
      /rgbdata exch store    % call input 'rgbdata'
      rgbdata length 3 idiv
      /npixls exch store
      /rgbindx 0 store
      0 1 npixls 1 sub {
        grays exch
        rgbdata rgbindx       get 20 mul    % Red
        rgbdata rgbindx 1 add get 32 mul    % Green
        rgbdata rgbindx 2 add get 12 mul    % Blue
        add add 64 idiv      % I = .5G + .31R + .18B
        put
        /rgbindx rgbindx 3 add store
      } for
      grays 0 npixls getinterval
    } bind def

    % Utility procedure for colorimage operator.
    % This procedure takes two procedures off the
    % stack and merges them into a single procedure.

    /mergeprocs { % def
      dup length
      3 -1 roll
      dup
      length
      dup
      5 1 roll
      3 -1 roll
      add
      array cvx
      dup
      3 -1 roll
      0 exch
      putinterval
      dup
      4 2 roll
      putinterval
    } bind def

    /colorimage { % def
      pop pop     % remove 'false 3' operands
      {colortogray} mergeprocs
      image
    } bind def
  } ifelse          % end of 'false' case



% define the colormap
/cmap 723 string def


% load up the colormap
currentfile cmap readhexstring
041808 049008 8c948c 045204 4c544c 04c804 84e284 449644 c4cbc4 0c380e 
04ac07 cce6cc 345e2c e4e7e4 046604 2c3a2c 347234 e4fee2 048208 64cc60 
34922c 24b224 04e404 044604 647264 242623 049f07 8cae8c 04bc06 24c61c 
f4f8f3 1c541c 04d804 1c621c 1c7220 0c280d 14910f 045e04 047c04 ccdcd0 
14ac18 1c481c 747473 04d105 0c6c0b 24852a 1c381c f4f1f3 acafac f4fef5 
0c310c acc6ac 049708 a4a4a3 3c4a44 148314 144812 9cea94 04b405 149e14 
1cbc1c 044004 e4fef4 dcdddd 748274 5c5959 4cba54 145b11 145413 147412 
c4fec4 e4f1e7 146411 088a0a 243028 09c207 fcf8f3 147c13 14c80e acceac 
3c3939 04f405 044e07 07a608 14d00f 0c1f10 0c900b d4d3d4 ecfee3 1c291d 
0c6e14 bcbfbd d4f6d4 909a94 4c5a50 0cac08 24ba24 547e54 0cbc0a 0c5c16 
0c7c0b fcf1fb acb8ac 1c311c aca7a9 e2e2e2 a4e2a4 0cc80a 6c9a6c 143715 
0c650a 0c840b 07de06 14970c 0c980a 0cb40a 848583 ecf0f0 c3c6c3 0c540d 
0c740c cccccc 74ce6c 30a02c 04ec05 54aa5c 6cb66c 9cfa9c 2c862c 5c926c 
6ca674 b4deac 9cda9c 34aa2c 6c7e6c acfeac 448244 34d22c 7d7d7c 6c6d6c 
445644 4c4d4c 1c7a19 1c3e1c 3c3f3c 2c422c 7c9a84 54c254 dceadc 144014 
343231 bccebc bcbabc 447244 6c6664 9c9d9c 7caa7c 349a38 6c7a74 84b69c 
1c4e18 898a89 ccfadc 1c6c2c b8e2c0 1c8a24 a1aaa1 3c4e3c 5f5e5c d8fed8 
24be24 78d670 688668 148a14 14a618 145624 0c480e 2c292b 142916 1c921c 
d4dad9 243828 143017 b4d2bc b4b7b5 1c961c 8c868c 247e24 144e13 04fa04 
246224 fcfefc 0c4e0c ace2b4 3caa3c 244e24 0c180c 949394 545454 ece9ec 
343634 2cb127 6c736c 0ca00c 0cda08 0c5c0b 0ccf06 146a0c b4b2b4 646464 
b4c2b4 0c3f0c ecfdf9 e4dedc ccfdcc 2c2f2b 142214 146b16 c4c2c2 545b54 
2cb62c 74ba74 346634 b4fcb0 244224 444242 246a24 e4feec 0ce204 f4f9fc 
f4eefc 444744 54b654 fcf9fc 0c9114 dcd6d4 ecfeec 0c7b14 0cc614 0c6314 
0c8414 
pop pop   % lose return values from readhexstring


% rlecmapimage expects to have 'w h bits matrix' on stack
/rlecmapimage {
  /buffer 1 string def
  /rgbval 3 string def
  /block  384 string def

  % proc to read a block from file, and return RGB data
  { currentfile buffer readhexstring pop
    /bcount exch 0 get store
    bcount 128 ge
    {  % it's a non-run block
      0 1 bcount 128 sub
      { currentfile buffer readhexstring pop pop

        % look up value in color map
        /rgbval cmap buffer 0 get 3 mul 3 getinterval store

        % and put it in position i*3 in block
        block exch 3 mul rgbval putinterval
      } for
      block  0  bcount 127 sub 3 mul  getinterval
    }

    { % else it's a run block
      currentfile buffer readhexstring pop pop

      % look up value in colormap
      /rgbval cmap buffer 0 get 3 mul 3 getinterval store

      0 1 bcount { block exch 3 mul rgbval putinterval } for

      block 0 bcount 1 add 3 mul getinterval
    } ifelse
  } % end of proc
  false 3 colorimage
} bind def


60 40 8			% dimensions of data
[60 0 0 -40 0 40]		% mapping matrix
rlecmapimage

10bf8131bf05bf03e98165e902e9046587bf3158ec31bfe9658265e9bf09bf
10bf8131bf04bf81e9bf01bf02e98265bfe982e965e901e981bf318131ec82ecbfe982e9
65bf0abf
12bf82751ebf83bf1ebf318231ec3102318111318131bf81bfe901e981bf318131bf01bf
01e90bbf
0fbf02e901bf023101ec021101a981d6a981a9118111318131bf14bf
0fbf8165e901e988e5bfd4ecd66add07808c80149dc2137f46a911d431bfe981e9bf0fbf

0fbf01e982bfe9318331a49ce28fe2454d37562456dc71567bab87a9d4bf81bfe981e9bf
81bf318131bf0abf
10bf8ac775bf311bde43224d37568656cb535f1a733c893cae8506a91131bfe9bf01bf81
58bf0abf
0fbf911ebf31b761a0442245ed56721a530a3a4e3a813a4e864e73c94246e3bf10bf
07bf81e9bf82bfe9bf92bf1ebf31ec4f0c38e2ef8e4d49561a530a3a6283624b052b8a2b
ce4e60c2dfe331bf4cbf0cbf
0abf81e9bf82bfe9ec8eec83de1f21778e786f01341a0a3a1c851c4b052b20168b162054
aa93df11312fe965bf0abf
0ebf8d3111883d77cdcf78646f0134530a810a1c911c4ece20167c517c16542893a9ec31
e965bf0abf
08bf01e999bfe91ebf316cc07743cd45786f49561a530a3a624b6b2b707c510151877c70
4edcaba9bfe981e9bf0abf
0bbf01e985bf27d34352cf90cf0e4d2656011a530a1c62ee2b20167c5102518816cc1db9
d611bfe9bf0abf
07bf81e9bf01bf90e9bf4c86d3445277d92c786f49721a0a3a853a4b0520167c827c51bd
88bd5116e44b157a11bf0cbf
0dbf8d3f0fc33d4403cfbb0e3756011a0a860a624b2b20167c817c5102510116854b897b
a911bf0bbf
08bf82e9e5bf97bf75dab209bcc021ef254d2649561a533a1c4b052b70167c037c811620
85203a853911bf0bbf
0bbf0131869eb6d3b0bc7748884845646f561acb0a7382734b2b812b1683167c16cc01cc
012b844b2813d4bf0bbf
0abf0231955e236db0c04463cf45646f5634cb533a73624b2b2016821670548854ce2b20
4b28e831bf0bbf
0abf023183b5b6d3b089b044436e45786f49341a871a0a733a626b2b200120896b4e6b05
2b1c5f9decbf0bbf
09bf8131bf97bf31d82e09d3b044cd485a786f1201cb1a530a73621c052b852b054e4b1c
0585053a282d58bf0bbf
0bbf9431bf556709b03844cd482c7864125634cb1a5f0a7382734b0501050162011c854b
0aae2d58bf0bbf
0bbf0131934a236dd3b0bc7743485a786f1201341acb535f3a813a1c011c0173023a8453
3b1458bf0bbf
0bbf8431bf0455098309d338778277ef2c852c266f1201348134cb83cb530a3a013a810a
5f815f0a850a1ab37d58bf0bbf
08bf81e9bf93bf31bf18d83209d338c044cd6e0e2c64126f0172837271cb5382530a5383
53ae531a851a01a57e58bf0bbf
0bbf01e5837600230901098138c082c0482c862c7864126f49568156728272341a811a72
0272864912bb841131bf0abf
03bf94e9bfe9bfe9bf1ebf1ebf275923b632099538c044ef81ef7881786481646f816fad
84adea01ea560156882449ad2da3115831bf0abf
04bf02e992654ce61e75bf0d185523b66d0995bcc043cd2c812c7881786483646f64f001
f08b6f496f49642d6382e3314cbf0abf
01bf85e9e5e9652fc784c7693fc7698a69c7d2b200232eb60929bc84bc6343ef2c862c78
45784d78ed82ed6f6489644d45a3afa2114c31bf0abf
01e58175c783c769d5eb8ceb797679dab87908db67c4b66d876d9538b0447743ef84ef6e
2c78458e455a457864788ecfbe9fd4315831bf0abf
88e5750d3f5779da98d083d0689b3501358d5d0236c45567b6320995b04477cd92cdef6e
2c6e5ad95acf782c4517813e31bf2fbf0bbf
887569575bd0689bc5ba83ba8a2a8a878aca2a74db5955b284b23209d3b081b077017701
cd016e02ef876e2c6e4810a4d4bf01bf814cbf0abf
873f79b835c5ba2a9a829aa8410141868de1d104c690d881d85583552e6d958b9538b0c0
77cd03cd6377afcd84cd4321c1d483d4e9654c814cbf0abf
88575b9b742ad1418de181e15081509603968450c8d759d881d8b283b2326d0981099585
9538bcb0381f871f95c3995ca931bf81bfe981e9bf0bbf
8779b8c58ad1c6e750855096d7b119b104b184d7b119d855845523b2b66d016d83952995
2987296de09211d431bf01bf01e90cbf
8979d0c52aa88de15096b181b119041901b18796c80fd74a59b2b602b6016d86326d328f
ac0b318331bf31bf01bf81e9bf0cbf
88575b9b742ad1c68de186e1c850c850c850865096c850e1e70487045e8ca7912e672e85
2e8cac33473101318158bf02bf82e9bfe981e9bf0abf
8b3f799835c5742a8bd1a8dbc683c68dc68d818dc601c68cdbd1ca40a15da66697274711
31863158bf31bf31bf82bf4ce985e9bfe9bfe9bf0abf
8bc76957dab8359bc5a1748a2a052a018a01748b029ba6665b279447ec311ebf83bf581e
bf82bf4cbf02bf82e9bfe981e9bf0abf
881e75693f57795bb8d082d068350135029b0135013088b8985b7608b40d751e811ebf83
bf1e75bf81bf4c814cbf05bf81e9bf0bbf
83e9e52fc782c7693f823f5779817976027681da760276827957b482b4c7750175822fe5
bf82bf4cbf01bf814cbf81bfe981e9bf01bf01e90dbf

%
% Compression made this file 26.36% of the uncompressed size.
%


showpage

% stop using temporary dictionary
end

% restore original state
origstate restore

%%Trailer

%%EndDocument
 @endspecial 298 w(Cr)n(afty)f(nativ)-6 b(e)66 b(e)-7
b(x)g(ecution)66 b(109msec)4581 2931 y Fc(#)87 b(Bench)i(:)e(./mtst1)j
(-h0x800000)h(../benchs/cra)q(ft)q(y)4581 3103 y(#)c(File)175
b(:)87 b(sesc_crafty.EM)q(om)q(he)266 b(:)606 b(Mon)88
b(Mar)g(25)g(21:27:33)i(2002)5100 3276 y(Sim.)e(Speed)781
b(Exe)88 b(Time)781 b(Sim)88 b(Time)g(\(180MHz\))5100
3449 y(1137.96)i(KIPS)607 b(17.88)89 b(secs)521 b(105.50)90
b(msec)4581 3622 y(Proc)175 b(Type)780 b(Total)868 b(RAS)953
b(BPred)435 b(BTB)4840 3794 y(0)174 b(2bit)607 b(80.819\045)90
b(\()d(99.91\045)j(of)174 b(10.05\045\))i(84.02\045)g(77.40\045)4581
3967 y(File)f(IPC)434 b(Cycles)349 b(Busy)521 b(Control)436
b(Window)176 b(Struct)g(Memory)4840 4140 y(0)e(1.07)h(18990598)i
(26.79\045)f(29.29\045)g(18.45\045)g(15.42\045)262 b(0.20\045)g
(9.85\045)10245 5222 y
 0 setgray
 10245 5222 a 4500 6000 a
 tx@Dict begin -90 Rot  end
 4500
6000 a eop
%%Page: 16 16
16 15 bop 4500 6000 a
 tx@Dict begin 90 Rot  end
 4500 6000 a 5981 1792 a @beginspecial
-168 @llx 371 @lly 782 @urx 421 @ury 2834 @rwi 283 @rhi
@setspecial
%%BeginDocument: barre-rico.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /ufs/goualard/TEMP/barre_hor.ps
%%Creator: XV Version 3.10a  Rev: 12/29/94 (PNG patch 1.2)  -  by John Bradley
%%BoundingBox: -168 371 782 421
%%Pages: 1
%%DocumentFonts:
%%EndComments
%%EndProlog

%%Page: 1 1

% remember original state
/origstate save def

% build a temporary dictionary
20 dict begin

% define space for color conversions
/grays 950 string def  % space for gray scale line
/npixls 0 def
/rgbindx 0 def

% lower left corner
-168 371 translate

% size of image (on paper, in 1/72inch coords)
949.96800 49.96800 scale

% define 'colorimage' if it isn't defined
%   ('colortogray' and 'mergeprocs' come from xwd2ps
%     via xgrab)
/colorimage where   % do we know about 'colorimage'?
  { pop }           % yes: pop off the 'dict' returned
  {                 % no:  define one
    /colortogray {  % define an RGB->I function
      /rgbdata exch store    % call input 'rgbdata'
      rgbdata length 3 idiv
      /npixls exch store
      /rgbindx 0 store
      0 1 npixls 1 sub {
        grays exch
        rgbdata rgbindx       get 20 mul    % Red
        rgbdata rgbindx 1 add get 32 mul    % Green
        rgbdata rgbindx 2 add get 12 mul    % Blue
        add add 64 idiv      % I = .5G + .31R + .18B
        put
        /rgbindx rgbindx 3 add store
      } for
      grays 0 npixls getinterval
    } bind def

    % Utility procedure for colorimage operator.
    % This procedure takes two procedures off the
    % stack and merges them into a single procedure.

    /mergeprocs { % def
      dup length
      3 -1 roll
      dup
      length
      dup
      5 1 roll
      3 -1 roll
      add
      array cvx
      dup
      3 -1 roll
      0 exch
      putinterval
      dup
      4 2 roll
      putinterval
    } bind def

    /colorimage { % def
      pop pop     % remove 'false 3' operands
      {colortogray} mergeprocs
      image
    } bind def
  } ifelse          % end of 'false' case



% define the colormap
/cmap 117 string def


% load up the colormap
currentfile cmap readhexstring
bcfe04 dcfe84 ccfe44 ecfec4 c4fe24 d4fe64 f4fee4 e4fea4 bcfe14 ccfe54 
f4fed4 c4fe34 d4fe74 fcfef4 ecfeb4 e4fe94 f4fecc fcfee4 ecfeac c4fe1c 
d4fe54 ccfe3c dcfe74 bcfe0c dcfe8c ccfe4c ecfecc c4fe2c d4fe6c e4feac 
bcfe1c f4fedc c4fe3c fcfefc ecfebc e4fe9c fcfeec d4fe5c dcfe7c 
pop pop   % lose return values from readhexstring


% rlecmapimage expects to have 'w h bits matrix' on stack
/rlecmapimage {
  /buffer 1 string def
  /rgbval 3 string def
  /block  384 string def

  % proc to read a block from file, and return RGB data
  { currentfile buffer readhexstring pop
    /bcount exch 0 get store
    bcount 128 ge
    {  % it's a non-run block
      0 1 bcount 128 sub
      { currentfile buffer readhexstring pop pop

        % look up value in color map
        /rgbval cmap buffer 0 get 3 mul 3 getinterval store

        % and put it in position i*3 in block
        block exch 3 mul rgbval putinterval
      } for
      block  0  bcount 127 sub 3 mul  getinterval
    }

    { % else it's a run block
      currentfile buffer readhexstring pop pop

      % look up value in colormap
      /rgbval cmap buffer 0 get 3 mul 3 getinterval store

      0 1 bcount { block exch 3 mul rgbval putinterval } for

      block 0 bcount 1 add 3 mul getinterval
    } ifelse
  } % end of proc
  false 3 colorimage
} bind def


950 50 8			% dimensions of data
[950 0 0 -50 0 50]		% mapping matrix
rlecmapimage

7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f210221870d1f220e220311212a21
7f217f217f217f217f217f2175218211030e820e220e820e220e860e220e23050b048404
090e24212a21
7f217f217f217f217f217f2171218e110312260b041e131e131e131e131e871e17001702
1d24212c21
7f217f217f217f217f217f216921830d1f220e870e221226200408000b00841702070d21
0521842403100d212321
7f217f217f217f217f217f2121218524220f231f213a218f0d0a220e220e23051b041e13
1e0817000c008408190706210421851103221f0d212521
7f217f217f217f217f217f211e2189240e1c1b17000825242136218a0d1026021b041e13
081700110085172001030d210421840316030d212821
7f217f217f217f217f21342186111a120f070a215721860d1110220e220e860e12182504
17000300821b1f212521851f0e2326230e080e841d010908001100820820090209840c1d
1a06210521841026230d212a21
7f217f217f217f21792186241f10220e220e820e220e820e220e820e220e820e220e820e
220e830e070f01010182070a2117218b0610231c1508001708090a2151218e0d1f101d01
14201b1e131e131e08000700820c0d211021840d100311210921881103220e07050b0800
8400171e081e821e081e851e081e0817001000851e2009181a210b21850d22261d24212c
21
7f217f217f217f21472184241f10220e820e220e820e220e820e220e820e220e820e220e
820e220e810e2283221f0d210e219a241f10070f1c09151e041e131e131e131e131e131e
131e131e131e821e080002008b17081410210d1110220e220e820e220e820e220e010e81
2301880126012616191b08000500820422212f2182240d211921890d0a0e072625150417
00100082201a210921890d1110220e23011620048304051f210421891103231c15131e08
1700190082171e090309820c1a210e21841f0e0a0d212e21
7f217f217f217f213f2190241f100e070f011c1920041e131e081e0882081e0882081e08
82081e0882081e0803088304250a2107218b241f030e12181619151e08001d00811e268c
2614201b041e131e131e131e088108178117000f0082091f211521840d0610220e0f0e88
120f012625020c11211321890d0a22121809040817001300831e050a2105218a0d1f101d
0114201b1e170004008408260e220e860e230c020417001800821e2009020982181a2114
21810d213321
7f211221842422121f217f217f217f211221850d0a220e220e820e220e820e220e820e22
0e010e881d0f1605090b041e178117001a008f1e22210d1110221d0f0116190b041e1781
1700220001171f00820b2221102189111022120f0125151b1e011e81081e821e081e821e
081e821e081e821e081e821e1700030082171c0e110e861d01251b1e170015008220181d
021d81220e020e86070119150417000b0086081e131e08170019008308091d210c21830d
1f24214121
7f210721830d0a220e040e83230504088308052421492185240a22230f01130182070a21
7f2106218c240a03220e220e220e220e1d0f840f01231f217f210a2199240a221d0f0116
191b1e131e131e131e131e131e131e131e17002300810b16871609200413081700490087
171e051d1f10220e0a0e8712232625201b1e178117001b000108011e81081e821e081e82
1e081e821e081e821e081e831e0817000c0085171e201e08000300831720090c840c090b
1b1e871e081e081e0817001f0083081e201e821e20090809820c03210b21860d0a222307
0d210521010d3a21
7f21042188112218141b13081e088108178117000300821b1f2140218b241f100e070f1c
25021b1317811700140083081410217f218c241f10070f05021b04131e131e011e810817
811700010093170207220e220e220e220e220e220e22120f18018301231f216e218c0d0a
22120f0116191b130817004c000117811e208120090509822008002c008308200c188518
0c09021b1e821e081e821e081e821e081e811e08810817811700400081171e871e09181a
061c08000300851e200b1e1700250083171e200983091806211721820d110a010a841d26
1918214421
6c219a1103220e220e220e220e220e220e220e220e220e22120f050b08000d0093091d22
0e220e220e220e220e220e220e2203112127218c241f100e070f0105021b1e08001e0082
0422216a2189241f10220e230f1826018201260182012601890126160509150408170011
0085131e131e131e821e131e831e131e0882081700020083082524215e2183240a220e82
0e220e8b0e22120f011605190b1308178117004d008817081e2009181d06210821810900
22000408071e0117510085080b09181a21022182060900040082081700120082171e000f
00011e83091806210d21821a031d8e1d221d221d0e22030a110d240d240d810d21012182
2406214521
68219711030f252004131e131e131e131e131e131e131e131e131e821e08001100011e83
131e131e821e131e821e131e821e131e811e1383131c1f211e218d0d1110221d0f260519
0b041e17002500821b0c0103018426161c05250b258405160f1d0e210e82070f26012681
0126822601268426010f1f2117218a241f100e070f1609150408820817003900821b1f21
56218a0a0f0c2514190215041e0801088217081701173400011781001781170016000117
011e85200c181d06210e218105000d0083171e08000c00011781081e041e020802171e00
82081e208120090d0982201e001b00850820090c1a210721821817000b008b081e200920
1920192009200986090c1d1a060900030083171e20090209010c83181a0621082187060a
0e1d071d0e1d821d0f1802180107841d220a24215221
1d21830d1f220e820e220e820e220e820e220e860e220e221024212321840d10230f010a
01852616091b08003b00820812210421830d1f102281220e820e220e820e220e820e220e
820e220e820e220e890e1d0f011609201b1317811700470081081e821e081e821e081e82
1e081e821e081e821e081e821e081e821e081e821e081e821e081e821e081e841e081e08
000a0083170b260182012601820126018201260182012601820126018a01260126160525
19151b088108004200820c0d21032196240a03220e220e220e220e220e220e220e220e22
0e1d0f810f01150182231f210921840d0610220e0e0e8418140417002100821720090409
822017002c008317081e208520090c1d1a211621821a201e811e20832009200982092009
86092009181a0c003400011e8520090c181a211221831a0c200982092009820920091109
830c1a06210a2182062000080087082009181a0621060206812106810621052183061d0c
0984090c181d1a011a02060e21820d062482240d216021
1c21970d0702041e131e131e131e131e131e131e0420050f100d211f21840d231b17004d
00a008182212230f011609151b131e131e131e131e131e131e131e131e131e130817001b
0083170017007f0041008c201a241f10070f1c021b04131e821e131e821e131e821e131e
821e131e011e810817811700160001178205112101218a111022120f181614151b1e821e
081e821e081e821e081e821e081e821e0817811700250082090621032182060900260088
17081e20090c1d1a212e2183062017001f008317081e208120090a09830c181a21442183
240917008300081e2001208409181a0621142183061a1d1a841a062106217721
1b21830d071b000f008517080b05230e8f0e220e220e220e220e220e220e220e22842210
110d210821830d231e004f00841e041e08178117007f0065008117000e000108011e8720
0c16090b1e08003000880401181614201b1e178117003a00822006210421820620001f00
81171e861e20090c1d1a213521820609001700011788081e20090c181a0621492184060a
101a1086101a10110d210d880d061a180c09181a0601067f211b21
1b21820a1900140081081e821e131e821e131e821e131e821e131e8d1e131e13040b1925
1812221f0d210321820a20007f007f0033000108160081081e031e820817003600811700
40008308091a2106218203091e031e8120091609830c1d1a213d21821f01091409840c18
1a06214e21010d0124010685240624060d210321850a26012206217f211f21
1b21831020170029008c1708040b021925051626051e007f002f000d1782081e20812009
1e0982201e00370081171e811e208120090c0982181d0683061808007900011781081e07
1e8120090e09820c1d217f216721820611217f212221
1b21830d0e0c090c0982201e004d00820817002a000217011e8120090c09811e00380082
17081e851e090c181a068306210621822106218221062182210621822106212521821a0c
09010982201e002700011781081e811e2085200c181d06211321821a200022000117011e
82091e0035008317081e20812009090982201e0002008608091a062106217f215521810d
217f215321
2d21851a0c201e17004300850820090c1a068206200022008317081e208620090c181d1a
210f21821d08002e000117021e0120840c181a06214221821d0c09250983181d06211c21
821a20001c008817081e2009181d062101218109002d0081171e871e20090c181a06210e
21851d09200c1a217f215a2182110d215321810d217d21
30218306180c090f0983201e08002500811e09820920090109830c1a062104218203201e
081e01201309810c1d821d1a21182182062000260081171e011e8620090c181a06217f21
1521830d1d0c091909840c181d06210721821a191e091e83200920098209200982092009
8209200982092009820920098209200982092009820920098209200985090c181a06217f
217621810d215121860d1026142510217c21
462185061d0c2017002000820906214e21820618098209200981092082201e178217081e
011e01201309840c181a06217f217f217f217f214421810d2401248306240d217d21
4a21841d201e0800150081081e041e820906217f217f217f217f217f217f214521
4e2185061a18201e000b0085171e091d06217f217f217f217f217f217f214e21
5221821a0c090909830c1d06217f217f217f217f217f217f215121
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521

%
% Compression made this file 2.88% of the uncompressed size.
%


showpage

% stop using temporary dictionary
end

% restore original state
origstate restore

%%Trailer

%%EndDocument
 @endspecial 5001 5222 a @beginspecial @setspecial
 tx@Dict begin STP newpath 1.0 SLW 0.5451 0.39608 0.03137 setrgbcolor
 /ArrowA { moveto } def /ArrowB { } def [ 341.43292 -28.45274 -22.76227
-28.45274  /Lineto /lineto load def false Line  gsave 1.0 SLW 0.5451
0.39608 0.03137 setrgbcolor 0 setlinecap stroke  grestore end
 
@endspecial
621 x Fi(SESC)20 b(\(IA)n(COMA)e(g)o(roup\))2960 b(Joe)20
b(Renau,)h(Basilio)e(F)m(r)o(aguela,)h(and)g(Liu)g(W)n(ei)39
b(\226)20 b(page)40 b(16/23)4266 1057 y
 gsave currentpoint currentpoint translate 270 neg rotate neg exch
neg exch translate
 4266 1057 a @beginspecial
276 @llx 366 @lly 336 @urx 426 @ury 141 @rwi 141 @rhi
@setspecial
%%BeginDocument: angleHG.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/rico/texte/texstyle/Prosper-beta/img/angleHG.ps
%%Creator: XV Version 3.10a  Rev: 12/29/94 (PNG patch 1.2)  -  by John Bradley
%%BoundingBox: 276 366 336 426
%%Pages: 1
%%DocumentFonts:
%%EndComments
%%EndProlog

%%Page: 1 1

% remember original state
/origstate save def

% build a temporary dictionary
20 dict begin

% define string to hold a scanline's worth of data
/pix 180 string def

% define space for color conversions
/grays 60 string def  % space for gray scale line
/npixls 0 def
/rgbindx 0 def

% print in landscape mode
90 rotate 0 -612 translate

% lower left corner
366 276 translate

% size of image (on paper, in 1/72inch coords)
59.97600 59.97600 scale

% define 'colorimage' if it isn't defined
%   ('colortogray' and 'mergeprocs' come from xwd2ps
%     via xgrab)
/colorimage where   % do we know about 'colorimage'?
  { pop }           % yes: pop off the 'dict' returned
  {                 % no:  define one
    /colortogray {  % define an RGB->I function
      /rgbdata exch store    % call input 'rgbdata'
      rgbdata length 3 idiv
      /npixls exch store
      /rgbindx 0 store
      0 1 npixls 1 sub {
        grays exch
        rgbdata rgbindx       get 20 mul    % Red
        rgbdata rgbindx 1 add get 32 mul    % Green
        rgbdata rgbindx 2 add get 12 mul    % Blue
        add add 64 idiv      % I = .5G + .31R + .18B
        put
        /rgbindx rgbindx 3 add store
      } for
      grays 0 npixls getinterval
    } bind def

    % Utility procedure for colorimage operator.
    % This procedure takes two procedures off the
    % stack and merges them into a single procedure.

    /mergeprocs { % def
      dup length
      3 -1 roll
      dup
      length
      dup
      5 1 roll
      3 -1 roll
      add
      array cvx
      dup
      3 -1 roll
      0 exch
      putinterval
      dup
      4 2 roll
      putinterval
    } bind def

    /colorimage { % def
      pop pop     % remove 'false 3' operands
      {colortogray} mergeprocs
      image
    } bind def
  } ifelse          % end of 'false' case



60 60 8			% dimensions of data
[60 0 0 -60 0 60]		% mapping matrix
{currentfile pix readhexstring pop}
false 3 colorimage

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffafee3effeaaffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffafee3e3fe64ffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffe3fe64fafee3ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffe9fe88f1feb3ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffe8fe86dffe55fefefeffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffebfe96dafe37fefefeffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffedfe9edefe48f7fed5ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffedfe9ee2fe60eefea5f5fecaecfe95ecfe97ecfe98
ecfe99ecfe9bf6feceffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffeffeaadffe4fe0fe55dcfe3f
dbfe3cdbfe3ddbfe3dddfe48defe4cdcfe43d9fe32d6fe20e2fe5fe3fe67defe4ddefe4d
defe4edefe4edbfe3bdbfe3cdcfe3ddcfe3fdcfe40dcfe42ddfe43ddfe45ddfe46ddfe48
ddfe46e2fe63e5fe72e5fe74e6fe76e6fe77e6fe79e7fe7ae9fe86e8fe85ebfe94ecfe97
ecfe99ecfe9cedfe9eeffeacf2febcf3febef3fec1f4fec4f9fedfffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffeffeaaf1feb3f5fec7e9fe87
e7fe7be7fe7be7fe7be2fe60e1fe5bd6fe1dd8fe2adafe33e1fe5bdffe54defe4edffe50
dffe51dffe53e0fe54ddfe49ddfe4bdefe4cdefe4edefe50dffe52dffe54e5fe73eafe93
e9fe89e6fe7ae4fe6ce4fe6ee8fe84e8fe85e9fe87e9fe8ae8fe84e7fe7ce8fe81e9fe8a
f0feb0f8fedbf9fedff1feb8f1febaeafe8bfbfeeafbfeebfdfef5ffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff5fecddffe52e1fe5df5fec9f5fec9f5fecaf5feca
f5fecbf5feccf5feccf5fecdf6fecef6fecef6fecef6fecff6fed0f6fed1eefea5e9fe8a
f6fed1f7fed7f7fed8f7fed9f6fecdfafee8fcfef1fcfef2fdfef7fcfef3fdfef7fefefc
fefefcfefefdf9fee0f6fecff5feccf4fec2ffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff5fecde3fe64e5fe74ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffdfef5fefefdfefefdfefefcfefefcfffffffefef9
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff5fecde5fe74dffe53ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff6fecee6fe79e5fe6ff8fed8ffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff6fecee6fe7aebfe95effeaaffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff6fecee6fe7aedfe9eeefea2ffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff6fecee6fe7bedfe9eeefea3ffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff6fecfe6fe78ecfe9eeefea5ffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffefefe
fefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff6fed0e2fe63e0fe59dffe55ffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffefefe
fefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffedfe9fe2fe5fd8fe2ad8fe2dffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffecfe9adffe53d6fe1cdefe4cf6fecfffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffedfe9cd8fe2cd6fe20defe4bf6fed0ffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffefefdffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffedfe9dd8fe27d7fe22defe4ef6fed0ffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffedfe9dd7fe26d6fe20e0fe5bf6fed2ffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff3febdd7fe22d7fe22e1fe5ef7fed3ffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff4fec6d6fe20d7fe21e0fe57f7fed4ffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff4fec6d6fe20d6fe1fe0fe59f7fed5ffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff4fec6d6fe1ed6fe1ee5fe73f7fed6ffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff4fec6d6fe1dd9fe32e0fe56ffffffffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff5fecce0fe55defe48e8fe81ffffffffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffbfeede7fe7fe0fe56e9fe85ffffffffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff7fed8e8fe84e7fe7ef1feb4ffffffffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff2feb8edfea0effea6f1feb6ffffffffffffffffff
fffffffefefefefefeffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffefefceffeabf0feafeffea7f2feb7ffffffffffffffffff
fffffffefefefefefefefefeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffefefcf5fecaecfe9de7fe7af8feddffffffffffffffffff
fffffffefefefefefefefefefefefeffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffefefcf5fecce8fe85e8fe80ffffffffffffffffffffffff
fffffffefefefefefefefefeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffff8fedefdfef8fdfefbf3fec0e9fe89ecfe96ffffffffffffffffffffffff
fefefefefefefefefefefefeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffdfef6fefefafefefaf4fec2e9fe89ecfe96ffffffffffffffffffffffff
fefefefefefefefefefefefeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffdfef6fefefefefefdf4fec2e8fe85edfe9dffffffffffffffffffffffff
fefefefefefefefefefefefeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffefef9fefefdfefefce7fe7be5fe76f2feb7ffffffffffffffffffffffff
fffffffffffffefefefefefeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffdfef6fdfefafefefbe2fe65e5fe75f6fed0ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffdfef9fefefce6fe79e6fe77fafee6ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffcfef6fefefbecfe9be7fe7efbfeecffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffdfef5fdfef7f7fed5e9fe8dfcfef2ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffcfeeffbfeebedfea1fdfef7ffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffefefeffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffefefdfbfee9effeabffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffefefefefefeffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffbfeeceffea6ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff9fee3f3fec1ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffeefea2f8fedaffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff1feb2fafee4ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffcfef0fefefaffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff


showpage

% stop using temporary dictionary
end

% restore original state
origstate restore

%%Trailer

%%EndDocument
 @endspecial 4511 1057 a
 currentpoint grestore moveto
 4511 1057 a 4130 5844 a
 currentpoint currentpoint translate 0.76611 0.76611 scale neg exch
neg exch translate
 4130
5844 a 4130 5844 a
 gsave currentpoint currentpoint translate 0 neg rotate neg exch neg
exch translate
 4130 5844 a @beginspecial 0 @llx 0
@lly 37 @urx 42 @ury 370 @rwi @setspecial
%%BeginDocument: figs/uiuc.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: uiuc.eps
%%Creator: fig2dev Version 3.2 Patchlevel 3d
%%CreationDate: Sun Feb 10 22:03:46 2002
%%For: renau@nether.cs.uiuc.edu (Jose Renau)
%%BoundingBox: 0 0 37 42
%%Magnification: 1.0000
%%EndComments
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def
/col32 {0.200 0.200 0.400 srgb} bind def
/col33 {0.800 0.400 0.000 srgb} bind def

end
save
newpath 0 42 moveto 0 0 lineto 37 0 lineto 37 42 lineto closepath clip newpath
-273.7 413.7 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
 0.06000 0.06000 sc
%
% Fig objects follow
%
%  polyline 
% Polyline
n 5070 6872 m 5070 6227 l 4584 6227 l 4584 6872 l
 5070 6872 l  cp gs col32 1.00 shd ef gr 
%  polyline 
% Polyline
15.000 slw
n 5070 6872 m 5070 6227 l 4584 6227 l 4584 6872 l
 5070 6872 l  cp gs col32 s gr 
%  polyline 
% Polyline
0.000 slw
n 5056 6858 m 5056 6243 l 4598 6243 l 4598 6858 l
 5056 6858 l  cp gs col32 1.00 shd ef gr 
%  polyline 
% Polyline
7.500 slw
n 5056 6858 m 5056 6243 l 4598 6243 l 4598 6858 l
 5056 6858 l  cp gs col33 s gr 
%  spline 
% Polyline
2 slj
0.000 slw
n 4944 6783 m 4944 6781 l 4944 6773 l 4944 6759 l 4944 6751 l 4944 6749 l
 4943 6749 l 4935 6748 l 4924 6746 l 4914 6744 l 4906 6742 l
 4900 6741 l 4896 6739 l 4892 6738 l 4887 6735 l 4884 6732 l
 4880 6728 l 4877 6722 l 4875 6716 l 4873 6709 l 4872 6702 l
 4871 6693 l 4870 6683 l 4869 6670 l 4869 6654 l 4868 6637 l
 4868 6621 l 4868 6609 l 4868 6604 l 4868 6603 l 4868 6602 l
 4868 6597 l 4868 6585 l 4868 6567 l 4868 6544 l 4868 6521 l
 4868 6503 l 4868 6491 l 4868 6486 l 4868 6485 l 4868 6483 l
 4868 6474 l 4868 6457 l 4869 6438 l 4869 6420 l 4870 6406 l
 4870 6395 l 4871 6387 l 4873 6381 l 4874 6375 l 4876 6371 l
 4879 6367 l 4882 6365 l 4885 6363 l 4889 6362 l 4892 6361 l
 4898 6359 l 4905 6358 l 4915 6356 l 4925 6354 l 4933 6352 l
 4934 6352 l 4934 6350 l 4934 6343 l 4934 6331 l 4934 6324 l
 4934 6322 l 4933 6322 l 4928 6322 l 4916 6322 l 4896 6322 l
 4869 6322 l 4837 6322 l 4806 6322 l 4779 6322 l 4759 6322 l
 4747 6322 l 4742 6322 l 4741 6322 l 4740 6322 l 4737 6322 l
 4732 6322 l 4729 6322 l 4726 6322 l 4724 6322 l 4721 6323 l
 4718 6324 l 4716 6325 l 4714 6326 l 4712 6327 l 4710 6329 l
 4707 6332 l 4705 6334 l 4703 6336 l 4701 6338 l 4700 6339 l
 4699 6341 l 4698 6342 l 4697 6344 l 4696 6346 l 4696 6347 l
 4695 6349 l 4695 6351 l 4695 6353 l 4694 6356 l 4694 6358 l
 4694 6359 l 4694 6360 l 4694 6362 l 4694 6365 l 4694 6367 l
 4695 6369 l 4695 6370 l 4696 6372 l 4697 6374 l 4697 6375 l
 4698 6377 l 4699 6378 l 4701 6379 l 4702 6381 l 4704 6383 l
 4706 6385 l 4708 6386 l 4709 6388 l 4710 6389 l 4712 6389 l
 4713 6390 l 4715 6391 l 4716 6391 l 4718 6391 l 4720 6391 l
 4721 6391 l 4724 6391 l 4726 6391 l 4727 6391 l 4729 6391 l
 4732 6390 l 4735 6390 l 4737 6389 l 4740 6388 l 4742 6387 l
 4744 6385 l 4747 6383 l 4748 6381 l 4749 6379 l 4750 6376 l
 4751 6372 l 4752 6369 l 4752 6368 l 4752 6366 l 4752 6364 l
 4752 6362 l 4752 6361 l 4752 6359 l 4752 6358 l 4751 6357 l
 4751 6356 l 4750 6355 l 4749 6354 l 4749 6353 l 4748 6352 l
 4747 6351 l 4746 6350 l 4745 6349 l 4744 6348 l 4743 6348 l
 4742 6347 l 4741 6346 l 4740 6346 l 4739 6346 l 4738 6346 l
 4736 6345 l 4735 6345 l 4733 6345 l 4732 6345 l 4730 6345 l
 4729 6345 l 4728 6346 l 4727 6346 l 4725 6346 l 4724 6347 l
 4724 6348 l 4723 6348 l 4722 6349 l 4721 6351 l 4720 6352 l
 4719 6353 l 4718 6354 l 4718 6355 l 4717 6356 l 4717 6357 l
 4717 6358 l 4716 6359 l 4717 6360 l 4717 6361 l 4717 6362 l
 4717 6363 l 4718 6364 l 4718 6365 l 4719 6366 l 4719 6367 l
 4720 6367 l 4720 6368 l 4721 6368 l 4722 6369 l 4723 6369 l
 4723 6368 l 4724 6368 l 4725 6368 l 4726 6367 l 4727 6367 l
 4727 6366 l 4728 6366 l 4728 6365 l 4729 6365 l 4729 6364 l
 4729 6363 l 4729 6362 l 4729 6361 l 4728 6360 l 4728 6359 l
 4729 6359 l 4729 6358 l 4730 6357 l 4731 6357 l 4731 6356 l
 4732 6356 l 4733 6356 l 4734 6356 l 4735 6356 l 4735 6357 l
 4736 6357 l 4737 6357 l 4738 6357 l 4738 6358 l 4739 6358 l
 4739 6359 l 4739 6360 l 4740 6360 l 4740 6361 l 4740 6362 l
 4741 6362 l 4741 6363 l 4741 6364 l 4740 6364 l 4740 6365 l
 4740 6366 l 4740 6368 l 4739 6371 l 4739 6373 l 4738 6374 l
 4737 6375 l 4736 6376 l 4735 6377 l 4733 6378 l 4732 6379 l
 4731 6379 l 4729 6379 l 4727 6380 l 4725 6380 l 4724 6380 l
 4722 6380 l 4721 6380 l 4720 6380 l 4719 6380 l 4718 6380 l
 4717 6379 l 4716 6379 l 4715 6379 l 4715 6378 l 4714 6377 l
 4713 6376 l 4712 6375 l 4711 6374 l 4710 6373 l 4710 6372 l
 4709 6372 l 4708 6371 l 4708 6370 l 4707 6369 l 4707 6368 l
 4707 6367 l 4706 6365 l 4706 6363 l 4706 6361 l 4706 6359 l
 4706 6357 l 4706 6355 l 4706 6353 l 4706 6352 l 4707 6351 l
 4707 6350 l 4707 6348 l 4708 6347 l 4709 6346 l 4709 6345 l
 4710 6344 l 4712 6343 l 4713 6342 l 4715 6340 l 4717 6339 l
 4718 6337 l 4720 6337 l 4721 6336 l 4723 6335 l 4725 6334 l
 4727 6334 l 4729 6334 l 4731 6333 l 4734 6333 l 4738 6333 l
 4740 6333 l 4741 6333 l 4742 6333 l 4744 6333 l 4747 6333 l
 4753 6333 l 4759 6333 l 4767 6333 l 4776 6333 l 4785 6333 l
 4794 6333 l 4802 6333 l 4809 6333 l 4815 6333 l 4822 6333 l
 4827 6333 l 4828 6333 l 4828 6334 l 4828 6337 l 4828 6341 l
 4828 6344 l 4828 6345 l 4826 6345 l 4816 6345 l 4797 6345 l
 4779 6345 l 4769 6345 l 4767 6345 l 4766 6345 l 4765 6345 l
 4764 6346 l 4763 6346 l 4762 6347 l 4762 6348 l 4761 6349 l
 4761 6350 l 4761 6351 l 4761 6352 l 4761 6353 l 4761 6354 l
 4761 6355 l 4762 6356 l 4762 6357 l 4763 6358 l 4764 6359 l
 4765 6359 l 4766 6359 l 4767 6359 l 4769 6359 l 4779 6359 l
 4798 6359 l 4816 6359 l 4826 6359 l 4828 6359 l 4828 6360 l
 4828 6362 l 4828 6367 l 4828 6369 l 4828 6370 l 4826 6370 l
 4817 6370 l 4799 6370 l 4782 6370 l 4773 6370 l 4771 6370 l
 4770 6370 l 4769 6370 l 4768 6370 l 4767 6371 l 4766 6371 l
 4766 6372 l 4765 6373 l 4765 6374 l 4765 6375 l 4765 6376 l
 4765 6377 l 4766 6378 l 4766 6379 l 4767 6380 l 4768 6381 l
 4769 6381 l 4770 6381 l 4771 6381 l 4773 6381 l 4782 6381 l
 4800 6381 l 4817 6381 l 4826 6381 l 4828 6381 l 4828 6384 l
 4828 6391 l 4828 6404 l 4828 6423 l 4828 6449 l 4828 6480 l
 4828 6516 l 4828 6554 l 4828 6592 l 4828 6628 l 4828 6659 l
 4828 6685 l 4828 6704 l 4828 6717 l 4828 6724 l 4828 6727 l
 4827 6727 l 4819 6727 l 4802 6727 l 4780 6727 l 4757 6727 l
 4740 6727 l 4732 6727 l 4731 6727 l 4730 6727 l 4729 6727 l
 4728 6727 l 4727 6728 l 4726 6728 l 4726 6729 l 4726 6730 l
 4725 6730 l 4725 6731 l 4725 6732 l 4725 6733 l 4725 6734 l
 4725 6735 l 4725 6736 l 4725 6737 l 4726 6738 l 4726 6739 l
 4727 6739 l 4727 6740 l 4728 6740 l 4729 6740 l 4730 6740 l
 4731 6740 l 4732 6740 l 4740 6740 l 4757 6740 l 4780 6740 l
 4802 6740 l 4819 6740 l 4827 6740 l 4828 6740 l 4828 6741 l
 4828 6745 l 4828 6750 l 4828 6754 l 4828 6755 l 4827 6755 l
 4822 6755 l 4811 6755 l 4792 6755 l 4770 6755 l 4748 6755 l
 4729 6755 l 4718 6755 l 4713 6755 l 4712 6755 l 4710 6755 l
 4707 6755 l 4706 6756 l 4704 6756 l 4703 6757 l 4702 6758 l
 4701 6759 l 4700 6760 l 4699 6761 l 4699 6763 l 4698 6764 l
 4698 6767 l 4698 6769 l 4698 6770 l 4698 6773 l 4698 6779 l
 4698 6782 l 4698 6783 l 4699 6783 l 4703 6783 l 4713 6783 l
 4730 6783 l 4755 6783 l 4786 6783 l 4821 6783 l 4856 6783 l
 4887 6783 l 4912 6783 l 4929 6783 l 4939 6783 l 4943 6783 l

 4944 6783 l  cp gs col7 1.00 shd ef gr 
%  spline 
% Polyline
n 4783 6706 m 4783 6705 l 4783 6702 l 4783 6693 l 4783 6678 l 4783 6656 l
 4783 6626 l 4783 6592 l 4783 6555 l 4783 6517 l 4783 6483 l
 4783 6453 l 4783 6431 l 4783 6416 l 4783 6407 l 4783 6404 l
 4783 6403 l 4783 6402 l 4783 6401 l 4783 6400 l 4782 6400 l
 4782 6399 l 4781 6399 l 4781 6398 l 4780 6398 l 4779 6398 l
 4778 6398 l 4777 6398 l 4776 6398 l 4775 6398 l 4774 6399 l
 4773 6399 l 4773 6400 l 4772 6401 l 4772 6402 l 4772 6403 l
 4772 6404 l 4772 6407 l 4772 6416 l 4772 6431 l 4772 6453 l
 4772 6483 l 4772 6517 l 4772 6555 l 4772 6592 l 4772 6626 l
 4772 6656 l 4772 6678 l 4772 6693 l 4772 6702 l 4772 6705 l
 4772 6706 l 4772 6707 l 4772 6708 l 4773 6709 l 4773 6710 l
 4774 6711 l 4775 6712 l 4776 6712 l 4777 6712 l 4778 6712 l
 4779 6712 l 4780 6712 l 4781 6712 l 4781 6711 l 4782 6711 l
 4782 6710 l 4783 6709 l 4783 6708 l 4783 6707 l
 4783 6706 l  cp gs col7 1.00 shd ef gr 
%  spline 
% Polyline
n 4813 6705 m 4813 6704 l 4813 6701 l 4813 6692 l 4813 6677 l 4813 6655 l
 4813 6626 l 4813 6592 l 4813 6555 l 4813 6518 l 4813 6484 l
 4813 6455 l 4813 6433 l 4813 6418 l 4813 6409 l 4813 6406 l
 4813 6405 l 4813 6404 l 4813 6402 l 4813 6401 l 4812 6400 l
 4811 6399 l 4811 6398 l 4810 6398 l 4809 6398 l 4808 6397 l
 4807 6397 l 4806 6397 l 4805 6397 l 4804 6397 l 4803 6397 l
 4802 6397 l 4801 6398 l 4800 6398 l 4799 6399 l 4799 6400 l
 4798 6401 l 4798 6402 l 4798 6404 l 4798 6405 l 4798 6406 l
 4798 6409 l 4798 6418 l 4798 6433 l 4798 6455 l 4798 6484 l
 4798 6518 l 4798 6555 l 4798 6592 l 4798 6626 l 4798 6655 l
 4798 6677 l 4798 6692 l 4798 6701 l 4798 6704 l 4798 6705 l
 4798 6706 l 4798 6707 l 4798 6708 l 4799 6709 l 4799 6710 l
 4799 6711 l 4800 6711 l 4801 6712 l 4802 6713 l 4803 6713 l
 4804 6713 l 4805 6713 l 4806 6713 l 4807 6713 l 4808 6713 l
 4809 6712 l 4810 6712 l 4811 6711 l 4812 6710 l 4812 6709 l
 4813 6708 l 4813 6707 l 4813 6706 l
 4813 6705 l  cp gs col7 1.00 shd ef gr 
%  polyline 
% Polyline
0 slj
n 5136 6864 m 5124 6864 l 5124 6894 l 5119 6894 l 5119 6864 l 5108 6864 l
 5108 6860 l 5136 6860 l
 5136 6864 l  cp gs col32 1.00 shd ef gr 
%  polyline 
% Polyline
n 5172 6894 m 5167 6894 l 5167 6867 l 5157 6880 l 5156 6880 l 5146 6867 l
 5145 6867 l 5145 6894 l 5141 6894 l 5141 6860 l 5145 6860 l
 5156 6874 l 5168 6860 l 5172 6860 l
 5172 6894 l  cp gs col32 1.00 shd ef gr 
$F2psEnd
rs

%%EndDocument
 @endspecial 4769 5844 a
 currentpoint grestore moveto
 4769 5844 a 4130 5844 a
 currentpoint currentpoint translate 1 0.76611 div 1 0.76611 div scale
neg exch neg exch translate
 4130
5844 a 5001 3450 a
SDict begin H.S end
 5001 3450 a 5001 3450 a
SDict begin H.R end
 5001 3450
a 5001 3450 a
SDict begin [ /View [/XYZ H.V] /Dest (page.1) cvn H.B /DEST pdfmark
end
 5001 3450 a 5001 3450 a
SDict begin [ {ThisPage} << /Trans << /S /Replace >> >> /PUT pdfmark
end
 5001 3450 a 5001
3450 a
SDict begin [ /Page 16/View [ /XYZ null null null ] /Title (Profiling)
/OUT pdfmark end
 5001 3450 a 8660 1453 a Fm(P)18 b Fn(R)12 b(O)18
b(FI)g(L)g(I)g(N)g(G)5039 2081 y Fe(Function)271 b(nCalls)181
b(call\(clk\))271 b(IPC)182 b(Acum\(\045\))88 b(Time\(\045\))h
(Ctrl\(\045\))4581 2264 y(SCVQScores_al)544 b(998)182
b(1161690.1)d(1.19)j(23.34\045)272 b(23.34\045)181 b(25.79\045)4764
2447 y(chan_v_eval)d(1568385)547 b(578.9)181 b(0.43)h(41.62\045)272
b(18.28\045)181 b(72.29\045)5130 2630 y(_doscan)272 b(903173)547
b(581.6)181 b(1.56)h(52.20\045)272 b(10.58\045)181 b(68.07\045)5222
2813 y(skipto)364 b(22804)455 b(9285.8)181 b(1.05)h(56.46\045)364
b(4.26\045)181 b(78.42\045)4581 2996 y(hmm_tied_read)635
b(47)183 b(4469093.4)c(1.83)j(60.69\045)364 b(4.23\045)181
b(62.13\045)4672 3179 y(root_chan_v_)270 b(386348)547
b(488.0)181 b(0.60)h(64.48\045)364 b(3.80\045)181 b(63.28\045)4581
3361 y(...............)o(.)10245 5222 y
 0 setgray
 10245 5222 a
4500 6000 a
 tx@Dict begin -90 Rot  end
 4500 6000 a eop
%%Page: 17 17
17 16 bop 4500 6000 a
 tx@Dict begin 90 Rot  end
 4500 6000 a 5981 1792 a @beginspecial
-168 @llx 371 @lly 782 @urx 421 @ury 2834 @rwi 283 @rhi
@setspecial
%%BeginDocument: barre-rico.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /ufs/goualard/TEMP/barre_hor.ps
%%Creator: XV Version 3.10a  Rev: 12/29/94 (PNG patch 1.2)  -  by John Bradley
%%BoundingBox: -168 371 782 421
%%Pages: 1
%%DocumentFonts:
%%EndComments
%%EndProlog

%%Page: 1 1

% remember original state
/origstate save def

% build a temporary dictionary
20 dict begin

% define space for color conversions
/grays 950 string def  % space for gray scale line
/npixls 0 def
/rgbindx 0 def

% lower left corner
-168 371 translate

% size of image (on paper, in 1/72inch coords)
949.96800 49.96800 scale

% define 'colorimage' if it isn't defined
%   ('colortogray' and 'mergeprocs' come from xwd2ps
%     via xgrab)
/colorimage where   % do we know about 'colorimage'?
  { pop }           % yes: pop off the 'dict' returned
  {                 % no:  define one
    /colortogray {  % define an RGB->I function
      /rgbdata exch store    % call input 'rgbdata'
      rgbdata length 3 idiv
      /npixls exch store
      /rgbindx 0 store
      0 1 npixls 1 sub {
        grays exch
        rgbdata rgbindx       get 20 mul    % Red
        rgbdata rgbindx 1 add get 32 mul    % Green
        rgbdata rgbindx 2 add get 12 mul    % Blue
        add add 64 idiv      % I = .5G + .31R + .18B
        put
        /rgbindx rgbindx 3 add store
      } for
      grays 0 npixls getinterval
    } bind def

    % Utility procedure for colorimage operator.
    % This procedure takes two procedures off the
    % stack and merges them into a single procedure.

    /mergeprocs { % def
      dup length
      3 -1 roll
      dup
      length
      dup
      5 1 roll
      3 -1 roll
      add
      array cvx
      dup
      3 -1 roll
      0 exch
      putinterval
      dup
      4 2 roll
      putinterval
    } bind def

    /colorimage { % def
      pop pop     % remove 'false 3' operands
      {colortogray} mergeprocs
      image
    } bind def
  } ifelse          % end of 'false' case



% define the colormap
/cmap 117 string def


% load up the colormap
currentfile cmap readhexstring
bcfe04 dcfe84 ccfe44 ecfec4 c4fe24 d4fe64 f4fee4 e4fea4 bcfe14 ccfe54 
f4fed4 c4fe34 d4fe74 fcfef4 ecfeb4 e4fe94 f4fecc fcfee4 ecfeac c4fe1c 
d4fe54 ccfe3c dcfe74 bcfe0c dcfe8c ccfe4c ecfecc c4fe2c d4fe6c e4feac 
bcfe1c f4fedc c4fe3c fcfefc ecfebc e4fe9c fcfeec d4fe5c dcfe7c 
pop pop   % lose return values from readhexstring


% rlecmapimage expects to have 'w h bits matrix' on stack
/rlecmapimage {
  /buffer 1 string def
  /rgbval 3 string def
  /block  384 string def

  % proc to read a block from file, and return RGB data
  { currentfile buffer readhexstring pop
    /bcount exch 0 get store
    bcount 128 ge
    {  % it's a non-run block
      0 1 bcount 128 sub
      { currentfile buffer readhexstring pop pop

        % look up value in color map
        /rgbval cmap buffer 0 get 3 mul 3 getinterval store

        % and put it in position i*3 in block
        block exch 3 mul rgbval putinterval
      } for
      block  0  bcount 127 sub 3 mul  getinterval
    }

    { % else it's a run block
      currentfile buffer readhexstring pop pop

      % look up value in colormap
      /rgbval cmap buffer 0 get 3 mul 3 getinterval store

      0 1 bcount { block exch 3 mul rgbval putinterval } for

      block 0 bcount 1 add 3 mul getinterval
    } ifelse
  } % end of proc
  false 3 colorimage
} bind def


950 50 8			% dimensions of data
[950 0 0 -50 0 50]		% mapping matrix
rlecmapimage

7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f210221870d1f220e220311212a21
7f217f217f217f217f217f2175218211030e820e220e820e220e860e220e23050b048404
090e24212a21
7f217f217f217f217f217f2171218e110312260b041e131e131e131e131e871e17001702
1d24212c21
7f217f217f217f217f217f216921830d1f220e870e221226200408000b00841702070d21
0521842403100d212321
7f217f217f217f217f217f2121218524220f231f213a218f0d0a220e220e23051b041e13
1e0817000c008408190706210421851103221f0d212521
7f217f217f217f217f217f211e2189240e1c1b17000825242136218a0d1026021b041e13
081700110085172001030d210421840316030d212821
7f217f217f217f217f21342186111a120f070a215721860d1110220e220e860e12182504
17000300821b1f212521851f0e2326230e080e841d010908001100820820090209840c1d
1a06210521841026230d212a21
7f217f217f217f21792186241f10220e220e820e220e820e220e820e220e820e220e820e
220e830e070f01010182070a2117218b0610231c1508001708090a2151218e0d1f101d01
14201b1e131e131e08000700820c0d211021840d100311210921881103220e07050b0800
8400171e081e821e081e851e081e0817001000851e2009181a210b21850d22261d24212c
21
7f217f217f217f21472184241f10220e820e220e820e220e820e220e820e220e820e220e
820e220e810e2283221f0d210e219a241f10070f1c09151e041e131e131e131e131e131e
131e131e131e821e080002008b17081410210d1110220e220e820e220e820e220e010e81
2301880126012616191b08000500820422212f2182240d211921890d0a0e072625150417
00100082201a210921890d1110220e23011620048304051f210421891103231c15131e08
1700190082171e090309820c1a210e21841f0e0a0d212e21
7f217f217f217f213f2190241f100e070f011c1920041e131e081e0882081e0882081e08
82081e0882081e0803088304250a2107218b241f030e12181619151e08001d00811e268c
2614201b041e131e131e131e088108178117000f0082091f211521840d0610220e0f0e88
120f012625020c11211321890d0a22121809040817001300831e050a2105218a0d1f101d
0114201b1e170004008408260e220e860e230c020417001800821e2009020982181a2114
21810d213321
7f211221842422121f217f217f217f211221850d0a220e220e820e220e820e220e820e22
0e010e881d0f1605090b041e178117001a008f1e22210d1110221d0f0116190b041e1781
1700220001171f00820b2221102189111022120f0125151b1e011e81081e821e081e821e
081e821e081e821e081e821e1700030082171c0e110e861d01251b1e170015008220181d
021d81220e020e86070119150417000b0086081e131e08170019008308091d210c21830d
1f24214121
7f210721830d0a220e040e83230504088308052421492185240a22230f01130182070a21
7f2106218c240a03220e220e220e220e1d0f840f01231f217f210a2199240a221d0f0116
191b1e131e131e131e131e131e131e131e17002300810b16871609200413081700490087
171e051d1f10220e0a0e8712232625201b1e178117001b000108011e81081e821e081e82
1e081e821e081e821e081e831e0817000c0085171e201e08000300831720090c840c090b
1b1e871e081e081e0817001f0083081e201e821e20090809820c03210b21860d0a222307
0d210521010d3a21
7f21042188112218141b13081e088108178117000300821b1f2140218b241f100e070f1c
25021b1317811700140083081410217f218c241f10070f05021b04131e131e011e810817
811700010093170207220e220e220e220e220e220e22120f18018301231f216e218c0d0a
22120f0116191b130817004c000117811e208120090509822008002c008308200c188518
0c09021b1e821e081e821e081e821e081e811e08810817811700400081171e871e09181a
061c08000300851e200b1e1700250083171e200983091806211721820d110a010a841d26
1918214421
6c219a1103220e220e220e220e220e220e220e220e220e22120f050b08000d0093091d22
0e220e220e220e220e220e220e2203112127218c241f100e070f0105021b1e08001e0082
0422216a2189241f10220e230f1826018201260182012601890126160509150408170011
0085131e131e131e821e131e831e131e0882081700020083082524215e2183240a220e82
0e220e8b0e22120f011605190b1308178117004d008817081e2009181d06210821810900
22000408071e0117510085080b09181a21022182060900040082081700120082171e000f
00011e83091806210d21821a031d8e1d221d221d0e22030a110d240d240d810d21012182
2406214521
68219711030f252004131e131e131e131e131e131e131e131e131e821e08001100011e83
131e131e821e131e821e131e821e131e811e1383131c1f211e218d0d1110221d0f260519
0b041e17002500821b0c0103018426161c05250b258405160f1d0e210e82070f26012681
0126822601268426010f1f2117218a241f100e070f1609150408820817003900821b1f21
56218a0a0f0c2514190215041e0801088217081701173400011781001781170016000117
011e85200c181d06210e218105000d0083171e08000c00011781081e041e020802171e00
82081e208120090d0982201e001b00850820090c1a210721821817000b008b081e200920
1920192009200986090c1d1a060900030083171e20090209010c83181a0621082187060a
0e1d071d0e1d821d0f1802180107841d220a24215221
1d21830d1f220e820e220e820e220e820e220e860e220e221024212321840d10230f010a
01852616091b08003b00820812210421830d1f102281220e820e220e820e220e820e220e
820e220e820e220e890e1d0f011609201b1317811700470081081e821e081e821e081e82
1e081e821e081e821e081e821e081e821e081e821e081e821e081e821e081e841e081e08
000a0083170b260182012601820126018201260182012601820126018a01260126160525
19151b088108004200820c0d21032196240a03220e220e220e220e220e220e220e220e22
0e1d0f810f01150182231f210921840d0610220e0e0e8418140417002100821720090409
822017002c008317081e208520090c1d1a211621821a201e811e20832009200982092009
86092009181a0c003400011e8520090c181a211221831a0c200982092009820920091109
830c1a06210a2182062000080087082009181a0621060206812106810621052183061d0c
0984090c181d1a011a02060e21820d062482240d216021
1c21970d0702041e131e131e131e131e131e131e0420050f100d211f21840d231b17004d
00a008182212230f011609151b131e131e131e131e131e131e131e131e131e130817001b
0083170017007f0041008c201a241f10070f1c021b04131e821e131e821e131e821e131e
821e131e011e810817811700160001178205112101218a111022120f181614151b1e821e
081e821e081e821e081e821e081e821e0817811700250082090621032182060900260088
17081e20090c1d1a212e2183062017001f008317081e208120090a09830c181a21442183
240917008300081e2001208409181a0621142183061a1d1a841a062106217721
1b21830d071b000f008517080b05230e8f0e220e220e220e220e220e220e220e22842210
110d210821830d231e004f00841e041e08178117007f0065008117000e000108011e8720
0c16090b1e08003000880401181614201b1e178117003a00822006210421820620001f00
81171e861e20090c1d1a213521820609001700011788081e20090c181a0621492184060a
101a1086101a10110d210d880d061a180c09181a0601067f211b21
1b21820a1900140081081e821e131e821e131e821e131e821e131e8d1e131e13040b1925
1812221f0d210321820a20007f007f0033000108160081081e031e820817003600811700
40008308091a2106218203091e031e8120091609830c1d1a213d21821f01091409840c18
1a06214e21010d0124010685240624060d210321850a26012206217f211f21
1b21831020170029008c1708040b021925051626051e007f002f000d1782081e20812009
1e0982201e00370081171e811e208120090c0982181d0683061808007900011781081e07
1e8120090e09820c1d217f216721820611217f212221
1b21830d0e0c090c0982201e004d00820817002a000217011e8120090c09811e00380082
17081e851e090c181a068306210621822106218221062182210621822106212521821a0c
09010982201e002700011781081e811e2085200c181d06211321821a200022000117011e
82091e0035008317081e20812009090982201e0002008608091a062106217f215521810d
217f215321
2d21851a0c201e17004300850820090c1a068206200022008317081e208620090c181d1a
210f21821d08002e000117021e0120840c181a06214221821d0c09250983181d06211c21
821a20001c008817081e2009181d062101218109002d0081171e871e20090c181a06210e
21851d09200c1a217f215a2182110d215321810d217d21
30218306180c090f0983201e08002500811e09820920090109830c1a062104218203201e
081e01201309810c1d821d1a21182182062000260081171e011e8620090c181a06217f21
1521830d1d0c091909840c181d06210721821a191e091e83200920098209200982092009
8209200982092009820920098209200982092009820920098209200985090c181a06217f
217621810d215121860d1026142510217c21
462185061d0c2017002000820906214e21820618098209200981092082201e178217081e
011e01201309840c181a06217f217f217f217f214421810d2401248306240d217d21
4a21841d201e0800150081081e041e820906217f217f217f217f217f217f214521
4e2185061a18201e000b0085171e091d06217f217f217f217f217f217f214e21
5221821a0c090909830c1d06217f217f217f217f217f217f215121
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521

%
% Compression made this file 2.88% of the uncompressed size.
%


showpage

% stop using temporary dictionary
end

% restore original state
origstate restore

%%Trailer

%%EndDocument
 @endspecial 5001 5222 a @beginspecial @setspecial
 tx@Dict begin STP newpath 1.0 SLW 0.5451 0.39608 0.03137 setrgbcolor
 /ArrowA { moveto } def /ArrowB { } def [ 341.43292 -28.45274 -22.76227
-28.45274  /Lineto /lineto load def false Line  gsave 1.0 SLW 0.5451
0.39608 0.03137 setrgbcolor 0 setlinecap stroke  grestore end
 
@endspecial
621 x Fi(SESC)20 b(\(IA)n(COMA)e(g)o(roup\))2960 b(Joe)20
b(Renau,)h(Basilio)e(F)m(r)o(aguela,)h(and)g(Liu)g(W)n(ei)39
b(\226)20 b(page)40 b(17/23)4266 1057 y
 gsave currentpoint currentpoint translate 270 neg rotate neg exch
neg exch translate
 4266 1057 a @beginspecial
276 @llx 366 @lly 336 @urx 426 @ury 141 @rwi 141 @rhi
@setspecial
%%BeginDocument: angleHG.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/rico/texte/texstyle/Prosper-beta/img/angleHG.ps
%%Creator: XV Version 3.10a  Rev: 12/29/94 (PNG patch 1.2)  -  by John Bradley
%%BoundingBox: 276 366 336 426
%%Pages: 1
%%DocumentFonts:
%%EndComments
%%EndProlog

%%Page: 1 1

% remember original state
/origstate save def

% build a temporary dictionary
20 dict begin

% define string to hold a scanline's worth of data
/pix 180 string def

% define space for color conversions
/grays 60 string def  % space for gray scale line
/npixls 0 def
/rgbindx 0 def

% print in landscape mode
90 rotate 0 -612 translate

% lower left corner
366 276 translate

% size of image (on paper, in 1/72inch coords)
59.97600 59.97600 scale

% define 'colorimage' if it isn't defined
%   ('colortogray' and 'mergeprocs' come from xwd2ps
%     via xgrab)
/colorimage where   % do we know about 'colorimage'?
  { pop }           % yes: pop off the 'dict' returned
  {                 % no:  define one
    /colortogray {  % define an RGB->I function
      /rgbdata exch store    % call input 'rgbdata'
      rgbdata length 3 idiv
      /npixls exch store
      /rgbindx 0 store
      0 1 npixls 1 sub {
        grays exch
        rgbdata rgbindx       get 20 mul    % Red
        rgbdata rgbindx 1 add get 32 mul    % Green
        rgbdata rgbindx 2 add get 12 mul    % Blue
        add add 64 idiv      % I = .5G + .31R + .18B
        put
        /rgbindx rgbindx 3 add store
      } for
      grays 0 npixls getinterval
    } bind def

    % Utility procedure for colorimage operator.
    % This procedure takes two procedures off the
    % stack and merges them into a single procedure.

    /mergeprocs { % def
      dup length
      3 -1 roll
      dup
      length
      dup
      5 1 roll
      3 -1 roll
      add
      array cvx
      dup
      3 -1 roll
      0 exch
      putinterval
      dup
      4 2 roll
      putinterval
    } bind def

    /colorimage { % def
      pop pop     % remove 'false 3' operands
      {colortogray} mergeprocs
      image
    } bind def
  } ifelse          % end of 'false' case



60 60 8			% dimensions of data
[60 0 0 -60 0 60]		% mapping matrix
{currentfile pix readhexstring pop}
false 3 colorimage

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffafee3effeaaffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffafee3e3fe64ffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffe3fe64fafee3ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffe9fe88f1feb3ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffe8fe86dffe55fefefeffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffebfe96dafe37fefefeffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffedfe9edefe48f7fed5ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffedfe9ee2fe60eefea5f5fecaecfe95ecfe97ecfe98
ecfe99ecfe9bf6feceffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffeffeaadffe4fe0fe55dcfe3f
dbfe3cdbfe3ddbfe3dddfe48defe4cdcfe43d9fe32d6fe20e2fe5fe3fe67defe4ddefe4d
defe4edefe4edbfe3bdbfe3cdcfe3ddcfe3fdcfe40dcfe42ddfe43ddfe45ddfe46ddfe48
ddfe46e2fe63e5fe72e5fe74e6fe76e6fe77e6fe79e7fe7ae9fe86e8fe85ebfe94ecfe97
ecfe99ecfe9cedfe9eeffeacf2febcf3febef3fec1f4fec4f9fedfffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffeffeaaf1feb3f5fec7e9fe87
e7fe7be7fe7be7fe7be2fe60e1fe5bd6fe1dd8fe2adafe33e1fe5bdffe54defe4edffe50
dffe51dffe53e0fe54ddfe49ddfe4bdefe4cdefe4edefe50dffe52dffe54e5fe73eafe93
e9fe89e6fe7ae4fe6ce4fe6ee8fe84e8fe85e9fe87e9fe8ae8fe84e7fe7ce8fe81e9fe8a
f0feb0f8fedbf9fedff1feb8f1febaeafe8bfbfeeafbfeebfdfef5ffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff5fecddffe52e1fe5df5fec9f5fec9f5fecaf5feca
f5fecbf5feccf5feccf5fecdf6fecef6fecef6fecef6fecff6fed0f6fed1eefea5e9fe8a
f6fed1f7fed7f7fed8f7fed9f6fecdfafee8fcfef1fcfef2fdfef7fcfef3fdfef7fefefc
fefefcfefefdf9fee0f6fecff5feccf4fec2ffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff5fecde3fe64e5fe74ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffdfef5fefefdfefefdfefefcfefefcfffffffefef9
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff5fecde5fe74dffe53ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff6fecee6fe79e5fe6ff8fed8ffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff6fecee6fe7aebfe95effeaaffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff6fecee6fe7aedfe9eeefea2ffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff6fecee6fe7bedfe9eeefea3ffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff6fecfe6fe78ecfe9eeefea5ffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffefefe
fefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff6fed0e2fe63e0fe59dffe55ffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffefefe
fefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffedfe9fe2fe5fd8fe2ad8fe2dffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffecfe9adffe53d6fe1cdefe4cf6fecfffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffedfe9cd8fe2cd6fe20defe4bf6fed0ffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffefefdffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffedfe9dd8fe27d7fe22defe4ef6fed0ffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffedfe9dd7fe26d6fe20e0fe5bf6fed2ffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff3febdd7fe22d7fe22e1fe5ef7fed3ffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff4fec6d6fe20d7fe21e0fe57f7fed4ffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff4fec6d6fe20d6fe1fe0fe59f7fed5ffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff4fec6d6fe1ed6fe1ee5fe73f7fed6ffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff4fec6d6fe1dd9fe32e0fe56ffffffffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff5fecce0fe55defe48e8fe81ffffffffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffbfeede7fe7fe0fe56e9fe85ffffffffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff7fed8e8fe84e7fe7ef1feb4ffffffffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff2feb8edfea0effea6f1feb6ffffffffffffffffff
fffffffefefefefefeffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffefefceffeabf0feafeffea7f2feb7ffffffffffffffffff
fffffffefefefefefefefefeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffefefcf5fecaecfe9de7fe7af8feddffffffffffffffffff
fffffffefefefefefefefefefefefeffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffefefcf5fecce8fe85e8fe80ffffffffffffffffffffffff
fffffffefefefefefefefefeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffff8fedefdfef8fdfefbf3fec0e9fe89ecfe96ffffffffffffffffffffffff
fefefefefefefefefefefefeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffdfef6fefefafefefaf4fec2e9fe89ecfe96ffffffffffffffffffffffff
fefefefefefefefefefefefeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffdfef6fefefefefefdf4fec2e8fe85edfe9dffffffffffffffffffffffff
fefefefefefefefefefefefeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffefef9fefefdfefefce7fe7be5fe76f2feb7ffffffffffffffffffffffff
fffffffffffffefefefefefeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffdfef6fdfefafefefbe2fe65e5fe75f6fed0ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffdfef9fefefce6fe79e6fe77fafee6ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffcfef6fefefbecfe9be7fe7efbfeecffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffdfef5fdfef7f7fed5e9fe8dfcfef2ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffcfeeffbfeebedfea1fdfef7ffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffefefeffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffefefdfbfee9effeabffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffefefefefefeffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffbfeeceffea6ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff9fee3f3fec1ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffeefea2f8fedaffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff1feb2fafee4ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffcfef0fefefaffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff


showpage

% stop using temporary dictionary
end

% restore original state
origstate restore

%%Trailer

%%EndDocument
 @endspecial 4511 1057 a
 currentpoint grestore moveto
 4511 1057 a 4130 5844 a
 currentpoint currentpoint translate 0.76611 0.76611 scale neg exch
neg exch translate
 4130
5844 a 4130 5844 a
 gsave currentpoint currentpoint translate 0 neg rotate neg exch neg
exch translate
 4130 5844 a @beginspecial 0 @llx 0
@lly 37 @urx 42 @ury 370 @rwi @setspecial
%%BeginDocument: figs/uiuc.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: uiuc.eps
%%Creator: fig2dev Version 3.2 Patchlevel 3d
%%CreationDate: Sun Feb 10 22:03:46 2002
%%For: renau@nether.cs.uiuc.edu (Jose Renau)
%%BoundingBox: 0 0 37 42
%%Magnification: 1.0000
%%EndComments
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def
/col32 {0.200 0.200 0.400 srgb} bind def
/col33 {0.800 0.400 0.000 srgb} bind def

end
save
newpath 0 42 moveto 0 0 lineto 37 0 lineto 37 42 lineto closepath clip newpath
-273.7 413.7 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
 0.06000 0.06000 sc
%
% Fig objects follow
%
%  polyline 
% Polyline
n 5070 6872 m 5070 6227 l 4584 6227 l 4584 6872 l
 5070 6872 l  cp gs col32 1.00 shd ef gr 
%  polyline 
% Polyline
15.000 slw
n 5070 6872 m 5070 6227 l 4584 6227 l 4584 6872 l
 5070 6872 l  cp gs col32 s gr 
%  polyline 
% Polyline
0.000 slw
n 5056 6858 m 5056 6243 l 4598 6243 l 4598 6858 l
 5056 6858 l  cp gs col32 1.00 shd ef gr 
%  polyline 
% Polyline
7.500 slw
n 5056 6858 m 5056 6243 l 4598 6243 l 4598 6858 l
 5056 6858 l  cp gs col33 s gr 
%  spline 
% Polyline
2 slj
0.000 slw
n 4944 6783 m 4944 6781 l 4944 6773 l 4944 6759 l 4944 6751 l 4944 6749 l
 4943 6749 l 4935 6748 l 4924 6746 l 4914 6744 l 4906 6742 l
 4900 6741 l 4896 6739 l 4892 6738 l 4887 6735 l 4884 6732 l
 4880 6728 l 4877 6722 l 4875 6716 l 4873 6709 l 4872 6702 l
 4871 6693 l 4870 6683 l 4869 6670 l 4869 6654 l 4868 6637 l
 4868 6621 l 4868 6609 l 4868 6604 l 4868 6603 l 4868 6602 l
 4868 6597 l 4868 6585 l 4868 6567 l 4868 6544 l 4868 6521 l
 4868 6503 l 4868 6491 l 4868 6486 l 4868 6485 l 4868 6483 l
 4868 6474 l 4868 6457 l 4869 6438 l 4869 6420 l 4870 6406 l
 4870 6395 l 4871 6387 l 4873 6381 l 4874 6375 l 4876 6371 l
 4879 6367 l 4882 6365 l 4885 6363 l 4889 6362 l 4892 6361 l
 4898 6359 l 4905 6358 l 4915 6356 l 4925 6354 l 4933 6352 l
 4934 6352 l 4934 6350 l 4934 6343 l 4934 6331 l 4934 6324 l
 4934 6322 l 4933 6322 l 4928 6322 l 4916 6322 l 4896 6322 l
 4869 6322 l 4837 6322 l 4806 6322 l 4779 6322 l 4759 6322 l
 4747 6322 l 4742 6322 l 4741 6322 l 4740 6322 l 4737 6322 l
 4732 6322 l 4729 6322 l 4726 6322 l 4724 6322 l 4721 6323 l
 4718 6324 l 4716 6325 l 4714 6326 l 4712 6327 l 4710 6329 l
 4707 6332 l 4705 6334 l 4703 6336 l 4701 6338 l 4700 6339 l
 4699 6341 l 4698 6342 l 4697 6344 l 4696 6346 l 4696 6347 l
 4695 6349 l 4695 6351 l 4695 6353 l 4694 6356 l 4694 6358 l
 4694 6359 l 4694 6360 l 4694 6362 l 4694 6365 l 4694 6367 l
 4695 6369 l 4695 6370 l 4696 6372 l 4697 6374 l 4697 6375 l
 4698 6377 l 4699 6378 l 4701 6379 l 4702 6381 l 4704 6383 l
 4706 6385 l 4708 6386 l 4709 6388 l 4710 6389 l 4712 6389 l
 4713 6390 l 4715 6391 l 4716 6391 l 4718 6391 l 4720 6391 l
 4721 6391 l 4724 6391 l 4726 6391 l 4727 6391 l 4729 6391 l
 4732 6390 l 4735 6390 l 4737 6389 l 4740 6388 l 4742 6387 l
 4744 6385 l 4747 6383 l 4748 6381 l 4749 6379 l 4750 6376 l
 4751 6372 l 4752 6369 l 4752 6368 l 4752 6366 l 4752 6364 l
 4752 6362 l 4752 6361 l 4752 6359 l 4752 6358 l 4751 6357 l
 4751 6356 l 4750 6355 l 4749 6354 l 4749 6353 l 4748 6352 l
 4747 6351 l 4746 6350 l 4745 6349 l 4744 6348 l 4743 6348 l
 4742 6347 l 4741 6346 l 4740 6346 l 4739 6346 l 4738 6346 l
 4736 6345 l 4735 6345 l 4733 6345 l 4732 6345 l 4730 6345 l
 4729 6345 l 4728 6346 l 4727 6346 l 4725 6346 l 4724 6347 l
 4724 6348 l 4723 6348 l 4722 6349 l 4721 6351 l 4720 6352 l
 4719 6353 l 4718 6354 l 4718 6355 l 4717 6356 l 4717 6357 l
 4717 6358 l 4716 6359 l 4717 6360 l 4717 6361 l 4717 6362 l
 4717 6363 l 4718 6364 l 4718 6365 l 4719 6366 l 4719 6367 l
 4720 6367 l 4720 6368 l 4721 6368 l 4722 6369 l 4723 6369 l
 4723 6368 l 4724 6368 l 4725 6368 l 4726 6367 l 4727 6367 l
 4727 6366 l 4728 6366 l 4728 6365 l 4729 6365 l 4729 6364 l
 4729 6363 l 4729 6362 l 4729 6361 l 4728 6360 l 4728 6359 l
 4729 6359 l 4729 6358 l 4730 6357 l 4731 6357 l 4731 6356 l
 4732 6356 l 4733 6356 l 4734 6356 l 4735 6356 l 4735 6357 l
 4736 6357 l 4737 6357 l 4738 6357 l 4738 6358 l 4739 6358 l
 4739 6359 l 4739 6360 l 4740 6360 l 4740 6361 l 4740 6362 l
 4741 6362 l 4741 6363 l 4741 6364 l 4740 6364 l 4740 6365 l
 4740 6366 l 4740 6368 l 4739 6371 l 4739 6373 l 4738 6374 l
 4737 6375 l 4736 6376 l 4735 6377 l 4733 6378 l 4732 6379 l
 4731 6379 l 4729 6379 l 4727 6380 l 4725 6380 l 4724 6380 l
 4722 6380 l 4721 6380 l 4720 6380 l 4719 6380 l 4718 6380 l
 4717 6379 l 4716 6379 l 4715 6379 l 4715 6378 l 4714 6377 l
 4713 6376 l 4712 6375 l 4711 6374 l 4710 6373 l 4710 6372 l
 4709 6372 l 4708 6371 l 4708 6370 l 4707 6369 l 4707 6368 l
 4707 6367 l 4706 6365 l 4706 6363 l 4706 6361 l 4706 6359 l
 4706 6357 l 4706 6355 l 4706 6353 l 4706 6352 l 4707 6351 l
 4707 6350 l 4707 6348 l 4708 6347 l 4709 6346 l 4709 6345 l
 4710 6344 l 4712 6343 l 4713 6342 l 4715 6340 l 4717 6339 l
 4718 6337 l 4720 6337 l 4721 6336 l 4723 6335 l 4725 6334 l
 4727 6334 l 4729 6334 l 4731 6333 l 4734 6333 l 4738 6333 l
 4740 6333 l 4741 6333 l 4742 6333 l 4744 6333 l 4747 6333 l
 4753 6333 l 4759 6333 l 4767 6333 l 4776 6333 l 4785 6333 l
 4794 6333 l 4802 6333 l 4809 6333 l 4815 6333 l 4822 6333 l
 4827 6333 l 4828 6333 l 4828 6334 l 4828 6337 l 4828 6341 l
 4828 6344 l 4828 6345 l 4826 6345 l 4816 6345 l 4797 6345 l
 4779 6345 l 4769 6345 l 4767 6345 l 4766 6345 l 4765 6345 l
 4764 6346 l 4763 6346 l 4762 6347 l 4762 6348 l 4761 6349 l
 4761 6350 l 4761 6351 l 4761 6352 l 4761 6353 l 4761 6354 l
 4761 6355 l 4762 6356 l 4762 6357 l 4763 6358 l 4764 6359 l
 4765 6359 l 4766 6359 l 4767 6359 l 4769 6359 l 4779 6359 l
 4798 6359 l 4816 6359 l 4826 6359 l 4828 6359 l 4828 6360 l
 4828 6362 l 4828 6367 l 4828 6369 l 4828 6370 l 4826 6370 l
 4817 6370 l 4799 6370 l 4782 6370 l 4773 6370 l 4771 6370 l
 4770 6370 l 4769 6370 l 4768 6370 l 4767 6371 l 4766 6371 l
 4766 6372 l 4765 6373 l 4765 6374 l 4765 6375 l 4765 6376 l
 4765 6377 l 4766 6378 l 4766 6379 l 4767 6380 l 4768 6381 l
 4769 6381 l 4770 6381 l 4771 6381 l 4773 6381 l 4782 6381 l
 4800 6381 l 4817 6381 l 4826 6381 l 4828 6381 l 4828 6384 l
 4828 6391 l 4828 6404 l 4828 6423 l 4828 6449 l 4828 6480 l
 4828 6516 l 4828 6554 l 4828 6592 l 4828 6628 l 4828 6659 l
 4828 6685 l 4828 6704 l 4828 6717 l 4828 6724 l 4828 6727 l
 4827 6727 l 4819 6727 l 4802 6727 l 4780 6727 l 4757 6727 l
 4740 6727 l 4732 6727 l 4731 6727 l 4730 6727 l 4729 6727 l
 4728 6727 l 4727 6728 l 4726 6728 l 4726 6729 l 4726 6730 l
 4725 6730 l 4725 6731 l 4725 6732 l 4725 6733 l 4725 6734 l
 4725 6735 l 4725 6736 l 4725 6737 l 4726 6738 l 4726 6739 l
 4727 6739 l 4727 6740 l 4728 6740 l 4729 6740 l 4730 6740 l
 4731 6740 l 4732 6740 l 4740 6740 l 4757 6740 l 4780 6740 l
 4802 6740 l 4819 6740 l 4827 6740 l 4828 6740 l 4828 6741 l
 4828 6745 l 4828 6750 l 4828 6754 l 4828 6755 l 4827 6755 l
 4822 6755 l 4811 6755 l 4792 6755 l 4770 6755 l 4748 6755 l
 4729 6755 l 4718 6755 l 4713 6755 l 4712 6755 l 4710 6755 l
 4707 6755 l 4706 6756 l 4704 6756 l 4703 6757 l 4702 6758 l
 4701 6759 l 4700 6760 l 4699 6761 l 4699 6763 l 4698 6764 l
 4698 6767 l 4698 6769 l 4698 6770 l 4698 6773 l 4698 6779 l
 4698 6782 l 4698 6783 l 4699 6783 l 4703 6783 l 4713 6783 l
 4730 6783 l 4755 6783 l 4786 6783 l 4821 6783 l 4856 6783 l
 4887 6783 l 4912 6783 l 4929 6783 l 4939 6783 l 4943 6783 l

 4944 6783 l  cp gs col7 1.00 shd ef gr 
%  spline 
% Polyline
n 4783 6706 m 4783 6705 l 4783 6702 l 4783 6693 l 4783 6678 l 4783 6656 l
 4783 6626 l 4783 6592 l 4783 6555 l 4783 6517 l 4783 6483 l
 4783 6453 l 4783 6431 l 4783 6416 l 4783 6407 l 4783 6404 l
 4783 6403 l 4783 6402 l 4783 6401 l 4783 6400 l 4782 6400 l
 4782 6399 l 4781 6399 l 4781 6398 l 4780 6398 l 4779 6398 l
 4778 6398 l 4777 6398 l 4776 6398 l 4775 6398 l 4774 6399 l
 4773 6399 l 4773 6400 l 4772 6401 l 4772 6402 l 4772 6403 l
 4772 6404 l 4772 6407 l 4772 6416 l 4772 6431 l 4772 6453 l
 4772 6483 l 4772 6517 l 4772 6555 l 4772 6592 l 4772 6626 l
 4772 6656 l 4772 6678 l 4772 6693 l 4772 6702 l 4772 6705 l
 4772 6706 l 4772 6707 l 4772 6708 l 4773 6709 l 4773 6710 l
 4774 6711 l 4775 6712 l 4776 6712 l 4777 6712 l 4778 6712 l
 4779 6712 l 4780 6712 l 4781 6712 l 4781 6711 l 4782 6711 l
 4782 6710 l 4783 6709 l 4783 6708 l 4783 6707 l
 4783 6706 l  cp gs col7 1.00 shd ef gr 
%  spline 
% Polyline
n 4813 6705 m 4813 6704 l 4813 6701 l 4813 6692 l 4813 6677 l 4813 6655 l
 4813 6626 l 4813 6592 l 4813 6555 l 4813 6518 l 4813 6484 l
 4813 6455 l 4813 6433 l 4813 6418 l 4813 6409 l 4813 6406 l
 4813 6405 l 4813 6404 l 4813 6402 l 4813 6401 l 4812 6400 l
 4811 6399 l 4811 6398 l 4810 6398 l 4809 6398 l 4808 6397 l
 4807 6397 l 4806 6397 l 4805 6397 l 4804 6397 l 4803 6397 l
 4802 6397 l 4801 6398 l 4800 6398 l 4799 6399 l 4799 6400 l
 4798 6401 l 4798 6402 l 4798 6404 l 4798 6405 l 4798 6406 l
 4798 6409 l 4798 6418 l 4798 6433 l 4798 6455 l 4798 6484 l
 4798 6518 l 4798 6555 l 4798 6592 l 4798 6626 l 4798 6655 l
 4798 6677 l 4798 6692 l 4798 6701 l 4798 6704 l 4798 6705 l
 4798 6706 l 4798 6707 l 4798 6708 l 4799 6709 l 4799 6710 l
 4799 6711 l 4800 6711 l 4801 6712 l 4802 6713 l 4803 6713 l
 4804 6713 l 4805 6713 l 4806 6713 l 4807 6713 l 4808 6713 l
 4809 6712 l 4810 6712 l 4811 6711 l 4812 6710 l 4812 6709 l
 4813 6708 l 4813 6707 l 4813 6706 l
 4813 6705 l  cp gs col7 1.00 shd ef gr 
%  polyline 
% Polyline
0 slj
n 5136 6864 m 5124 6864 l 5124 6894 l 5119 6894 l 5119 6864 l 5108 6864 l
 5108 6860 l 5136 6860 l
 5136 6864 l  cp gs col32 1.00 shd ef gr 
%  polyline 
% Polyline
n 5172 6894 m 5167 6894 l 5167 6867 l 5157 6880 l 5156 6880 l 5146 6867 l
 5145 6867 l 5145 6894 l 5141 6894 l 5141 6860 l 5145 6860 l
 5156 6874 l 5168 6860 l 5172 6860 l
 5172 6894 l  cp gs col32 1.00 shd ef gr 
$F2psEnd
rs

%%EndDocument
 @endspecial 4769 5844 a
 currentpoint grestore moveto
 4769 5844 a 4130 5844 a
 currentpoint currentpoint translate 1 0.76611 div 1 0.76611 div scale
neg exch neg exch translate
 4130
5844 a 5001 3450 a
SDict begin H.S end
 5001 3450 a 5001 3450 a
SDict begin H.R end
 5001 3450
a 5001 3450 a
SDict begin [ /View [/XYZ H.V] /Dest (page.1) cvn H.B /DEST pdfmark
end
 5001 3450 a 5001 3450 a
SDict begin [ {ThisPage} << /Trans << /S /Replace >> >> /PUT pdfmark
end
 5001 3450 a 5001
3450 a
SDict begin [ /Page 17/View [ /XYZ null null null ] /Title (Simulation Accuracy I)
/OUT pdfmark end
 5001 3450 a 6304 1453 a Fm(S)18 b Fn(I)g(M)g(U)g(L)g(A)-8
b(T)18 b(I)g(O)g(N)115 b Fm(A)5 b Fn(C)18 b(C)g(U)g(R)g(A)7
b(C)18 b(Y)116 b Fm(I)4581 2157 y Fg(Sim)n(ulating)64
b(an)k(R10K)e(at)i(180Mhz)e(\(SGI)h(Or)t(igin)e(200)i(IP27\):)p
4801 2292 5440 7 v 4801 2326 V 4798 2643 7 317 v 4833
2643 V 4938 2548 a(Bench)p 5962 2643 V 627 w(Nativ)-6
b(e)p 7026 2643 V 206 w(Sim)n(ulated)p 8302 2643 V 205
w(Error)p 9045 2643 V 207 w(SimTime)p 10202 2643 V 10237
2643 V 4801 2650 5440 7 v 4798 2967 7 317 v 4833 2967
V 4938 2872 a(matr)t(ix)p 5962 2967 V 738 w(78ms)p 7026
2967 V 686 w(80ms)p 8302 2967 V 253 w(+2\045)p 9045 2967
V 769 w(18s)p 10202 2967 V 10237 2967 V 4798 3284 V 4833
3284 V 4938 3189 a(cr)n(afty)p 5962 3284 V 677 w(109ms)p
7026 3284 V 552 w(105ms)p 8302 3284 V 313 w(-3\045)p
9045 3284 V 770 w(18s)p 10202 3284 V 10237 3284 V 4798
3601 V 4833 3601 V 4938 3506 a(mcf)p 5962 3601 V 876
w(791ms)p 7026 3601 V 552 w(792ms)p 8302 3601 V 253 w(+0\045)p
9045 3601 V 634 w(142s)p 10202 3601 V 10237 3601 V 4798
3918 V 4833 3918 V 4938 3823 a(mp3dec)p 5962 3918 V 407
w(643ms)p 7026 3918 V 552 w(619ms)p 8302 3918 V 313 w(-5\045)p
9045 3918 V 635 w(160s)p 10202 3918 V 10237 3918 V 4798
4235 V 4833 4235 V 4938 4140 a(lat_mem)p 5962 4235 V
206 w(2405ms)p 7026 4235 V 418 w(2532ms)p 8302 4235 V
253 w(+5\045)p 9045 4235 V 634 w(230s)p 10202 4235 V
10237 4235 V 4801 4242 5440 7 v 4801 4276 V 10245 5222
a
 0 setgray
 10245 5222 a 4500 6000 a
 tx@Dict begin -90 Rot  end
 4500 6000 a eop
%%Page: 18 18
18 17 bop 4500 6000 a
 tx@Dict begin 90 Rot  end
 4500 6000 a 5981 1792 a @beginspecial
-168 @llx 371 @lly 782 @urx 421 @ury 2834 @rwi 283 @rhi
@setspecial
%%BeginDocument: barre-rico.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /ufs/goualard/TEMP/barre_hor.ps
%%Creator: XV Version 3.10a  Rev: 12/29/94 (PNG patch 1.2)  -  by John Bradley
%%BoundingBox: -168 371 782 421
%%Pages: 1
%%DocumentFonts:
%%EndComments
%%EndProlog

%%Page: 1 1

% remember original state
/origstate save def

% build a temporary dictionary
20 dict begin

% define space for color conversions
/grays 950 string def  % space for gray scale line
/npixls 0 def
/rgbindx 0 def

% lower left corner
-168 371 translate

% size of image (on paper, in 1/72inch coords)
949.96800 49.96800 scale

% define 'colorimage' if it isn't defined
%   ('colortogray' and 'mergeprocs' come from xwd2ps
%     via xgrab)
/colorimage where   % do we know about 'colorimage'?
  { pop }           % yes: pop off the 'dict' returned
  {                 % no:  define one
    /colortogray {  % define an RGB->I function
      /rgbdata exch store    % call input 'rgbdata'
      rgbdata length 3 idiv
      /npixls exch store
      /rgbindx 0 store
      0 1 npixls 1 sub {
        grays exch
        rgbdata rgbindx       get 20 mul    % Red
        rgbdata rgbindx 1 add get 32 mul    % Green
        rgbdata rgbindx 2 add get 12 mul    % Blue
        add add 64 idiv      % I = .5G + .31R + .18B
        put
        /rgbindx rgbindx 3 add store
      } for
      grays 0 npixls getinterval
    } bind def

    % Utility procedure for colorimage operator.
    % This procedure takes two procedures off the
    % stack and merges them into a single procedure.

    /mergeprocs { % def
      dup length
      3 -1 roll
      dup
      length
      dup
      5 1 roll
      3 -1 roll
      add
      array cvx
      dup
      3 -1 roll
      0 exch
      putinterval
      dup
      4 2 roll
      putinterval
    } bind def

    /colorimage { % def
      pop pop     % remove 'false 3' operands
      {colortogray} mergeprocs
      image
    } bind def
  } ifelse          % end of 'false' case



% define the colormap
/cmap 117 string def


% load up the colormap
currentfile cmap readhexstring
bcfe04 dcfe84 ccfe44 ecfec4 c4fe24 d4fe64 f4fee4 e4fea4 bcfe14 ccfe54 
f4fed4 c4fe34 d4fe74 fcfef4 ecfeb4 e4fe94 f4fecc fcfee4 ecfeac c4fe1c 
d4fe54 ccfe3c dcfe74 bcfe0c dcfe8c ccfe4c ecfecc c4fe2c d4fe6c e4feac 
bcfe1c f4fedc c4fe3c fcfefc ecfebc e4fe9c fcfeec d4fe5c dcfe7c 
pop pop   % lose return values from readhexstring


% rlecmapimage expects to have 'w h bits matrix' on stack
/rlecmapimage {
  /buffer 1 string def
  /rgbval 3 string def
  /block  384 string def

  % proc to read a block from file, and return RGB data
  { currentfile buffer readhexstring pop
    /bcount exch 0 get store
    bcount 128 ge
    {  % it's a non-run block
      0 1 bcount 128 sub
      { currentfile buffer readhexstring pop pop

        % look up value in color map
        /rgbval cmap buffer 0 get 3 mul 3 getinterval store

        % and put it in position i*3 in block
        block exch 3 mul rgbval putinterval
      } for
      block  0  bcount 127 sub 3 mul  getinterval
    }

    { % else it's a run block
      currentfile buffer readhexstring pop pop

      % look up value in colormap
      /rgbval cmap buffer 0 get 3 mul 3 getinterval store

      0 1 bcount { block exch 3 mul rgbval putinterval } for

      block 0 bcount 1 add 3 mul getinterval
    } ifelse
  } % end of proc
  false 3 colorimage
} bind def


950 50 8			% dimensions of data
[950 0 0 -50 0 50]		% mapping matrix
rlecmapimage

7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f210221870d1f220e220311212a21
7f217f217f217f217f217f2175218211030e820e220e820e220e860e220e23050b048404
090e24212a21
7f217f217f217f217f217f2171218e110312260b041e131e131e131e131e871e17001702
1d24212c21
7f217f217f217f217f217f216921830d1f220e870e221226200408000b00841702070d21
0521842403100d212321
7f217f217f217f217f217f2121218524220f231f213a218f0d0a220e220e23051b041e13
1e0817000c008408190706210421851103221f0d212521
7f217f217f217f217f217f211e2189240e1c1b17000825242136218a0d1026021b041e13
081700110085172001030d210421840316030d212821
7f217f217f217f217f21342186111a120f070a215721860d1110220e220e860e12182504
17000300821b1f212521851f0e2326230e080e841d010908001100820820090209840c1d
1a06210521841026230d212a21
7f217f217f217f21792186241f10220e220e820e220e820e220e820e220e820e220e820e
220e830e070f01010182070a2117218b0610231c1508001708090a2151218e0d1f101d01
14201b1e131e131e08000700820c0d211021840d100311210921881103220e07050b0800
8400171e081e821e081e851e081e0817001000851e2009181a210b21850d22261d24212c
21
7f217f217f217f21472184241f10220e820e220e820e220e820e220e820e220e820e220e
820e220e810e2283221f0d210e219a241f10070f1c09151e041e131e131e131e131e131e
131e131e131e821e080002008b17081410210d1110220e220e820e220e820e220e010e81
2301880126012616191b08000500820422212f2182240d211921890d0a0e072625150417
00100082201a210921890d1110220e23011620048304051f210421891103231c15131e08
1700190082171e090309820c1a210e21841f0e0a0d212e21
7f217f217f217f213f2190241f100e070f011c1920041e131e081e0882081e0882081e08
82081e0882081e0803088304250a2107218b241f030e12181619151e08001d00811e268c
2614201b041e131e131e131e088108178117000f0082091f211521840d0610220e0f0e88
120f012625020c11211321890d0a22121809040817001300831e050a2105218a0d1f101d
0114201b1e170004008408260e220e860e230c020417001800821e2009020982181a2114
21810d213321
7f211221842422121f217f217f217f211221850d0a220e220e820e220e820e220e820e22
0e010e881d0f1605090b041e178117001a008f1e22210d1110221d0f0116190b041e1781
1700220001171f00820b2221102189111022120f0125151b1e011e81081e821e081e821e
081e821e081e821e081e821e1700030082171c0e110e861d01251b1e170015008220181d
021d81220e020e86070119150417000b0086081e131e08170019008308091d210c21830d
1f24214121
7f210721830d0a220e040e83230504088308052421492185240a22230f01130182070a21
7f2106218c240a03220e220e220e220e1d0f840f01231f217f210a2199240a221d0f0116
191b1e131e131e131e131e131e131e131e17002300810b16871609200413081700490087
171e051d1f10220e0a0e8712232625201b1e178117001b000108011e81081e821e081e82
1e081e821e081e821e081e831e0817000c0085171e201e08000300831720090c840c090b
1b1e871e081e081e0817001f0083081e201e821e20090809820c03210b21860d0a222307
0d210521010d3a21
7f21042188112218141b13081e088108178117000300821b1f2140218b241f100e070f1c
25021b1317811700140083081410217f218c241f10070f05021b04131e131e011e810817
811700010093170207220e220e220e220e220e220e22120f18018301231f216e218c0d0a
22120f0116191b130817004c000117811e208120090509822008002c008308200c188518
0c09021b1e821e081e821e081e821e081e811e08810817811700400081171e871e09181a
061c08000300851e200b1e1700250083171e200983091806211721820d110a010a841d26
1918214421
6c219a1103220e220e220e220e220e220e220e220e220e22120f050b08000d0093091d22
0e220e220e220e220e220e220e2203112127218c241f100e070f0105021b1e08001e0082
0422216a2189241f10220e230f1826018201260182012601890126160509150408170011
0085131e131e131e821e131e831e131e0882081700020083082524215e2183240a220e82
0e220e8b0e22120f011605190b1308178117004d008817081e2009181d06210821810900
22000408071e0117510085080b09181a21022182060900040082081700120082171e000f
00011e83091806210d21821a031d8e1d221d221d0e22030a110d240d240d810d21012182
2406214521
68219711030f252004131e131e131e131e131e131e131e131e131e821e08001100011e83
131e131e821e131e821e131e821e131e811e1383131c1f211e218d0d1110221d0f260519
0b041e17002500821b0c0103018426161c05250b258405160f1d0e210e82070f26012681
0126822601268426010f1f2117218a241f100e070f1609150408820817003900821b1f21
56218a0a0f0c2514190215041e0801088217081701173400011781001781170016000117
011e85200c181d06210e218105000d0083171e08000c00011781081e041e020802171e00
82081e208120090d0982201e001b00850820090c1a210721821817000b008b081e200920
1920192009200986090c1d1a060900030083171e20090209010c83181a0621082187060a
0e1d071d0e1d821d0f1802180107841d220a24215221
1d21830d1f220e820e220e820e220e820e220e860e220e221024212321840d10230f010a
01852616091b08003b00820812210421830d1f102281220e820e220e820e220e820e220e
820e220e820e220e890e1d0f011609201b1317811700470081081e821e081e821e081e82
1e081e821e081e821e081e821e081e821e081e821e081e821e081e821e081e841e081e08
000a0083170b260182012601820126018201260182012601820126018a01260126160525
19151b088108004200820c0d21032196240a03220e220e220e220e220e220e220e220e22
0e1d0f810f01150182231f210921840d0610220e0e0e8418140417002100821720090409
822017002c008317081e208520090c1d1a211621821a201e811e20832009200982092009
86092009181a0c003400011e8520090c181a211221831a0c200982092009820920091109
830c1a06210a2182062000080087082009181a0621060206812106810621052183061d0c
0984090c181d1a011a02060e21820d062482240d216021
1c21970d0702041e131e131e131e131e131e131e0420050f100d211f21840d231b17004d
00a008182212230f011609151b131e131e131e131e131e131e131e131e131e130817001b
0083170017007f0041008c201a241f10070f1c021b04131e821e131e821e131e821e131e
821e131e011e810817811700160001178205112101218a111022120f181614151b1e821e
081e821e081e821e081e821e081e821e0817811700250082090621032182060900260088
17081e20090c1d1a212e2183062017001f008317081e208120090a09830c181a21442183
240917008300081e2001208409181a0621142183061a1d1a841a062106217721
1b21830d071b000f008517080b05230e8f0e220e220e220e220e220e220e220e22842210
110d210821830d231e004f00841e041e08178117007f0065008117000e000108011e8720
0c16090b1e08003000880401181614201b1e178117003a00822006210421820620001f00
81171e861e20090c1d1a213521820609001700011788081e20090c181a0621492184060a
101a1086101a10110d210d880d061a180c09181a0601067f211b21
1b21820a1900140081081e821e131e821e131e821e131e821e131e8d1e131e13040b1925
1812221f0d210321820a20007f007f0033000108160081081e031e820817003600811700
40008308091a2106218203091e031e8120091609830c1d1a213d21821f01091409840c18
1a06214e21010d0124010685240624060d210321850a26012206217f211f21
1b21831020170029008c1708040b021925051626051e007f002f000d1782081e20812009
1e0982201e00370081171e811e208120090c0982181d0683061808007900011781081e07
1e8120090e09820c1d217f216721820611217f212221
1b21830d0e0c090c0982201e004d00820817002a000217011e8120090c09811e00380082
17081e851e090c181a068306210621822106218221062182210621822106212521821a0c
09010982201e002700011781081e811e2085200c181d06211321821a200022000117011e
82091e0035008317081e20812009090982201e0002008608091a062106217f215521810d
217f215321
2d21851a0c201e17004300850820090c1a068206200022008317081e208620090c181d1a
210f21821d08002e000117021e0120840c181a06214221821d0c09250983181d06211c21
821a20001c008817081e2009181d062101218109002d0081171e871e20090c181a06210e
21851d09200c1a217f215a2182110d215321810d217d21
30218306180c090f0983201e08002500811e09820920090109830c1a062104218203201e
081e01201309810c1d821d1a21182182062000260081171e011e8620090c181a06217f21
1521830d1d0c091909840c181d06210721821a191e091e83200920098209200982092009
8209200982092009820920098209200982092009820920098209200985090c181a06217f
217621810d215121860d1026142510217c21
462185061d0c2017002000820906214e21820618098209200981092082201e178217081e
011e01201309840c181a06217f217f217f217f214421810d2401248306240d217d21
4a21841d201e0800150081081e041e820906217f217f217f217f217f217f214521
4e2185061a18201e000b0085171e091d06217f217f217f217f217f217f214e21
5221821a0c090909830c1d06217f217f217f217f217f217f215121
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521

%
% Compression made this file 2.88% of the uncompressed size.
%


showpage

% stop using temporary dictionary
end

% restore original state
origstate restore

%%Trailer

%%EndDocument
 @endspecial 5001 5222 a @beginspecial @setspecial
 tx@Dict begin STP newpath 1.0 SLW 0.5451 0.39608 0.03137 setrgbcolor
 /ArrowA { moveto } def /ArrowB { } def [ 341.43292 -28.45274 -22.76227
-28.45274  /Lineto /lineto load def false Line  gsave 1.0 SLW 0.5451
0.39608 0.03137 setrgbcolor 0 setlinecap stroke  grestore end
 
@endspecial
621 x Fi(SESC)20 b(\(IA)n(COMA)e(g)o(roup\))2960 b(Joe)20
b(Renau,)h(Basilio)e(F)m(r)o(aguela,)h(and)g(Liu)g(W)n(ei)39
b(\226)20 b(page)40 b(18/23)4266 1057 y
 gsave currentpoint currentpoint translate 270 neg rotate neg exch
neg exch translate
 4266 1057 a @beginspecial
276 @llx 366 @lly 336 @urx 426 @ury 141 @rwi 141 @rhi
@setspecial
%%BeginDocument: angleHG.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/rico/texte/texstyle/Prosper-beta/img/angleHG.ps
%%Creator: XV Version 3.10a  Rev: 12/29/94 (PNG patch 1.2)  -  by John Bradley
%%BoundingBox: 276 366 336 426
%%Pages: 1
%%DocumentFonts:
%%EndComments
%%EndProlog

%%Page: 1 1

% remember original state
/origstate save def

% build a temporary dictionary
20 dict begin

% define string to hold a scanline's worth of data
/pix 180 string def

% define space for color conversions
/grays 60 string def  % space for gray scale line
/npixls 0 def
/rgbindx 0 def

% print in landscape mode
90 rotate 0 -612 translate

% lower left corner
366 276 translate

% size of image (on paper, in 1/72inch coords)
59.97600 59.97600 scale

% define 'colorimage' if it isn't defined
%   ('colortogray' and 'mergeprocs' come from xwd2ps
%     via xgrab)
/colorimage where   % do we know about 'colorimage'?
  { pop }           % yes: pop off the 'dict' returned
  {                 % no:  define one
    /colortogray {  % define an RGB->I function
      /rgbdata exch store    % call input 'rgbdata'
      rgbdata length 3 idiv
      /npixls exch store
      /rgbindx 0 store
      0 1 npixls 1 sub {
        grays exch
        rgbdata rgbindx       get 20 mul    % Red
        rgbdata rgbindx 1 add get 32 mul    % Green
        rgbdata rgbindx 2 add get 12 mul    % Blue
        add add 64 idiv      % I = .5G + .31R + .18B
        put
        /rgbindx rgbindx 3 add store
      } for
      grays 0 npixls getinterval
    } bind def

    % Utility procedure for colorimage operator.
    % This procedure takes two procedures off the
    % stack and merges them into a single procedure.

    /mergeprocs { % def
      dup length
      3 -1 roll
      dup
      length
      dup
      5 1 roll
      3 -1 roll
      add
      array cvx
      dup
      3 -1 roll
      0 exch
      putinterval
      dup
      4 2 roll
      putinterval
    } bind def

    /colorimage { % def
      pop pop     % remove 'false 3' operands
      {colortogray} mergeprocs
      image
    } bind def
  } ifelse          % end of 'false' case



60 60 8			% dimensions of data
[60 0 0 -60 0 60]		% mapping matrix
{currentfile pix readhexstring pop}
false 3 colorimage

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffafee3effeaaffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffafee3e3fe64ffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffe3fe64fafee3ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffe9fe88f1feb3ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffe8fe86dffe55fefefeffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffebfe96dafe37fefefeffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffedfe9edefe48f7fed5ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffedfe9ee2fe60eefea5f5fecaecfe95ecfe97ecfe98
ecfe99ecfe9bf6feceffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffeffeaadffe4fe0fe55dcfe3f
dbfe3cdbfe3ddbfe3dddfe48defe4cdcfe43d9fe32d6fe20e2fe5fe3fe67defe4ddefe4d
defe4edefe4edbfe3bdbfe3cdcfe3ddcfe3fdcfe40dcfe42ddfe43ddfe45ddfe46ddfe48
ddfe46e2fe63e5fe72e5fe74e6fe76e6fe77e6fe79e7fe7ae9fe86e8fe85ebfe94ecfe97
ecfe99ecfe9cedfe9eeffeacf2febcf3febef3fec1f4fec4f9fedfffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffeffeaaf1feb3f5fec7e9fe87
e7fe7be7fe7be7fe7be2fe60e1fe5bd6fe1dd8fe2adafe33e1fe5bdffe54defe4edffe50
dffe51dffe53e0fe54ddfe49ddfe4bdefe4cdefe4edefe50dffe52dffe54e5fe73eafe93
e9fe89e6fe7ae4fe6ce4fe6ee8fe84e8fe85e9fe87e9fe8ae8fe84e7fe7ce8fe81e9fe8a
f0feb0f8fedbf9fedff1feb8f1febaeafe8bfbfeeafbfeebfdfef5ffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff5fecddffe52e1fe5df5fec9f5fec9f5fecaf5feca
f5fecbf5feccf5feccf5fecdf6fecef6fecef6fecef6fecff6fed0f6fed1eefea5e9fe8a
f6fed1f7fed7f7fed8f7fed9f6fecdfafee8fcfef1fcfef2fdfef7fcfef3fdfef7fefefc
fefefcfefefdf9fee0f6fecff5feccf4fec2ffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff5fecde3fe64e5fe74ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffdfef5fefefdfefefdfefefcfefefcfffffffefef9
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff5fecde5fe74dffe53ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff6fecee6fe79e5fe6ff8fed8ffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff6fecee6fe7aebfe95effeaaffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff6fecee6fe7aedfe9eeefea2ffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff6fecee6fe7bedfe9eeefea3ffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff6fecfe6fe78ecfe9eeefea5ffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffefefe
fefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff6fed0e2fe63e0fe59dffe55ffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffefefe
fefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffedfe9fe2fe5fd8fe2ad8fe2dffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffecfe9adffe53d6fe1cdefe4cf6fecfffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffedfe9cd8fe2cd6fe20defe4bf6fed0ffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffefefdffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffedfe9dd8fe27d7fe22defe4ef6fed0ffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffedfe9dd7fe26d6fe20e0fe5bf6fed2ffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff3febdd7fe22d7fe22e1fe5ef7fed3ffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff4fec6d6fe20d7fe21e0fe57f7fed4ffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff4fec6d6fe20d6fe1fe0fe59f7fed5ffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff4fec6d6fe1ed6fe1ee5fe73f7fed6ffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff4fec6d6fe1dd9fe32e0fe56ffffffffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff5fecce0fe55defe48e8fe81ffffffffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffbfeede7fe7fe0fe56e9fe85ffffffffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff7fed8e8fe84e7fe7ef1feb4ffffffffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff2feb8edfea0effea6f1feb6ffffffffffffffffff
fffffffefefefefefeffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffefefceffeabf0feafeffea7f2feb7ffffffffffffffffff
fffffffefefefefefefefefeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffefefcf5fecaecfe9de7fe7af8feddffffffffffffffffff
fffffffefefefefefefefefefefefeffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffefefcf5fecce8fe85e8fe80ffffffffffffffffffffffff
fffffffefefefefefefefefeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffff8fedefdfef8fdfefbf3fec0e9fe89ecfe96ffffffffffffffffffffffff
fefefefefefefefefefefefeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffdfef6fefefafefefaf4fec2e9fe89ecfe96ffffffffffffffffffffffff
fefefefefefefefefefefefeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffdfef6fefefefefefdf4fec2e8fe85edfe9dffffffffffffffffffffffff
fefefefefefefefefefefefeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffefef9fefefdfefefce7fe7be5fe76f2feb7ffffffffffffffffffffffff
fffffffffffffefefefefefeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffdfef6fdfefafefefbe2fe65e5fe75f6fed0ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffdfef9fefefce6fe79e6fe77fafee6ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffcfef6fefefbecfe9be7fe7efbfeecffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffdfef5fdfef7f7fed5e9fe8dfcfef2ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffcfeeffbfeebedfea1fdfef7ffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffefefeffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffefefdfbfee9effeabffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffefefefefefeffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffbfeeceffea6ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff9fee3f3fec1ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffeefea2f8fedaffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff1feb2fafee4ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffcfef0fefefaffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff


showpage

% stop using temporary dictionary
end

% restore original state
origstate restore

%%Trailer

%%EndDocument
 @endspecial 4511 1057 a
 currentpoint grestore moveto
 4511 1057 a 4130 5844 a
 currentpoint currentpoint translate 0.76611 0.76611 scale neg exch
neg exch translate
 4130
5844 a 4130 5844 a
 gsave currentpoint currentpoint translate 0 neg rotate neg exch neg
exch translate
 4130 5844 a @beginspecial 0 @llx 0
@lly 37 @urx 42 @ury 370 @rwi @setspecial
%%BeginDocument: figs/uiuc.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: uiuc.eps
%%Creator: fig2dev Version 3.2 Patchlevel 3d
%%CreationDate: Sun Feb 10 22:03:46 2002
%%For: renau@nether.cs.uiuc.edu (Jose Renau)
%%BoundingBox: 0 0 37 42
%%Magnification: 1.0000
%%EndComments
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def
/col32 {0.200 0.200 0.400 srgb} bind def
/col33 {0.800 0.400 0.000 srgb} bind def

end
save
newpath 0 42 moveto 0 0 lineto 37 0 lineto 37 42 lineto closepath clip newpath
-273.7 413.7 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
 0.06000 0.06000 sc
%
% Fig objects follow
%
%  polyline 
% Polyline
n 5070 6872 m 5070 6227 l 4584 6227 l 4584 6872 l
 5070 6872 l  cp gs col32 1.00 shd ef gr 
%  polyline 
% Polyline
15.000 slw
n 5070 6872 m 5070 6227 l 4584 6227 l 4584 6872 l
 5070 6872 l  cp gs col32 s gr 
%  polyline 
% Polyline
0.000 slw
n 5056 6858 m 5056 6243 l 4598 6243 l 4598 6858 l
 5056 6858 l  cp gs col32 1.00 shd ef gr 
%  polyline 
% Polyline
7.500 slw
n 5056 6858 m 5056 6243 l 4598 6243 l 4598 6858 l
 5056 6858 l  cp gs col33 s gr 
%  spline 
% Polyline
2 slj
0.000 slw
n 4944 6783 m 4944 6781 l 4944 6773 l 4944 6759 l 4944 6751 l 4944 6749 l
 4943 6749 l 4935 6748 l 4924 6746 l 4914 6744 l 4906 6742 l
 4900 6741 l 4896 6739 l 4892 6738 l 4887 6735 l 4884 6732 l
 4880 6728 l 4877 6722 l 4875 6716 l 4873 6709 l 4872 6702 l
 4871 6693 l 4870 6683 l 4869 6670 l 4869 6654 l 4868 6637 l
 4868 6621 l 4868 6609 l 4868 6604 l 4868 6603 l 4868 6602 l
 4868 6597 l 4868 6585 l 4868 6567 l 4868 6544 l 4868 6521 l
 4868 6503 l 4868 6491 l 4868 6486 l 4868 6485 l 4868 6483 l
 4868 6474 l 4868 6457 l 4869 6438 l 4869 6420 l 4870 6406 l
 4870 6395 l 4871 6387 l 4873 6381 l 4874 6375 l 4876 6371 l
 4879 6367 l 4882 6365 l 4885 6363 l 4889 6362 l 4892 6361 l
 4898 6359 l 4905 6358 l 4915 6356 l 4925 6354 l 4933 6352 l
 4934 6352 l 4934 6350 l 4934 6343 l 4934 6331 l 4934 6324 l
 4934 6322 l 4933 6322 l 4928 6322 l 4916 6322 l 4896 6322 l
 4869 6322 l 4837 6322 l 4806 6322 l 4779 6322 l 4759 6322 l
 4747 6322 l 4742 6322 l 4741 6322 l 4740 6322 l 4737 6322 l
 4732 6322 l 4729 6322 l 4726 6322 l 4724 6322 l 4721 6323 l
 4718 6324 l 4716 6325 l 4714 6326 l 4712 6327 l 4710 6329 l
 4707 6332 l 4705 6334 l 4703 6336 l 4701 6338 l 4700 6339 l
 4699 6341 l 4698 6342 l 4697 6344 l 4696 6346 l 4696 6347 l
 4695 6349 l 4695 6351 l 4695 6353 l 4694 6356 l 4694 6358 l
 4694 6359 l 4694 6360 l 4694 6362 l 4694 6365 l 4694 6367 l
 4695 6369 l 4695 6370 l 4696 6372 l 4697 6374 l 4697 6375 l
 4698 6377 l 4699 6378 l 4701 6379 l 4702 6381 l 4704 6383 l
 4706 6385 l 4708 6386 l 4709 6388 l 4710 6389 l 4712 6389 l
 4713 6390 l 4715 6391 l 4716 6391 l 4718 6391 l 4720 6391 l
 4721 6391 l 4724 6391 l 4726 6391 l 4727 6391 l 4729 6391 l
 4732 6390 l 4735 6390 l 4737 6389 l 4740 6388 l 4742 6387 l
 4744 6385 l 4747 6383 l 4748 6381 l 4749 6379 l 4750 6376 l
 4751 6372 l 4752 6369 l 4752 6368 l 4752 6366 l 4752 6364 l
 4752 6362 l 4752 6361 l 4752 6359 l 4752 6358 l 4751 6357 l
 4751 6356 l 4750 6355 l 4749 6354 l 4749 6353 l 4748 6352 l
 4747 6351 l 4746 6350 l 4745 6349 l 4744 6348 l 4743 6348 l
 4742 6347 l 4741 6346 l 4740 6346 l 4739 6346 l 4738 6346 l
 4736 6345 l 4735 6345 l 4733 6345 l 4732 6345 l 4730 6345 l
 4729 6345 l 4728 6346 l 4727 6346 l 4725 6346 l 4724 6347 l
 4724 6348 l 4723 6348 l 4722 6349 l 4721 6351 l 4720 6352 l
 4719 6353 l 4718 6354 l 4718 6355 l 4717 6356 l 4717 6357 l
 4717 6358 l 4716 6359 l 4717 6360 l 4717 6361 l 4717 6362 l
 4717 6363 l 4718 6364 l 4718 6365 l 4719 6366 l 4719 6367 l
 4720 6367 l 4720 6368 l 4721 6368 l 4722 6369 l 4723 6369 l
 4723 6368 l 4724 6368 l 4725 6368 l 4726 6367 l 4727 6367 l
 4727 6366 l 4728 6366 l 4728 6365 l 4729 6365 l 4729 6364 l
 4729 6363 l 4729 6362 l 4729 6361 l 4728 6360 l 4728 6359 l
 4729 6359 l 4729 6358 l 4730 6357 l 4731 6357 l 4731 6356 l
 4732 6356 l 4733 6356 l 4734 6356 l 4735 6356 l 4735 6357 l
 4736 6357 l 4737 6357 l 4738 6357 l 4738 6358 l 4739 6358 l
 4739 6359 l 4739 6360 l 4740 6360 l 4740 6361 l 4740 6362 l
 4741 6362 l 4741 6363 l 4741 6364 l 4740 6364 l 4740 6365 l
 4740 6366 l 4740 6368 l 4739 6371 l 4739 6373 l 4738 6374 l
 4737 6375 l 4736 6376 l 4735 6377 l 4733 6378 l 4732 6379 l
 4731 6379 l 4729 6379 l 4727 6380 l 4725 6380 l 4724 6380 l
 4722 6380 l 4721 6380 l 4720 6380 l 4719 6380 l 4718 6380 l
 4717 6379 l 4716 6379 l 4715 6379 l 4715 6378 l 4714 6377 l
 4713 6376 l 4712 6375 l 4711 6374 l 4710 6373 l 4710 6372 l
 4709 6372 l 4708 6371 l 4708 6370 l 4707 6369 l 4707 6368 l
 4707 6367 l 4706 6365 l 4706 6363 l 4706 6361 l 4706 6359 l
 4706 6357 l 4706 6355 l 4706 6353 l 4706 6352 l 4707 6351 l
 4707 6350 l 4707 6348 l 4708 6347 l 4709 6346 l 4709 6345 l
 4710 6344 l 4712 6343 l 4713 6342 l 4715 6340 l 4717 6339 l
 4718 6337 l 4720 6337 l 4721 6336 l 4723 6335 l 4725 6334 l
 4727 6334 l 4729 6334 l 4731 6333 l 4734 6333 l 4738 6333 l
 4740 6333 l 4741 6333 l 4742 6333 l 4744 6333 l 4747 6333 l
 4753 6333 l 4759 6333 l 4767 6333 l 4776 6333 l 4785 6333 l
 4794 6333 l 4802 6333 l 4809 6333 l 4815 6333 l 4822 6333 l
 4827 6333 l 4828 6333 l 4828 6334 l 4828 6337 l 4828 6341 l
 4828 6344 l 4828 6345 l 4826 6345 l 4816 6345 l 4797 6345 l
 4779 6345 l 4769 6345 l 4767 6345 l 4766 6345 l 4765 6345 l
 4764 6346 l 4763 6346 l 4762 6347 l 4762 6348 l 4761 6349 l
 4761 6350 l 4761 6351 l 4761 6352 l 4761 6353 l 4761 6354 l
 4761 6355 l 4762 6356 l 4762 6357 l 4763 6358 l 4764 6359 l
 4765 6359 l 4766 6359 l 4767 6359 l 4769 6359 l 4779 6359 l
 4798 6359 l 4816 6359 l 4826 6359 l 4828 6359 l 4828 6360 l
 4828 6362 l 4828 6367 l 4828 6369 l 4828 6370 l 4826 6370 l
 4817 6370 l 4799 6370 l 4782 6370 l 4773 6370 l 4771 6370 l
 4770 6370 l 4769 6370 l 4768 6370 l 4767 6371 l 4766 6371 l
 4766 6372 l 4765 6373 l 4765 6374 l 4765 6375 l 4765 6376 l
 4765 6377 l 4766 6378 l 4766 6379 l 4767 6380 l 4768 6381 l
 4769 6381 l 4770 6381 l 4771 6381 l 4773 6381 l 4782 6381 l
 4800 6381 l 4817 6381 l 4826 6381 l 4828 6381 l 4828 6384 l
 4828 6391 l 4828 6404 l 4828 6423 l 4828 6449 l 4828 6480 l
 4828 6516 l 4828 6554 l 4828 6592 l 4828 6628 l 4828 6659 l
 4828 6685 l 4828 6704 l 4828 6717 l 4828 6724 l 4828 6727 l
 4827 6727 l 4819 6727 l 4802 6727 l 4780 6727 l 4757 6727 l
 4740 6727 l 4732 6727 l 4731 6727 l 4730 6727 l 4729 6727 l
 4728 6727 l 4727 6728 l 4726 6728 l 4726 6729 l 4726 6730 l
 4725 6730 l 4725 6731 l 4725 6732 l 4725 6733 l 4725 6734 l
 4725 6735 l 4725 6736 l 4725 6737 l 4726 6738 l 4726 6739 l
 4727 6739 l 4727 6740 l 4728 6740 l 4729 6740 l 4730 6740 l
 4731 6740 l 4732 6740 l 4740 6740 l 4757 6740 l 4780 6740 l
 4802 6740 l 4819 6740 l 4827 6740 l 4828 6740 l 4828 6741 l
 4828 6745 l 4828 6750 l 4828 6754 l 4828 6755 l 4827 6755 l
 4822 6755 l 4811 6755 l 4792 6755 l 4770 6755 l 4748 6755 l
 4729 6755 l 4718 6755 l 4713 6755 l 4712 6755 l 4710 6755 l
 4707 6755 l 4706 6756 l 4704 6756 l 4703 6757 l 4702 6758 l
 4701 6759 l 4700 6760 l 4699 6761 l 4699 6763 l 4698 6764 l
 4698 6767 l 4698 6769 l 4698 6770 l 4698 6773 l 4698 6779 l
 4698 6782 l 4698 6783 l 4699 6783 l 4703 6783 l 4713 6783 l
 4730 6783 l 4755 6783 l 4786 6783 l 4821 6783 l 4856 6783 l
 4887 6783 l 4912 6783 l 4929 6783 l 4939 6783 l 4943 6783 l

 4944 6783 l  cp gs col7 1.00 shd ef gr 
%  spline 
% Polyline
n 4783 6706 m 4783 6705 l 4783 6702 l 4783 6693 l 4783 6678 l 4783 6656 l
 4783 6626 l 4783 6592 l 4783 6555 l 4783 6517 l 4783 6483 l
 4783 6453 l 4783 6431 l 4783 6416 l 4783 6407 l 4783 6404 l
 4783 6403 l 4783 6402 l 4783 6401 l 4783 6400 l 4782 6400 l
 4782 6399 l 4781 6399 l 4781 6398 l 4780 6398 l 4779 6398 l
 4778 6398 l 4777 6398 l 4776 6398 l 4775 6398 l 4774 6399 l
 4773 6399 l 4773 6400 l 4772 6401 l 4772 6402 l 4772 6403 l
 4772 6404 l 4772 6407 l 4772 6416 l 4772 6431 l 4772 6453 l
 4772 6483 l 4772 6517 l 4772 6555 l 4772 6592 l 4772 6626 l
 4772 6656 l 4772 6678 l 4772 6693 l 4772 6702 l 4772 6705 l
 4772 6706 l 4772 6707 l 4772 6708 l 4773 6709 l 4773 6710 l
 4774 6711 l 4775 6712 l 4776 6712 l 4777 6712 l 4778 6712 l
 4779 6712 l 4780 6712 l 4781 6712 l 4781 6711 l 4782 6711 l
 4782 6710 l 4783 6709 l 4783 6708 l 4783 6707 l
 4783 6706 l  cp gs col7 1.00 shd ef gr 
%  spline 
% Polyline
n 4813 6705 m 4813 6704 l 4813 6701 l 4813 6692 l 4813 6677 l 4813 6655 l
 4813 6626 l 4813 6592 l 4813 6555 l 4813 6518 l 4813 6484 l
 4813 6455 l 4813 6433 l 4813 6418 l 4813 6409 l 4813 6406 l
 4813 6405 l 4813 6404 l 4813 6402 l 4813 6401 l 4812 6400 l
 4811 6399 l 4811 6398 l 4810 6398 l 4809 6398 l 4808 6397 l
 4807 6397 l 4806 6397 l 4805 6397 l 4804 6397 l 4803 6397 l
 4802 6397 l 4801 6398 l 4800 6398 l 4799 6399 l 4799 6400 l
 4798 6401 l 4798 6402 l 4798 6404 l 4798 6405 l 4798 6406 l
 4798 6409 l 4798 6418 l 4798 6433 l 4798 6455 l 4798 6484 l
 4798 6518 l 4798 6555 l 4798 6592 l 4798 6626 l 4798 6655 l
 4798 6677 l 4798 6692 l 4798 6701 l 4798 6704 l 4798 6705 l
 4798 6706 l 4798 6707 l 4798 6708 l 4799 6709 l 4799 6710 l
 4799 6711 l 4800 6711 l 4801 6712 l 4802 6713 l 4803 6713 l
 4804 6713 l 4805 6713 l 4806 6713 l 4807 6713 l 4808 6713 l
 4809 6712 l 4810 6712 l 4811 6711 l 4812 6710 l 4812 6709 l
 4813 6708 l 4813 6707 l 4813 6706 l
 4813 6705 l  cp gs col7 1.00 shd ef gr 
%  polyline 
% Polyline
0 slj
n 5136 6864 m 5124 6864 l 5124 6894 l 5119 6894 l 5119 6864 l 5108 6864 l
 5108 6860 l 5136 6860 l
 5136 6864 l  cp gs col32 1.00 shd ef gr 
%  polyline 
% Polyline
n 5172 6894 m 5167 6894 l 5167 6867 l 5157 6880 l 5156 6880 l 5146 6867 l
 5145 6867 l 5145 6894 l 5141 6894 l 5141 6860 l 5145 6860 l
 5156 6874 l 5168 6860 l 5172 6860 l
 5172 6894 l  cp gs col32 1.00 shd ef gr 
$F2psEnd
rs

%%EndDocument
 @endspecial 4769 5844 a
 currentpoint grestore moveto
 4769 5844 a 4130 5844 a
 currentpoint currentpoint translate 1 0.76611 div 1 0.76611 div scale
neg exch neg exch translate
 4130
5844 a 5001 3450 a
SDict begin H.S end
 5001 3450 a 5001 3450 a
SDict begin H.R end
 5001 3450
a 5001 3450 a
SDict begin [ /View [/XYZ H.V] /Dest (page.1) cvn H.B /DEST pdfmark
end
 5001 3450 a 5001 3450 a
SDict begin [ {ThisPage} << /Trans << /S /Replace >> >> /PUT pdfmark
end
 5001 3450 a 5001
3450 a
SDict begin [ /Page 18/View [ /XYZ null null null ] /Title (Simulation Accuracy II)
/OUT pdfmark end
 5001 3450 a 6187 1453 a Fm(S)18 b Fn(I)g(M)g(U)g(L)g(A)-8
b(T)18 b(I)g(O)g(N)115 b Fm(A)5 b Fn(C)18 b(C)g(U)g(R)g(A)7
b(C)18 b(Y)116 b Fm(I)18 b(I)4581 2157 y Fg(Sim)n(ulating)64
b(an)k(R4400)f(at)g(150Mhz)f(\(SGI)h(IP22\):)p 4801 2395
5440 7 v 4801 2429 V 4798 2746 7 317 v 4833 2746 V 4938
2651 a(Bench)p 5962 2746 V 627 w(Nativ)-6 b(e)p 7026
2746 V 206 w(Sim)n(ulated)p 8302 2746 V 205 w(Error)p
9045 2746 V 207 w(SimTime)p 10202 2746 V 10237 2746 V
4801 2753 5440 7 v 4798 3070 7 317 v 4833 3070 V 4938
2975 a(matr)t(ix)p 5962 3070 V 604 w(291ms)p 7026 3070
V 552 w(282ms)p 8302 3070 V 313 w(-4\045)p 9045 3070
V 770 w(27s)p 10202 3070 V 10237 3070 V 4798 3387 V 4833
3387 V 4938 3292 a(cr)n(afty)p 5962 3387 V 677 w(265ms)p
7026 3387 V 552 w(271ms)p 8302 3387 V 253 w(+4\045)p
9045 3387 V 769 w(43s)p 10202 3387 V 10237 3387 V 4798
3704 V 4833 3704 V 4938 3609 a(mcf)p 5962 3704 V 742
w(2438ms)p 7026 3704 V 418 w(2422ms)p 8302 3704 V 313
w(-1\045)p 9045 3704 V 635 w(174s)p 10202 3704 V 10237
3704 V 4798 4021 V 4833 4021 V 4938 3926 a(mp3dec)p 5962
4021 V 273 w(2347ms)p 7026 4021 V 418 w(2521ms)p 8302
4021 V 253 w(+7\045)p 9045 4021 V 634 w(185s)p 10202
4021 V 10237 4021 V 4798 4338 V 4833 4338 V 4938 4243
a(lat_mem)p 5962 4338 V 206 w(4005ms)p 7026 4338 V 418
w(4129ms)p 8302 4338 V 253 w(+3\045)p 9045 4338 V 634
w(279s)p 10202 4338 V 10237 4338 V 4801 4345 5440 7 v
4801 4379 V 10245 5222 a
 0 setgray
 10245 5222 a 4500 6000 a
 tx@Dict begin -90 Rot  end
 4500
6000 a eop
%%Page: 19 19
19 18 bop 4500 6000 a
 tx@Dict begin 90 Rot  end
 4500 6000 a 5981 1792 a @beginspecial
-168 @llx 371 @lly 782 @urx 421 @ury 2834 @rwi 283 @rhi
@setspecial
%%BeginDocument: barre-rico.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /ufs/goualard/TEMP/barre_hor.ps
%%Creator: XV Version 3.10a  Rev: 12/29/94 (PNG patch 1.2)  -  by John Bradley
%%BoundingBox: -168 371 782 421
%%Pages: 1
%%DocumentFonts:
%%EndComments
%%EndProlog

%%Page: 1 1

% remember original state
/origstate save def

% build a temporary dictionary
20 dict begin

% define space for color conversions
/grays 950 string def  % space for gray scale line
/npixls 0 def
/rgbindx 0 def

% lower left corner
-168 371 translate

% size of image (on paper, in 1/72inch coords)
949.96800 49.96800 scale

% define 'colorimage' if it isn't defined
%   ('colortogray' and 'mergeprocs' come from xwd2ps
%     via xgrab)
/colorimage where   % do we know about 'colorimage'?
  { pop }           % yes: pop off the 'dict' returned
  {                 % no:  define one
    /colortogray {  % define an RGB->I function
      /rgbdata exch store    % call input 'rgbdata'
      rgbdata length 3 idiv
      /npixls exch store
      /rgbindx 0 store
      0 1 npixls 1 sub {
        grays exch
        rgbdata rgbindx       get 20 mul    % Red
        rgbdata rgbindx 1 add get 32 mul    % Green
        rgbdata rgbindx 2 add get 12 mul    % Blue
        add add 64 idiv      % I = .5G + .31R + .18B
        put
        /rgbindx rgbindx 3 add store
      } for
      grays 0 npixls getinterval
    } bind def

    % Utility procedure for colorimage operator.
    % This procedure takes two procedures off the
    % stack and merges them into a single procedure.

    /mergeprocs { % def
      dup length
      3 -1 roll
      dup
      length
      dup
      5 1 roll
      3 -1 roll
      add
      array cvx
      dup
      3 -1 roll
      0 exch
      putinterval
      dup
      4 2 roll
      putinterval
    } bind def

    /colorimage { % def
      pop pop     % remove 'false 3' operands
      {colortogray} mergeprocs
      image
    } bind def
  } ifelse          % end of 'false' case



% define the colormap
/cmap 117 string def


% load up the colormap
currentfile cmap readhexstring
bcfe04 dcfe84 ccfe44 ecfec4 c4fe24 d4fe64 f4fee4 e4fea4 bcfe14 ccfe54 
f4fed4 c4fe34 d4fe74 fcfef4 ecfeb4 e4fe94 f4fecc fcfee4 ecfeac c4fe1c 
d4fe54 ccfe3c dcfe74 bcfe0c dcfe8c ccfe4c ecfecc c4fe2c d4fe6c e4feac 
bcfe1c f4fedc c4fe3c fcfefc ecfebc e4fe9c fcfeec d4fe5c dcfe7c 
pop pop   % lose return values from readhexstring


% rlecmapimage expects to have 'w h bits matrix' on stack
/rlecmapimage {
  /buffer 1 string def
  /rgbval 3 string def
  /block  384 string def

  % proc to read a block from file, and return RGB data
  { currentfile buffer readhexstring pop
    /bcount exch 0 get store
    bcount 128 ge
    {  % it's a non-run block
      0 1 bcount 128 sub
      { currentfile buffer readhexstring pop pop

        % look up value in color map
        /rgbval cmap buffer 0 get 3 mul 3 getinterval store

        % and put it in position i*3 in block
        block exch 3 mul rgbval putinterval
      } for
      block  0  bcount 127 sub 3 mul  getinterval
    }

    { % else it's a run block
      currentfile buffer readhexstring pop pop

      % look up value in colormap
      /rgbval cmap buffer 0 get 3 mul 3 getinterval store

      0 1 bcount { block exch 3 mul rgbval putinterval } for

      block 0 bcount 1 add 3 mul getinterval
    } ifelse
  } % end of proc
  false 3 colorimage
} bind def


950 50 8			% dimensions of data
[950 0 0 -50 0 50]		% mapping matrix
rlecmapimage

7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f210221870d1f220e220311212a21
7f217f217f217f217f217f2175218211030e820e220e820e220e860e220e23050b048404
090e24212a21
7f217f217f217f217f217f2171218e110312260b041e131e131e131e131e871e17001702
1d24212c21
7f217f217f217f217f217f216921830d1f220e870e221226200408000b00841702070d21
0521842403100d212321
7f217f217f217f217f217f2121218524220f231f213a218f0d0a220e220e23051b041e13
1e0817000c008408190706210421851103221f0d212521
7f217f217f217f217f217f211e2189240e1c1b17000825242136218a0d1026021b041e13
081700110085172001030d210421840316030d212821
7f217f217f217f217f21342186111a120f070a215721860d1110220e220e860e12182504
17000300821b1f212521851f0e2326230e080e841d010908001100820820090209840c1d
1a06210521841026230d212a21
7f217f217f217f21792186241f10220e220e820e220e820e220e820e220e820e220e820e
220e830e070f01010182070a2117218b0610231c1508001708090a2151218e0d1f101d01
14201b1e131e131e08000700820c0d211021840d100311210921881103220e07050b0800
8400171e081e821e081e851e081e0817001000851e2009181a210b21850d22261d24212c
21
7f217f217f217f21472184241f10220e820e220e820e220e820e220e820e220e820e220e
820e220e810e2283221f0d210e219a241f10070f1c09151e041e131e131e131e131e131e
131e131e131e821e080002008b17081410210d1110220e220e820e220e820e220e010e81
2301880126012616191b08000500820422212f2182240d211921890d0a0e072625150417
00100082201a210921890d1110220e23011620048304051f210421891103231c15131e08
1700190082171e090309820c1a210e21841f0e0a0d212e21
7f217f217f217f213f2190241f100e070f011c1920041e131e081e0882081e0882081e08
82081e0882081e0803088304250a2107218b241f030e12181619151e08001d00811e268c
2614201b041e131e131e131e088108178117000f0082091f211521840d0610220e0f0e88
120f012625020c11211321890d0a22121809040817001300831e050a2105218a0d1f101d
0114201b1e170004008408260e220e860e230c020417001800821e2009020982181a2114
21810d213321
7f211221842422121f217f217f217f211221850d0a220e220e820e220e820e220e820e22
0e010e881d0f1605090b041e178117001a008f1e22210d1110221d0f0116190b041e1781
1700220001171f00820b2221102189111022120f0125151b1e011e81081e821e081e821e
081e821e081e821e081e821e1700030082171c0e110e861d01251b1e170015008220181d
021d81220e020e86070119150417000b0086081e131e08170019008308091d210c21830d
1f24214121
7f210721830d0a220e040e83230504088308052421492185240a22230f01130182070a21
7f2106218c240a03220e220e220e220e1d0f840f01231f217f210a2199240a221d0f0116
191b1e131e131e131e131e131e131e131e17002300810b16871609200413081700490087
171e051d1f10220e0a0e8712232625201b1e178117001b000108011e81081e821e081e82
1e081e821e081e821e081e831e0817000c0085171e201e08000300831720090c840c090b
1b1e871e081e081e0817001f0083081e201e821e20090809820c03210b21860d0a222307
0d210521010d3a21
7f21042188112218141b13081e088108178117000300821b1f2140218b241f100e070f1c
25021b1317811700140083081410217f218c241f10070f05021b04131e131e011e810817
811700010093170207220e220e220e220e220e220e22120f18018301231f216e218c0d0a
22120f0116191b130817004c000117811e208120090509822008002c008308200c188518
0c09021b1e821e081e821e081e821e081e811e08810817811700400081171e871e09181a
061c08000300851e200b1e1700250083171e200983091806211721820d110a010a841d26
1918214421
6c219a1103220e220e220e220e220e220e220e220e220e22120f050b08000d0093091d22
0e220e220e220e220e220e220e2203112127218c241f100e070f0105021b1e08001e0082
0422216a2189241f10220e230f1826018201260182012601890126160509150408170011
0085131e131e131e821e131e831e131e0882081700020083082524215e2183240a220e82
0e220e8b0e22120f011605190b1308178117004d008817081e2009181d06210821810900
22000408071e0117510085080b09181a21022182060900040082081700120082171e000f
00011e83091806210d21821a031d8e1d221d221d0e22030a110d240d240d810d21012182
2406214521
68219711030f252004131e131e131e131e131e131e131e131e131e821e08001100011e83
131e131e821e131e821e131e821e131e811e1383131c1f211e218d0d1110221d0f260519
0b041e17002500821b0c0103018426161c05250b258405160f1d0e210e82070f26012681
0126822601268426010f1f2117218a241f100e070f1609150408820817003900821b1f21
56218a0a0f0c2514190215041e0801088217081701173400011781001781170016000117
011e85200c181d06210e218105000d0083171e08000c00011781081e041e020802171e00
82081e208120090d0982201e001b00850820090c1a210721821817000b008b081e200920
1920192009200986090c1d1a060900030083171e20090209010c83181a0621082187060a
0e1d071d0e1d821d0f1802180107841d220a24215221
1d21830d1f220e820e220e820e220e820e220e860e220e221024212321840d10230f010a
01852616091b08003b00820812210421830d1f102281220e820e220e820e220e820e220e
820e220e820e220e890e1d0f011609201b1317811700470081081e821e081e821e081e82
1e081e821e081e821e081e821e081e821e081e821e081e821e081e821e081e841e081e08
000a0083170b260182012601820126018201260182012601820126018a01260126160525
19151b088108004200820c0d21032196240a03220e220e220e220e220e220e220e220e22
0e1d0f810f01150182231f210921840d0610220e0e0e8418140417002100821720090409
822017002c008317081e208520090c1d1a211621821a201e811e20832009200982092009
86092009181a0c003400011e8520090c181a211221831a0c200982092009820920091109
830c1a06210a2182062000080087082009181a0621060206812106810621052183061d0c
0984090c181d1a011a02060e21820d062482240d216021
1c21970d0702041e131e131e131e131e131e131e0420050f100d211f21840d231b17004d
00a008182212230f011609151b131e131e131e131e131e131e131e131e131e130817001b
0083170017007f0041008c201a241f10070f1c021b04131e821e131e821e131e821e131e
821e131e011e810817811700160001178205112101218a111022120f181614151b1e821e
081e821e081e821e081e821e081e821e0817811700250082090621032182060900260088
17081e20090c1d1a212e2183062017001f008317081e208120090a09830c181a21442183
240917008300081e2001208409181a0621142183061a1d1a841a062106217721
1b21830d071b000f008517080b05230e8f0e220e220e220e220e220e220e220e22842210
110d210821830d231e004f00841e041e08178117007f0065008117000e000108011e8720
0c16090b1e08003000880401181614201b1e178117003a00822006210421820620001f00
81171e861e20090c1d1a213521820609001700011788081e20090c181a0621492184060a
101a1086101a10110d210d880d061a180c09181a0601067f211b21
1b21820a1900140081081e821e131e821e131e821e131e821e131e8d1e131e13040b1925
1812221f0d210321820a20007f007f0033000108160081081e031e820817003600811700
40008308091a2106218203091e031e8120091609830c1d1a213d21821f01091409840c18
1a06214e21010d0124010685240624060d210321850a26012206217f211f21
1b21831020170029008c1708040b021925051626051e007f002f000d1782081e20812009
1e0982201e00370081171e811e208120090c0982181d0683061808007900011781081e07
1e8120090e09820c1d217f216721820611217f212221
1b21830d0e0c090c0982201e004d00820817002a000217011e8120090c09811e00380082
17081e851e090c181a068306210621822106218221062182210621822106212521821a0c
09010982201e002700011781081e811e2085200c181d06211321821a200022000117011e
82091e0035008317081e20812009090982201e0002008608091a062106217f215521810d
217f215321
2d21851a0c201e17004300850820090c1a068206200022008317081e208620090c181d1a
210f21821d08002e000117021e0120840c181a06214221821d0c09250983181d06211c21
821a20001c008817081e2009181d062101218109002d0081171e871e20090c181a06210e
21851d09200c1a217f215a2182110d215321810d217d21
30218306180c090f0983201e08002500811e09820920090109830c1a062104218203201e
081e01201309810c1d821d1a21182182062000260081171e011e8620090c181a06217f21
1521830d1d0c091909840c181d06210721821a191e091e83200920098209200982092009
8209200982092009820920098209200982092009820920098209200985090c181a06217f
217621810d215121860d1026142510217c21
462185061d0c2017002000820906214e21820618098209200981092082201e178217081e
011e01201309840c181a06217f217f217f217f214421810d2401248306240d217d21
4a21841d201e0800150081081e041e820906217f217f217f217f217f217f214521
4e2185061a18201e000b0085171e091d06217f217f217f217f217f217f214e21
5221821a0c090909830c1d06217f217f217f217f217f217f215121
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521

%
% Compression made this file 2.88% of the uncompressed size.
%


showpage

% stop using temporary dictionary
end

% restore original state
origstate restore

%%Trailer

%%EndDocument
 @endspecial 5001 5222 a @beginspecial @setspecial
 tx@Dict begin STP newpath 1.0 SLW 0.5451 0.39608 0.03137 setrgbcolor
 /ArrowA { moveto } def /ArrowB { } def [ 341.43292 -28.45274 -22.76227
-28.45274  /Lineto /lineto load def false Line  gsave 1.0 SLW 0.5451
0.39608 0.03137 setrgbcolor 0 setlinecap stroke  grestore end
 
@endspecial
621 x Fi(SESC)20 b(\(IA)n(COMA)e(g)o(roup\))2960 b(Joe)20
b(Renau,)h(Basilio)e(F)m(r)o(aguela,)h(and)g(Liu)g(W)n(ei)39
b(\226)20 b(page)40 b(19/23)4266 1057 y
 gsave currentpoint currentpoint translate 270 neg rotate neg exch
neg exch translate
 4266 1057 a @beginspecial
276 @llx 366 @lly 336 @urx 426 @ury 141 @rwi 141 @rhi
@setspecial
%%BeginDocument: angleHG.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/rico/texte/texstyle/Prosper-beta/img/angleHG.ps
%%Creator: XV Version 3.10a  Rev: 12/29/94 (PNG patch 1.2)  -  by John Bradley
%%BoundingBox: 276 366 336 426
%%Pages: 1
%%DocumentFonts:
%%EndComments
%%EndProlog

%%Page: 1 1

% remember original state
/origstate save def

% build a temporary dictionary
20 dict begin

% define string to hold a scanline's worth of data
/pix 180 string def

% define space for color conversions
/grays 60 string def  % space for gray scale line
/npixls 0 def
/rgbindx 0 def

% print in landscape mode
90 rotate 0 -612 translate

% lower left corner
366 276 translate

% size of image (on paper, in 1/72inch coords)
59.97600 59.97600 scale

% define 'colorimage' if it isn't defined
%   ('colortogray' and 'mergeprocs' come from xwd2ps
%     via xgrab)
/colorimage where   % do we know about 'colorimage'?
  { pop }           % yes: pop off the 'dict' returned
  {                 % no:  define one
    /colortogray {  % define an RGB->I function
      /rgbdata exch store    % call input 'rgbdata'
      rgbdata length 3 idiv
      /npixls exch store
      /rgbindx 0 store
      0 1 npixls 1 sub {
        grays exch
        rgbdata rgbindx       get 20 mul    % Red
        rgbdata rgbindx 1 add get 32 mul    % Green
        rgbdata rgbindx 2 add get 12 mul    % Blue
        add add 64 idiv      % I = .5G + .31R + .18B
        put
        /rgbindx rgbindx 3 add store
      } for
      grays 0 npixls getinterval
    } bind def

    % Utility procedure for colorimage operator.
    % This procedure takes two procedures off the
    % stack and merges them into a single procedure.

    /mergeprocs { % def
      dup length
      3 -1 roll
      dup
      length
      dup
      5 1 roll
      3 -1 roll
      add
      array cvx
      dup
      3 -1 roll
      0 exch
      putinterval
      dup
      4 2 roll
      putinterval
    } bind def

    /colorimage { % def
      pop pop     % remove 'false 3' operands
      {colortogray} mergeprocs
      image
    } bind def
  } ifelse          % end of 'false' case



60 60 8			% dimensions of data
[60 0 0 -60 0 60]		% mapping matrix
{currentfile pix readhexstring pop}
false 3 colorimage

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffafee3effeaaffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffafee3e3fe64ffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffe3fe64fafee3ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffe9fe88f1feb3ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffe8fe86dffe55fefefeffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffebfe96dafe37fefefeffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffedfe9edefe48f7fed5ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffedfe9ee2fe60eefea5f5fecaecfe95ecfe97ecfe98
ecfe99ecfe9bf6feceffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffeffeaadffe4fe0fe55dcfe3f
dbfe3cdbfe3ddbfe3dddfe48defe4cdcfe43d9fe32d6fe20e2fe5fe3fe67defe4ddefe4d
defe4edefe4edbfe3bdbfe3cdcfe3ddcfe3fdcfe40dcfe42ddfe43ddfe45ddfe46ddfe48
ddfe46e2fe63e5fe72e5fe74e6fe76e6fe77e6fe79e7fe7ae9fe86e8fe85ebfe94ecfe97
ecfe99ecfe9cedfe9eeffeacf2febcf3febef3fec1f4fec4f9fedfffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffeffeaaf1feb3f5fec7e9fe87
e7fe7be7fe7be7fe7be2fe60e1fe5bd6fe1dd8fe2adafe33e1fe5bdffe54defe4edffe50
dffe51dffe53e0fe54ddfe49ddfe4bdefe4cdefe4edefe50dffe52dffe54e5fe73eafe93
e9fe89e6fe7ae4fe6ce4fe6ee8fe84e8fe85e9fe87e9fe8ae8fe84e7fe7ce8fe81e9fe8a
f0feb0f8fedbf9fedff1feb8f1febaeafe8bfbfeeafbfeebfdfef5ffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff5fecddffe52e1fe5df5fec9f5fec9f5fecaf5feca
f5fecbf5feccf5feccf5fecdf6fecef6fecef6fecef6fecff6fed0f6fed1eefea5e9fe8a
f6fed1f7fed7f7fed8f7fed9f6fecdfafee8fcfef1fcfef2fdfef7fcfef3fdfef7fefefc
fefefcfefefdf9fee0f6fecff5feccf4fec2ffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff5fecde3fe64e5fe74ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffdfef5fefefdfefefdfefefcfefefcfffffffefef9
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff5fecde5fe74dffe53ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff6fecee6fe79e5fe6ff8fed8ffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff6fecee6fe7aebfe95effeaaffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff6fecee6fe7aedfe9eeefea2ffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff6fecee6fe7bedfe9eeefea3ffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff6fecfe6fe78ecfe9eeefea5ffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffefefe
fefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff6fed0e2fe63e0fe59dffe55ffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffefefe
fefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffedfe9fe2fe5fd8fe2ad8fe2dffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffecfe9adffe53d6fe1cdefe4cf6fecfffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffedfe9cd8fe2cd6fe20defe4bf6fed0ffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffefefdffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffedfe9dd8fe27d7fe22defe4ef6fed0ffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffedfe9dd7fe26d6fe20e0fe5bf6fed2ffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff3febdd7fe22d7fe22e1fe5ef7fed3ffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff4fec6d6fe20d7fe21e0fe57f7fed4ffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff4fec6d6fe20d6fe1fe0fe59f7fed5ffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff4fec6d6fe1ed6fe1ee5fe73f7fed6ffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff4fec6d6fe1dd9fe32e0fe56ffffffffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff5fecce0fe55defe48e8fe81ffffffffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffbfeede7fe7fe0fe56e9fe85ffffffffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff7fed8e8fe84e7fe7ef1feb4ffffffffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff2feb8edfea0effea6f1feb6ffffffffffffffffff
fffffffefefefefefeffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffefefceffeabf0feafeffea7f2feb7ffffffffffffffffff
fffffffefefefefefefefefeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffefefcf5fecaecfe9de7fe7af8feddffffffffffffffffff
fffffffefefefefefefefefefefefeffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffefefcf5fecce8fe85e8fe80ffffffffffffffffffffffff
fffffffefefefefefefefefeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffff8fedefdfef8fdfefbf3fec0e9fe89ecfe96ffffffffffffffffffffffff
fefefefefefefefefefefefeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffdfef6fefefafefefaf4fec2e9fe89ecfe96ffffffffffffffffffffffff
fefefefefefefefefefefefeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffdfef6fefefefefefdf4fec2e8fe85edfe9dffffffffffffffffffffffff
fefefefefefefefefefefefeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffefef9fefefdfefefce7fe7be5fe76f2feb7ffffffffffffffffffffffff
fffffffffffffefefefefefeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffdfef6fdfefafefefbe2fe65e5fe75f6fed0ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffdfef9fefefce6fe79e6fe77fafee6ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffcfef6fefefbecfe9be7fe7efbfeecffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffdfef5fdfef7f7fed5e9fe8dfcfef2ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffcfeeffbfeebedfea1fdfef7ffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffefefeffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffefefdfbfee9effeabffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffefefefefefeffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffbfeeceffea6ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff9fee3f3fec1ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffeefea2f8fedaffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff1feb2fafee4ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffcfef0fefefaffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff


showpage

% stop using temporary dictionary
end

% restore original state
origstate restore

%%Trailer

%%EndDocument
 @endspecial 4511 1057 a
 currentpoint grestore moveto
 4511 1057 a 4130 5844 a
 currentpoint currentpoint translate 0.76611 0.76611 scale neg exch
neg exch translate
 4130
5844 a 4130 5844 a
 gsave currentpoint currentpoint translate 0 neg rotate neg exch neg
exch translate
 4130 5844 a @beginspecial 0 @llx 0
@lly 37 @urx 42 @ury 370 @rwi @setspecial
%%BeginDocument: figs/uiuc.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: uiuc.eps
%%Creator: fig2dev Version 3.2 Patchlevel 3d
%%CreationDate: Sun Feb 10 22:03:46 2002
%%For: renau@nether.cs.uiuc.edu (Jose Renau)
%%BoundingBox: 0 0 37 42
%%Magnification: 1.0000
%%EndComments
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def
/col32 {0.200 0.200 0.400 srgb} bind def
/col33 {0.800 0.400 0.000 srgb} bind def

end
save
newpath 0 42 moveto 0 0 lineto 37 0 lineto 37 42 lineto closepath clip newpath
-273.7 413.7 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
 0.06000 0.06000 sc
%
% Fig objects follow
%
%  polyline 
% Polyline
n 5070 6872 m 5070 6227 l 4584 6227 l 4584 6872 l
 5070 6872 l  cp gs col32 1.00 shd ef gr 
%  polyline 
% Polyline
15.000 slw
n 5070 6872 m 5070 6227 l 4584 6227 l 4584 6872 l
 5070 6872 l  cp gs col32 s gr 
%  polyline 
% Polyline
0.000 slw
n 5056 6858 m 5056 6243 l 4598 6243 l 4598 6858 l
 5056 6858 l  cp gs col32 1.00 shd ef gr 
%  polyline 
% Polyline
7.500 slw
n 5056 6858 m 5056 6243 l 4598 6243 l 4598 6858 l
 5056 6858 l  cp gs col33 s gr 
%  spline 
% Polyline
2 slj
0.000 slw
n 4944 6783 m 4944 6781 l 4944 6773 l 4944 6759 l 4944 6751 l 4944 6749 l
 4943 6749 l 4935 6748 l 4924 6746 l 4914 6744 l 4906 6742 l
 4900 6741 l 4896 6739 l 4892 6738 l 4887 6735 l 4884 6732 l
 4880 6728 l 4877 6722 l 4875 6716 l 4873 6709 l 4872 6702 l
 4871 6693 l 4870 6683 l 4869 6670 l 4869 6654 l 4868 6637 l
 4868 6621 l 4868 6609 l 4868 6604 l 4868 6603 l 4868 6602 l
 4868 6597 l 4868 6585 l 4868 6567 l 4868 6544 l 4868 6521 l
 4868 6503 l 4868 6491 l 4868 6486 l 4868 6485 l 4868 6483 l
 4868 6474 l 4868 6457 l 4869 6438 l 4869 6420 l 4870 6406 l
 4870 6395 l 4871 6387 l 4873 6381 l 4874 6375 l 4876 6371 l
 4879 6367 l 4882 6365 l 4885 6363 l 4889 6362 l 4892 6361 l
 4898 6359 l 4905 6358 l 4915 6356 l 4925 6354 l 4933 6352 l
 4934 6352 l 4934 6350 l 4934 6343 l 4934 6331 l 4934 6324 l
 4934 6322 l 4933 6322 l 4928 6322 l 4916 6322 l 4896 6322 l
 4869 6322 l 4837 6322 l 4806 6322 l 4779 6322 l 4759 6322 l
 4747 6322 l 4742 6322 l 4741 6322 l 4740 6322 l 4737 6322 l
 4732 6322 l 4729 6322 l 4726 6322 l 4724 6322 l 4721 6323 l
 4718 6324 l 4716 6325 l 4714 6326 l 4712 6327 l 4710 6329 l
 4707 6332 l 4705 6334 l 4703 6336 l 4701 6338 l 4700 6339 l
 4699 6341 l 4698 6342 l 4697 6344 l 4696 6346 l 4696 6347 l
 4695 6349 l 4695 6351 l 4695 6353 l 4694 6356 l 4694 6358 l
 4694 6359 l 4694 6360 l 4694 6362 l 4694 6365 l 4694 6367 l
 4695 6369 l 4695 6370 l 4696 6372 l 4697 6374 l 4697 6375 l
 4698 6377 l 4699 6378 l 4701 6379 l 4702 6381 l 4704 6383 l
 4706 6385 l 4708 6386 l 4709 6388 l 4710 6389 l 4712 6389 l
 4713 6390 l 4715 6391 l 4716 6391 l 4718 6391 l 4720 6391 l
 4721 6391 l 4724 6391 l 4726 6391 l 4727 6391 l 4729 6391 l
 4732 6390 l 4735 6390 l 4737 6389 l 4740 6388 l 4742 6387 l
 4744 6385 l 4747 6383 l 4748 6381 l 4749 6379 l 4750 6376 l
 4751 6372 l 4752 6369 l 4752 6368 l 4752 6366 l 4752 6364 l
 4752 6362 l 4752 6361 l 4752 6359 l 4752 6358 l 4751 6357 l
 4751 6356 l 4750 6355 l 4749 6354 l 4749 6353 l 4748 6352 l
 4747 6351 l 4746 6350 l 4745 6349 l 4744 6348 l 4743 6348 l
 4742 6347 l 4741 6346 l 4740 6346 l 4739 6346 l 4738 6346 l
 4736 6345 l 4735 6345 l 4733 6345 l 4732 6345 l 4730 6345 l
 4729 6345 l 4728 6346 l 4727 6346 l 4725 6346 l 4724 6347 l
 4724 6348 l 4723 6348 l 4722 6349 l 4721 6351 l 4720 6352 l
 4719 6353 l 4718 6354 l 4718 6355 l 4717 6356 l 4717 6357 l
 4717 6358 l 4716 6359 l 4717 6360 l 4717 6361 l 4717 6362 l
 4717 6363 l 4718 6364 l 4718 6365 l 4719 6366 l 4719 6367 l
 4720 6367 l 4720 6368 l 4721 6368 l 4722 6369 l 4723 6369 l
 4723 6368 l 4724 6368 l 4725 6368 l 4726 6367 l 4727 6367 l
 4727 6366 l 4728 6366 l 4728 6365 l 4729 6365 l 4729 6364 l
 4729 6363 l 4729 6362 l 4729 6361 l 4728 6360 l 4728 6359 l
 4729 6359 l 4729 6358 l 4730 6357 l 4731 6357 l 4731 6356 l
 4732 6356 l 4733 6356 l 4734 6356 l 4735 6356 l 4735 6357 l
 4736 6357 l 4737 6357 l 4738 6357 l 4738 6358 l 4739 6358 l
 4739 6359 l 4739 6360 l 4740 6360 l 4740 6361 l 4740 6362 l
 4741 6362 l 4741 6363 l 4741 6364 l 4740 6364 l 4740 6365 l
 4740 6366 l 4740 6368 l 4739 6371 l 4739 6373 l 4738 6374 l
 4737 6375 l 4736 6376 l 4735 6377 l 4733 6378 l 4732 6379 l
 4731 6379 l 4729 6379 l 4727 6380 l 4725 6380 l 4724 6380 l
 4722 6380 l 4721 6380 l 4720 6380 l 4719 6380 l 4718 6380 l
 4717 6379 l 4716 6379 l 4715 6379 l 4715 6378 l 4714 6377 l
 4713 6376 l 4712 6375 l 4711 6374 l 4710 6373 l 4710 6372 l
 4709 6372 l 4708 6371 l 4708 6370 l 4707 6369 l 4707 6368 l
 4707 6367 l 4706 6365 l 4706 6363 l 4706 6361 l 4706 6359 l
 4706 6357 l 4706 6355 l 4706 6353 l 4706 6352 l 4707 6351 l
 4707 6350 l 4707 6348 l 4708 6347 l 4709 6346 l 4709 6345 l
 4710 6344 l 4712 6343 l 4713 6342 l 4715 6340 l 4717 6339 l
 4718 6337 l 4720 6337 l 4721 6336 l 4723 6335 l 4725 6334 l
 4727 6334 l 4729 6334 l 4731 6333 l 4734 6333 l 4738 6333 l
 4740 6333 l 4741 6333 l 4742 6333 l 4744 6333 l 4747 6333 l
 4753 6333 l 4759 6333 l 4767 6333 l 4776 6333 l 4785 6333 l
 4794 6333 l 4802 6333 l 4809 6333 l 4815 6333 l 4822 6333 l
 4827 6333 l 4828 6333 l 4828 6334 l 4828 6337 l 4828 6341 l
 4828 6344 l 4828 6345 l 4826 6345 l 4816 6345 l 4797 6345 l
 4779 6345 l 4769 6345 l 4767 6345 l 4766 6345 l 4765 6345 l
 4764 6346 l 4763 6346 l 4762 6347 l 4762 6348 l 4761 6349 l
 4761 6350 l 4761 6351 l 4761 6352 l 4761 6353 l 4761 6354 l
 4761 6355 l 4762 6356 l 4762 6357 l 4763 6358 l 4764 6359 l
 4765 6359 l 4766 6359 l 4767 6359 l 4769 6359 l 4779 6359 l
 4798 6359 l 4816 6359 l 4826 6359 l 4828 6359 l 4828 6360 l
 4828 6362 l 4828 6367 l 4828 6369 l 4828 6370 l 4826 6370 l
 4817 6370 l 4799 6370 l 4782 6370 l 4773 6370 l 4771 6370 l
 4770 6370 l 4769 6370 l 4768 6370 l 4767 6371 l 4766 6371 l
 4766 6372 l 4765 6373 l 4765 6374 l 4765 6375 l 4765 6376 l
 4765 6377 l 4766 6378 l 4766 6379 l 4767 6380 l 4768 6381 l
 4769 6381 l 4770 6381 l 4771 6381 l 4773 6381 l 4782 6381 l
 4800 6381 l 4817 6381 l 4826 6381 l 4828 6381 l 4828 6384 l
 4828 6391 l 4828 6404 l 4828 6423 l 4828 6449 l 4828 6480 l
 4828 6516 l 4828 6554 l 4828 6592 l 4828 6628 l 4828 6659 l
 4828 6685 l 4828 6704 l 4828 6717 l 4828 6724 l 4828 6727 l
 4827 6727 l 4819 6727 l 4802 6727 l 4780 6727 l 4757 6727 l
 4740 6727 l 4732 6727 l 4731 6727 l 4730 6727 l 4729 6727 l
 4728 6727 l 4727 6728 l 4726 6728 l 4726 6729 l 4726 6730 l
 4725 6730 l 4725 6731 l 4725 6732 l 4725 6733 l 4725 6734 l
 4725 6735 l 4725 6736 l 4725 6737 l 4726 6738 l 4726 6739 l
 4727 6739 l 4727 6740 l 4728 6740 l 4729 6740 l 4730 6740 l
 4731 6740 l 4732 6740 l 4740 6740 l 4757 6740 l 4780 6740 l
 4802 6740 l 4819 6740 l 4827 6740 l 4828 6740 l 4828 6741 l
 4828 6745 l 4828 6750 l 4828 6754 l 4828 6755 l 4827 6755 l
 4822 6755 l 4811 6755 l 4792 6755 l 4770 6755 l 4748 6755 l
 4729 6755 l 4718 6755 l 4713 6755 l 4712 6755 l 4710 6755 l
 4707 6755 l 4706 6756 l 4704 6756 l 4703 6757 l 4702 6758 l
 4701 6759 l 4700 6760 l 4699 6761 l 4699 6763 l 4698 6764 l
 4698 6767 l 4698 6769 l 4698 6770 l 4698 6773 l 4698 6779 l
 4698 6782 l 4698 6783 l 4699 6783 l 4703 6783 l 4713 6783 l
 4730 6783 l 4755 6783 l 4786 6783 l 4821 6783 l 4856 6783 l
 4887 6783 l 4912 6783 l 4929 6783 l 4939 6783 l 4943 6783 l

 4944 6783 l  cp gs col7 1.00 shd ef gr 
%  spline 
% Polyline
n 4783 6706 m 4783 6705 l 4783 6702 l 4783 6693 l 4783 6678 l 4783 6656 l
 4783 6626 l 4783 6592 l 4783 6555 l 4783 6517 l 4783 6483 l
 4783 6453 l 4783 6431 l 4783 6416 l 4783 6407 l 4783 6404 l
 4783 6403 l 4783 6402 l 4783 6401 l 4783 6400 l 4782 6400 l
 4782 6399 l 4781 6399 l 4781 6398 l 4780 6398 l 4779 6398 l
 4778 6398 l 4777 6398 l 4776 6398 l 4775 6398 l 4774 6399 l
 4773 6399 l 4773 6400 l 4772 6401 l 4772 6402 l 4772 6403 l
 4772 6404 l 4772 6407 l 4772 6416 l 4772 6431 l 4772 6453 l
 4772 6483 l 4772 6517 l 4772 6555 l 4772 6592 l 4772 6626 l
 4772 6656 l 4772 6678 l 4772 6693 l 4772 6702 l 4772 6705 l
 4772 6706 l 4772 6707 l 4772 6708 l 4773 6709 l 4773 6710 l
 4774 6711 l 4775 6712 l 4776 6712 l 4777 6712 l 4778 6712 l
 4779 6712 l 4780 6712 l 4781 6712 l 4781 6711 l 4782 6711 l
 4782 6710 l 4783 6709 l 4783 6708 l 4783 6707 l
 4783 6706 l  cp gs col7 1.00 shd ef gr 
%  spline 
% Polyline
n 4813 6705 m 4813 6704 l 4813 6701 l 4813 6692 l 4813 6677 l 4813 6655 l
 4813 6626 l 4813 6592 l 4813 6555 l 4813 6518 l 4813 6484 l
 4813 6455 l 4813 6433 l 4813 6418 l 4813 6409 l 4813 6406 l
 4813 6405 l 4813 6404 l 4813 6402 l 4813 6401 l 4812 6400 l
 4811 6399 l 4811 6398 l 4810 6398 l 4809 6398 l 4808 6397 l
 4807 6397 l 4806 6397 l 4805 6397 l 4804 6397 l 4803 6397 l
 4802 6397 l 4801 6398 l 4800 6398 l 4799 6399 l 4799 6400 l
 4798 6401 l 4798 6402 l 4798 6404 l 4798 6405 l 4798 6406 l
 4798 6409 l 4798 6418 l 4798 6433 l 4798 6455 l 4798 6484 l
 4798 6518 l 4798 6555 l 4798 6592 l 4798 6626 l 4798 6655 l
 4798 6677 l 4798 6692 l 4798 6701 l 4798 6704 l 4798 6705 l
 4798 6706 l 4798 6707 l 4798 6708 l 4799 6709 l 4799 6710 l
 4799 6711 l 4800 6711 l 4801 6712 l 4802 6713 l 4803 6713 l
 4804 6713 l 4805 6713 l 4806 6713 l 4807 6713 l 4808 6713 l
 4809 6712 l 4810 6712 l 4811 6711 l 4812 6710 l 4812 6709 l
 4813 6708 l 4813 6707 l 4813 6706 l
 4813 6705 l  cp gs col7 1.00 shd ef gr 
%  polyline 
% Polyline
0 slj
n 5136 6864 m 5124 6864 l 5124 6894 l 5119 6894 l 5119 6864 l 5108 6864 l
 5108 6860 l 5136 6860 l
 5136 6864 l  cp gs col32 1.00 shd ef gr 
%  polyline 
% Polyline
n 5172 6894 m 5167 6894 l 5167 6867 l 5157 6880 l 5156 6880 l 5146 6867 l
 5145 6867 l 5145 6894 l 5141 6894 l 5141 6860 l 5145 6860 l
 5156 6874 l 5168 6860 l 5172 6860 l
 5172 6894 l  cp gs col32 1.00 shd ef gr 
$F2psEnd
rs

%%EndDocument
 @endspecial 4769 5844 a
 currentpoint grestore moveto
 4769 5844 a 4130 5844 a
 currentpoint currentpoint translate 1 0.76611 div 1 0.76611 div scale
neg exch neg exch translate
 4130
5844 a 5001 3450 a
SDict begin H.S end
 5001 3450 a 5001 3450 a
SDict begin H.R end
 5001 3450
a 5001 3450 a
SDict begin [ /View [/XYZ H.V] /Dest (page.1) cvn H.B /DEST pdfmark
end
 5001 3450 a 5001 3450 a
SDict begin [ {ThisPage} << /Trans << /S /Replace >> >> /PUT pdfmark
end
 5001 3450 a 5001
3450 a
SDict begin [ /Page 19/View [ /XYZ null null null ] /Title (Simulation Speed)
/OUT pdfmark end
 5001 3450 a 7219 1453 a Fm(S)18 b Fn(I)g(M)g(U)g(L)g(A)-8
b(T)18 b(I)g(O)g(N)115 b Fm(S)18 b Fn(P)g(E)g(E)g(D)4649
2157 y @beginspecial 276 @llx 376 @lly 336 @urx 416 @ury
113 @rwi @setspecial
%%BeginDocument: green-bullet-on-white.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/fred/TeX/STYLES/Prosper/img/green-bullet-on-white.ps
%%Creator: XV Version 3.10a+FLmask  Rev: 12/29/94  -  by John Bradley
%%BoundingBox: 276 376 336 416
%%Pages: 1
%%DocumentFonts:
%%EndComments
%%EndProlog

%%Page: 1 1

% remember original state
/origstate save def

% build a temporary dictionary
20 dict begin

% define space for color conversions
/grays 60 string def  % space for gray scale line
/npixls 0 def
/rgbindx 0 def

% lower left corner
276 376 translate

% size of image (on paper, in 1/72inch coords)
59.97600 40.03200 scale

% define 'colorimage' if it isn't defined
%   ('colortogray' and 'mergeprocs' come from xwd2ps
%     via xgrab)
/colorimage where   % do we know about 'colorimage'?
  { pop }           % yes: pop off the 'dict' returned
  {                 % no:  define one
    /colortogray {  % define an RGB->I function
      /rgbdata exch store    % call input 'rgbdata'
      rgbdata length 3 idiv
      /npixls exch store
      /rgbindx 0 store
      0 1 npixls 1 sub {
        grays exch
        rgbdata rgbindx       get 20 mul    % Red
        rgbdata rgbindx 1 add get 32 mul    % Green
        rgbdata rgbindx 2 add get 12 mul    % Blue
        add add 64 idiv      % I = .5G + .31R + .18B
        put
        /rgbindx rgbindx 3 add store
      } for
      grays 0 npixls getinterval
    } bind def

    % Utility procedure for colorimage operator.
    % This procedure takes two procedures off the
    % stack and merges them into a single procedure.

    /mergeprocs { % def
      dup length
      3 -1 roll
      dup
      length
      dup
      5 1 roll
      3 -1 roll
      add
      array cvx
      dup
      3 -1 roll
      0 exch
      putinterval
      dup
      4 2 roll
      putinterval
    } bind def

    /colorimage { % def
      pop pop     % remove 'false 3' operands
      {colortogray} mergeprocs
      image
    } bind def
  } ifelse          % end of 'false' case



% define the colormap
/cmap 723 string def


% load up the colormap
currentfile cmap readhexstring
041808 049008 8c948c 045204 4c544c 04c804 84e284 449644 c4cbc4 0c380e 
04ac07 cce6cc 345e2c e4e7e4 046604 2c3a2c 347234 e4fee2 048208 64cc60 
34922c 24b224 04e404 044604 647264 242623 049f07 8cae8c 04bc06 24c61c 
f4f8f3 1c541c 04d804 1c621c 1c7220 0c280d 14910f 045e04 047c04 ccdcd0 
14ac18 1c481c 747473 04d105 0c6c0b 24852a 1c381c f4f1f3 acafac f4fef5 
0c310c acc6ac 049708 a4a4a3 3c4a44 148314 144812 9cea94 04b405 149e14 
1cbc1c 044004 e4fef4 dcdddd 748274 5c5959 4cba54 145b11 145413 147412 
c4fec4 e4f1e7 146411 088a0a 243028 09c207 fcf8f3 147c13 14c80e acceac 
3c3939 04f405 044e07 07a608 14d00f 0c1f10 0c900b d4d3d4 ecfee3 1c291d 
0c6e14 bcbfbd d4f6d4 909a94 4c5a50 0cac08 24ba24 547e54 0cbc0a 0c5c16 
0c7c0b fcf1fb acb8ac 1c311c aca7a9 e2e2e2 a4e2a4 0cc80a 6c9a6c 143715 
0c650a 0c840b 07de06 14970c 0c980a 0cb40a 848583 ecf0f0 c3c6c3 0c540d 
0c740c cccccc 74ce6c 30a02c 04ec05 54aa5c 6cb66c 9cfa9c 2c862c 5c926c 
6ca674 b4deac 9cda9c 34aa2c 6c7e6c acfeac 448244 34d22c 7d7d7c 6c6d6c 
445644 4c4d4c 1c7a19 1c3e1c 3c3f3c 2c422c 7c9a84 54c254 dceadc 144014 
343231 bccebc bcbabc 447244 6c6664 9c9d9c 7caa7c 349a38 6c7a74 84b69c 
1c4e18 898a89 ccfadc 1c6c2c b8e2c0 1c8a24 a1aaa1 3c4e3c 5f5e5c d8fed8 
24be24 78d670 688668 148a14 14a618 145624 0c480e 2c292b 142916 1c921c 
d4dad9 243828 143017 b4d2bc b4b7b5 1c961c 8c868c 247e24 144e13 04fa04 
246224 fcfefc 0c4e0c ace2b4 3caa3c 244e24 0c180c 949394 545454 ece9ec 
343634 2cb127 6c736c 0ca00c 0cda08 0c5c0b 0ccf06 146a0c b4b2b4 646464 
b4c2b4 0c3f0c ecfdf9 e4dedc ccfdcc 2c2f2b 142214 146b16 c4c2c2 545b54 
2cb62c 74ba74 346634 b4fcb0 244224 444242 246a24 e4feec 0ce204 f4f9fc 
f4eefc 444744 54b654 fcf9fc 0c9114 dcd6d4 ecfeec 0c7b14 0cc614 0c6314 
0c8414 
pop pop   % lose return values from readhexstring


% rlecmapimage expects to have 'w h bits matrix' on stack
/rlecmapimage {
  /buffer 1 string def
  /rgbval 3 string def
  /block  384 string def

  % proc to read a block from file, and return RGB data
  { currentfile buffer readhexstring pop
    /bcount exch 0 get store
    bcount 128 ge
    {  % it's a non-run block
      0 1 bcount 128 sub
      { currentfile buffer readhexstring pop pop

        % look up value in color map
        /rgbval cmap buffer 0 get 3 mul 3 getinterval store

        % and put it in position i*3 in block
        block exch 3 mul rgbval putinterval
      } for
      block  0  bcount 127 sub 3 mul  getinterval
    }

    { % else it's a run block
      currentfile buffer readhexstring pop pop

      % look up value in colormap
      /rgbval cmap buffer 0 get 3 mul 3 getinterval store

      0 1 bcount { block exch 3 mul rgbval putinterval } for

      block 0 bcount 1 add 3 mul getinterval
    } ifelse
  } % end of proc
  false 3 colorimage
} bind def


60 40 8			% dimensions of data
[60 0 0 -40 0 40]		% mapping matrix
rlecmapimage

10bf8131bf05bf03e98165e902e9046587bf3158ec31bfe9658265e9bf09bf
10bf8131bf04bf81e9bf01bf02e98265bfe982e965e901e981bf318131ec82ecbfe982e9
65bf0abf
12bf82751ebf83bf1ebf318231ec3102318111318131bf81bfe901e981bf318131bf01bf
01e90bbf
0fbf02e901bf023101ec021101a981d6a981a9118111318131bf14bf
0fbf8165e901e988e5bfd4ecd66add07808c80149dc2137f46a911d431bfe981e9bf0fbf

0fbf01e982bfe9318331a49ce28fe2454d37562456dc71567bab87a9d4bf81bfe981e9bf
81bf318131bf0abf
10bf8ac775bf311bde43224d37568656cb535f1a733c893cae8506a91131bfe9bf01bf81
58bf0abf
0fbf911ebf31b761a0442245ed56721a530a3a4e3a813a4e864e73c94246e3bf10bf
07bf81e9bf82bfe9bf92bf1ebf31ec4f0c38e2ef8e4d49561a530a3a6283624b052b8a2b
ce4e60c2dfe331bf4cbf0cbf
0abf81e9bf82bfe9ec8eec83de1f21778e786f01341a0a3a1c851c4b052b20168b162054
aa93df11312fe965bf0abf
0ebf8d3111883d77cdcf78646f0134530a810a1c911c4ece20167c517c16542893a9ec31
e965bf0abf
08bf01e999bfe91ebf316cc07743cd45786f49561a530a3a624b6b2b707c510151877c70
4edcaba9bfe981e9bf0abf
0bbf01e985bf27d34352cf90cf0e4d2656011a530a1c62ee2b20167c5102518816cc1db9
d611bfe9bf0abf
07bf81e9bf01bf90e9bf4c86d3445277d92c786f49721a0a3a853a4b0520167c827c51bd
88bd5116e44b157a11bf0cbf
0dbf8d3f0fc33d4403cfbb0e3756011a0a860a624b2b20167c817c5102510116854b897b
a911bf0bbf
08bf82e9e5bf97bf75dab209bcc021ef254d2649561a533a1c4b052b70167c037c811620
85203a853911bf0bbf
0bbf0131869eb6d3b0bc7748884845646f561acb0a7382734b2b812b1683167c16cc01cc
012b844b2813d4bf0bbf
0abf0231955e236db0c04463cf45646f5634cb533a73624b2b2016821670548854ce2b20
4b28e831bf0bbf
0abf023183b5b6d3b089b044436e45786f49341a871a0a733a626b2b200120896b4e6b05
2b1c5f9decbf0bbf
09bf8131bf97bf31d82e09d3b044cd485a786f1201cb1a530a73621c052b852b054e4b1c
0585053a282d58bf0bbf
0bbf9431bf556709b03844cd482c7864125634cb1a5f0a7382734b0501050162011c854b
0aae2d58bf0bbf
0bbf0131934a236dd3b0bc7743485a786f1201341acb535f3a813a1c011c0173023a8453
3b1458bf0bbf
0bbf8431bf0455098309d338778277ef2c852c266f1201348134cb83cb530a3a013a810a
5f815f0a850a1ab37d58bf0bbf
08bf81e9bf93bf31bf18d83209d338c044cd6e0e2c64126f0172837271cb5382530a5383
53ae531a851a01a57e58bf0bbf
0bbf01e5837600230901098138c082c0482c862c7864126f49568156728272341a811a72
0272864912bb841131bf0abf
03bf94e9bfe9bfe9bf1ebf1ebf275923b632099538c044ef81ef7881786481646f816fad
84adea01ea560156882449ad2da3115831bf0abf
04bf02e992654ce61e75bf0d185523b66d0995bcc043cd2c812c7881786483646f64f001
f08b6f496f49642d6382e3314cbf0abf
01bf85e9e5e9652fc784c7693fc7698a69c7d2b200232eb60929bc84bc6343ef2c862c78
45784d78ed82ed6f6489644d45a3afa2114c31bf0abf
01e58175c783c769d5eb8ceb797679dab87908db67c4b66d876d9538b0447743ef84ef6e
2c78458e455a457864788ecfbe9fd4315831bf0abf
88e5750d3f5779da98d083d0689b3501358d5d0236c45567b6320995b04477cd92cdef6e
2c6e5ad95acf782c4517813e31bf2fbf0bbf
887569575bd0689bc5ba83ba8a2a8a878aca2a74db5955b284b23209d3b081b077017701
cd016e02ef876e2c6e4810a4d4bf01bf814cbf0abf
873f79b835c5ba2a9a829aa8410141868de1d104c690d881d85583552e6d958b9538b0c0
77cd03cd6377afcd84cd4321c1d483d4e9654c814cbf0abf
88575b9b742ad1418de181e15081509603968450c8d759d881d8b283b2326d0981099585
9538bcb0381f871f95c3995ca931bf81bfe981e9bf0bbf
8779b8c58ad1c6e750855096d7b119b104b184d7b119d855845523b2b66d016d83952995
2987296de09211d431bf01bf01e90cbf
8979d0c52aa88de15096b181b119041901b18796c80fd74a59b2b602b6016d86326d328f
ac0b318331bf31bf01bf81e9bf0cbf
88575b9b742ad1c68de186e1c850c850c850865096c850e1e70487045e8ca7912e672e85
2e8cac33473101318158bf02bf82e9bfe981e9bf0abf
8b3f799835c5742a8bd1a8dbc683c68dc68d818dc601c68cdbd1ca40a15da66697274711
31863158bf31bf31bf82bf4ce985e9bfe9bfe9bf0abf
8bc76957dab8359bc5a1748a2a052a018a01748b029ba6665b279447ec311ebf83bf581e
bf82bf4cbf02bf82e9bfe981e9bf0abf
881e75693f57795bb8d082d068350135029b0135013088b8985b7608b40d751e811ebf83
bf1e75bf81bf4c814cbf05bf81e9bf0bbf
83e9e52fc782c7693f823f5779817976027681da760276827957b482b4c7750175822fe5
bf82bf4cbf01bf814cbf81bfe981e9bf01bf01e90dbf

%
% Compression made this file 26.36% of the uncompressed size.
%


showpage

% stop using temporary dictionary
end

% restore original state
origstate restore

%%Trailer

%%EndDocument
 @endspecial 298 w Fg(Cr)n(afty)66 b(sim)n(ulation)f(in)h(a)h(P)-12
b(entium-III)67 b(1GHz)4581 2654 y Fh(1137KIPS)100 b
Fg(SESC)67 b(sim)n(ulating)d(an)j(R10K)g(\(with)g(bac)-5
b(k)g(end\))4581 3028 y Fh(178KIPS)100 b Fg(smt)67 b(sim)n(ulating)d
(an)j(R10K)g(\(no)h(bac)-5 b(k)g(end\))4581 3396 y Fh(2608KIPS)100
b Fg(mint)67 b(in-order)4581 3761 y Fb(\031)p Fh(150KIPS)100
b Fg(simplescalr)65 b(sim-outorder)10245 5222 y
 0 setgray
 10245
5222 a 4500 6000 a
 tx@Dict begin -90 Rot  end
 4500 6000 a eop
%%Page: 20 20
20 19 bop 4500 6000 a
 tx@Dict begin 90 Rot  end
 4500 6000 a 5981 1792 a @beginspecial
-168 @llx 371 @lly 782 @urx 421 @ury 2834 @rwi 283 @rhi
@setspecial
%%BeginDocument: barre-rico.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /ufs/goualard/TEMP/barre_hor.ps
%%Creator: XV Version 3.10a  Rev: 12/29/94 (PNG patch 1.2)  -  by John Bradley
%%BoundingBox: -168 371 782 421
%%Pages: 1
%%DocumentFonts:
%%EndComments
%%EndProlog

%%Page: 1 1

% remember original state
/origstate save def

% build a temporary dictionary
20 dict begin

% define space for color conversions
/grays 950 string def  % space for gray scale line
/npixls 0 def
/rgbindx 0 def

% lower left corner
-168 371 translate

% size of image (on paper, in 1/72inch coords)
949.96800 49.96800 scale

% define 'colorimage' if it isn't defined
%   ('colortogray' and 'mergeprocs' come from xwd2ps
%     via xgrab)
/colorimage where   % do we know about 'colorimage'?
  { pop }           % yes: pop off the 'dict' returned
  {                 % no:  define one
    /colortogray {  % define an RGB->I function
      /rgbdata exch store    % call input 'rgbdata'
      rgbdata length 3 idiv
      /npixls exch store
      /rgbindx 0 store
      0 1 npixls 1 sub {
        grays exch
        rgbdata rgbindx       get 20 mul    % Red
        rgbdata rgbindx 1 add get 32 mul    % Green
        rgbdata rgbindx 2 add get 12 mul    % Blue
        add add 64 idiv      % I = .5G + .31R + .18B
        put
        /rgbindx rgbindx 3 add store
      } for
      grays 0 npixls getinterval
    } bind def

    % Utility procedure for colorimage operator.
    % This procedure takes two procedures off the
    % stack and merges them into a single procedure.

    /mergeprocs { % def
      dup length
      3 -1 roll
      dup
      length
      dup
      5 1 roll
      3 -1 roll
      add
      array cvx
      dup
      3 -1 roll
      0 exch
      putinterval
      dup
      4 2 roll
      putinterval
    } bind def

    /colorimage { % def
      pop pop     % remove 'false 3' operands
      {colortogray} mergeprocs
      image
    } bind def
  } ifelse          % end of 'false' case



% define the colormap
/cmap 117 string def


% load up the colormap
currentfile cmap readhexstring
bcfe04 dcfe84 ccfe44 ecfec4 c4fe24 d4fe64 f4fee4 e4fea4 bcfe14 ccfe54 
f4fed4 c4fe34 d4fe74 fcfef4 ecfeb4 e4fe94 f4fecc fcfee4 ecfeac c4fe1c 
d4fe54 ccfe3c dcfe74 bcfe0c dcfe8c ccfe4c ecfecc c4fe2c d4fe6c e4feac 
bcfe1c f4fedc c4fe3c fcfefc ecfebc e4fe9c fcfeec d4fe5c dcfe7c 
pop pop   % lose return values from readhexstring


% rlecmapimage expects to have 'w h bits matrix' on stack
/rlecmapimage {
  /buffer 1 string def
  /rgbval 3 string def
  /block  384 string def

  % proc to read a block from file, and return RGB data
  { currentfile buffer readhexstring pop
    /bcount exch 0 get store
    bcount 128 ge
    {  % it's a non-run block
      0 1 bcount 128 sub
      { currentfile buffer readhexstring pop pop

        % look up value in color map
        /rgbval cmap buffer 0 get 3 mul 3 getinterval store

        % and put it in position i*3 in block
        block exch 3 mul rgbval putinterval
      } for
      block  0  bcount 127 sub 3 mul  getinterval
    }

    { % else it's a run block
      currentfile buffer readhexstring pop pop

      % look up value in colormap
      /rgbval cmap buffer 0 get 3 mul 3 getinterval store

      0 1 bcount { block exch 3 mul rgbval putinterval } for

      block 0 bcount 1 add 3 mul getinterval
    } ifelse
  } % end of proc
  false 3 colorimage
} bind def


950 50 8			% dimensions of data
[950 0 0 -50 0 50]		% mapping matrix
rlecmapimage

7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f210221870d1f220e220311212a21
7f217f217f217f217f217f2175218211030e820e220e820e220e860e220e23050b048404
090e24212a21
7f217f217f217f217f217f2171218e110312260b041e131e131e131e131e871e17001702
1d24212c21
7f217f217f217f217f217f216921830d1f220e870e221226200408000b00841702070d21
0521842403100d212321
7f217f217f217f217f217f2121218524220f231f213a218f0d0a220e220e23051b041e13
1e0817000c008408190706210421851103221f0d212521
7f217f217f217f217f217f211e2189240e1c1b17000825242136218a0d1026021b041e13
081700110085172001030d210421840316030d212821
7f217f217f217f217f21342186111a120f070a215721860d1110220e220e860e12182504
17000300821b1f212521851f0e2326230e080e841d010908001100820820090209840c1d
1a06210521841026230d212a21
7f217f217f217f21792186241f10220e220e820e220e820e220e820e220e820e220e820e
220e830e070f01010182070a2117218b0610231c1508001708090a2151218e0d1f101d01
14201b1e131e131e08000700820c0d211021840d100311210921881103220e07050b0800
8400171e081e821e081e851e081e0817001000851e2009181a210b21850d22261d24212c
21
7f217f217f217f21472184241f10220e820e220e820e220e820e220e820e220e820e220e
820e220e810e2283221f0d210e219a241f10070f1c09151e041e131e131e131e131e131e
131e131e131e821e080002008b17081410210d1110220e220e820e220e820e220e010e81
2301880126012616191b08000500820422212f2182240d211921890d0a0e072625150417
00100082201a210921890d1110220e23011620048304051f210421891103231c15131e08
1700190082171e090309820c1a210e21841f0e0a0d212e21
7f217f217f217f213f2190241f100e070f011c1920041e131e081e0882081e0882081e08
82081e0882081e0803088304250a2107218b241f030e12181619151e08001d00811e268c
2614201b041e131e131e131e088108178117000f0082091f211521840d0610220e0f0e88
120f012625020c11211321890d0a22121809040817001300831e050a2105218a0d1f101d
0114201b1e170004008408260e220e860e230c020417001800821e2009020982181a2114
21810d213321
7f211221842422121f217f217f217f211221850d0a220e220e820e220e820e220e820e22
0e010e881d0f1605090b041e178117001a008f1e22210d1110221d0f0116190b041e1781
1700220001171f00820b2221102189111022120f0125151b1e011e81081e821e081e821e
081e821e081e821e081e821e1700030082171c0e110e861d01251b1e170015008220181d
021d81220e020e86070119150417000b0086081e131e08170019008308091d210c21830d
1f24214121
7f210721830d0a220e040e83230504088308052421492185240a22230f01130182070a21
7f2106218c240a03220e220e220e220e1d0f840f01231f217f210a2199240a221d0f0116
191b1e131e131e131e131e131e131e131e17002300810b16871609200413081700490087
171e051d1f10220e0a0e8712232625201b1e178117001b000108011e81081e821e081e82
1e081e821e081e821e081e831e0817000c0085171e201e08000300831720090c840c090b
1b1e871e081e081e0817001f0083081e201e821e20090809820c03210b21860d0a222307
0d210521010d3a21
7f21042188112218141b13081e088108178117000300821b1f2140218b241f100e070f1c
25021b1317811700140083081410217f218c241f10070f05021b04131e131e011e810817
811700010093170207220e220e220e220e220e220e22120f18018301231f216e218c0d0a
22120f0116191b130817004c000117811e208120090509822008002c008308200c188518
0c09021b1e821e081e821e081e821e081e811e08810817811700400081171e871e09181a
061c08000300851e200b1e1700250083171e200983091806211721820d110a010a841d26
1918214421
6c219a1103220e220e220e220e220e220e220e220e220e22120f050b08000d0093091d22
0e220e220e220e220e220e220e2203112127218c241f100e070f0105021b1e08001e0082
0422216a2189241f10220e230f1826018201260182012601890126160509150408170011
0085131e131e131e821e131e831e131e0882081700020083082524215e2183240a220e82
0e220e8b0e22120f011605190b1308178117004d008817081e2009181d06210821810900
22000408071e0117510085080b09181a21022182060900040082081700120082171e000f
00011e83091806210d21821a031d8e1d221d221d0e22030a110d240d240d810d21012182
2406214521
68219711030f252004131e131e131e131e131e131e131e131e131e821e08001100011e83
131e131e821e131e821e131e821e131e811e1383131c1f211e218d0d1110221d0f260519
0b041e17002500821b0c0103018426161c05250b258405160f1d0e210e82070f26012681
0126822601268426010f1f2117218a241f100e070f1609150408820817003900821b1f21
56218a0a0f0c2514190215041e0801088217081701173400011781001781170016000117
011e85200c181d06210e218105000d0083171e08000c00011781081e041e020802171e00
82081e208120090d0982201e001b00850820090c1a210721821817000b008b081e200920
1920192009200986090c1d1a060900030083171e20090209010c83181a0621082187060a
0e1d071d0e1d821d0f1802180107841d220a24215221
1d21830d1f220e820e220e820e220e820e220e860e220e221024212321840d10230f010a
01852616091b08003b00820812210421830d1f102281220e820e220e820e220e820e220e
820e220e820e220e890e1d0f011609201b1317811700470081081e821e081e821e081e82
1e081e821e081e821e081e821e081e821e081e821e081e821e081e821e081e841e081e08
000a0083170b260182012601820126018201260182012601820126018a01260126160525
19151b088108004200820c0d21032196240a03220e220e220e220e220e220e220e220e22
0e1d0f810f01150182231f210921840d0610220e0e0e8418140417002100821720090409
822017002c008317081e208520090c1d1a211621821a201e811e20832009200982092009
86092009181a0c003400011e8520090c181a211221831a0c200982092009820920091109
830c1a06210a2182062000080087082009181a0621060206812106810621052183061d0c
0984090c181d1a011a02060e21820d062482240d216021
1c21970d0702041e131e131e131e131e131e131e0420050f100d211f21840d231b17004d
00a008182212230f011609151b131e131e131e131e131e131e131e131e131e130817001b
0083170017007f0041008c201a241f10070f1c021b04131e821e131e821e131e821e131e
821e131e011e810817811700160001178205112101218a111022120f181614151b1e821e
081e821e081e821e081e821e081e821e0817811700250082090621032182060900260088
17081e20090c1d1a212e2183062017001f008317081e208120090a09830c181a21442183
240917008300081e2001208409181a0621142183061a1d1a841a062106217721
1b21830d071b000f008517080b05230e8f0e220e220e220e220e220e220e220e22842210
110d210821830d231e004f00841e041e08178117007f0065008117000e000108011e8720
0c16090b1e08003000880401181614201b1e178117003a00822006210421820620001f00
81171e861e20090c1d1a213521820609001700011788081e20090c181a0621492184060a
101a1086101a10110d210d880d061a180c09181a0601067f211b21
1b21820a1900140081081e821e131e821e131e821e131e821e131e8d1e131e13040b1925
1812221f0d210321820a20007f007f0033000108160081081e031e820817003600811700
40008308091a2106218203091e031e8120091609830c1d1a213d21821f01091409840c18
1a06214e21010d0124010685240624060d210321850a26012206217f211f21
1b21831020170029008c1708040b021925051626051e007f002f000d1782081e20812009
1e0982201e00370081171e811e208120090c0982181d0683061808007900011781081e07
1e8120090e09820c1d217f216721820611217f212221
1b21830d0e0c090c0982201e004d00820817002a000217011e8120090c09811e00380082
17081e851e090c181a068306210621822106218221062182210621822106212521821a0c
09010982201e002700011781081e811e2085200c181d06211321821a200022000117011e
82091e0035008317081e20812009090982201e0002008608091a062106217f215521810d
217f215321
2d21851a0c201e17004300850820090c1a068206200022008317081e208620090c181d1a
210f21821d08002e000117021e0120840c181a06214221821d0c09250983181d06211c21
821a20001c008817081e2009181d062101218109002d0081171e871e20090c181a06210e
21851d09200c1a217f215a2182110d215321810d217d21
30218306180c090f0983201e08002500811e09820920090109830c1a062104218203201e
081e01201309810c1d821d1a21182182062000260081171e011e8620090c181a06217f21
1521830d1d0c091909840c181d06210721821a191e091e83200920098209200982092009
8209200982092009820920098209200982092009820920098209200985090c181a06217f
217621810d215121860d1026142510217c21
462185061d0c2017002000820906214e21820618098209200981092082201e178217081e
011e01201309840c181a06217f217f217f217f214421810d2401248306240d217d21
4a21841d201e0800150081081e041e820906217f217f217f217f217f217f214521
4e2185061a18201e000b0085171e091d06217f217f217f217f217f217f214e21
5221821a0c090909830c1d06217f217f217f217f217f217f215121
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521

%
% Compression made this file 2.88% of the uncompressed size.
%


showpage

% stop using temporary dictionary
end

% restore original state
origstate restore

%%Trailer

%%EndDocument
 @endspecial 5001 5222 a @beginspecial @setspecial
 tx@Dict begin STP newpath 1.0 SLW 0.5451 0.39608 0.03137 setrgbcolor
 /ArrowA { moveto } def /ArrowB { } def [ 341.43292 -28.45274 -22.76227
-28.45274  /Lineto /lineto load def false Line  gsave 1.0 SLW 0.5451
0.39608 0.03137 setrgbcolor 0 setlinecap stroke  grestore end
 
@endspecial
621 x Fi(SESC)20 b(\(IA)n(COMA)e(g)o(roup\))2960 b(Joe)20
b(Renau,)h(Basilio)e(F)m(r)o(aguela,)h(and)g(Liu)g(W)n(ei)39
b(\226)20 b(page)40 b(20/23)4266 1057 y
 gsave currentpoint currentpoint translate 270 neg rotate neg exch
neg exch translate
 4266 1057 a @beginspecial
276 @llx 366 @lly 336 @urx 426 @ury 141 @rwi 141 @rhi
@setspecial
%%BeginDocument: angleHG.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/rico/texte/texstyle/Prosper-beta/img/angleHG.ps
%%Creator: XV Version 3.10a  Rev: 12/29/94 (PNG patch 1.2)  -  by John Bradley
%%BoundingBox: 276 366 336 426
%%Pages: 1
%%DocumentFonts:
%%EndComments
%%EndProlog

%%Page: 1 1

% remember original state
/origstate save def

% build a temporary dictionary
20 dict begin

% define string to hold a scanline's worth of data
/pix 180 string def

% define space for color conversions
/grays 60 string def  % space for gray scale line
/npixls 0 def
/rgbindx 0 def

% print in landscape mode
90 rotate 0 -612 translate

% lower left corner
366 276 translate

% size of image (on paper, in 1/72inch coords)
59.97600 59.97600 scale

% define 'colorimage' if it isn't defined
%   ('colortogray' and 'mergeprocs' come from xwd2ps
%     via xgrab)
/colorimage where   % do we know about 'colorimage'?
  { pop }           % yes: pop off the 'dict' returned
  {                 % no:  define one
    /colortogray {  % define an RGB->I function
      /rgbdata exch store    % call input 'rgbdata'
      rgbdata length 3 idiv
      /npixls exch store
      /rgbindx 0 store
      0 1 npixls 1 sub {
        grays exch
        rgbdata rgbindx       get 20 mul    % Red
        rgbdata rgbindx 1 add get 32 mul    % Green
        rgbdata rgbindx 2 add get 12 mul    % Blue
        add add 64 idiv      % I = .5G + .31R + .18B
        put
        /rgbindx rgbindx 3 add store
      } for
      grays 0 npixls getinterval
    } bind def

    % Utility procedure for colorimage operator.
    % This procedure takes two procedures off the
    % stack and merges them into a single procedure.

    /mergeprocs { % def
      dup length
      3 -1 roll
      dup
      length
      dup
      5 1 roll
      3 -1 roll
      add
      array cvx
      dup
      3 -1 roll
      0 exch
      putinterval
      dup
      4 2 roll
      putinterval
    } bind def

    /colorimage { % def
      pop pop     % remove 'false 3' operands
      {colortogray} mergeprocs
      image
    } bind def
  } ifelse          % end of 'false' case



60 60 8			% dimensions of data
[60 0 0 -60 0 60]		% mapping matrix
{currentfile pix readhexstring pop}
false 3 colorimage

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffafee3effeaaffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffafee3e3fe64ffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffe3fe64fafee3ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffe9fe88f1feb3ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffe8fe86dffe55fefefeffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffebfe96dafe37fefefeffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffedfe9edefe48f7fed5ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffedfe9ee2fe60eefea5f5fecaecfe95ecfe97ecfe98
ecfe99ecfe9bf6feceffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffeffeaadffe4fe0fe55dcfe3f
dbfe3cdbfe3ddbfe3dddfe48defe4cdcfe43d9fe32d6fe20e2fe5fe3fe67defe4ddefe4d
defe4edefe4edbfe3bdbfe3cdcfe3ddcfe3fdcfe40dcfe42ddfe43ddfe45ddfe46ddfe48
ddfe46e2fe63e5fe72e5fe74e6fe76e6fe77e6fe79e7fe7ae9fe86e8fe85ebfe94ecfe97
ecfe99ecfe9cedfe9eeffeacf2febcf3febef3fec1f4fec4f9fedfffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffeffeaaf1feb3f5fec7e9fe87
e7fe7be7fe7be7fe7be2fe60e1fe5bd6fe1dd8fe2adafe33e1fe5bdffe54defe4edffe50
dffe51dffe53e0fe54ddfe49ddfe4bdefe4cdefe4edefe50dffe52dffe54e5fe73eafe93
e9fe89e6fe7ae4fe6ce4fe6ee8fe84e8fe85e9fe87e9fe8ae8fe84e7fe7ce8fe81e9fe8a
f0feb0f8fedbf9fedff1feb8f1febaeafe8bfbfeeafbfeebfdfef5ffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff5fecddffe52e1fe5df5fec9f5fec9f5fecaf5feca
f5fecbf5feccf5feccf5fecdf6fecef6fecef6fecef6fecff6fed0f6fed1eefea5e9fe8a
f6fed1f7fed7f7fed8f7fed9f6fecdfafee8fcfef1fcfef2fdfef7fcfef3fdfef7fefefc
fefefcfefefdf9fee0f6fecff5feccf4fec2ffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff5fecde3fe64e5fe74ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffdfef5fefefdfefefdfefefcfefefcfffffffefef9
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff5fecde5fe74dffe53ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff6fecee6fe79e5fe6ff8fed8ffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff6fecee6fe7aebfe95effeaaffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff6fecee6fe7aedfe9eeefea2ffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff6fecee6fe7bedfe9eeefea3ffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff6fecfe6fe78ecfe9eeefea5ffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffefefe
fefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff6fed0e2fe63e0fe59dffe55ffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffefefe
fefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffedfe9fe2fe5fd8fe2ad8fe2dffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffecfe9adffe53d6fe1cdefe4cf6fecfffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffedfe9cd8fe2cd6fe20defe4bf6fed0ffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffefefdffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffedfe9dd8fe27d7fe22defe4ef6fed0ffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffedfe9dd7fe26d6fe20e0fe5bf6fed2ffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff3febdd7fe22d7fe22e1fe5ef7fed3ffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff4fec6d6fe20d7fe21e0fe57f7fed4ffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff4fec6d6fe20d6fe1fe0fe59f7fed5ffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff4fec6d6fe1ed6fe1ee5fe73f7fed6ffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff4fec6d6fe1dd9fe32e0fe56ffffffffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff5fecce0fe55defe48e8fe81ffffffffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffbfeede7fe7fe0fe56e9fe85ffffffffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff7fed8e8fe84e7fe7ef1feb4ffffffffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff2feb8edfea0effea6f1feb6ffffffffffffffffff
fffffffefefefefefeffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffefefceffeabf0feafeffea7f2feb7ffffffffffffffffff
fffffffefefefefefefefefeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffefefcf5fecaecfe9de7fe7af8feddffffffffffffffffff
fffffffefefefefefefefefefefefeffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffefefcf5fecce8fe85e8fe80ffffffffffffffffffffffff
fffffffefefefefefefefefeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffff8fedefdfef8fdfefbf3fec0e9fe89ecfe96ffffffffffffffffffffffff
fefefefefefefefefefefefeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffdfef6fefefafefefaf4fec2e9fe89ecfe96ffffffffffffffffffffffff
fefefefefefefefefefefefeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffdfef6fefefefefefdf4fec2e8fe85edfe9dffffffffffffffffffffffff
fefefefefefefefefefefefeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffefef9fefefdfefefce7fe7be5fe76f2feb7ffffffffffffffffffffffff
fffffffffffffefefefefefeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffdfef6fdfefafefefbe2fe65e5fe75f6fed0ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffdfef9fefefce6fe79e6fe77fafee6ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffcfef6fefefbecfe9be7fe7efbfeecffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffdfef5fdfef7f7fed5e9fe8dfcfef2ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffcfeeffbfeebedfea1fdfef7ffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffefefeffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffefefdfbfee9effeabffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffefefefefefeffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffbfeeceffea6ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff9fee3f3fec1ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffeefea2f8fedaffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff1feb2fafee4ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffcfef0fefefaffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff


showpage

% stop using temporary dictionary
end

% restore original state
origstate restore

%%Trailer

%%EndDocument
 @endspecial 4511 1057 a
 currentpoint grestore moveto
 4511 1057 a 4130 5844 a
 currentpoint currentpoint translate 0.76611 0.76611 scale neg exch
neg exch translate
 4130
5844 a 4130 5844 a
 gsave currentpoint currentpoint translate 0 neg rotate neg exch neg
exch translate
 4130 5844 a @beginspecial 0 @llx 0
@lly 37 @urx 42 @ury 370 @rwi @setspecial
%%BeginDocument: figs/uiuc.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: uiuc.eps
%%Creator: fig2dev Version 3.2 Patchlevel 3d
%%CreationDate: Sun Feb 10 22:03:46 2002
%%For: renau@nether.cs.uiuc.edu (Jose Renau)
%%BoundingBox: 0 0 37 42
%%Magnification: 1.0000
%%EndComments
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def
/col32 {0.200 0.200 0.400 srgb} bind def
/col33 {0.800 0.400 0.000 srgb} bind def

end
save
newpath 0 42 moveto 0 0 lineto 37 0 lineto 37 42 lineto closepath clip newpath
-273.7 413.7 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
 0.06000 0.06000 sc
%
% Fig objects follow
%
%  polyline 
% Polyline
n 5070 6872 m 5070 6227 l 4584 6227 l 4584 6872 l
 5070 6872 l  cp gs col32 1.00 shd ef gr 
%  polyline 
% Polyline
15.000 slw
n 5070 6872 m 5070 6227 l 4584 6227 l 4584 6872 l
 5070 6872 l  cp gs col32 s gr 
%  polyline 
% Polyline
0.000 slw
n 5056 6858 m 5056 6243 l 4598 6243 l 4598 6858 l
 5056 6858 l  cp gs col32 1.00 shd ef gr 
%  polyline 
% Polyline
7.500 slw
n 5056 6858 m 5056 6243 l 4598 6243 l 4598 6858 l
 5056 6858 l  cp gs col33 s gr 
%  spline 
% Polyline
2 slj
0.000 slw
n 4944 6783 m 4944 6781 l 4944 6773 l 4944 6759 l 4944 6751 l 4944 6749 l
 4943 6749 l 4935 6748 l 4924 6746 l 4914 6744 l 4906 6742 l
 4900 6741 l 4896 6739 l 4892 6738 l 4887 6735 l 4884 6732 l
 4880 6728 l 4877 6722 l 4875 6716 l 4873 6709 l 4872 6702 l
 4871 6693 l 4870 6683 l 4869 6670 l 4869 6654 l 4868 6637 l
 4868 6621 l 4868 6609 l 4868 6604 l 4868 6603 l 4868 6602 l
 4868 6597 l 4868 6585 l 4868 6567 l 4868 6544 l 4868 6521 l
 4868 6503 l 4868 6491 l 4868 6486 l 4868 6485 l 4868 6483 l
 4868 6474 l 4868 6457 l 4869 6438 l 4869 6420 l 4870 6406 l
 4870 6395 l 4871 6387 l 4873 6381 l 4874 6375 l 4876 6371 l
 4879 6367 l 4882 6365 l 4885 6363 l 4889 6362 l 4892 6361 l
 4898 6359 l 4905 6358 l 4915 6356 l 4925 6354 l 4933 6352 l
 4934 6352 l 4934 6350 l 4934 6343 l 4934 6331 l 4934 6324 l
 4934 6322 l 4933 6322 l 4928 6322 l 4916 6322 l 4896 6322 l
 4869 6322 l 4837 6322 l 4806 6322 l 4779 6322 l 4759 6322 l
 4747 6322 l 4742 6322 l 4741 6322 l 4740 6322 l 4737 6322 l
 4732 6322 l 4729 6322 l 4726 6322 l 4724 6322 l 4721 6323 l
 4718 6324 l 4716 6325 l 4714 6326 l 4712 6327 l 4710 6329 l
 4707 6332 l 4705 6334 l 4703 6336 l 4701 6338 l 4700 6339 l
 4699 6341 l 4698 6342 l 4697 6344 l 4696 6346 l 4696 6347 l
 4695 6349 l 4695 6351 l 4695 6353 l 4694 6356 l 4694 6358 l
 4694 6359 l 4694 6360 l 4694 6362 l 4694 6365 l 4694 6367 l
 4695 6369 l 4695 6370 l 4696 6372 l 4697 6374 l 4697 6375 l
 4698 6377 l 4699 6378 l 4701 6379 l 4702 6381 l 4704 6383 l
 4706 6385 l 4708 6386 l 4709 6388 l 4710 6389 l 4712 6389 l
 4713 6390 l 4715 6391 l 4716 6391 l 4718 6391 l 4720 6391 l
 4721 6391 l 4724 6391 l 4726 6391 l 4727 6391 l 4729 6391 l
 4732 6390 l 4735 6390 l 4737 6389 l 4740 6388 l 4742 6387 l
 4744 6385 l 4747 6383 l 4748 6381 l 4749 6379 l 4750 6376 l
 4751 6372 l 4752 6369 l 4752 6368 l 4752 6366 l 4752 6364 l
 4752 6362 l 4752 6361 l 4752 6359 l 4752 6358 l 4751 6357 l
 4751 6356 l 4750 6355 l 4749 6354 l 4749 6353 l 4748 6352 l
 4747 6351 l 4746 6350 l 4745 6349 l 4744 6348 l 4743 6348 l
 4742 6347 l 4741 6346 l 4740 6346 l 4739 6346 l 4738 6346 l
 4736 6345 l 4735 6345 l 4733 6345 l 4732 6345 l 4730 6345 l
 4729 6345 l 4728 6346 l 4727 6346 l 4725 6346 l 4724 6347 l
 4724 6348 l 4723 6348 l 4722 6349 l 4721 6351 l 4720 6352 l
 4719 6353 l 4718 6354 l 4718 6355 l 4717 6356 l 4717 6357 l
 4717 6358 l 4716 6359 l 4717 6360 l 4717 6361 l 4717 6362 l
 4717 6363 l 4718 6364 l 4718 6365 l 4719 6366 l 4719 6367 l
 4720 6367 l 4720 6368 l 4721 6368 l 4722 6369 l 4723 6369 l
 4723 6368 l 4724 6368 l 4725 6368 l 4726 6367 l 4727 6367 l
 4727 6366 l 4728 6366 l 4728 6365 l 4729 6365 l 4729 6364 l
 4729 6363 l 4729 6362 l 4729 6361 l 4728 6360 l 4728 6359 l
 4729 6359 l 4729 6358 l 4730 6357 l 4731 6357 l 4731 6356 l
 4732 6356 l 4733 6356 l 4734 6356 l 4735 6356 l 4735 6357 l
 4736 6357 l 4737 6357 l 4738 6357 l 4738 6358 l 4739 6358 l
 4739 6359 l 4739 6360 l 4740 6360 l 4740 6361 l 4740 6362 l
 4741 6362 l 4741 6363 l 4741 6364 l 4740 6364 l 4740 6365 l
 4740 6366 l 4740 6368 l 4739 6371 l 4739 6373 l 4738 6374 l
 4737 6375 l 4736 6376 l 4735 6377 l 4733 6378 l 4732 6379 l
 4731 6379 l 4729 6379 l 4727 6380 l 4725 6380 l 4724 6380 l
 4722 6380 l 4721 6380 l 4720 6380 l 4719 6380 l 4718 6380 l
 4717 6379 l 4716 6379 l 4715 6379 l 4715 6378 l 4714 6377 l
 4713 6376 l 4712 6375 l 4711 6374 l 4710 6373 l 4710 6372 l
 4709 6372 l 4708 6371 l 4708 6370 l 4707 6369 l 4707 6368 l
 4707 6367 l 4706 6365 l 4706 6363 l 4706 6361 l 4706 6359 l
 4706 6357 l 4706 6355 l 4706 6353 l 4706 6352 l 4707 6351 l
 4707 6350 l 4707 6348 l 4708 6347 l 4709 6346 l 4709 6345 l
 4710 6344 l 4712 6343 l 4713 6342 l 4715 6340 l 4717 6339 l
 4718 6337 l 4720 6337 l 4721 6336 l 4723 6335 l 4725 6334 l
 4727 6334 l 4729 6334 l 4731 6333 l 4734 6333 l 4738 6333 l
 4740 6333 l 4741 6333 l 4742 6333 l 4744 6333 l 4747 6333 l
 4753 6333 l 4759 6333 l 4767 6333 l 4776 6333 l 4785 6333 l
 4794 6333 l 4802 6333 l 4809 6333 l 4815 6333 l 4822 6333 l
 4827 6333 l 4828 6333 l 4828 6334 l 4828 6337 l 4828 6341 l
 4828 6344 l 4828 6345 l 4826 6345 l 4816 6345 l 4797 6345 l
 4779 6345 l 4769 6345 l 4767 6345 l 4766 6345 l 4765 6345 l
 4764 6346 l 4763 6346 l 4762 6347 l 4762 6348 l 4761 6349 l
 4761 6350 l 4761 6351 l 4761 6352 l 4761 6353 l 4761 6354 l
 4761 6355 l 4762 6356 l 4762 6357 l 4763 6358 l 4764 6359 l
 4765 6359 l 4766 6359 l 4767 6359 l 4769 6359 l 4779 6359 l
 4798 6359 l 4816 6359 l 4826 6359 l 4828 6359 l 4828 6360 l
 4828 6362 l 4828 6367 l 4828 6369 l 4828 6370 l 4826 6370 l
 4817 6370 l 4799 6370 l 4782 6370 l 4773 6370 l 4771 6370 l
 4770 6370 l 4769 6370 l 4768 6370 l 4767 6371 l 4766 6371 l
 4766 6372 l 4765 6373 l 4765 6374 l 4765 6375 l 4765 6376 l
 4765 6377 l 4766 6378 l 4766 6379 l 4767 6380 l 4768 6381 l
 4769 6381 l 4770 6381 l 4771 6381 l 4773 6381 l 4782 6381 l
 4800 6381 l 4817 6381 l 4826 6381 l 4828 6381 l 4828 6384 l
 4828 6391 l 4828 6404 l 4828 6423 l 4828 6449 l 4828 6480 l
 4828 6516 l 4828 6554 l 4828 6592 l 4828 6628 l 4828 6659 l
 4828 6685 l 4828 6704 l 4828 6717 l 4828 6724 l 4828 6727 l
 4827 6727 l 4819 6727 l 4802 6727 l 4780 6727 l 4757 6727 l
 4740 6727 l 4732 6727 l 4731 6727 l 4730 6727 l 4729 6727 l
 4728 6727 l 4727 6728 l 4726 6728 l 4726 6729 l 4726 6730 l
 4725 6730 l 4725 6731 l 4725 6732 l 4725 6733 l 4725 6734 l
 4725 6735 l 4725 6736 l 4725 6737 l 4726 6738 l 4726 6739 l
 4727 6739 l 4727 6740 l 4728 6740 l 4729 6740 l 4730 6740 l
 4731 6740 l 4732 6740 l 4740 6740 l 4757 6740 l 4780 6740 l
 4802 6740 l 4819 6740 l 4827 6740 l 4828 6740 l 4828 6741 l
 4828 6745 l 4828 6750 l 4828 6754 l 4828 6755 l 4827 6755 l
 4822 6755 l 4811 6755 l 4792 6755 l 4770 6755 l 4748 6755 l
 4729 6755 l 4718 6755 l 4713 6755 l 4712 6755 l 4710 6755 l
 4707 6755 l 4706 6756 l 4704 6756 l 4703 6757 l 4702 6758 l
 4701 6759 l 4700 6760 l 4699 6761 l 4699 6763 l 4698 6764 l
 4698 6767 l 4698 6769 l 4698 6770 l 4698 6773 l 4698 6779 l
 4698 6782 l 4698 6783 l 4699 6783 l 4703 6783 l 4713 6783 l
 4730 6783 l 4755 6783 l 4786 6783 l 4821 6783 l 4856 6783 l
 4887 6783 l 4912 6783 l 4929 6783 l 4939 6783 l 4943 6783 l

 4944 6783 l  cp gs col7 1.00 shd ef gr 
%  spline 
% Polyline
n 4783 6706 m 4783 6705 l 4783 6702 l 4783 6693 l 4783 6678 l 4783 6656 l
 4783 6626 l 4783 6592 l 4783 6555 l 4783 6517 l 4783 6483 l
 4783 6453 l 4783 6431 l 4783 6416 l 4783 6407 l 4783 6404 l
 4783 6403 l 4783 6402 l 4783 6401 l 4783 6400 l 4782 6400 l
 4782 6399 l 4781 6399 l 4781 6398 l 4780 6398 l 4779 6398 l
 4778 6398 l 4777 6398 l 4776 6398 l 4775 6398 l 4774 6399 l
 4773 6399 l 4773 6400 l 4772 6401 l 4772 6402 l 4772 6403 l
 4772 6404 l 4772 6407 l 4772 6416 l 4772 6431 l 4772 6453 l
 4772 6483 l 4772 6517 l 4772 6555 l 4772 6592 l 4772 6626 l
 4772 6656 l 4772 6678 l 4772 6693 l 4772 6702 l 4772 6705 l
 4772 6706 l 4772 6707 l 4772 6708 l 4773 6709 l 4773 6710 l
 4774 6711 l 4775 6712 l 4776 6712 l 4777 6712 l 4778 6712 l
 4779 6712 l 4780 6712 l 4781 6712 l 4781 6711 l 4782 6711 l
 4782 6710 l 4783 6709 l 4783 6708 l 4783 6707 l
 4783 6706 l  cp gs col7 1.00 shd ef gr 
%  spline 
% Polyline
n 4813 6705 m 4813 6704 l 4813 6701 l 4813 6692 l 4813 6677 l 4813 6655 l
 4813 6626 l 4813 6592 l 4813 6555 l 4813 6518 l 4813 6484 l
 4813 6455 l 4813 6433 l 4813 6418 l 4813 6409 l 4813 6406 l
 4813 6405 l 4813 6404 l 4813 6402 l 4813 6401 l 4812 6400 l
 4811 6399 l 4811 6398 l 4810 6398 l 4809 6398 l 4808 6397 l
 4807 6397 l 4806 6397 l 4805 6397 l 4804 6397 l 4803 6397 l
 4802 6397 l 4801 6398 l 4800 6398 l 4799 6399 l 4799 6400 l
 4798 6401 l 4798 6402 l 4798 6404 l 4798 6405 l 4798 6406 l
 4798 6409 l 4798 6418 l 4798 6433 l 4798 6455 l 4798 6484 l
 4798 6518 l 4798 6555 l 4798 6592 l 4798 6626 l 4798 6655 l
 4798 6677 l 4798 6692 l 4798 6701 l 4798 6704 l 4798 6705 l
 4798 6706 l 4798 6707 l 4798 6708 l 4799 6709 l 4799 6710 l
 4799 6711 l 4800 6711 l 4801 6712 l 4802 6713 l 4803 6713 l
 4804 6713 l 4805 6713 l 4806 6713 l 4807 6713 l 4808 6713 l
 4809 6712 l 4810 6712 l 4811 6711 l 4812 6710 l 4812 6709 l
 4813 6708 l 4813 6707 l 4813 6706 l
 4813 6705 l  cp gs col7 1.00 shd ef gr 
%  polyline 
% Polyline
0 slj
n 5136 6864 m 5124 6864 l 5124 6894 l 5119 6894 l 5119 6864 l 5108 6864 l
 5108 6860 l 5136 6860 l
 5136 6864 l  cp gs col32 1.00 shd ef gr 
%  polyline 
% Polyline
n 5172 6894 m 5167 6894 l 5167 6867 l 5157 6880 l 5156 6880 l 5146 6867 l
 5145 6867 l 5145 6894 l 5141 6894 l 5141 6860 l 5145 6860 l
 5156 6874 l 5168 6860 l 5172 6860 l
 5172 6894 l  cp gs col32 1.00 shd ef gr 
$F2psEnd
rs

%%EndDocument
 @endspecial 4769 5844 a
 currentpoint grestore moveto
 4769 5844 a 4130 5844 a
 currentpoint currentpoint translate 1 0.76611 div 1 0.76611 div scale
neg exch neg exch translate
 4130
5844 a 5001 3450 a
SDict begin H.S end
 5001 3450 a 5001 3450 a
SDict begin H.R end
 5001 3450
a 5001 3450 a
SDict begin [ /View [/XYZ H.V] /Dest (page.1) cvn H.B /DEST pdfmark
end
 5001 3450 a 5001 3450 a
SDict begin [ {ThisPage} << /Trans << /S /Replace >> >> /PUT pdfmark
end
 5001 3450 a 5001
3450 a
SDict begin [ /Page 20/View [ /XYZ null null null ] /Title (Full SPECint)
/OUT pdfmark end
 5001 3450 a 7898 1453 a Fm(F)18 b Fn(U)g(L)g(L)116
b Fm(S)18 b(P)g(E)g(C)g Fn(I)g(N)g(T)4649 2157 y @beginspecial
276 @llx 376 @lly 336 @urx 416 @ury 113 @rwi @setspecial
%%BeginDocument: green-bullet-on-white.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/fred/TeX/STYLES/Prosper/img/green-bullet-on-white.ps
%%Creator: XV Version 3.10a+FLmask  Rev: 12/29/94  -  by John Bradley
%%BoundingBox: 276 376 336 416
%%Pages: 1
%%DocumentFonts:
%%EndComments
%%EndProlog

%%Page: 1 1

% remember original state
/origstate save def

% build a temporary dictionary
20 dict begin

% define space for color conversions
/grays 60 string def  % space for gray scale line
/npixls 0 def
/rgbindx 0 def

% lower left corner
276 376 translate

% size of image (on paper, in 1/72inch coords)
59.97600 40.03200 scale

% define 'colorimage' if it isn't defined
%   ('colortogray' and 'mergeprocs' come from xwd2ps
%     via xgrab)
/colorimage where   % do we know about 'colorimage'?
  { pop }           % yes: pop off the 'dict' returned
  {                 % no:  define one
    /colortogray {  % define an RGB->I function
      /rgbdata exch store    % call input 'rgbdata'
      rgbdata length 3 idiv
      /npixls exch store
      /rgbindx 0 store
      0 1 npixls 1 sub {
        grays exch
        rgbdata rgbindx       get 20 mul    % Red
        rgbdata rgbindx 1 add get 32 mul    % Green
        rgbdata rgbindx 2 add get 12 mul    % Blue
        add add 64 idiv      % I = .5G + .31R + .18B
        put
        /rgbindx rgbindx 3 add store
      } for
      grays 0 npixls getinterval
    } bind def

    % Utility procedure for colorimage operator.
    % This procedure takes two procedures off the
    % stack and merges them into a single procedure.

    /mergeprocs { % def
      dup length
      3 -1 roll
      dup
      length
      dup
      5 1 roll
      3 -1 roll
      add
      array cvx
      dup
      3 -1 roll
      0 exch
      putinterval
      dup
      4 2 roll
      putinterval
    } bind def

    /colorimage { % def
      pop pop     % remove 'false 3' operands
      {colortogray} mergeprocs
      image
    } bind def
  } ifelse          % end of 'false' case



% define the colormap
/cmap 723 string def


% load up the colormap
currentfile cmap readhexstring
041808 049008 8c948c 045204 4c544c 04c804 84e284 449644 c4cbc4 0c380e 
04ac07 cce6cc 345e2c e4e7e4 046604 2c3a2c 347234 e4fee2 048208 64cc60 
34922c 24b224 04e404 044604 647264 242623 049f07 8cae8c 04bc06 24c61c 
f4f8f3 1c541c 04d804 1c621c 1c7220 0c280d 14910f 045e04 047c04 ccdcd0 
14ac18 1c481c 747473 04d105 0c6c0b 24852a 1c381c f4f1f3 acafac f4fef5 
0c310c acc6ac 049708 a4a4a3 3c4a44 148314 144812 9cea94 04b405 149e14 
1cbc1c 044004 e4fef4 dcdddd 748274 5c5959 4cba54 145b11 145413 147412 
c4fec4 e4f1e7 146411 088a0a 243028 09c207 fcf8f3 147c13 14c80e acceac 
3c3939 04f405 044e07 07a608 14d00f 0c1f10 0c900b d4d3d4 ecfee3 1c291d 
0c6e14 bcbfbd d4f6d4 909a94 4c5a50 0cac08 24ba24 547e54 0cbc0a 0c5c16 
0c7c0b fcf1fb acb8ac 1c311c aca7a9 e2e2e2 a4e2a4 0cc80a 6c9a6c 143715 
0c650a 0c840b 07de06 14970c 0c980a 0cb40a 848583 ecf0f0 c3c6c3 0c540d 
0c740c cccccc 74ce6c 30a02c 04ec05 54aa5c 6cb66c 9cfa9c 2c862c 5c926c 
6ca674 b4deac 9cda9c 34aa2c 6c7e6c acfeac 448244 34d22c 7d7d7c 6c6d6c 
445644 4c4d4c 1c7a19 1c3e1c 3c3f3c 2c422c 7c9a84 54c254 dceadc 144014 
343231 bccebc bcbabc 447244 6c6664 9c9d9c 7caa7c 349a38 6c7a74 84b69c 
1c4e18 898a89 ccfadc 1c6c2c b8e2c0 1c8a24 a1aaa1 3c4e3c 5f5e5c d8fed8 
24be24 78d670 688668 148a14 14a618 145624 0c480e 2c292b 142916 1c921c 
d4dad9 243828 143017 b4d2bc b4b7b5 1c961c 8c868c 247e24 144e13 04fa04 
246224 fcfefc 0c4e0c ace2b4 3caa3c 244e24 0c180c 949394 545454 ece9ec 
343634 2cb127 6c736c 0ca00c 0cda08 0c5c0b 0ccf06 146a0c b4b2b4 646464 
b4c2b4 0c3f0c ecfdf9 e4dedc ccfdcc 2c2f2b 142214 146b16 c4c2c2 545b54 
2cb62c 74ba74 346634 b4fcb0 244224 444242 246a24 e4feec 0ce204 f4f9fc 
f4eefc 444744 54b654 fcf9fc 0c9114 dcd6d4 ecfeec 0c7b14 0cc614 0c6314 
0c8414 
pop pop   % lose return values from readhexstring


% rlecmapimage expects to have 'w h bits matrix' on stack
/rlecmapimage {
  /buffer 1 string def
  /rgbval 3 string def
  /block  384 string def

  % proc to read a block from file, and return RGB data
  { currentfile buffer readhexstring pop
    /bcount exch 0 get store
    bcount 128 ge
    {  % it's a non-run block
      0 1 bcount 128 sub
      { currentfile buffer readhexstring pop pop

        % look up value in color map
        /rgbval cmap buffer 0 get 3 mul 3 getinterval store

        % and put it in position i*3 in block
        block exch 3 mul rgbval putinterval
      } for
      block  0  bcount 127 sub 3 mul  getinterval
    }

    { % else it's a run block
      currentfile buffer readhexstring pop pop

      % look up value in colormap
      /rgbval cmap buffer 0 get 3 mul 3 getinterval store

      0 1 bcount { block exch 3 mul rgbval putinterval } for

      block 0 bcount 1 add 3 mul getinterval
    } ifelse
  } % end of proc
  false 3 colorimage
} bind def


60 40 8			% dimensions of data
[60 0 0 -40 0 40]		% mapping matrix
rlecmapimage

10bf8131bf05bf03e98165e902e9046587bf3158ec31bfe9658265e9bf09bf
10bf8131bf04bf81e9bf01bf02e98265bfe982e965e901e981bf318131ec82ecbfe982e9
65bf0abf
12bf82751ebf83bf1ebf318231ec3102318111318131bf81bfe901e981bf318131bf01bf
01e90bbf
0fbf02e901bf023101ec021101a981d6a981a9118111318131bf14bf
0fbf8165e901e988e5bfd4ecd66add07808c80149dc2137f46a911d431bfe981e9bf0fbf

0fbf01e982bfe9318331a49ce28fe2454d37562456dc71567bab87a9d4bf81bfe981e9bf
81bf318131bf0abf
10bf8ac775bf311bde43224d37568656cb535f1a733c893cae8506a91131bfe9bf01bf81
58bf0abf
0fbf911ebf31b761a0442245ed56721a530a3a4e3a813a4e864e73c94246e3bf10bf
07bf81e9bf82bfe9bf92bf1ebf31ec4f0c38e2ef8e4d49561a530a3a6283624b052b8a2b
ce4e60c2dfe331bf4cbf0cbf
0abf81e9bf82bfe9ec8eec83de1f21778e786f01341a0a3a1c851c4b052b20168b162054
aa93df11312fe965bf0abf
0ebf8d3111883d77cdcf78646f0134530a810a1c911c4ece20167c517c16542893a9ec31
e965bf0abf
08bf01e999bfe91ebf316cc07743cd45786f49561a530a3a624b6b2b707c510151877c70
4edcaba9bfe981e9bf0abf
0bbf01e985bf27d34352cf90cf0e4d2656011a530a1c62ee2b20167c5102518816cc1db9
d611bfe9bf0abf
07bf81e9bf01bf90e9bf4c86d3445277d92c786f49721a0a3a853a4b0520167c827c51bd
88bd5116e44b157a11bf0cbf
0dbf8d3f0fc33d4403cfbb0e3756011a0a860a624b2b20167c817c5102510116854b897b
a911bf0bbf
08bf82e9e5bf97bf75dab209bcc021ef254d2649561a533a1c4b052b70167c037c811620
85203a853911bf0bbf
0bbf0131869eb6d3b0bc7748884845646f561acb0a7382734b2b812b1683167c16cc01cc
012b844b2813d4bf0bbf
0abf0231955e236db0c04463cf45646f5634cb533a73624b2b2016821670548854ce2b20
4b28e831bf0bbf
0abf023183b5b6d3b089b044436e45786f49341a871a0a733a626b2b200120896b4e6b05
2b1c5f9decbf0bbf
09bf8131bf97bf31d82e09d3b044cd485a786f1201cb1a530a73621c052b852b054e4b1c
0585053a282d58bf0bbf
0bbf9431bf556709b03844cd482c7864125634cb1a5f0a7382734b0501050162011c854b
0aae2d58bf0bbf
0bbf0131934a236dd3b0bc7743485a786f1201341acb535f3a813a1c011c0173023a8453
3b1458bf0bbf
0bbf8431bf0455098309d338778277ef2c852c266f1201348134cb83cb530a3a013a810a
5f815f0a850a1ab37d58bf0bbf
08bf81e9bf93bf31bf18d83209d338c044cd6e0e2c64126f0172837271cb5382530a5383
53ae531a851a01a57e58bf0bbf
0bbf01e5837600230901098138c082c0482c862c7864126f49568156728272341a811a72
0272864912bb841131bf0abf
03bf94e9bfe9bfe9bf1ebf1ebf275923b632099538c044ef81ef7881786481646f816fad
84adea01ea560156882449ad2da3115831bf0abf
04bf02e992654ce61e75bf0d185523b66d0995bcc043cd2c812c7881786483646f64f001
f08b6f496f49642d6382e3314cbf0abf
01bf85e9e5e9652fc784c7693fc7698a69c7d2b200232eb60929bc84bc6343ef2c862c78
45784d78ed82ed6f6489644d45a3afa2114c31bf0abf
01e58175c783c769d5eb8ceb797679dab87908db67c4b66d876d9538b0447743ef84ef6e
2c78458e455a457864788ecfbe9fd4315831bf0abf
88e5750d3f5779da98d083d0689b3501358d5d0236c45567b6320995b04477cd92cdef6e
2c6e5ad95acf782c4517813e31bf2fbf0bbf
887569575bd0689bc5ba83ba8a2a8a878aca2a74db5955b284b23209d3b081b077017701
cd016e02ef876e2c6e4810a4d4bf01bf814cbf0abf
873f79b835c5ba2a9a829aa8410141868de1d104c690d881d85583552e6d958b9538b0c0
77cd03cd6377afcd84cd4321c1d483d4e9654c814cbf0abf
88575b9b742ad1418de181e15081509603968450c8d759d881d8b283b2326d0981099585
9538bcb0381f871f95c3995ca931bf81bfe981e9bf0bbf
8779b8c58ad1c6e750855096d7b119b104b184d7b119d855845523b2b66d016d83952995
2987296de09211d431bf01bf01e90cbf
8979d0c52aa88de15096b181b119041901b18796c80fd74a59b2b602b6016d86326d328f
ac0b318331bf31bf01bf81e9bf0cbf
88575b9b742ad1c68de186e1c850c850c850865096c850e1e70487045e8ca7912e672e85
2e8cac33473101318158bf02bf82e9bfe981e9bf0abf
8b3f799835c5742a8bd1a8dbc683c68dc68d818dc601c68cdbd1ca40a15da66697274711
31863158bf31bf31bf82bf4ce985e9bfe9bfe9bf0abf
8bc76957dab8359bc5a1748a2a052a018a01748b029ba6665b279447ec311ebf83bf581e
bf82bf4cbf02bf82e9bfe981e9bf0abf
881e75693f57795bb8d082d068350135029b0135013088b8985b7608b40d751e811ebf83
bf1e75bf81bf4c814cbf05bf81e9bf0bbf
83e9e52fc782c7693f823f5779817976027681da760276827957b482b4c7750175822fe5
bf82bf4cbf01bf814cbf81bfe981e9bf01bf01e90dbf

%
% Compression made this file 26.36% of the uncompressed size.
%


showpage

% stop using temporary dictionary
end

% restore original state
origstate restore

%%Trailer

%%EndDocument
 @endspecial 298 w Fg(Assuming)65 b(1000KIPS)h(w)n(e)h(can)g(r)t(un:)
4649 2657 y @beginspecial 276 @llx 376 @lly 336 @urx
416 @ury 113 @rwi @setspecial
%%BeginDocument: green-bullet-on-white.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/fred/TeX/STYLES/Prosper/img/green-bullet-on-white.ps
%%Creator: XV Version 3.10a+FLmask  Rev: 12/29/94  -  by John Bradley
%%BoundingBox: 276 376 336 416
%%Pages: 1
%%DocumentFonts:
%%EndComments
%%EndProlog

%%Page: 1 1

% remember original state
/origstate save def

% build a temporary dictionary
20 dict begin

% define space for color conversions
/grays 60 string def  % space for gray scale line
/npixls 0 def
/rgbindx 0 def

% lower left corner
276 376 translate

% size of image (on paper, in 1/72inch coords)
59.97600 40.03200 scale

% define 'colorimage' if it isn't defined
%   ('colortogray' and 'mergeprocs' come from xwd2ps
%     via xgrab)
/colorimage where   % do we know about 'colorimage'?
  { pop }           % yes: pop off the 'dict' returned
  {                 % no:  define one
    /colortogray {  % define an RGB->I function
      /rgbdata exch store    % call input 'rgbdata'
      rgbdata length 3 idiv
      /npixls exch store
      /rgbindx 0 store
      0 1 npixls 1 sub {
        grays exch
        rgbdata rgbindx       get 20 mul    % Red
        rgbdata rgbindx 1 add get 32 mul    % Green
        rgbdata rgbindx 2 add get 12 mul    % Blue
        add add 64 idiv      % I = .5G + .31R + .18B
        put
        /rgbindx rgbindx 3 add store
      } for
      grays 0 npixls getinterval
    } bind def

    % Utility procedure for colorimage operator.
    % This procedure takes two procedures off the
    % stack and merges them into a single procedure.

    /mergeprocs { % def
      dup length
      3 -1 roll
      dup
      length
      dup
      5 1 roll
      3 -1 roll
      add
      array cvx
      dup
      3 -1 roll
      0 exch
      putinterval
      dup
      4 2 roll
      putinterval
    } bind def

    /colorimage { % def
      pop pop     % remove 'false 3' operands
      {colortogray} mergeprocs
      image
    } bind def
  } ifelse          % end of 'false' case



% define the colormap
/cmap 723 string def


% load up the colormap
currentfile cmap readhexstring
041808 049008 8c948c 045204 4c544c 04c804 84e284 449644 c4cbc4 0c380e 
04ac07 cce6cc 345e2c e4e7e4 046604 2c3a2c 347234 e4fee2 048208 64cc60 
34922c 24b224 04e404 044604 647264 242623 049f07 8cae8c 04bc06 24c61c 
f4f8f3 1c541c 04d804 1c621c 1c7220 0c280d 14910f 045e04 047c04 ccdcd0 
14ac18 1c481c 747473 04d105 0c6c0b 24852a 1c381c f4f1f3 acafac f4fef5 
0c310c acc6ac 049708 a4a4a3 3c4a44 148314 144812 9cea94 04b405 149e14 
1cbc1c 044004 e4fef4 dcdddd 748274 5c5959 4cba54 145b11 145413 147412 
c4fec4 e4f1e7 146411 088a0a 243028 09c207 fcf8f3 147c13 14c80e acceac 
3c3939 04f405 044e07 07a608 14d00f 0c1f10 0c900b d4d3d4 ecfee3 1c291d 
0c6e14 bcbfbd d4f6d4 909a94 4c5a50 0cac08 24ba24 547e54 0cbc0a 0c5c16 
0c7c0b fcf1fb acb8ac 1c311c aca7a9 e2e2e2 a4e2a4 0cc80a 6c9a6c 143715 
0c650a 0c840b 07de06 14970c 0c980a 0cb40a 848583 ecf0f0 c3c6c3 0c540d 
0c740c cccccc 74ce6c 30a02c 04ec05 54aa5c 6cb66c 9cfa9c 2c862c 5c926c 
6ca674 b4deac 9cda9c 34aa2c 6c7e6c acfeac 448244 34d22c 7d7d7c 6c6d6c 
445644 4c4d4c 1c7a19 1c3e1c 3c3f3c 2c422c 7c9a84 54c254 dceadc 144014 
343231 bccebc bcbabc 447244 6c6664 9c9d9c 7caa7c 349a38 6c7a74 84b69c 
1c4e18 898a89 ccfadc 1c6c2c b8e2c0 1c8a24 a1aaa1 3c4e3c 5f5e5c d8fed8 
24be24 78d670 688668 148a14 14a618 145624 0c480e 2c292b 142916 1c921c 
d4dad9 243828 143017 b4d2bc b4b7b5 1c961c 8c868c 247e24 144e13 04fa04 
246224 fcfefc 0c4e0c ace2b4 3caa3c 244e24 0c180c 949394 545454 ece9ec 
343634 2cb127 6c736c 0ca00c 0cda08 0c5c0b 0ccf06 146a0c b4b2b4 646464 
b4c2b4 0c3f0c ecfdf9 e4dedc ccfdcc 2c2f2b 142214 146b16 c4c2c2 545b54 
2cb62c 74ba74 346634 b4fcb0 244224 444242 246a24 e4feec 0ce204 f4f9fc 
f4eefc 444744 54b654 fcf9fc 0c9114 dcd6d4 ecfeec 0c7b14 0cc614 0c6314 
0c8414 
pop pop   % lose return values from readhexstring


% rlecmapimage expects to have 'w h bits matrix' on stack
/rlecmapimage {
  /buffer 1 string def
  /rgbval 3 string def
  /block  384 string def

  % proc to read a block from file, and return RGB data
  { currentfile buffer readhexstring pop
    /bcount exch 0 get store
    bcount 128 ge
    {  % it's a non-run block
      0 1 bcount 128 sub
      { currentfile buffer readhexstring pop pop

        % look up value in color map
        /rgbval cmap buffer 0 get 3 mul 3 getinterval store

        % and put it in position i*3 in block
        block exch 3 mul rgbval putinterval
      } for
      block  0  bcount 127 sub 3 mul  getinterval
    }

    { % else it's a run block
      currentfile buffer readhexstring pop pop

      % look up value in colormap
      /rgbval cmap buffer 0 get 3 mul 3 getinterval store

      0 1 bcount { block exch 3 mul rgbval putinterval } for

      block 0 bcount 1 add 3 mul getinterval
    } ifelse
  } % end of proc
  false 3 colorimage
} bind def


60 40 8			% dimensions of data
[60 0 0 -40 0 40]		% mapping matrix
rlecmapimage

10bf8131bf05bf03e98165e902e9046587bf3158ec31bfe9658265e9bf09bf
10bf8131bf04bf81e9bf01bf02e98265bfe982e965e901e981bf318131ec82ecbfe982e9
65bf0abf
12bf82751ebf83bf1ebf318231ec3102318111318131bf81bfe901e981bf318131bf01bf
01e90bbf
0fbf02e901bf023101ec021101a981d6a981a9118111318131bf14bf
0fbf8165e901e988e5bfd4ecd66add07808c80149dc2137f46a911d431bfe981e9bf0fbf

0fbf01e982bfe9318331a49ce28fe2454d37562456dc71567bab87a9d4bf81bfe981e9bf
81bf318131bf0abf
10bf8ac775bf311bde43224d37568656cb535f1a733c893cae8506a91131bfe9bf01bf81
58bf0abf
0fbf911ebf31b761a0442245ed56721a530a3a4e3a813a4e864e73c94246e3bf10bf
07bf81e9bf82bfe9bf92bf1ebf31ec4f0c38e2ef8e4d49561a530a3a6283624b052b8a2b
ce4e60c2dfe331bf4cbf0cbf
0abf81e9bf82bfe9ec8eec83de1f21778e786f01341a0a3a1c851c4b052b20168b162054
aa93df11312fe965bf0abf
0ebf8d3111883d77cdcf78646f0134530a810a1c911c4ece20167c517c16542893a9ec31
e965bf0abf
08bf01e999bfe91ebf316cc07743cd45786f49561a530a3a624b6b2b707c510151877c70
4edcaba9bfe981e9bf0abf
0bbf01e985bf27d34352cf90cf0e4d2656011a530a1c62ee2b20167c5102518816cc1db9
d611bfe9bf0abf
07bf81e9bf01bf90e9bf4c86d3445277d92c786f49721a0a3a853a4b0520167c827c51bd
88bd5116e44b157a11bf0cbf
0dbf8d3f0fc33d4403cfbb0e3756011a0a860a624b2b20167c817c5102510116854b897b
a911bf0bbf
08bf82e9e5bf97bf75dab209bcc021ef254d2649561a533a1c4b052b70167c037c811620
85203a853911bf0bbf
0bbf0131869eb6d3b0bc7748884845646f561acb0a7382734b2b812b1683167c16cc01cc
012b844b2813d4bf0bbf
0abf0231955e236db0c04463cf45646f5634cb533a73624b2b2016821670548854ce2b20
4b28e831bf0bbf
0abf023183b5b6d3b089b044436e45786f49341a871a0a733a626b2b200120896b4e6b05
2b1c5f9decbf0bbf
09bf8131bf97bf31d82e09d3b044cd485a786f1201cb1a530a73621c052b852b054e4b1c
0585053a282d58bf0bbf
0bbf9431bf556709b03844cd482c7864125634cb1a5f0a7382734b0501050162011c854b
0aae2d58bf0bbf
0bbf0131934a236dd3b0bc7743485a786f1201341acb535f3a813a1c011c0173023a8453
3b1458bf0bbf
0bbf8431bf0455098309d338778277ef2c852c266f1201348134cb83cb530a3a013a810a
5f815f0a850a1ab37d58bf0bbf
08bf81e9bf93bf31bf18d83209d338c044cd6e0e2c64126f0172837271cb5382530a5383
53ae531a851a01a57e58bf0bbf
0bbf01e5837600230901098138c082c0482c862c7864126f49568156728272341a811a72
0272864912bb841131bf0abf
03bf94e9bfe9bfe9bf1ebf1ebf275923b632099538c044ef81ef7881786481646f816fad
84adea01ea560156882449ad2da3115831bf0abf
04bf02e992654ce61e75bf0d185523b66d0995bcc043cd2c812c7881786483646f64f001
f08b6f496f49642d6382e3314cbf0abf
01bf85e9e5e9652fc784c7693fc7698a69c7d2b200232eb60929bc84bc6343ef2c862c78
45784d78ed82ed6f6489644d45a3afa2114c31bf0abf
01e58175c783c769d5eb8ceb797679dab87908db67c4b66d876d9538b0447743ef84ef6e
2c78458e455a457864788ecfbe9fd4315831bf0abf
88e5750d3f5779da98d083d0689b3501358d5d0236c45567b6320995b04477cd92cdef6e
2c6e5ad95acf782c4517813e31bf2fbf0bbf
887569575bd0689bc5ba83ba8a2a8a878aca2a74db5955b284b23209d3b081b077017701
cd016e02ef876e2c6e4810a4d4bf01bf814cbf0abf
873f79b835c5ba2a9a829aa8410141868de1d104c690d881d85583552e6d958b9538b0c0
77cd03cd6377afcd84cd4321c1d483d4e9654c814cbf0abf
88575b9b742ad1418de181e15081509603968450c8d759d881d8b283b2326d0981099585
9538bcb0381f871f95c3995ca931bf81bfe981e9bf0bbf
8779b8c58ad1c6e750855096d7b119b104b184d7b119d855845523b2b66d016d83952995
2987296de09211d431bf01bf01e90cbf
8979d0c52aa88de15096b181b119041901b18796c80fd74a59b2b602b6016d86326d328f
ac0b318331bf31bf01bf81e9bf0cbf
88575b9b742ad1c68de186e1c850c850c850865096c850e1e70487045e8ca7912e672e85
2e8cac33473101318158bf02bf82e9bfe981e9bf0abf
8b3f799835c5742a8bd1a8dbc683c68dc68d818dc601c68cdbd1ca40a15da66697274711
31863158bf31bf31bf82bf4ce985e9bfe9bfe9bf0abf
8bc76957dab8359bc5a1748a2a052a018a01748b029ba6665b279447ec311ebf83bf581e
bf82bf4cbf02bf82e9bfe981e9bf0abf
881e75693f57795bb8d082d068350135029b0135013088b8985b7608b40d751e811ebf83
bf1e75bf81bf4c814cbf05bf81e9bf0bbf
83e9e52fc782c7693f823f5779817976027681da760276827957b482b4c7750175822fe5
bf82bf4cbf01bf814cbf81bfe981e9bf01bf01e90dbf

%
% Compression made this file 26.36% of the uncompressed size.
%


showpage

% stop using temporary dictionary
end

% restore original state
origstate restore

%%Trailer

%%EndDocument
 @endspecial 298 w(175.vpr)g(Ref)g(in)f Fb(\031)p Fg(30h)4649
3028 y @beginspecial 276 @llx 376 @lly 336 @urx 416 @ury
113 @rwi @setspecial
%%BeginDocument: green-bullet-on-white.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/fred/TeX/STYLES/Prosper/img/green-bullet-on-white.ps
%%Creator: XV Version 3.10a+FLmask  Rev: 12/29/94  -  by John Bradley
%%BoundingBox: 276 376 336 416
%%Pages: 1
%%DocumentFonts:
%%EndComments
%%EndProlog

%%Page: 1 1

% remember original state
/origstate save def

% build a temporary dictionary
20 dict begin

% define space for color conversions
/grays 60 string def  % space for gray scale line
/npixls 0 def
/rgbindx 0 def

% lower left corner
276 376 translate

% size of image (on paper, in 1/72inch coords)
59.97600 40.03200 scale

% define 'colorimage' if it isn't defined
%   ('colortogray' and 'mergeprocs' come from xwd2ps
%     via xgrab)
/colorimage where   % do we know about 'colorimage'?
  { pop }           % yes: pop off the 'dict' returned
  {                 % no:  define one
    /colortogray {  % define an RGB->I function
      /rgbdata exch store    % call input 'rgbdata'
      rgbdata length 3 idiv
      /npixls exch store
      /rgbindx 0 store
      0 1 npixls 1 sub {
        grays exch
        rgbdata rgbindx       get 20 mul    % Red
        rgbdata rgbindx 1 add get 32 mul    % Green
        rgbdata rgbindx 2 add get 12 mul    % Blue
        add add 64 idiv      % I = .5G + .31R + .18B
        put
        /rgbindx rgbindx 3 add store
      } for
      grays 0 npixls getinterval
    } bind def

    % Utility procedure for colorimage operator.
    % This procedure takes two procedures off the
    % stack and merges them into a single procedure.

    /mergeprocs { % def
      dup length
      3 -1 roll
      dup
      length
      dup
      5 1 roll
      3 -1 roll
      add
      array cvx
      dup
      3 -1 roll
      0 exch
      putinterval
      dup
      4 2 roll
      putinterval
    } bind def

    /colorimage { % def
      pop pop     % remove 'false 3' operands
      {colortogray} mergeprocs
      image
    } bind def
  } ifelse          % end of 'false' case



% define the colormap
/cmap 723 string def


% load up the colormap
currentfile cmap readhexstring
041808 049008 8c948c 045204 4c544c 04c804 84e284 449644 c4cbc4 0c380e 
04ac07 cce6cc 345e2c e4e7e4 046604 2c3a2c 347234 e4fee2 048208 64cc60 
34922c 24b224 04e404 044604 647264 242623 049f07 8cae8c 04bc06 24c61c 
f4f8f3 1c541c 04d804 1c621c 1c7220 0c280d 14910f 045e04 047c04 ccdcd0 
14ac18 1c481c 747473 04d105 0c6c0b 24852a 1c381c f4f1f3 acafac f4fef5 
0c310c acc6ac 049708 a4a4a3 3c4a44 148314 144812 9cea94 04b405 149e14 
1cbc1c 044004 e4fef4 dcdddd 748274 5c5959 4cba54 145b11 145413 147412 
c4fec4 e4f1e7 146411 088a0a 243028 09c207 fcf8f3 147c13 14c80e acceac 
3c3939 04f405 044e07 07a608 14d00f 0c1f10 0c900b d4d3d4 ecfee3 1c291d 
0c6e14 bcbfbd d4f6d4 909a94 4c5a50 0cac08 24ba24 547e54 0cbc0a 0c5c16 
0c7c0b fcf1fb acb8ac 1c311c aca7a9 e2e2e2 a4e2a4 0cc80a 6c9a6c 143715 
0c650a 0c840b 07de06 14970c 0c980a 0cb40a 848583 ecf0f0 c3c6c3 0c540d 
0c740c cccccc 74ce6c 30a02c 04ec05 54aa5c 6cb66c 9cfa9c 2c862c 5c926c 
6ca674 b4deac 9cda9c 34aa2c 6c7e6c acfeac 448244 34d22c 7d7d7c 6c6d6c 
445644 4c4d4c 1c7a19 1c3e1c 3c3f3c 2c422c 7c9a84 54c254 dceadc 144014 
343231 bccebc bcbabc 447244 6c6664 9c9d9c 7caa7c 349a38 6c7a74 84b69c 
1c4e18 898a89 ccfadc 1c6c2c b8e2c0 1c8a24 a1aaa1 3c4e3c 5f5e5c d8fed8 
24be24 78d670 688668 148a14 14a618 145624 0c480e 2c292b 142916 1c921c 
d4dad9 243828 143017 b4d2bc b4b7b5 1c961c 8c868c 247e24 144e13 04fa04 
246224 fcfefc 0c4e0c ace2b4 3caa3c 244e24 0c180c 949394 545454 ece9ec 
343634 2cb127 6c736c 0ca00c 0cda08 0c5c0b 0ccf06 146a0c b4b2b4 646464 
b4c2b4 0c3f0c ecfdf9 e4dedc ccfdcc 2c2f2b 142214 146b16 c4c2c2 545b54 
2cb62c 74ba74 346634 b4fcb0 244224 444242 246a24 e4feec 0ce204 f4f9fc 
f4eefc 444744 54b654 fcf9fc 0c9114 dcd6d4 ecfeec 0c7b14 0cc614 0c6314 
0c8414 
pop pop   % lose return values from readhexstring


% rlecmapimage expects to have 'w h bits matrix' on stack
/rlecmapimage {
  /buffer 1 string def
  /rgbval 3 string def
  /block  384 string def

  % proc to read a block from file, and return RGB data
  { currentfile buffer readhexstring pop
    /bcount exch 0 get store
    bcount 128 ge
    {  % it's a non-run block
      0 1 bcount 128 sub
      { currentfile buffer readhexstring pop pop

        % look up value in color map
        /rgbval cmap buffer 0 get 3 mul 3 getinterval store

        % and put it in position i*3 in block
        block exch 3 mul rgbval putinterval
      } for
      block  0  bcount 127 sub 3 mul  getinterval
    }

    { % else it's a run block
      currentfile buffer readhexstring pop pop

      % look up value in colormap
      /rgbval cmap buffer 0 get 3 mul 3 getinterval store

      0 1 bcount { block exch 3 mul rgbval putinterval } for

      block 0 bcount 1 add 3 mul getinterval
    } ifelse
  } % end of proc
  false 3 colorimage
} bind def


60 40 8			% dimensions of data
[60 0 0 -40 0 40]		% mapping matrix
rlecmapimage

10bf8131bf05bf03e98165e902e9046587bf3158ec31bfe9658265e9bf09bf
10bf8131bf04bf81e9bf01bf02e98265bfe982e965e901e981bf318131ec82ecbfe982e9
65bf0abf
12bf82751ebf83bf1ebf318231ec3102318111318131bf81bfe901e981bf318131bf01bf
01e90bbf
0fbf02e901bf023101ec021101a981d6a981a9118111318131bf14bf
0fbf8165e901e988e5bfd4ecd66add07808c80149dc2137f46a911d431bfe981e9bf0fbf

0fbf01e982bfe9318331a49ce28fe2454d37562456dc71567bab87a9d4bf81bfe981e9bf
81bf318131bf0abf
10bf8ac775bf311bde43224d37568656cb535f1a733c893cae8506a91131bfe9bf01bf81
58bf0abf
0fbf911ebf31b761a0442245ed56721a530a3a4e3a813a4e864e73c94246e3bf10bf
07bf81e9bf82bfe9bf92bf1ebf31ec4f0c38e2ef8e4d49561a530a3a6283624b052b8a2b
ce4e60c2dfe331bf4cbf0cbf
0abf81e9bf82bfe9ec8eec83de1f21778e786f01341a0a3a1c851c4b052b20168b162054
aa93df11312fe965bf0abf
0ebf8d3111883d77cdcf78646f0134530a810a1c911c4ece20167c517c16542893a9ec31
e965bf0abf
08bf01e999bfe91ebf316cc07743cd45786f49561a530a3a624b6b2b707c510151877c70
4edcaba9bfe981e9bf0abf
0bbf01e985bf27d34352cf90cf0e4d2656011a530a1c62ee2b20167c5102518816cc1db9
d611bfe9bf0abf
07bf81e9bf01bf90e9bf4c86d3445277d92c786f49721a0a3a853a4b0520167c827c51bd
88bd5116e44b157a11bf0cbf
0dbf8d3f0fc33d4403cfbb0e3756011a0a860a624b2b20167c817c5102510116854b897b
a911bf0bbf
08bf82e9e5bf97bf75dab209bcc021ef254d2649561a533a1c4b052b70167c037c811620
85203a853911bf0bbf
0bbf0131869eb6d3b0bc7748884845646f561acb0a7382734b2b812b1683167c16cc01cc
012b844b2813d4bf0bbf
0abf0231955e236db0c04463cf45646f5634cb533a73624b2b2016821670548854ce2b20
4b28e831bf0bbf
0abf023183b5b6d3b089b044436e45786f49341a871a0a733a626b2b200120896b4e6b05
2b1c5f9decbf0bbf
09bf8131bf97bf31d82e09d3b044cd485a786f1201cb1a530a73621c052b852b054e4b1c
0585053a282d58bf0bbf
0bbf9431bf556709b03844cd482c7864125634cb1a5f0a7382734b0501050162011c854b
0aae2d58bf0bbf
0bbf0131934a236dd3b0bc7743485a786f1201341acb535f3a813a1c011c0173023a8453
3b1458bf0bbf
0bbf8431bf0455098309d338778277ef2c852c266f1201348134cb83cb530a3a013a810a
5f815f0a850a1ab37d58bf0bbf
08bf81e9bf93bf31bf18d83209d338c044cd6e0e2c64126f0172837271cb5382530a5383
53ae531a851a01a57e58bf0bbf
0bbf01e5837600230901098138c082c0482c862c7864126f49568156728272341a811a72
0272864912bb841131bf0abf
03bf94e9bfe9bfe9bf1ebf1ebf275923b632099538c044ef81ef7881786481646f816fad
84adea01ea560156882449ad2da3115831bf0abf
04bf02e992654ce61e75bf0d185523b66d0995bcc043cd2c812c7881786483646f64f001
f08b6f496f49642d6382e3314cbf0abf
01bf85e9e5e9652fc784c7693fc7698a69c7d2b200232eb60929bc84bc6343ef2c862c78
45784d78ed82ed6f6489644d45a3afa2114c31bf0abf
01e58175c783c769d5eb8ceb797679dab87908db67c4b66d876d9538b0447743ef84ef6e
2c78458e455a457864788ecfbe9fd4315831bf0abf
88e5750d3f5779da98d083d0689b3501358d5d0236c45567b6320995b04477cd92cdef6e
2c6e5ad95acf782c4517813e31bf2fbf0bbf
887569575bd0689bc5ba83ba8a2a8a878aca2a74db5955b284b23209d3b081b077017701
cd016e02ef876e2c6e4810a4d4bf01bf814cbf0abf
873f79b835c5ba2a9a829aa8410141868de1d104c690d881d85583552e6d958b9538b0c0
77cd03cd6377afcd84cd4321c1d483d4e9654c814cbf0abf
88575b9b742ad1418de181e15081509603968450c8d759d881d8b283b2326d0981099585
9538bcb0381f871f95c3995ca931bf81bfe981e9bf0bbf
8779b8c58ad1c6e750855096d7b119b104b184d7b119d855845523b2b66d016d83952995
2987296de09211d431bf01bf01e90cbf
8979d0c52aa88de15096b181b119041901b18796c80fd74a59b2b602b6016d86326d328f
ac0b318331bf31bf01bf81e9bf0cbf
88575b9b742ad1c68de186e1c850c850c850865096c850e1e70487045e8ca7912e672e85
2e8cac33473101318158bf02bf82e9bfe981e9bf0abf
8b3f799835c5742a8bd1a8dbc683c68dc68d818dc601c68cdbd1ca40a15da66697274711
31863158bf31bf31bf82bf4ce985e9bfe9bfe9bf0abf
8bc76957dab8359bc5a1748a2a052a018a01748b029ba6665b279447ec311ebf83bf581e
bf82bf4cbf02bf82e9bfe981e9bf0abf
881e75693f57795bb8d082d068350135029b0135013088b8985b7608b40d751e811ebf83
bf1e75bf81bf4c814cbf05bf81e9bf0bbf
83e9e52fc782c7693f823f5779817976027681da760276827957b482b4c7750175822fe5
bf82bf4cbf01bf814cbf81bfe981e9bf01bf01e90dbf

%
% Compression made this file 26.36% of the uncompressed size.
%


showpage

% stop using temporary dictionary
end

% restore original state
origstate restore

%%Trailer

%%EndDocument
 @endspecial 298 w(197.parser)h(Ref)g(in)g Fb(\031)p
Fg(90h)4649 3399 y @beginspecial 276 @llx 376 @lly 336
@urx 416 @ury 113 @rwi @setspecial
%%BeginDocument: green-bullet-on-white.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/fred/TeX/STYLES/Prosper/img/green-bullet-on-white.ps
%%Creator: XV Version 3.10a+FLmask  Rev: 12/29/94  -  by John Bradley
%%BoundingBox: 276 376 336 416
%%Pages: 1
%%DocumentFonts:
%%EndComments
%%EndProlog

%%Page: 1 1

% remember original state
/origstate save def

% build a temporary dictionary
20 dict begin

% define space for color conversions
/grays 60 string def  % space for gray scale line
/npixls 0 def
/rgbindx 0 def

% lower left corner
276 376 translate

% size of image (on paper, in 1/72inch coords)
59.97600 40.03200 scale

% define 'colorimage' if it isn't defined
%   ('colortogray' and 'mergeprocs' come from xwd2ps
%     via xgrab)
/colorimage where   % do we know about 'colorimage'?
  { pop }           % yes: pop off the 'dict' returned
  {                 % no:  define one
    /colortogray {  % define an RGB->I function
      /rgbdata exch store    % call input 'rgbdata'
      rgbdata length 3 idiv
      /npixls exch store
      /rgbindx 0 store
      0 1 npixls 1 sub {
        grays exch
        rgbdata rgbindx       get 20 mul    % Red
        rgbdata rgbindx 1 add get 32 mul    % Green
        rgbdata rgbindx 2 add get 12 mul    % Blue
        add add 64 idiv      % I = .5G + .31R + .18B
        put
        /rgbindx rgbindx 3 add store
      } for
      grays 0 npixls getinterval
    } bind def

    % Utility procedure for colorimage operator.
    % This procedure takes two procedures off the
    % stack and merges them into a single procedure.

    /mergeprocs { % def
      dup length
      3 -1 roll
      dup
      length
      dup
      5 1 roll
      3 -1 roll
      add
      array cvx
      dup
      3 -1 roll
      0 exch
      putinterval
      dup
      4 2 roll
      putinterval
    } bind def

    /colorimage { % def
      pop pop     % remove 'false 3' operands
      {colortogray} mergeprocs
      image
    } bind def
  } ifelse          % end of 'false' case



% define the colormap
/cmap 723 string def


% load up the colormap
currentfile cmap readhexstring
041808 049008 8c948c 045204 4c544c 04c804 84e284 449644 c4cbc4 0c380e 
04ac07 cce6cc 345e2c e4e7e4 046604 2c3a2c 347234 e4fee2 048208 64cc60 
34922c 24b224 04e404 044604 647264 242623 049f07 8cae8c 04bc06 24c61c 
f4f8f3 1c541c 04d804 1c621c 1c7220 0c280d 14910f 045e04 047c04 ccdcd0 
14ac18 1c481c 747473 04d105 0c6c0b 24852a 1c381c f4f1f3 acafac f4fef5 
0c310c acc6ac 049708 a4a4a3 3c4a44 148314 144812 9cea94 04b405 149e14 
1cbc1c 044004 e4fef4 dcdddd 748274 5c5959 4cba54 145b11 145413 147412 
c4fec4 e4f1e7 146411 088a0a 243028 09c207 fcf8f3 147c13 14c80e acceac 
3c3939 04f405 044e07 07a608 14d00f 0c1f10 0c900b d4d3d4 ecfee3 1c291d 
0c6e14 bcbfbd d4f6d4 909a94 4c5a50 0cac08 24ba24 547e54 0cbc0a 0c5c16 
0c7c0b fcf1fb acb8ac 1c311c aca7a9 e2e2e2 a4e2a4 0cc80a 6c9a6c 143715 
0c650a 0c840b 07de06 14970c 0c980a 0cb40a 848583 ecf0f0 c3c6c3 0c540d 
0c740c cccccc 74ce6c 30a02c 04ec05 54aa5c 6cb66c 9cfa9c 2c862c 5c926c 
6ca674 b4deac 9cda9c 34aa2c 6c7e6c acfeac 448244 34d22c 7d7d7c 6c6d6c 
445644 4c4d4c 1c7a19 1c3e1c 3c3f3c 2c422c 7c9a84 54c254 dceadc 144014 
343231 bccebc bcbabc 447244 6c6664 9c9d9c 7caa7c 349a38 6c7a74 84b69c 
1c4e18 898a89 ccfadc 1c6c2c b8e2c0 1c8a24 a1aaa1 3c4e3c 5f5e5c d8fed8 
24be24 78d670 688668 148a14 14a618 145624 0c480e 2c292b 142916 1c921c 
d4dad9 243828 143017 b4d2bc b4b7b5 1c961c 8c868c 247e24 144e13 04fa04 
246224 fcfefc 0c4e0c ace2b4 3caa3c 244e24 0c180c 949394 545454 ece9ec 
343634 2cb127 6c736c 0ca00c 0cda08 0c5c0b 0ccf06 146a0c b4b2b4 646464 
b4c2b4 0c3f0c ecfdf9 e4dedc ccfdcc 2c2f2b 142214 146b16 c4c2c2 545b54 
2cb62c 74ba74 346634 b4fcb0 244224 444242 246a24 e4feec 0ce204 f4f9fc 
f4eefc 444744 54b654 fcf9fc 0c9114 dcd6d4 ecfeec 0c7b14 0cc614 0c6314 
0c8414 
pop pop   % lose return values from readhexstring


% rlecmapimage expects to have 'w h bits matrix' on stack
/rlecmapimage {
  /buffer 1 string def
  /rgbval 3 string def
  /block  384 string def

  % proc to read a block from file, and return RGB data
  { currentfile buffer readhexstring pop
    /bcount exch 0 get store
    bcount 128 ge
    {  % it's a non-run block
      0 1 bcount 128 sub
      { currentfile buffer readhexstring pop pop

        % look up value in color map
        /rgbval cmap buffer 0 get 3 mul 3 getinterval store

        % and put it in position i*3 in block
        block exch 3 mul rgbval putinterval
      } for
      block  0  bcount 127 sub 3 mul  getinterval
    }

    { % else it's a run block
      currentfile buffer readhexstring pop pop

      % look up value in colormap
      /rgbval cmap buffer 0 get 3 mul 3 getinterval store

      0 1 bcount { block exch 3 mul rgbval putinterval } for

      block 0 bcount 1 add 3 mul getinterval
    } ifelse
  } % end of proc
  false 3 colorimage
} bind def


60 40 8			% dimensions of data
[60 0 0 -40 0 40]		% mapping matrix
rlecmapimage

10bf8131bf05bf03e98165e902e9046587bf3158ec31bfe9658265e9bf09bf
10bf8131bf04bf81e9bf01bf02e98265bfe982e965e901e981bf318131ec82ecbfe982e9
65bf0abf
12bf82751ebf83bf1ebf318231ec3102318111318131bf81bfe901e981bf318131bf01bf
01e90bbf
0fbf02e901bf023101ec021101a981d6a981a9118111318131bf14bf
0fbf8165e901e988e5bfd4ecd66add07808c80149dc2137f46a911d431bfe981e9bf0fbf

0fbf01e982bfe9318331a49ce28fe2454d37562456dc71567bab87a9d4bf81bfe981e9bf
81bf318131bf0abf
10bf8ac775bf311bde43224d37568656cb535f1a733c893cae8506a91131bfe9bf01bf81
58bf0abf
0fbf911ebf31b761a0442245ed56721a530a3a4e3a813a4e864e73c94246e3bf10bf
07bf81e9bf82bfe9bf92bf1ebf31ec4f0c38e2ef8e4d49561a530a3a6283624b052b8a2b
ce4e60c2dfe331bf4cbf0cbf
0abf81e9bf82bfe9ec8eec83de1f21778e786f01341a0a3a1c851c4b052b20168b162054
aa93df11312fe965bf0abf
0ebf8d3111883d77cdcf78646f0134530a810a1c911c4ece20167c517c16542893a9ec31
e965bf0abf
08bf01e999bfe91ebf316cc07743cd45786f49561a530a3a624b6b2b707c510151877c70
4edcaba9bfe981e9bf0abf
0bbf01e985bf27d34352cf90cf0e4d2656011a530a1c62ee2b20167c5102518816cc1db9
d611bfe9bf0abf
07bf81e9bf01bf90e9bf4c86d3445277d92c786f49721a0a3a853a4b0520167c827c51bd
88bd5116e44b157a11bf0cbf
0dbf8d3f0fc33d4403cfbb0e3756011a0a860a624b2b20167c817c5102510116854b897b
a911bf0bbf
08bf82e9e5bf97bf75dab209bcc021ef254d2649561a533a1c4b052b70167c037c811620
85203a853911bf0bbf
0bbf0131869eb6d3b0bc7748884845646f561acb0a7382734b2b812b1683167c16cc01cc
012b844b2813d4bf0bbf
0abf0231955e236db0c04463cf45646f5634cb533a73624b2b2016821670548854ce2b20
4b28e831bf0bbf
0abf023183b5b6d3b089b044436e45786f49341a871a0a733a626b2b200120896b4e6b05
2b1c5f9decbf0bbf
09bf8131bf97bf31d82e09d3b044cd485a786f1201cb1a530a73621c052b852b054e4b1c
0585053a282d58bf0bbf
0bbf9431bf556709b03844cd482c7864125634cb1a5f0a7382734b0501050162011c854b
0aae2d58bf0bbf
0bbf0131934a236dd3b0bc7743485a786f1201341acb535f3a813a1c011c0173023a8453
3b1458bf0bbf
0bbf8431bf0455098309d338778277ef2c852c266f1201348134cb83cb530a3a013a810a
5f815f0a850a1ab37d58bf0bbf
08bf81e9bf93bf31bf18d83209d338c044cd6e0e2c64126f0172837271cb5382530a5383
53ae531a851a01a57e58bf0bbf
0bbf01e5837600230901098138c082c0482c862c7864126f49568156728272341a811a72
0272864912bb841131bf0abf
03bf94e9bfe9bfe9bf1ebf1ebf275923b632099538c044ef81ef7881786481646f816fad
84adea01ea560156882449ad2da3115831bf0abf
04bf02e992654ce61e75bf0d185523b66d0995bcc043cd2c812c7881786483646f64f001
f08b6f496f49642d6382e3314cbf0abf
01bf85e9e5e9652fc784c7693fc7698a69c7d2b200232eb60929bc84bc6343ef2c862c78
45784d78ed82ed6f6489644d45a3afa2114c31bf0abf
01e58175c783c769d5eb8ceb797679dab87908db67c4b66d876d9538b0447743ef84ef6e
2c78458e455a457864788ecfbe9fd4315831bf0abf
88e5750d3f5779da98d083d0689b3501358d5d0236c45567b6320995b04477cd92cdef6e
2c6e5ad95acf782c4517813e31bf2fbf0bbf
887569575bd0689bc5ba83ba8a2a8a878aca2a74db5955b284b23209d3b081b077017701
cd016e02ef876e2c6e4810a4d4bf01bf814cbf0abf
873f79b835c5ba2a9a829aa8410141868de1d104c690d881d85583552e6d958b9538b0c0
77cd03cd6377afcd84cd4321c1d483d4e9654c814cbf0abf
88575b9b742ad1418de181e15081509603968450c8d759d881d8b283b2326d0981099585
9538bcb0381f871f95c3995ca931bf81bfe981e9bf0bbf
8779b8c58ad1c6e750855096d7b119b104b184d7b119d855845523b2b66d016d83952995
2987296de09211d431bf01bf01e90cbf
8979d0c52aa88de15096b181b119041901b18796c80fd74a59b2b602b6016d86326d328f
ac0b318331bf31bf01bf81e9bf0cbf
88575b9b742ad1c68de186e1c850c850c850865096c850e1e70487045e8ca7912e672e85
2e8cac33473101318158bf02bf82e9bfe981e9bf0abf
8b3f799835c5742a8bd1a8dbc683c68dc68d818dc601c68cdbd1ca40a15da66697274711
31863158bf31bf31bf82bf4ce985e9bfe9bfe9bf0abf
8bc76957dab8359bc5a1748a2a052a018a01748b029ba6665b279447ec311ebf83bf581e
bf82bf4cbf02bf82e9bfe981e9bf0abf
881e75693f57795bb8d082d068350135029b0135013088b8985b7608b40d751e811ebf83
bf1e75bf81bf4c814cbf05bf81e9bf0bbf
83e9e52fc782c7693f823f5779817976027681da760276827957b482b4c7750175822fe5
bf82bf4cbf01bf814cbf81bfe981e9bf01bf01e90dbf

%
% Compression made this file 26.36% of the uncompressed size.
%


showpage

% stop using temporary dictionary
end

% restore original state
origstate restore

%%Trailer

%%EndDocument
 @endspecial 298 w(Reduced)f(Data)h(sets)g(\(Minnesota\))f(in)h
Fb(\031)p Fg(30min)10245 5222 y
 0 setgray
 10245 5222 a 4500 6000
a
 tx@Dict begin -90 Rot  end
 4500 6000 a eop
%%Page: 21 21
21 20 bop 4500 6000 a
 tx@Dict begin 90 Rot  end
 4500 6000 a 5981 1792 a @beginspecial
-168 @llx 371 @lly 782 @urx 421 @ury 2834 @rwi 283 @rhi
@setspecial
%%BeginDocument: barre-rico.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /ufs/goualard/TEMP/barre_hor.ps
%%Creator: XV Version 3.10a  Rev: 12/29/94 (PNG patch 1.2)  -  by John Bradley
%%BoundingBox: -168 371 782 421
%%Pages: 1
%%DocumentFonts:
%%EndComments
%%EndProlog

%%Page: 1 1

% remember original state
/origstate save def

% build a temporary dictionary
20 dict begin

% define space for color conversions
/grays 950 string def  % space for gray scale line
/npixls 0 def
/rgbindx 0 def

% lower left corner
-168 371 translate

% size of image (on paper, in 1/72inch coords)
949.96800 49.96800 scale

% define 'colorimage' if it isn't defined
%   ('colortogray' and 'mergeprocs' come from xwd2ps
%     via xgrab)
/colorimage where   % do we know about 'colorimage'?
  { pop }           % yes: pop off the 'dict' returned
  {                 % no:  define one
    /colortogray {  % define an RGB->I function
      /rgbdata exch store    % call input 'rgbdata'
      rgbdata length 3 idiv
      /npixls exch store
      /rgbindx 0 store
      0 1 npixls 1 sub {
        grays exch
        rgbdata rgbindx       get 20 mul    % Red
        rgbdata rgbindx 1 add get 32 mul    % Green
        rgbdata rgbindx 2 add get 12 mul    % Blue
        add add 64 idiv      % I = .5G + .31R + .18B
        put
        /rgbindx rgbindx 3 add store
      } for
      grays 0 npixls getinterval
    } bind def

    % Utility procedure for colorimage operator.
    % This procedure takes two procedures off the
    % stack and merges them into a single procedure.

    /mergeprocs { % def
      dup length
      3 -1 roll
      dup
      length
      dup
      5 1 roll
      3 -1 roll
      add
      array cvx
      dup
      3 -1 roll
      0 exch
      putinterval
      dup
      4 2 roll
      putinterval
    } bind def

    /colorimage { % def
      pop pop     % remove 'false 3' operands
      {colortogray} mergeprocs
      image
    } bind def
  } ifelse          % end of 'false' case



% define the colormap
/cmap 117 string def


% load up the colormap
currentfile cmap readhexstring
bcfe04 dcfe84 ccfe44 ecfec4 c4fe24 d4fe64 f4fee4 e4fea4 bcfe14 ccfe54 
f4fed4 c4fe34 d4fe74 fcfef4 ecfeb4 e4fe94 f4fecc fcfee4 ecfeac c4fe1c 
d4fe54 ccfe3c dcfe74 bcfe0c dcfe8c ccfe4c ecfecc c4fe2c d4fe6c e4feac 
bcfe1c f4fedc c4fe3c fcfefc ecfebc e4fe9c fcfeec d4fe5c dcfe7c 
pop pop   % lose return values from readhexstring


% rlecmapimage expects to have 'w h bits matrix' on stack
/rlecmapimage {
  /buffer 1 string def
  /rgbval 3 string def
  /block  384 string def

  % proc to read a block from file, and return RGB data
  { currentfile buffer readhexstring pop
    /bcount exch 0 get store
    bcount 128 ge
    {  % it's a non-run block
      0 1 bcount 128 sub
      { currentfile buffer readhexstring pop pop

        % look up value in color map
        /rgbval cmap buffer 0 get 3 mul 3 getinterval store

        % and put it in position i*3 in block
        block exch 3 mul rgbval putinterval
      } for
      block  0  bcount 127 sub 3 mul  getinterval
    }

    { % else it's a run block
      currentfile buffer readhexstring pop pop

      % look up value in colormap
      /rgbval cmap buffer 0 get 3 mul 3 getinterval store

      0 1 bcount { block exch 3 mul rgbval putinterval } for

      block 0 bcount 1 add 3 mul getinterval
    } ifelse
  } % end of proc
  false 3 colorimage
} bind def


950 50 8			% dimensions of data
[950 0 0 -50 0 50]		% mapping matrix
rlecmapimage

7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f210221870d1f220e220311212a21
7f217f217f217f217f217f2175218211030e820e220e820e220e860e220e23050b048404
090e24212a21
7f217f217f217f217f217f2171218e110312260b041e131e131e131e131e871e17001702
1d24212c21
7f217f217f217f217f217f216921830d1f220e870e221226200408000b00841702070d21
0521842403100d212321
7f217f217f217f217f217f2121218524220f231f213a218f0d0a220e220e23051b041e13
1e0817000c008408190706210421851103221f0d212521
7f217f217f217f217f217f211e2189240e1c1b17000825242136218a0d1026021b041e13
081700110085172001030d210421840316030d212821
7f217f217f217f217f21342186111a120f070a215721860d1110220e220e860e12182504
17000300821b1f212521851f0e2326230e080e841d010908001100820820090209840c1d
1a06210521841026230d212a21
7f217f217f217f21792186241f10220e220e820e220e820e220e820e220e820e220e820e
220e830e070f01010182070a2117218b0610231c1508001708090a2151218e0d1f101d01
14201b1e131e131e08000700820c0d211021840d100311210921881103220e07050b0800
8400171e081e821e081e851e081e0817001000851e2009181a210b21850d22261d24212c
21
7f217f217f217f21472184241f10220e820e220e820e220e820e220e820e220e820e220e
820e220e810e2283221f0d210e219a241f10070f1c09151e041e131e131e131e131e131e
131e131e131e821e080002008b17081410210d1110220e220e820e220e820e220e010e81
2301880126012616191b08000500820422212f2182240d211921890d0a0e072625150417
00100082201a210921890d1110220e23011620048304051f210421891103231c15131e08
1700190082171e090309820c1a210e21841f0e0a0d212e21
7f217f217f217f213f2190241f100e070f011c1920041e131e081e0882081e0882081e08
82081e0882081e0803088304250a2107218b241f030e12181619151e08001d00811e268c
2614201b041e131e131e131e088108178117000f0082091f211521840d0610220e0f0e88
120f012625020c11211321890d0a22121809040817001300831e050a2105218a0d1f101d
0114201b1e170004008408260e220e860e230c020417001800821e2009020982181a2114
21810d213321
7f211221842422121f217f217f217f211221850d0a220e220e820e220e820e220e820e22
0e010e881d0f1605090b041e178117001a008f1e22210d1110221d0f0116190b041e1781
1700220001171f00820b2221102189111022120f0125151b1e011e81081e821e081e821e
081e821e081e821e081e821e1700030082171c0e110e861d01251b1e170015008220181d
021d81220e020e86070119150417000b0086081e131e08170019008308091d210c21830d
1f24214121
7f210721830d0a220e040e83230504088308052421492185240a22230f01130182070a21
7f2106218c240a03220e220e220e220e1d0f840f01231f217f210a2199240a221d0f0116
191b1e131e131e131e131e131e131e131e17002300810b16871609200413081700490087
171e051d1f10220e0a0e8712232625201b1e178117001b000108011e81081e821e081e82
1e081e821e081e821e081e831e0817000c0085171e201e08000300831720090c840c090b
1b1e871e081e081e0817001f0083081e201e821e20090809820c03210b21860d0a222307
0d210521010d3a21
7f21042188112218141b13081e088108178117000300821b1f2140218b241f100e070f1c
25021b1317811700140083081410217f218c241f10070f05021b04131e131e011e810817
811700010093170207220e220e220e220e220e220e22120f18018301231f216e218c0d0a
22120f0116191b130817004c000117811e208120090509822008002c008308200c188518
0c09021b1e821e081e821e081e821e081e811e08810817811700400081171e871e09181a
061c08000300851e200b1e1700250083171e200983091806211721820d110a010a841d26
1918214421
6c219a1103220e220e220e220e220e220e220e220e220e22120f050b08000d0093091d22
0e220e220e220e220e220e220e2203112127218c241f100e070f0105021b1e08001e0082
0422216a2189241f10220e230f1826018201260182012601890126160509150408170011
0085131e131e131e821e131e831e131e0882081700020083082524215e2183240a220e82
0e220e8b0e22120f011605190b1308178117004d008817081e2009181d06210821810900
22000408071e0117510085080b09181a21022182060900040082081700120082171e000f
00011e83091806210d21821a031d8e1d221d221d0e22030a110d240d240d810d21012182
2406214521
68219711030f252004131e131e131e131e131e131e131e131e131e821e08001100011e83
131e131e821e131e821e131e821e131e811e1383131c1f211e218d0d1110221d0f260519
0b041e17002500821b0c0103018426161c05250b258405160f1d0e210e82070f26012681
0126822601268426010f1f2117218a241f100e070f1609150408820817003900821b1f21
56218a0a0f0c2514190215041e0801088217081701173400011781001781170016000117
011e85200c181d06210e218105000d0083171e08000c00011781081e041e020802171e00
82081e208120090d0982201e001b00850820090c1a210721821817000b008b081e200920
1920192009200986090c1d1a060900030083171e20090209010c83181a0621082187060a
0e1d071d0e1d821d0f1802180107841d220a24215221
1d21830d1f220e820e220e820e220e820e220e860e220e221024212321840d10230f010a
01852616091b08003b00820812210421830d1f102281220e820e220e820e220e820e220e
820e220e820e220e890e1d0f011609201b1317811700470081081e821e081e821e081e82
1e081e821e081e821e081e821e081e821e081e821e081e821e081e821e081e841e081e08
000a0083170b260182012601820126018201260182012601820126018a01260126160525
19151b088108004200820c0d21032196240a03220e220e220e220e220e220e220e220e22
0e1d0f810f01150182231f210921840d0610220e0e0e8418140417002100821720090409
822017002c008317081e208520090c1d1a211621821a201e811e20832009200982092009
86092009181a0c003400011e8520090c181a211221831a0c200982092009820920091109
830c1a06210a2182062000080087082009181a0621060206812106810621052183061d0c
0984090c181d1a011a02060e21820d062482240d216021
1c21970d0702041e131e131e131e131e131e131e0420050f100d211f21840d231b17004d
00a008182212230f011609151b131e131e131e131e131e131e131e131e131e130817001b
0083170017007f0041008c201a241f10070f1c021b04131e821e131e821e131e821e131e
821e131e011e810817811700160001178205112101218a111022120f181614151b1e821e
081e821e081e821e081e821e081e821e0817811700250082090621032182060900260088
17081e20090c1d1a212e2183062017001f008317081e208120090a09830c181a21442183
240917008300081e2001208409181a0621142183061a1d1a841a062106217721
1b21830d071b000f008517080b05230e8f0e220e220e220e220e220e220e220e22842210
110d210821830d231e004f00841e041e08178117007f0065008117000e000108011e8720
0c16090b1e08003000880401181614201b1e178117003a00822006210421820620001f00
81171e861e20090c1d1a213521820609001700011788081e20090c181a0621492184060a
101a1086101a10110d210d880d061a180c09181a0601067f211b21
1b21820a1900140081081e821e131e821e131e821e131e821e131e8d1e131e13040b1925
1812221f0d210321820a20007f007f0033000108160081081e031e820817003600811700
40008308091a2106218203091e031e8120091609830c1d1a213d21821f01091409840c18
1a06214e21010d0124010685240624060d210321850a26012206217f211f21
1b21831020170029008c1708040b021925051626051e007f002f000d1782081e20812009
1e0982201e00370081171e811e208120090c0982181d0683061808007900011781081e07
1e8120090e09820c1d217f216721820611217f212221
1b21830d0e0c090c0982201e004d00820817002a000217011e8120090c09811e00380082
17081e851e090c181a068306210621822106218221062182210621822106212521821a0c
09010982201e002700011781081e811e2085200c181d06211321821a200022000117011e
82091e0035008317081e20812009090982201e0002008608091a062106217f215521810d
217f215321
2d21851a0c201e17004300850820090c1a068206200022008317081e208620090c181d1a
210f21821d08002e000117021e0120840c181a06214221821d0c09250983181d06211c21
821a20001c008817081e2009181d062101218109002d0081171e871e20090c181a06210e
21851d09200c1a217f215a2182110d215321810d217d21
30218306180c090f0983201e08002500811e09820920090109830c1a062104218203201e
081e01201309810c1d821d1a21182182062000260081171e011e8620090c181a06217f21
1521830d1d0c091909840c181d06210721821a191e091e83200920098209200982092009
8209200982092009820920098209200982092009820920098209200985090c181a06217f
217621810d215121860d1026142510217c21
462185061d0c2017002000820906214e21820618098209200981092082201e178217081e
011e01201309840c181a06217f217f217f217f214421810d2401248306240d217d21
4a21841d201e0800150081081e041e820906217f217f217f217f217f217f214521
4e2185061a18201e000b0085171e091d06217f217f217f217f217f217f214e21
5221821a0c090909830c1d06217f217f217f217f217f217f215121
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521

%
% Compression made this file 2.88% of the uncompressed size.
%


showpage

% stop using temporary dictionary
end

% restore original state
origstate restore

%%Trailer

%%EndDocument
 @endspecial 5001 5222 a @beginspecial @setspecial
 tx@Dict begin STP newpath 1.0 SLW 0.5451 0.39608 0.03137 setrgbcolor
 /ArrowA { moveto } def /ArrowB { } def [ 341.43292 -28.45274 -22.76227
-28.45274  /Lineto /lineto load def false Line  gsave 1.0 SLW 0.5451
0.39608 0.03137 setrgbcolor 0 setlinecap stroke  grestore end
 
@endspecial
621 x Fi(SESC)20 b(\(IA)n(COMA)e(g)o(roup\))2960 b(Joe)20
b(Renau,)h(Basilio)e(F)m(r)o(aguela,)h(and)g(Liu)g(W)n(ei)39
b(\226)20 b(page)40 b(21/23)4266 1057 y
 gsave currentpoint currentpoint translate 270 neg rotate neg exch
neg exch translate
 4266 1057 a @beginspecial
276 @llx 366 @lly 336 @urx 426 @ury 141 @rwi 141 @rhi
@setspecial
%%BeginDocument: angleHG.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/rico/texte/texstyle/Prosper-beta/img/angleHG.ps
%%Creator: XV Version 3.10a  Rev: 12/29/94 (PNG patch 1.2)  -  by John Bradley
%%BoundingBox: 276 366 336 426
%%Pages: 1
%%DocumentFonts:
%%EndComments
%%EndProlog

%%Page: 1 1

% remember original state
/origstate save def

% build a temporary dictionary
20 dict begin

% define string to hold a scanline's worth of data
/pix 180 string def

% define space for color conversions
/grays 60 string def  % space for gray scale line
/npixls 0 def
/rgbindx 0 def

% print in landscape mode
90 rotate 0 -612 translate

% lower left corner
366 276 translate

% size of image (on paper, in 1/72inch coords)
59.97600 59.97600 scale

% define 'colorimage' if it isn't defined
%   ('colortogray' and 'mergeprocs' come from xwd2ps
%     via xgrab)
/colorimage where   % do we know about 'colorimage'?
  { pop }           % yes: pop off the 'dict' returned
  {                 % no:  define one
    /colortogray {  % define an RGB->I function
      /rgbdata exch store    % call input 'rgbdata'
      rgbdata length 3 idiv
      /npixls exch store
      /rgbindx 0 store
      0 1 npixls 1 sub {
        grays exch
        rgbdata rgbindx       get 20 mul    % Red
        rgbdata rgbindx 1 add get 32 mul    % Green
        rgbdata rgbindx 2 add get 12 mul    % Blue
        add add 64 idiv      % I = .5G + .31R + .18B
        put
        /rgbindx rgbindx 3 add store
      } for
      grays 0 npixls getinterval
    } bind def

    % Utility procedure for colorimage operator.
    % This procedure takes two procedures off the
    % stack and merges them into a single procedure.

    /mergeprocs { % def
      dup length
      3 -1 roll
      dup
      length
      dup
      5 1 roll
      3 -1 roll
      add
      array cvx
      dup
      3 -1 roll
      0 exch
      putinterval
      dup
      4 2 roll
      putinterval
    } bind def

    /colorimage { % def
      pop pop     % remove 'false 3' operands
      {colortogray} mergeprocs
      image
    } bind def
  } ifelse          % end of 'false' case



60 60 8			% dimensions of data
[60 0 0 -60 0 60]		% mapping matrix
{currentfile pix readhexstring pop}
false 3 colorimage

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffafee3effeaaffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffafee3e3fe64ffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffe3fe64fafee3ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffe9fe88f1feb3ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffe8fe86dffe55fefefeffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffebfe96dafe37fefefeffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffedfe9edefe48f7fed5ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffedfe9ee2fe60eefea5f5fecaecfe95ecfe97ecfe98
ecfe99ecfe9bf6feceffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffeffeaadffe4fe0fe55dcfe3f
dbfe3cdbfe3ddbfe3dddfe48defe4cdcfe43d9fe32d6fe20e2fe5fe3fe67defe4ddefe4d
defe4edefe4edbfe3bdbfe3cdcfe3ddcfe3fdcfe40dcfe42ddfe43ddfe45ddfe46ddfe48
ddfe46e2fe63e5fe72e5fe74e6fe76e6fe77e6fe79e7fe7ae9fe86e8fe85ebfe94ecfe97
ecfe99ecfe9cedfe9eeffeacf2febcf3febef3fec1f4fec4f9fedfffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffeffeaaf1feb3f5fec7e9fe87
e7fe7be7fe7be7fe7be2fe60e1fe5bd6fe1dd8fe2adafe33e1fe5bdffe54defe4edffe50
dffe51dffe53e0fe54ddfe49ddfe4bdefe4cdefe4edefe50dffe52dffe54e5fe73eafe93
e9fe89e6fe7ae4fe6ce4fe6ee8fe84e8fe85e9fe87e9fe8ae8fe84e7fe7ce8fe81e9fe8a
f0feb0f8fedbf9fedff1feb8f1febaeafe8bfbfeeafbfeebfdfef5ffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff5fecddffe52e1fe5df5fec9f5fec9f5fecaf5feca
f5fecbf5feccf5feccf5fecdf6fecef6fecef6fecef6fecff6fed0f6fed1eefea5e9fe8a
f6fed1f7fed7f7fed8f7fed9f6fecdfafee8fcfef1fcfef2fdfef7fcfef3fdfef7fefefc
fefefcfefefdf9fee0f6fecff5feccf4fec2ffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff5fecde3fe64e5fe74ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffdfef5fefefdfefefdfefefcfefefcfffffffefef9
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff5fecde5fe74dffe53ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff6fecee6fe79e5fe6ff8fed8ffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff6fecee6fe7aebfe95effeaaffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff6fecee6fe7aedfe9eeefea2ffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff6fecee6fe7bedfe9eeefea3ffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff6fecfe6fe78ecfe9eeefea5ffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffefefe
fefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff6fed0e2fe63e0fe59dffe55ffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffefefe
fefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffedfe9fe2fe5fd8fe2ad8fe2dffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffecfe9adffe53d6fe1cdefe4cf6fecfffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffedfe9cd8fe2cd6fe20defe4bf6fed0ffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffefefdffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffedfe9dd8fe27d7fe22defe4ef6fed0ffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffedfe9dd7fe26d6fe20e0fe5bf6fed2ffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff3febdd7fe22d7fe22e1fe5ef7fed3ffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff4fec6d6fe20d7fe21e0fe57f7fed4ffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff4fec6d6fe20d6fe1fe0fe59f7fed5ffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff4fec6d6fe1ed6fe1ee5fe73f7fed6ffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff4fec6d6fe1dd9fe32e0fe56ffffffffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff5fecce0fe55defe48e8fe81ffffffffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffbfeede7fe7fe0fe56e9fe85ffffffffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff7fed8e8fe84e7fe7ef1feb4ffffffffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff2feb8edfea0effea6f1feb6ffffffffffffffffff
fffffffefefefefefeffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffefefceffeabf0feafeffea7f2feb7ffffffffffffffffff
fffffffefefefefefefefefeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffefefcf5fecaecfe9de7fe7af8feddffffffffffffffffff
fffffffefefefefefefefefefefefeffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffefefcf5fecce8fe85e8fe80ffffffffffffffffffffffff
fffffffefefefefefefefefeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffff8fedefdfef8fdfefbf3fec0e9fe89ecfe96ffffffffffffffffffffffff
fefefefefefefefefefefefeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffdfef6fefefafefefaf4fec2e9fe89ecfe96ffffffffffffffffffffffff
fefefefefefefefefefefefeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffdfef6fefefefefefdf4fec2e8fe85edfe9dffffffffffffffffffffffff
fefefefefefefefefefefefeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffefef9fefefdfefefce7fe7be5fe76f2feb7ffffffffffffffffffffffff
fffffffffffffefefefefefeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffdfef6fdfefafefefbe2fe65e5fe75f6fed0ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffdfef9fefefce6fe79e6fe77fafee6ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffcfef6fefefbecfe9be7fe7efbfeecffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffdfef5fdfef7f7fed5e9fe8dfcfef2ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffcfeeffbfeebedfea1fdfef7ffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffefefeffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffefefdfbfee9effeabffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffefefefefefeffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffbfeeceffea6ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff9fee3f3fec1ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffeefea2f8fedaffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff1feb2fafee4ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffcfef0fefefaffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff


showpage

% stop using temporary dictionary
end

% restore original state
origstate restore

%%Trailer

%%EndDocument
 @endspecial 4511 1057 a
 currentpoint grestore moveto
 4511 1057 a 4130 5844 a
 currentpoint currentpoint translate 0.76611 0.76611 scale neg exch
neg exch translate
 4130
5844 a 4130 5844 a
 gsave currentpoint currentpoint translate 0 neg rotate neg exch neg
exch translate
 4130 5844 a @beginspecial 0 @llx 0
@lly 37 @urx 42 @ury 370 @rwi @setspecial
%%BeginDocument: figs/uiuc.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: uiuc.eps
%%Creator: fig2dev Version 3.2 Patchlevel 3d
%%CreationDate: Sun Feb 10 22:03:46 2002
%%For: renau@nether.cs.uiuc.edu (Jose Renau)
%%BoundingBox: 0 0 37 42
%%Magnification: 1.0000
%%EndComments
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def
/col32 {0.200 0.200 0.400 srgb} bind def
/col33 {0.800 0.400 0.000 srgb} bind def

end
save
newpath 0 42 moveto 0 0 lineto 37 0 lineto 37 42 lineto closepath clip newpath
-273.7 413.7 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
 0.06000 0.06000 sc
%
% Fig objects follow
%
%  polyline 
% Polyline
n 5070 6872 m 5070 6227 l 4584 6227 l 4584 6872 l
 5070 6872 l  cp gs col32 1.00 shd ef gr 
%  polyline 
% Polyline
15.000 slw
n 5070 6872 m 5070 6227 l 4584 6227 l 4584 6872 l
 5070 6872 l  cp gs col32 s gr 
%  polyline 
% Polyline
0.000 slw
n 5056 6858 m 5056 6243 l 4598 6243 l 4598 6858 l
 5056 6858 l  cp gs col32 1.00 shd ef gr 
%  polyline 
% Polyline
7.500 slw
n 5056 6858 m 5056 6243 l 4598 6243 l 4598 6858 l
 5056 6858 l  cp gs col33 s gr 
%  spline 
% Polyline
2 slj
0.000 slw
n 4944 6783 m 4944 6781 l 4944 6773 l 4944 6759 l 4944 6751 l 4944 6749 l
 4943 6749 l 4935 6748 l 4924 6746 l 4914 6744 l 4906 6742 l
 4900 6741 l 4896 6739 l 4892 6738 l 4887 6735 l 4884 6732 l
 4880 6728 l 4877 6722 l 4875 6716 l 4873 6709 l 4872 6702 l
 4871 6693 l 4870 6683 l 4869 6670 l 4869 6654 l 4868 6637 l
 4868 6621 l 4868 6609 l 4868 6604 l 4868 6603 l 4868 6602 l
 4868 6597 l 4868 6585 l 4868 6567 l 4868 6544 l 4868 6521 l
 4868 6503 l 4868 6491 l 4868 6486 l 4868 6485 l 4868 6483 l
 4868 6474 l 4868 6457 l 4869 6438 l 4869 6420 l 4870 6406 l
 4870 6395 l 4871 6387 l 4873 6381 l 4874 6375 l 4876 6371 l
 4879 6367 l 4882 6365 l 4885 6363 l 4889 6362 l 4892 6361 l
 4898 6359 l 4905 6358 l 4915 6356 l 4925 6354 l 4933 6352 l
 4934 6352 l 4934 6350 l 4934 6343 l 4934 6331 l 4934 6324 l
 4934 6322 l 4933 6322 l 4928 6322 l 4916 6322 l 4896 6322 l
 4869 6322 l 4837 6322 l 4806 6322 l 4779 6322 l 4759 6322 l
 4747 6322 l 4742 6322 l 4741 6322 l 4740 6322 l 4737 6322 l
 4732 6322 l 4729 6322 l 4726 6322 l 4724 6322 l 4721 6323 l
 4718 6324 l 4716 6325 l 4714 6326 l 4712 6327 l 4710 6329 l
 4707 6332 l 4705 6334 l 4703 6336 l 4701 6338 l 4700 6339 l
 4699 6341 l 4698 6342 l 4697 6344 l 4696 6346 l 4696 6347 l
 4695 6349 l 4695 6351 l 4695 6353 l 4694 6356 l 4694 6358 l
 4694 6359 l 4694 6360 l 4694 6362 l 4694 6365 l 4694 6367 l
 4695 6369 l 4695 6370 l 4696 6372 l 4697 6374 l 4697 6375 l
 4698 6377 l 4699 6378 l 4701 6379 l 4702 6381 l 4704 6383 l
 4706 6385 l 4708 6386 l 4709 6388 l 4710 6389 l 4712 6389 l
 4713 6390 l 4715 6391 l 4716 6391 l 4718 6391 l 4720 6391 l
 4721 6391 l 4724 6391 l 4726 6391 l 4727 6391 l 4729 6391 l
 4732 6390 l 4735 6390 l 4737 6389 l 4740 6388 l 4742 6387 l
 4744 6385 l 4747 6383 l 4748 6381 l 4749 6379 l 4750 6376 l
 4751 6372 l 4752 6369 l 4752 6368 l 4752 6366 l 4752 6364 l
 4752 6362 l 4752 6361 l 4752 6359 l 4752 6358 l 4751 6357 l
 4751 6356 l 4750 6355 l 4749 6354 l 4749 6353 l 4748 6352 l
 4747 6351 l 4746 6350 l 4745 6349 l 4744 6348 l 4743 6348 l
 4742 6347 l 4741 6346 l 4740 6346 l 4739 6346 l 4738 6346 l
 4736 6345 l 4735 6345 l 4733 6345 l 4732 6345 l 4730 6345 l
 4729 6345 l 4728 6346 l 4727 6346 l 4725 6346 l 4724 6347 l
 4724 6348 l 4723 6348 l 4722 6349 l 4721 6351 l 4720 6352 l
 4719 6353 l 4718 6354 l 4718 6355 l 4717 6356 l 4717 6357 l
 4717 6358 l 4716 6359 l 4717 6360 l 4717 6361 l 4717 6362 l
 4717 6363 l 4718 6364 l 4718 6365 l 4719 6366 l 4719 6367 l
 4720 6367 l 4720 6368 l 4721 6368 l 4722 6369 l 4723 6369 l
 4723 6368 l 4724 6368 l 4725 6368 l 4726 6367 l 4727 6367 l
 4727 6366 l 4728 6366 l 4728 6365 l 4729 6365 l 4729 6364 l
 4729 6363 l 4729 6362 l 4729 6361 l 4728 6360 l 4728 6359 l
 4729 6359 l 4729 6358 l 4730 6357 l 4731 6357 l 4731 6356 l
 4732 6356 l 4733 6356 l 4734 6356 l 4735 6356 l 4735 6357 l
 4736 6357 l 4737 6357 l 4738 6357 l 4738 6358 l 4739 6358 l
 4739 6359 l 4739 6360 l 4740 6360 l 4740 6361 l 4740 6362 l
 4741 6362 l 4741 6363 l 4741 6364 l 4740 6364 l 4740 6365 l
 4740 6366 l 4740 6368 l 4739 6371 l 4739 6373 l 4738 6374 l
 4737 6375 l 4736 6376 l 4735 6377 l 4733 6378 l 4732 6379 l
 4731 6379 l 4729 6379 l 4727 6380 l 4725 6380 l 4724 6380 l
 4722 6380 l 4721 6380 l 4720 6380 l 4719 6380 l 4718 6380 l
 4717 6379 l 4716 6379 l 4715 6379 l 4715 6378 l 4714 6377 l
 4713 6376 l 4712 6375 l 4711 6374 l 4710 6373 l 4710 6372 l
 4709 6372 l 4708 6371 l 4708 6370 l 4707 6369 l 4707 6368 l
 4707 6367 l 4706 6365 l 4706 6363 l 4706 6361 l 4706 6359 l
 4706 6357 l 4706 6355 l 4706 6353 l 4706 6352 l 4707 6351 l
 4707 6350 l 4707 6348 l 4708 6347 l 4709 6346 l 4709 6345 l
 4710 6344 l 4712 6343 l 4713 6342 l 4715 6340 l 4717 6339 l
 4718 6337 l 4720 6337 l 4721 6336 l 4723 6335 l 4725 6334 l
 4727 6334 l 4729 6334 l 4731 6333 l 4734 6333 l 4738 6333 l
 4740 6333 l 4741 6333 l 4742 6333 l 4744 6333 l 4747 6333 l
 4753 6333 l 4759 6333 l 4767 6333 l 4776 6333 l 4785 6333 l
 4794 6333 l 4802 6333 l 4809 6333 l 4815 6333 l 4822 6333 l
 4827 6333 l 4828 6333 l 4828 6334 l 4828 6337 l 4828 6341 l
 4828 6344 l 4828 6345 l 4826 6345 l 4816 6345 l 4797 6345 l
 4779 6345 l 4769 6345 l 4767 6345 l 4766 6345 l 4765 6345 l
 4764 6346 l 4763 6346 l 4762 6347 l 4762 6348 l 4761 6349 l
 4761 6350 l 4761 6351 l 4761 6352 l 4761 6353 l 4761 6354 l
 4761 6355 l 4762 6356 l 4762 6357 l 4763 6358 l 4764 6359 l
 4765 6359 l 4766 6359 l 4767 6359 l 4769 6359 l 4779 6359 l
 4798 6359 l 4816 6359 l 4826 6359 l 4828 6359 l 4828 6360 l
 4828 6362 l 4828 6367 l 4828 6369 l 4828 6370 l 4826 6370 l
 4817 6370 l 4799 6370 l 4782 6370 l 4773 6370 l 4771 6370 l
 4770 6370 l 4769 6370 l 4768 6370 l 4767 6371 l 4766 6371 l
 4766 6372 l 4765 6373 l 4765 6374 l 4765 6375 l 4765 6376 l
 4765 6377 l 4766 6378 l 4766 6379 l 4767 6380 l 4768 6381 l
 4769 6381 l 4770 6381 l 4771 6381 l 4773 6381 l 4782 6381 l
 4800 6381 l 4817 6381 l 4826 6381 l 4828 6381 l 4828 6384 l
 4828 6391 l 4828 6404 l 4828 6423 l 4828 6449 l 4828 6480 l
 4828 6516 l 4828 6554 l 4828 6592 l 4828 6628 l 4828 6659 l
 4828 6685 l 4828 6704 l 4828 6717 l 4828 6724 l 4828 6727 l
 4827 6727 l 4819 6727 l 4802 6727 l 4780 6727 l 4757 6727 l
 4740 6727 l 4732 6727 l 4731 6727 l 4730 6727 l 4729 6727 l
 4728 6727 l 4727 6728 l 4726 6728 l 4726 6729 l 4726 6730 l
 4725 6730 l 4725 6731 l 4725 6732 l 4725 6733 l 4725 6734 l
 4725 6735 l 4725 6736 l 4725 6737 l 4726 6738 l 4726 6739 l
 4727 6739 l 4727 6740 l 4728 6740 l 4729 6740 l 4730 6740 l
 4731 6740 l 4732 6740 l 4740 6740 l 4757 6740 l 4780 6740 l
 4802 6740 l 4819 6740 l 4827 6740 l 4828 6740 l 4828 6741 l
 4828 6745 l 4828 6750 l 4828 6754 l 4828 6755 l 4827 6755 l
 4822 6755 l 4811 6755 l 4792 6755 l 4770 6755 l 4748 6755 l
 4729 6755 l 4718 6755 l 4713 6755 l 4712 6755 l 4710 6755 l
 4707 6755 l 4706 6756 l 4704 6756 l 4703 6757 l 4702 6758 l
 4701 6759 l 4700 6760 l 4699 6761 l 4699 6763 l 4698 6764 l
 4698 6767 l 4698 6769 l 4698 6770 l 4698 6773 l 4698 6779 l
 4698 6782 l 4698 6783 l 4699 6783 l 4703 6783 l 4713 6783 l
 4730 6783 l 4755 6783 l 4786 6783 l 4821 6783 l 4856 6783 l
 4887 6783 l 4912 6783 l 4929 6783 l 4939 6783 l 4943 6783 l

 4944 6783 l  cp gs col7 1.00 shd ef gr 
%  spline 
% Polyline
n 4783 6706 m 4783 6705 l 4783 6702 l 4783 6693 l 4783 6678 l 4783 6656 l
 4783 6626 l 4783 6592 l 4783 6555 l 4783 6517 l 4783 6483 l
 4783 6453 l 4783 6431 l 4783 6416 l 4783 6407 l 4783 6404 l
 4783 6403 l 4783 6402 l 4783 6401 l 4783 6400 l 4782 6400 l
 4782 6399 l 4781 6399 l 4781 6398 l 4780 6398 l 4779 6398 l
 4778 6398 l 4777 6398 l 4776 6398 l 4775 6398 l 4774 6399 l
 4773 6399 l 4773 6400 l 4772 6401 l 4772 6402 l 4772 6403 l
 4772 6404 l 4772 6407 l 4772 6416 l 4772 6431 l 4772 6453 l
 4772 6483 l 4772 6517 l 4772 6555 l 4772 6592 l 4772 6626 l
 4772 6656 l 4772 6678 l 4772 6693 l 4772 6702 l 4772 6705 l
 4772 6706 l 4772 6707 l 4772 6708 l 4773 6709 l 4773 6710 l
 4774 6711 l 4775 6712 l 4776 6712 l 4777 6712 l 4778 6712 l
 4779 6712 l 4780 6712 l 4781 6712 l 4781 6711 l 4782 6711 l
 4782 6710 l 4783 6709 l 4783 6708 l 4783 6707 l
 4783 6706 l  cp gs col7 1.00 shd ef gr 
%  spline 
% Polyline
n 4813 6705 m 4813 6704 l 4813 6701 l 4813 6692 l 4813 6677 l 4813 6655 l
 4813 6626 l 4813 6592 l 4813 6555 l 4813 6518 l 4813 6484 l
 4813 6455 l 4813 6433 l 4813 6418 l 4813 6409 l 4813 6406 l
 4813 6405 l 4813 6404 l 4813 6402 l 4813 6401 l 4812 6400 l
 4811 6399 l 4811 6398 l 4810 6398 l 4809 6398 l 4808 6397 l
 4807 6397 l 4806 6397 l 4805 6397 l 4804 6397 l 4803 6397 l
 4802 6397 l 4801 6398 l 4800 6398 l 4799 6399 l 4799 6400 l
 4798 6401 l 4798 6402 l 4798 6404 l 4798 6405 l 4798 6406 l
 4798 6409 l 4798 6418 l 4798 6433 l 4798 6455 l 4798 6484 l
 4798 6518 l 4798 6555 l 4798 6592 l 4798 6626 l 4798 6655 l
 4798 6677 l 4798 6692 l 4798 6701 l 4798 6704 l 4798 6705 l
 4798 6706 l 4798 6707 l 4798 6708 l 4799 6709 l 4799 6710 l
 4799 6711 l 4800 6711 l 4801 6712 l 4802 6713 l 4803 6713 l
 4804 6713 l 4805 6713 l 4806 6713 l 4807 6713 l 4808 6713 l
 4809 6712 l 4810 6712 l 4811 6711 l 4812 6710 l 4812 6709 l
 4813 6708 l 4813 6707 l 4813 6706 l
 4813 6705 l  cp gs col7 1.00 shd ef gr 
%  polyline 
% Polyline
0 slj
n 5136 6864 m 5124 6864 l 5124 6894 l 5119 6894 l 5119 6864 l 5108 6864 l
 5108 6860 l 5136 6860 l
 5136 6864 l  cp gs col32 1.00 shd ef gr 
%  polyline 
% Polyline
n 5172 6894 m 5167 6894 l 5167 6867 l 5157 6880 l 5156 6880 l 5146 6867 l
 5145 6867 l 5145 6894 l 5141 6894 l 5141 6860 l 5145 6860 l
 5156 6874 l 5168 6860 l 5172 6860 l
 5172 6894 l  cp gs col32 1.00 shd ef gr 
$F2psEnd
rs

%%EndDocument
 @endspecial 4769 5844 a
 currentpoint grestore moveto
 4769 5844 a 4130 5844 a
 currentpoint currentpoint translate 1 0.76611 div 1 0.76611 div scale
neg exch neg exch translate
 4130
5844 a 5001 3450 a
SDict begin H.S end
 5001 3450 a 5001 3450 a
SDict begin H.R end
 5001 3450
a 5001 3450 a
SDict begin [ /View [/XYZ H.V] /Dest (page.1) cvn H.B /DEST pdfmark
end
 5001 3450 a 5001 3450 a
SDict begin [ {ThisPage} << /Trans << /S /Replace >> >> /PUT pdfmark
end
 5001 3450 a 5001
3450 a
SDict begin [ /Page 21/View [ /XYZ null null null ] /Title (Even faster)
/OUT pdfmark end
 5001 3450 a 8178 1453 a Fm(E)18 b Fn(V)g(E)g(N)115
b(F)-5 b(A)18 b(S)g(T)g(E)g(R)4649 2152 y @beginspecial
276 @llx 376 @lly 336 @urx 416 @ury 113 @rwi @setspecial
%%BeginDocument: green-bullet-on-white.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/fred/TeX/STYLES/Prosper/img/green-bullet-on-white.ps
%%Creator: XV Version 3.10a+FLmask  Rev: 12/29/94  -  by John Bradley
%%BoundingBox: 276 376 336 416
%%Pages: 1
%%DocumentFonts:
%%EndComments
%%EndProlog

%%Page: 1 1

% remember original state
/origstate save def

% build a temporary dictionary
20 dict begin

% define space for color conversions
/grays 60 string def  % space for gray scale line
/npixls 0 def
/rgbindx 0 def

% lower left corner
276 376 translate

% size of image (on paper, in 1/72inch coords)
59.97600 40.03200 scale

% define 'colorimage' if it isn't defined
%   ('colortogray' and 'mergeprocs' come from xwd2ps
%     via xgrab)
/colorimage where   % do we know about 'colorimage'?
  { pop }           % yes: pop off the 'dict' returned
  {                 % no:  define one
    /colortogray {  % define an RGB->I function
      /rgbdata exch store    % call input 'rgbdata'
      rgbdata length 3 idiv
      /npixls exch store
      /rgbindx 0 store
      0 1 npixls 1 sub {
        grays exch
        rgbdata rgbindx       get 20 mul    % Red
        rgbdata rgbindx 1 add get 32 mul    % Green
        rgbdata rgbindx 2 add get 12 mul    % Blue
        add add 64 idiv      % I = .5G + .31R + .18B
        put
        /rgbindx rgbindx 3 add store
      } for
      grays 0 npixls getinterval
    } bind def

    % Utility procedure for colorimage operator.
    % This procedure takes two procedures off the
    % stack and merges them into a single procedure.

    /mergeprocs { % def
      dup length
      3 -1 roll
      dup
      length
      dup
      5 1 roll
      3 -1 roll
      add
      array cvx
      dup
      3 -1 roll
      0 exch
      putinterval
      dup
      4 2 roll
      putinterval
    } bind def

    /colorimage { % def
      pop pop     % remove 'false 3' operands
      {colortogray} mergeprocs
      image
    } bind def
  } ifelse          % end of 'false' case



% define the colormap
/cmap 723 string def


% load up the colormap
currentfile cmap readhexstring
041808 049008 8c948c 045204 4c544c 04c804 84e284 449644 c4cbc4 0c380e 
04ac07 cce6cc 345e2c e4e7e4 046604 2c3a2c 347234 e4fee2 048208 64cc60 
34922c 24b224 04e404 044604 647264 242623 049f07 8cae8c 04bc06 24c61c 
f4f8f3 1c541c 04d804 1c621c 1c7220 0c280d 14910f 045e04 047c04 ccdcd0 
14ac18 1c481c 747473 04d105 0c6c0b 24852a 1c381c f4f1f3 acafac f4fef5 
0c310c acc6ac 049708 a4a4a3 3c4a44 148314 144812 9cea94 04b405 149e14 
1cbc1c 044004 e4fef4 dcdddd 748274 5c5959 4cba54 145b11 145413 147412 
c4fec4 e4f1e7 146411 088a0a 243028 09c207 fcf8f3 147c13 14c80e acceac 
3c3939 04f405 044e07 07a608 14d00f 0c1f10 0c900b d4d3d4 ecfee3 1c291d 
0c6e14 bcbfbd d4f6d4 909a94 4c5a50 0cac08 24ba24 547e54 0cbc0a 0c5c16 
0c7c0b fcf1fb acb8ac 1c311c aca7a9 e2e2e2 a4e2a4 0cc80a 6c9a6c 143715 
0c650a 0c840b 07de06 14970c 0c980a 0cb40a 848583 ecf0f0 c3c6c3 0c540d 
0c740c cccccc 74ce6c 30a02c 04ec05 54aa5c 6cb66c 9cfa9c 2c862c 5c926c 
6ca674 b4deac 9cda9c 34aa2c 6c7e6c acfeac 448244 34d22c 7d7d7c 6c6d6c 
445644 4c4d4c 1c7a19 1c3e1c 3c3f3c 2c422c 7c9a84 54c254 dceadc 144014 
343231 bccebc bcbabc 447244 6c6664 9c9d9c 7caa7c 349a38 6c7a74 84b69c 
1c4e18 898a89 ccfadc 1c6c2c b8e2c0 1c8a24 a1aaa1 3c4e3c 5f5e5c d8fed8 
24be24 78d670 688668 148a14 14a618 145624 0c480e 2c292b 142916 1c921c 
d4dad9 243828 143017 b4d2bc b4b7b5 1c961c 8c868c 247e24 144e13 04fa04 
246224 fcfefc 0c4e0c ace2b4 3caa3c 244e24 0c180c 949394 545454 ece9ec 
343634 2cb127 6c736c 0ca00c 0cda08 0c5c0b 0ccf06 146a0c b4b2b4 646464 
b4c2b4 0c3f0c ecfdf9 e4dedc ccfdcc 2c2f2b 142214 146b16 c4c2c2 545b54 
2cb62c 74ba74 346634 b4fcb0 244224 444242 246a24 e4feec 0ce204 f4f9fc 
f4eefc 444744 54b654 fcf9fc 0c9114 dcd6d4 ecfeec 0c7b14 0cc614 0c6314 
0c8414 
pop pop   % lose return values from readhexstring


% rlecmapimage expects to have 'w h bits matrix' on stack
/rlecmapimage {
  /buffer 1 string def
  /rgbval 3 string def
  /block  384 string def

  % proc to read a block from file, and return RGB data
  { currentfile buffer readhexstring pop
    /bcount exch 0 get store
    bcount 128 ge
    {  % it's a non-run block
      0 1 bcount 128 sub
      { currentfile buffer readhexstring pop pop

        % look up value in color map
        /rgbval cmap buffer 0 get 3 mul 3 getinterval store

        % and put it in position i*3 in block
        block exch 3 mul rgbval putinterval
      } for
      block  0  bcount 127 sub 3 mul  getinterval
    }

    { % else it's a run block
      currentfile buffer readhexstring pop pop

      % look up value in colormap
      /rgbval cmap buffer 0 get 3 mul 3 getinterval store

      0 1 bcount { block exch 3 mul rgbval putinterval } for

      block 0 bcount 1 add 3 mul getinterval
    } ifelse
  } % end of proc
  false 3 colorimage
} bind def


60 40 8			% dimensions of data
[60 0 0 -40 0 40]		% mapping matrix
rlecmapimage

10bf8131bf05bf03e98165e902e9046587bf3158ec31bfe9658265e9bf09bf
10bf8131bf04bf81e9bf01bf02e98265bfe982e965e901e981bf318131ec82ecbfe982e9
65bf0abf
12bf82751ebf83bf1ebf318231ec3102318111318131bf81bfe901e981bf318131bf01bf
01e90bbf
0fbf02e901bf023101ec021101a981d6a981a9118111318131bf14bf
0fbf8165e901e988e5bfd4ecd66add07808c80149dc2137f46a911d431bfe981e9bf0fbf

0fbf01e982bfe9318331a49ce28fe2454d37562456dc71567bab87a9d4bf81bfe981e9bf
81bf318131bf0abf
10bf8ac775bf311bde43224d37568656cb535f1a733c893cae8506a91131bfe9bf01bf81
58bf0abf
0fbf911ebf31b761a0442245ed56721a530a3a4e3a813a4e864e73c94246e3bf10bf
07bf81e9bf82bfe9bf92bf1ebf31ec4f0c38e2ef8e4d49561a530a3a6283624b052b8a2b
ce4e60c2dfe331bf4cbf0cbf
0abf81e9bf82bfe9ec8eec83de1f21778e786f01341a0a3a1c851c4b052b20168b162054
aa93df11312fe965bf0abf
0ebf8d3111883d77cdcf78646f0134530a810a1c911c4ece20167c517c16542893a9ec31
e965bf0abf
08bf01e999bfe91ebf316cc07743cd45786f49561a530a3a624b6b2b707c510151877c70
4edcaba9bfe981e9bf0abf
0bbf01e985bf27d34352cf90cf0e4d2656011a530a1c62ee2b20167c5102518816cc1db9
d611bfe9bf0abf
07bf81e9bf01bf90e9bf4c86d3445277d92c786f49721a0a3a853a4b0520167c827c51bd
88bd5116e44b157a11bf0cbf
0dbf8d3f0fc33d4403cfbb0e3756011a0a860a624b2b20167c817c5102510116854b897b
a911bf0bbf
08bf82e9e5bf97bf75dab209bcc021ef254d2649561a533a1c4b052b70167c037c811620
85203a853911bf0bbf
0bbf0131869eb6d3b0bc7748884845646f561acb0a7382734b2b812b1683167c16cc01cc
012b844b2813d4bf0bbf
0abf0231955e236db0c04463cf45646f5634cb533a73624b2b2016821670548854ce2b20
4b28e831bf0bbf
0abf023183b5b6d3b089b044436e45786f49341a871a0a733a626b2b200120896b4e6b05
2b1c5f9decbf0bbf
09bf8131bf97bf31d82e09d3b044cd485a786f1201cb1a530a73621c052b852b054e4b1c
0585053a282d58bf0bbf
0bbf9431bf556709b03844cd482c7864125634cb1a5f0a7382734b0501050162011c854b
0aae2d58bf0bbf
0bbf0131934a236dd3b0bc7743485a786f1201341acb535f3a813a1c011c0173023a8453
3b1458bf0bbf
0bbf8431bf0455098309d338778277ef2c852c266f1201348134cb83cb530a3a013a810a
5f815f0a850a1ab37d58bf0bbf
08bf81e9bf93bf31bf18d83209d338c044cd6e0e2c64126f0172837271cb5382530a5383
53ae531a851a01a57e58bf0bbf
0bbf01e5837600230901098138c082c0482c862c7864126f49568156728272341a811a72
0272864912bb841131bf0abf
03bf94e9bfe9bfe9bf1ebf1ebf275923b632099538c044ef81ef7881786481646f816fad
84adea01ea560156882449ad2da3115831bf0abf
04bf02e992654ce61e75bf0d185523b66d0995bcc043cd2c812c7881786483646f64f001
f08b6f496f49642d6382e3314cbf0abf
01bf85e9e5e9652fc784c7693fc7698a69c7d2b200232eb60929bc84bc6343ef2c862c78
45784d78ed82ed6f6489644d45a3afa2114c31bf0abf
01e58175c783c769d5eb8ceb797679dab87908db67c4b66d876d9538b0447743ef84ef6e
2c78458e455a457864788ecfbe9fd4315831bf0abf
88e5750d3f5779da98d083d0689b3501358d5d0236c45567b6320995b04477cd92cdef6e
2c6e5ad95acf782c4517813e31bf2fbf0bbf
887569575bd0689bc5ba83ba8a2a8a878aca2a74db5955b284b23209d3b081b077017701
cd016e02ef876e2c6e4810a4d4bf01bf814cbf0abf
873f79b835c5ba2a9a829aa8410141868de1d104c690d881d85583552e6d958b9538b0c0
77cd03cd6377afcd84cd4321c1d483d4e9654c814cbf0abf
88575b9b742ad1418de181e15081509603968450c8d759d881d8b283b2326d0981099585
9538bcb0381f871f95c3995ca931bf81bfe981e9bf0bbf
8779b8c58ad1c6e750855096d7b119b104b184d7b119d855845523b2b66d016d83952995
2987296de09211d431bf01bf01e90cbf
8979d0c52aa88de15096b181b119041901b18796c80fd74a59b2b602b6016d86326d328f
ac0b318331bf31bf01bf81e9bf0cbf
88575b9b742ad1c68de186e1c850c850c850865096c850e1e70487045e8ca7912e672e85
2e8cac33473101318158bf02bf82e9bfe981e9bf0abf
8b3f799835c5742a8bd1a8dbc683c68dc68d818dc601c68cdbd1ca40a15da66697274711
31863158bf31bf31bf82bf4ce985e9bfe9bfe9bf0abf
8bc76957dab8359bc5a1748a2a052a018a01748b029ba6665b279447ec311ebf83bf581e
bf82bf4cbf02bf82e9bfe981e9bf0abf
881e75693f57795bb8d082d068350135029b0135013088b8985b7608b40d751e811ebf83
bf1e75bf81bf4c814cbf05bf81e9bf0bbf
83e9e52fc782c7693f823f5779817976027681da760276827957b482b4c7750175822fe5
bf82bf4cbf01bf814cbf81bfe981e9bf01bf01e90dbf

%
% Compression made this file 26.36% of the uncompressed size.
%


showpage

% stop using temporary dictionary
end

% restore original state
origstate restore

%%Trailer

%%EndDocument
 @endspecial 298 w Fg(P)-10 b(ar)n(allelization:)4983
2466 y @beginspecial 276 @llx 376 @lly 336 @urx 416 @ury
85 @rwi @setspecial
%%BeginDocument: green-bullet-on-white.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/fred/TeX/STYLES/Prosper/img/green-bullet-on-white.ps
%%Creator: XV Version 3.10a+FLmask  Rev: 12/29/94  -  by John Bradley
%%BoundingBox: 276 376 336 416
%%Pages: 1
%%DocumentFonts:
%%EndComments
%%EndProlog

%%Page: 1 1

% remember original state
/origstate save def

% build a temporary dictionary
20 dict begin

% define space for color conversions
/grays 60 string def  % space for gray scale line
/npixls 0 def
/rgbindx 0 def

% lower left corner
276 376 translate

% size of image (on paper, in 1/72inch coords)
59.97600 40.03200 scale

% define 'colorimage' if it isn't defined
%   ('colortogray' and 'mergeprocs' come from xwd2ps
%     via xgrab)
/colorimage where   % do we know about 'colorimage'?
  { pop }           % yes: pop off the 'dict' returned
  {                 % no:  define one
    /colortogray {  % define an RGB->I function
      /rgbdata exch store    % call input 'rgbdata'
      rgbdata length 3 idiv
      /npixls exch store
      /rgbindx 0 store
      0 1 npixls 1 sub {
        grays exch
        rgbdata rgbindx       get 20 mul    % Red
        rgbdata rgbindx 1 add get 32 mul    % Green
        rgbdata rgbindx 2 add get 12 mul    % Blue
        add add 64 idiv      % I = .5G + .31R + .18B
        put
        /rgbindx rgbindx 3 add store
      } for
      grays 0 npixls getinterval
    } bind def

    % Utility procedure for colorimage operator.
    % This procedure takes two procedures off the
    % stack and merges them into a single procedure.

    /mergeprocs { % def
      dup length
      3 -1 roll
      dup
      length
      dup
      5 1 roll
      3 -1 roll
      add
      array cvx
      dup
      3 -1 roll
      0 exch
      putinterval
      dup
      4 2 roll
      putinterval
    } bind def

    /colorimage { % def
      pop pop     % remove 'false 3' operands
      {colortogray} mergeprocs
      image
    } bind def
  } ifelse          % end of 'false' case



% define the colormap
/cmap 723 string def


% load up the colormap
currentfile cmap readhexstring
041808 049008 8c948c 045204 4c544c 04c804 84e284 449644 c4cbc4 0c380e 
04ac07 cce6cc 345e2c e4e7e4 046604 2c3a2c 347234 e4fee2 048208 64cc60 
34922c 24b224 04e404 044604 647264 242623 049f07 8cae8c 04bc06 24c61c 
f4f8f3 1c541c 04d804 1c621c 1c7220 0c280d 14910f 045e04 047c04 ccdcd0 
14ac18 1c481c 747473 04d105 0c6c0b 24852a 1c381c f4f1f3 acafac f4fef5 
0c310c acc6ac 049708 a4a4a3 3c4a44 148314 144812 9cea94 04b405 149e14 
1cbc1c 044004 e4fef4 dcdddd 748274 5c5959 4cba54 145b11 145413 147412 
c4fec4 e4f1e7 146411 088a0a 243028 09c207 fcf8f3 147c13 14c80e acceac 
3c3939 04f405 044e07 07a608 14d00f 0c1f10 0c900b d4d3d4 ecfee3 1c291d 
0c6e14 bcbfbd d4f6d4 909a94 4c5a50 0cac08 24ba24 547e54 0cbc0a 0c5c16 
0c7c0b fcf1fb acb8ac 1c311c aca7a9 e2e2e2 a4e2a4 0cc80a 6c9a6c 143715 
0c650a 0c840b 07de06 14970c 0c980a 0cb40a 848583 ecf0f0 c3c6c3 0c540d 
0c740c cccccc 74ce6c 30a02c 04ec05 54aa5c 6cb66c 9cfa9c 2c862c 5c926c 
6ca674 b4deac 9cda9c 34aa2c 6c7e6c acfeac 448244 34d22c 7d7d7c 6c6d6c 
445644 4c4d4c 1c7a19 1c3e1c 3c3f3c 2c422c 7c9a84 54c254 dceadc 144014 
343231 bccebc bcbabc 447244 6c6664 9c9d9c 7caa7c 349a38 6c7a74 84b69c 
1c4e18 898a89 ccfadc 1c6c2c b8e2c0 1c8a24 a1aaa1 3c4e3c 5f5e5c d8fed8 
24be24 78d670 688668 148a14 14a618 145624 0c480e 2c292b 142916 1c921c 
d4dad9 243828 143017 b4d2bc b4b7b5 1c961c 8c868c 247e24 144e13 04fa04 
246224 fcfefc 0c4e0c ace2b4 3caa3c 244e24 0c180c 949394 545454 ece9ec 
343634 2cb127 6c736c 0ca00c 0cda08 0c5c0b 0ccf06 146a0c b4b2b4 646464 
b4c2b4 0c3f0c ecfdf9 e4dedc ccfdcc 2c2f2b 142214 146b16 c4c2c2 545b54 
2cb62c 74ba74 346634 b4fcb0 244224 444242 246a24 e4feec 0ce204 f4f9fc 
f4eefc 444744 54b654 fcf9fc 0c9114 dcd6d4 ecfeec 0c7b14 0cc614 0c6314 
0c8414 
pop pop   % lose return values from readhexstring


% rlecmapimage expects to have 'w h bits matrix' on stack
/rlecmapimage {
  /buffer 1 string def
  /rgbval 3 string def
  /block  384 string def

  % proc to read a block from file, and return RGB data
  { currentfile buffer readhexstring pop
    /bcount exch 0 get store
    bcount 128 ge
    {  % it's a non-run block
      0 1 bcount 128 sub
      { currentfile buffer readhexstring pop pop

        % look up value in color map
        /rgbval cmap buffer 0 get 3 mul 3 getinterval store

        % and put it in position i*3 in block
        block exch 3 mul rgbval putinterval
      } for
      block  0  bcount 127 sub 3 mul  getinterval
    }

    { % else it's a run block
      currentfile buffer readhexstring pop pop

      % look up value in colormap
      /rgbval cmap buffer 0 get 3 mul 3 getinterval store

      0 1 bcount { block exch 3 mul rgbval putinterval } for

      block 0 bcount 1 add 3 mul getinterval
    } ifelse
  } % end of proc
  false 3 colorimage
} bind def


60 40 8			% dimensions of data
[60 0 0 -40 0 40]		% mapping matrix
rlecmapimage

10bf8131bf05bf03e98165e902e9046587bf3158ec31bfe9658265e9bf09bf
10bf8131bf04bf81e9bf01bf02e98265bfe982e965e901e981bf318131ec82ecbfe982e9
65bf0abf
12bf82751ebf83bf1ebf318231ec3102318111318131bf81bfe901e981bf318131bf01bf
01e90bbf
0fbf02e901bf023101ec021101a981d6a981a9118111318131bf14bf
0fbf8165e901e988e5bfd4ecd66add07808c80149dc2137f46a911d431bfe981e9bf0fbf

0fbf01e982bfe9318331a49ce28fe2454d37562456dc71567bab87a9d4bf81bfe981e9bf
81bf318131bf0abf
10bf8ac775bf311bde43224d37568656cb535f1a733c893cae8506a91131bfe9bf01bf81
58bf0abf
0fbf911ebf31b761a0442245ed56721a530a3a4e3a813a4e864e73c94246e3bf10bf
07bf81e9bf82bfe9bf92bf1ebf31ec4f0c38e2ef8e4d49561a530a3a6283624b052b8a2b
ce4e60c2dfe331bf4cbf0cbf
0abf81e9bf82bfe9ec8eec83de1f21778e786f01341a0a3a1c851c4b052b20168b162054
aa93df11312fe965bf0abf
0ebf8d3111883d77cdcf78646f0134530a810a1c911c4ece20167c517c16542893a9ec31
e965bf0abf
08bf01e999bfe91ebf316cc07743cd45786f49561a530a3a624b6b2b707c510151877c70
4edcaba9bfe981e9bf0abf
0bbf01e985bf27d34352cf90cf0e4d2656011a530a1c62ee2b20167c5102518816cc1db9
d611bfe9bf0abf
07bf81e9bf01bf90e9bf4c86d3445277d92c786f49721a0a3a853a4b0520167c827c51bd
88bd5116e44b157a11bf0cbf
0dbf8d3f0fc33d4403cfbb0e3756011a0a860a624b2b20167c817c5102510116854b897b
a911bf0bbf
08bf82e9e5bf97bf75dab209bcc021ef254d2649561a533a1c4b052b70167c037c811620
85203a853911bf0bbf
0bbf0131869eb6d3b0bc7748884845646f561acb0a7382734b2b812b1683167c16cc01cc
012b844b2813d4bf0bbf
0abf0231955e236db0c04463cf45646f5634cb533a73624b2b2016821670548854ce2b20
4b28e831bf0bbf
0abf023183b5b6d3b089b044436e45786f49341a871a0a733a626b2b200120896b4e6b05
2b1c5f9decbf0bbf
09bf8131bf97bf31d82e09d3b044cd485a786f1201cb1a530a73621c052b852b054e4b1c
0585053a282d58bf0bbf
0bbf9431bf556709b03844cd482c7864125634cb1a5f0a7382734b0501050162011c854b
0aae2d58bf0bbf
0bbf0131934a236dd3b0bc7743485a786f1201341acb535f3a813a1c011c0173023a8453
3b1458bf0bbf
0bbf8431bf0455098309d338778277ef2c852c266f1201348134cb83cb530a3a013a810a
5f815f0a850a1ab37d58bf0bbf
08bf81e9bf93bf31bf18d83209d338c044cd6e0e2c64126f0172837271cb5382530a5383
53ae531a851a01a57e58bf0bbf
0bbf01e5837600230901098138c082c0482c862c7864126f49568156728272341a811a72
0272864912bb841131bf0abf
03bf94e9bfe9bfe9bf1ebf1ebf275923b632099538c044ef81ef7881786481646f816fad
84adea01ea560156882449ad2da3115831bf0abf
04bf02e992654ce61e75bf0d185523b66d0995bcc043cd2c812c7881786483646f64f001
f08b6f496f49642d6382e3314cbf0abf
01bf85e9e5e9652fc784c7693fc7698a69c7d2b200232eb60929bc84bc6343ef2c862c78
45784d78ed82ed6f6489644d45a3afa2114c31bf0abf
01e58175c783c769d5eb8ceb797679dab87908db67c4b66d876d9538b0447743ef84ef6e
2c78458e455a457864788ecfbe9fd4315831bf0abf
88e5750d3f5779da98d083d0689b3501358d5d0236c45567b6320995b04477cd92cdef6e
2c6e5ad95acf782c4517813e31bf2fbf0bbf
887569575bd0689bc5ba83ba8a2a8a878aca2a74db5955b284b23209d3b081b077017701
cd016e02ef876e2c6e4810a4d4bf01bf814cbf0abf
873f79b835c5ba2a9a829aa8410141868de1d104c690d881d85583552e6d958b9538b0c0
77cd03cd6377afcd84cd4321c1d483d4e9654c814cbf0abf
88575b9b742ad1418de181e15081509603968450c8d759d881d8b283b2326d0981099585
9538bcb0381f871f95c3995ca931bf81bfe981e9bf0bbf
8779b8c58ad1c6e750855096d7b119b104b184d7b119d855845523b2b66d016d83952995
2987296de09211d431bf01bf01e90cbf
8979d0c52aa88de15096b181b119041901b18796c80fd74a59b2b602b6016d86326d328f
ac0b318331bf31bf01bf81e9bf0cbf
88575b9b742ad1c68de186e1c850c850c850865096c850e1e70487045e8ca7912e672e85
2e8cac33473101318158bf02bf82e9bfe981e9bf0abf
8b3f799835c5742a8bd1a8dbc683c68dc68d818dc601c68cdbd1ca40a15da66697274711
31863158bf31bf31bf82bf4ce985e9bfe9bfe9bf0abf
8bc76957dab8359bc5a1748a2a052a018a01748b029ba6665b279447ec311ebf83bf581e
bf82bf4cbf02bf82e9bfe981e9bf0abf
881e75693f57795bb8d082d068350135029b0135013088b8985b7608b40d751e811ebf83
bf1e75bf81bf4c814cbf05bf81e9bf0bbf
83e9e52fc782c7693f823f5779817976027681da760276827957b482b4c7750175822fe5
bf82bf4cbf01bf814cbf81bfe981e9bf01bf01e90dbf

%
% Compression made this file 26.36% of the uncompressed size.
%


showpage

% stop using temporary dictionary
end

% restore original state
origstate restore

%%Trailer

%%EndDocument
 @endspecial 248 w(Lo)l(w)68 b Fb(\031)g Fa(2)p Fg(:)84
b(2)67 b(threads)g(lik)-5 b(ely)65 b(to)i(be)g(balanced)4983
2787 y @beginspecial 276 @llx 376 @lly 336 @urx 416 @ury
85 @rwi @setspecial
%%BeginDocument: green-bullet-on-white.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/fred/TeX/STYLES/Prosper/img/green-bullet-on-white.ps
%%Creator: XV Version 3.10a+FLmask  Rev: 12/29/94  -  by John Bradley
%%BoundingBox: 276 376 336 416
%%Pages: 1
%%DocumentFonts:
%%EndComments
%%EndProlog

%%Page: 1 1

% remember original state
/origstate save def

% build a temporary dictionary
20 dict begin

% define space for color conversions
/grays 60 string def  % space for gray scale line
/npixls 0 def
/rgbindx 0 def

% lower left corner
276 376 translate

% size of image (on paper, in 1/72inch coords)
59.97600 40.03200 scale

% define 'colorimage' if it isn't defined
%   ('colortogray' and 'mergeprocs' come from xwd2ps
%     via xgrab)
/colorimage where   % do we know about 'colorimage'?
  { pop }           % yes: pop off the 'dict' returned
  {                 % no:  define one
    /colortogray {  % define an RGB->I function
      /rgbdata exch store    % call input 'rgbdata'
      rgbdata length 3 idiv
      /npixls exch store
      /rgbindx 0 store
      0 1 npixls 1 sub {
        grays exch
        rgbdata rgbindx       get 20 mul    % Red
        rgbdata rgbindx 1 add get 32 mul    % Green
        rgbdata rgbindx 2 add get 12 mul    % Blue
        add add 64 idiv      % I = .5G + .31R + .18B
        put
        /rgbindx rgbindx 3 add store
      } for
      grays 0 npixls getinterval
    } bind def

    % Utility procedure for colorimage operator.
    % This procedure takes two procedures off the
    % stack and merges them into a single procedure.

    /mergeprocs { % def
      dup length
      3 -1 roll
      dup
      length
      dup
      5 1 roll
      3 -1 roll
      add
      array cvx
      dup
      3 -1 roll
      0 exch
      putinterval
      dup
      4 2 roll
      putinterval
    } bind def

    /colorimage { % def
      pop pop     % remove 'false 3' operands
      {colortogray} mergeprocs
      image
    } bind def
  } ifelse          % end of 'false' case



% define the colormap
/cmap 723 string def


% load up the colormap
currentfile cmap readhexstring
041808 049008 8c948c 045204 4c544c 04c804 84e284 449644 c4cbc4 0c380e 
04ac07 cce6cc 345e2c e4e7e4 046604 2c3a2c 347234 e4fee2 048208 64cc60 
34922c 24b224 04e404 044604 647264 242623 049f07 8cae8c 04bc06 24c61c 
f4f8f3 1c541c 04d804 1c621c 1c7220 0c280d 14910f 045e04 047c04 ccdcd0 
14ac18 1c481c 747473 04d105 0c6c0b 24852a 1c381c f4f1f3 acafac f4fef5 
0c310c acc6ac 049708 a4a4a3 3c4a44 148314 144812 9cea94 04b405 149e14 
1cbc1c 044004 e4fef4 dcdddd 748274 5c5959 4cba54 145b11 145413 147412 
c4fec4 e4f1e7 146411 088a0a 243028 09c207 fcf8f3 147c13 14c80e acceac 
3c3939 04f405 044e07 07a608 14d00f 0c1f10 0c900b d4d3d4 ecfee3 1c291d 
0c6e14 bcbfbd d4f6d4 909a94 4c5a50 0cac08 24ba24 547e54 0cbc0a 0c5c16 
0c7c0b fcf1fb acb8ac 1c311c aca7a9 e2e2e2 a4e2a4 0cc80a 6c9a6c 143715 
0c650a 0c840b 07de06 14970c 0c980a 0cb40a 848583 ecf0f0 c3c6c3 0c540d 
0c740c cccccc 74ce6c 30a02c 04ec05 54aa5c 6cb66c 9cfa9c 2c862c 5c926c 
6ca674 b4deac 9cda9c 34aa2c 6c7e6c acfeac 448244 34d22c 7d7d7c 6c6d6c 
445644 4c4d4c 1c7a19 1c3e1c 3c3f3c 2c422c 7c9a84 54c254 dceadc 144014 
343231 bccebc bcbabc 447244 6c6664 9c9d9c 7caa7c 349a38 6c7a74 84b69c 
1c4e18 898a89 ccfadc 1c6c2c b8e2c0 1c8a24 a1aaa1 3c4e3c 5f5e5c d8fed8 
24be24 78d670 688668 148a14 14a618 145624 0c480e 2c292b 142916 1c921c 
d4dad9 243828 143017 b4d2bc b4b7b5 1c961c 8c868c 247e24 144e13 04fa04 
246224 fcfefc 0c4e0c ace2b4 3caa3c 244e24 0c180c 949394 545454 ece9ec 
343634 2cb127 6c736c 0ca00c 0cda08 0c5c0b 0ccf06 146a0c b4b2b4 646464 
b4c2b4 0c3f0c ecfdf9 e4dedc ccfdcc 2c2f2b 142214 146b16 c4c2c2 545b54 
2cb62c 74ba74 346634 b4fcb0 244224 444242 246a24 e4feec 0ce204 f4f9fc 
f4eefc 444744 54b654 fcf9fc 0c9114 dcd6d4 ecfeec 0c7b14 0cc614 0c6314 
0c8414 
pop pop   % lose return values from readhexstring


% rlecmapimage expects to have 'w h bits matrix' on stack
/rlecmapimage {
  /buffer 1 string def
  /rgbval 3 string def
  /block  384 string def

  % proc to read a block from file, and return RGB data
  { currentfile buffer readhexstring pop
    /bcount exch 0 get store
    bcount 128 ge
    {  % it's a non-run block
      0 1 bcount 128 sub
      { currentfile buffer readhexstring pop pop

        % look up value in color map
        /rgbval cmap buffer 0 get 3 mul 3 getinterval store

        % and put it in position i*3 in block
        block exch 3 mul rgbval putinterval
      } for
      block  0  bcount 127 sub 3 mul  getinterval
    }

    { % else it's a run block
      currentfile buffer readhexstring pop pop

      % look up value in colormap
      /rgbval cmap buffer 0 get 3 mul 3 getinterval store

      0 1 bcount { block exch 3 mul rgbval putinterval } for

      block 0 bcount 1 add 3 mul getinterval
    } ifelse
  } % end of proc
  false 3 colorimage
} bind def


60 40 8			% dimensions of data
[60 0 0 -40 0 40]		% mapping matrix
rlecmapimage

10bf8131bf05bf03e98165e902e9046587bf3158ec31bfe9658265e9bf09bf
10bf8131bf04bf81e9bf01bf02e98265bfe982e965e901e981bf318131ec82ecbfe982e9
65bf0abf
12bf82751ebf83bf1ebf318231ec3102318111318131bf81bfe901e981bf318131bf01bf
01e90bbf
0fbf02e901bf023101ec021101a981d6a981a9118111318131bf14bf
0fbf8165e901e988e5bfd4ecd66add07808c80149dc2137f46a911d431bfe981e9bf0fbf

0fbf01e982bfe9318331a49ce28fe2454d37562456dc71567bab87a9d4bf81bfe981e9bf
81bf318131bf0abf
10bf8ac775bf311bde43224d37568656cb535f1a733c893cae8506a91131bfe9bf01bf81
58bf0abf
0fbf911ebf31b761a0442245ed56721a530a3a4e3a813a4e864e73c94246e3bf10bf
07bf81e9bf82bfe9bf92bf1ebf31ec4f0c38e2ef8e4d49561a530a3a6283624b052b8a2b
ce4e60c2dfe331bf4cbf0cbf
0abf81e9bf82bfe9ec8eec83de1f21778e786f01341a0a3a1c851c4b052b20168b162054
aa93df11312fe965bf0abf
0ebf8d3111883d77cdcf78646f0134530a810a1c911c4ece20167c517c16542893a9ec31
e965bf0abf
08bf01e999bfe91ebf316cc07743cd45786f49561a530a3a624b6b2b707c510151877c70
4edcaba9bfe981e9bf0abf
0bbf01e985bf27d34352cf90cf0e4d2656011a530a1c62ee2b20167c5102518816cc1db9
d611bfe9bf0abf
07bf81e9bf01bf90e9bf4c86d3445277d92c786f49721a0a3a853a4b0520167c827c51bd
88bd5116e44b157a11bf0cbf
0dbf8d3f0fc33d4403cfbb0e3756011a0a860a624b2b20167c817c5102510116854b897b
a911bf0bbf
08bf82e9e5bf97bf75dab209bcc021ef254d2649561a533a1c4b052b70167c037c811620
85203a853911bf0bbf
0bbf0131869eb6d3b0bc7748884845646f561acb0a7382734b2b812b1683167c16cc01cc
012b844b2813d4bf0bbf
0abf0231955e236db0c04463cf45646f5634cb533a73624b2b2016821670548854ce2b20
4b28e831bf0bbf
0abf023183b5b6d3b089b044436e45786f49341a871a0a733a626b2b200120896b4e6b05
2b1c5f9decbf0bbf
09bf8131bf97bf31d82e09d3b044cd485a786f1201cb1a530a73621c052b852b054e4b1c
0585053a282d58bf0bbf
0bbf9431bf556709b03844cd482c7864125634cb1a5f0a7382734b0501050162011c854b
0aae2d58bf0bbf
0bbf0131934a236dd3b0bc7743485a786f1201341acb535f3a813a1c011c0173023a8453
3b1458bf0bbf
0bbf8431bf0455098309d338778277ef2c852c266f1201348134cb83cb530a3a013a810a
5f815f0a850a1ab37d58bf0bbf
08bf81e9bf93bf31bf18d83209d338c044cd6e0e2c64126f0172837271cb5382530a5383
53ae531a851a01a57e58bf0bbf
0bbf01e5837600230901098138c082c0482c862c7864126f49568156728272341a811a72
0272864912bb841131bf0abf
03bf94e9bfe9bfe9bf1ebf1ebf275923b632099538c044ef81ef7881786481646f816fad
84adea01ea560156882449ad2da3115831bf0abf
04bf02e992654ce61e75bf0d185523b66d0995bcc043cd2c812c7881786483646f64f001
f08b6f496f49642d6382e3314cbf0abf
01bf85e9e5e9652fc784c7693fc7698a69c7d2b200232eb60929bc84bc6343ef2c862c78
45784d78ed82ed6f6489644d45a3afa2114c31bf0abf
01e58175c783c769d5eb8ceb797679dab87908db67c4b66d876d9538b0447743ef84ef6e
2c78458e455a457864788ecfbe9fd4315831bf0abf
88e5750d3f5779da98d083d0689b3501358d5d0236c45567b6320995b04477cd92cdef6e
2c6e5ad95acf782c4517813e31bf2fbf0bbf
887569575bd0689bc5ba83ba8a2a8a878aca2a74db5955b284b23209d3b081b077017701
cd016e02ef876e2c6e4810a4d4bf01bf814cbf0abf
873f79b835c5ba2a9a829aa8410141868de1d104c690d881d85583552e6d958b9538b0c0
77cd03cd6377afcd84cd4321c1d483d4e9654c814cbf0abf
88575b9b742ad1418de181e15081509603968450c8d759d881d8b283b2326d0981099585
9538bcb0381f871f95c3995ca931bf81bfe981e9bf0bbf
8779b8c58ad1c6e750855096d7b119b104b184d7b119d855845523b2b66d016d83952995
2987296de09211d431bf01bf01e90cbf
8979d0c52aa88de15096b181b119041901b18796c80fd74a59b2b602b6016d86326d328f
ac0b318331bf31bf01bf81e9bf0cbf
88575b9b742ad1c68de186e1c850c850c850865096c850e1e70487045e8ca7912e672e85
2e8cac33473101318158bf02bf82e9bfe981e9bf0abf
8b3f799835c5742a8bd1a8dbc683c68dc68d818dc601c68cdbd1ca40a15da66697274711
31863158bf31bf31bf82bf4ce985e9bfe9bfe9bf0abf
8bc76957dab8359bc5a1748a2a052a018a01748b029ba6665b279447ec311ebf83bf581e
bf82bf4cbf02bf82e9bfe981e9bf0abf
881e75693f57795bb8d082d068350135029b0135013088b8985b7608b40d751e811ebf83
bf1e75bf81bf4c814cbf05bf81e9bf0bbf
83e9e52fc782c7693f823f5779817976027681da760276827957b482b4c7750175822fe5
bf82bf4cbf01bf814cbf81bfe981e9bf01bf01e90dbf

%
% Compression made this file 26.36% of the uncompressed size.
%


showpage

% stop using temporary dictionary
end

% restore original state
origstate restore

%%Trailer

%%EndDocument
 @endspecial 248 w(High)g Fb(\031)i Fa(4)p Fg(:)83 b(Se)-7
b(v)h(er)n(al)65 b(threads)i(in)g(m)n(ultiprocessors)4649
3169 y @beginspecial 276 @llx 376 @lly 336 @urx 416 @ury
113 @rwi @setspecial
%%BeginDocument: green-bullet-on-white.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/fred/TeX/STYLES/Prosper/img/green-bullet-on-white.ps
%%Creator: XV Version 3.10a+FLmask  Rev: 12/29/94  -  by John Bradley
%%BoundingBox: 276 376 336 416
%%Pages: 1
%%DocumentFonts:
%%EndComments
%%EndProlog

%%Page: 1 1

% remember original state
/origstate save def

% build a temporary dictionary
20 dict begin

% define space for color conversions
/grays 60 string def  % space for gray scale line
/npixls 0 def
/rgbindx 0 def

% lower left corner
276 376 translate

% size of image (on paper, in 1/72inch coords)
59.97600 40.03200 scale

% define 'colorimage' if it isn't defined
%   ('colortogray' and 'mergeprocs' come from xwd2ps
%     via xgrab)
/colorimage where   % do we know about 'colorimage'?
  { pop }           % yes: pop off the 'dict' returned
  {                 % no:  define one
    /colortogray {  % define an RGB->I function
      /rgbdata exch store    % call input 'rgbdata'
      rgbdata length 3 idiv
      /npixls exch store
      /rgbindx 0 store
      0 1 npixls 1 sub {
        grays exch
        rgbdata rgbindx       get 20 mul    % Red
        rgbdata rgbindx 1 add get 32 mul    % Green
        rgbdata rgbindx 2 add get 12 mul    % Blue
        add add 64 idiv      % I = .5G + .31R + .18B
        put
        /rgbindx rgbindx 3 add store
      } for
      grays 0 npixls getinterval
    } bind def

    % Utility procedure for colorimage operator.
    % This procedure takes two procedures off the
    % stack and merges them into a single procedure.

    /mergeprocs { % def
      dup length
      3 -1 roll
      dup
      length
      dup
      5 1 roll
      3 -1 roll
      add
      array cvx
      dup
      3 -1 roll
      0 exch
      putinterval
      dup
      4 2 roll
      putinterval
    } bind def

    /colorimage { % def
      pop pop     % remove 'false 3' operands
      {colortogray} mergeprocs
      image
    } bind def
  } ifelse          % end of 'false' case



% define the colormap
/cmap 723 string def


% load up the colormap
currentfile cmap readhexstring
041808 049008 8c948c 045204 4c544c 04c804 84e284 449644 c4cbc4 0c380e 
04ac07 cce6cc 345e2c e4e7e4 046604 2c3a2c 347234 e4fee2 048208 64cc60 
34922c 24b224 04e404 044604 647264 242623 049f07 8cae8c 04bc06 24c61c 
f4f8f3 1c541c 04d804 1c621c 1c7220 0c280d 14910f 045e04 047c04 ccdcd0 
14ac18 1c481c 747473 04d105 0c6c0b 24852a 1c381c f4f1f3 acafac f4fef5 
0c310c acc6ac 049708 a4a4a3 3c4a44 148314 144812 9cea94 04b405 149e14 
1cbc1c 044004 e4fef4 dcdddd 748274 5c5959 4cba54 145b11 145413 147412 
c4fec4 e4f1e7 146411 088a0a 243028 09c207 fcf8f3 147c13 14c80e acceac 
3c3939 04f405 044e07 07a608 14d00f 0c1f10 0c900b d4d3d4 ecfee3 1c291d 
0c6e14 bcbfbd d4f6d4 909a94 4c5a50 0cac08 24ba24 547e54 0cbc0a 0c5c16 
0c7c0b fcf1fb acb8ac 1c311c aca7a9 e2e2e2 a4e2a4 0cc80a 6c9a6c 143715 
0c650a 0c840b 07de06 14970c 0c980a 0cb40a 848583 ecf0f0 c3c6c3 0c540d 
0c740c cccccc 74ce6c 30a02c 04ec05 54aa5c 6cb66c 9cfa9c 2c862c 5c926c 
6ca674 b4deac 9cda9c 34aa2c 6c7e6c acfeac 448244 34d22c 7d7d7c 6c6d6c 
445644 4c4d4c 1c7a19 1c3e1c 3c3f3c 2c422c 7c9a84 54c254 dceadc 144014 
343231 bccebc bcbabc 447244 6c6664 9c9d9c 7caa7c 349a38 6c7a74 84b69c 
1c4e18 898a89 ccfadc 1c6c2c b8e2c0 1c8a24 a1aaa1 3c4e3c 5f5e5c d8fed8 
24be24 78d670 688668 148a14 14a618 145624 0c480e 2c292b 142916 1c921c 
d4dad9 243828 143017 b4d2bc b4b7b5 1c961c 8c868c 247e24 144e13 04fa04 
246224 fcfefc 0c4e0c ace2b4 3caa3c 244e24 0c180c 949394 545454 ece9ec 
343634 2cb127 6c736c 0ca00c 0cda08 0c5c0b 0ccf06 146a0c b4b2b4 646464 
b4c2b4 0c3f0c ecfdf9 e4dedc ccfdcc 2c2f2b 142214 146b16 c4c2c2 545b54 
2cb62c 74ba74 346634 b4fcb0 244224 444242 246a24 e4feec 0ce204 f4f9fc 
f4eefc 444744 54b654 fcf9fc 0c9114 dcd6d4 ecfeec 0c7b14 0cc614 0c6314 
0c8414 
pop pop   % lose return values from readhexstring


% rlecmapimage expects to have 'w h bits matrix' on stack
/rlecmapimage {
  /buffer 1 string def
  /rgbval 3 string def
  /block  384 string def

  % proc to read a block from file, and return RGB data
  { currentfile buffer readhexstring pop
    /bcount exch 0 get store
    bcount 128 ge
    {  % it's a non-run block
      0 1 bcount 128 sub
      { currentfile buffer readhexstring pop pop

        % look up value in color map
        /rgbval cmap buffer 0 get 3 mul 3 getinterval store

        % and put it in position i*3 in block
        block exch 3 mul rgbval putinterval
      } for
      block  0  bcount 127 sub 3 mul  getinterval
    }

    { % else it's a run block
      currentfile buffer readhexstring pop pop

      % look up value in colormap
      /rgbval cmap buffer 0 get 3 mul 3 getinterval store

      0 1 bcount { block exch 3 mul rgbval putinterval } for

      block 0 bcount 1 add 3 mul getinterval
    } ifelse
  } % end of proc
  false 3 colorimage
} bind def


60 40 8			% dimensions of data
[60 0 0 -40 0 40]		% mapping matrix
rlecmapimage

10bf8131bf05bf03e98165e902e9046587bf3158ec31bfe9658265e9bf09bf
10bf8131bf04bf81e9bf01bf02e98265bfe982e965e901e981bf318131ec82ecbfe982e9
65bf0abf
12bf82751ebf83bf1ebf318231ec3102318111318131bf81bfe901e981bf318131bf01bf
01e90bbf
0fbf02e901bf023101ec021101a981d6a981a9118111318131bf14bf
0fbf8165e901e988e5bfd4ecd66add07808c80149dc2137f46a911d431bfe981e9bf0fbf

0fbf01e982bfe9318331a49ce28fe2454d37562456dc71567bab87a9d4bf81bfe981e9bf
81bf318131bf0abf
10bf8ac775bf311bde43224d37568656cb535f1a733c893cae8506a91131bfe9bf01bf81
58bf0abf
0fbf911ebf31b761a0442245ed56721a530a3a4e3a813a4e864e73c94246e3bf10bf
07bf81e9bf82bfe9bf92bf1ebf31ec4f0c38e2ef8e4d49561a530a3a6283624b052b8a2b
ce4e60c2dfe331bf4cbf0cbf
0abf81e9bf82bfe9ec8eec83de1f21778e786f01341a0a3a1c851c4b052b20168b162054
aa93df11312fe965bf0abf
0ebf8d3111883d77cdcf78646f0134530a810a1c911c4ece20167c517c16542893a9ec31
e965bf0abf
08bf01e999bfe91ebf316cc07743cd45786f49561a530a3a624b6b2b707c510151877c70
4edcaba9bfe981e9bf0abf
0bbf01e985bf27d34352cf90cf0e4d2656011a530a1c62ee2b20167c5102518816cc1db9
d611bfe9bf0abf
07bf81e9bf01bf90e9bf4c86d3445277d92c786f49721a0a3a853a4b0520167c827c51bd
88bd5116e44b157a11bf0cbf
0dbf8d3f0fc33d4403cfbb0e3756011a0a860a624b2b20167c817c5102510116854b897b
a911bf0bbf
08bf82e9e5bf97bf75dab209bcc021ef254d2649561a533a1c4b052b70167c037c811620
85203a853911bf0bbf
0bbf0131869eb6d3b0bc7748884845646f561acb0a7382734b2b812b1683167c16cc01cc
012b844b2813d4bf0bbf
0abf0231955e236db0c04463cf45646f5634cb533a73624b2b2016821670548854ce2b20
4b28e831bf0bbf
0abf023183b5b6d3b089b044436e45786f49341a871a0a733a626b2b200120896b4e6b05
2b1c5f9decbf0bbf
09bf8131bf97bf31d82e09d3b044cd485a786f1201cb1a530a73621c052b852b054e4b1c
0585053a282d58bf0bbf
0bbf9431bf556709b03844cd482c7864125634cb1a5f0a7382734b0501050162011c854b
0aae2d58bf0bbf
0bbf0131934a236dd3b0bc7743485a786f1201341acb535f3a813a1c011c0173023a8453
3b1458bf0bbf
0bbf8431bf0455098309d338778277ef2c852c266f1201348134cb83cb530a3a013a810a
5f815f0a850a1ab37d58bf0bbf
08bf81e9bf93bf31bf18d83209d338c044cd6e0e2c64126f0172837271cb5382530a5383
53ae531a851a01a57e58bf0bbf
0bbf01e5837600230901098138c082c0482c862c7864126f49568156728272341a811a72
0272864912bb841131bf0abf
03bf94e9bfe9bfe9bf1ebf1ebf275923b632099538c044ef81ef7881786481646f816fad
84adea01ea560156882449ad2da3115831bf0abf
04bf02e992654ce61e75bf0d185523b66d0995bcc043cd2c812c7881786483646f64f001
f08b6f496f49642d6382e3314cbf0abf
01bf85e9e5e9652fc784c7693fc7698a69c7d2b200232eb60929bc84bc6343ef2c862c78
45784d78ed82ed6f6489644d45a3afa2114c31bf0abf
01e58175c783c769d5eb8ceb797679dab87908db67c4b66d876d9538b0447743ef84ef6e
2c78458e455a457864788ecfbe9fd4315831bf0abf
88e5750d3f5779da98d083d0689b3501358d5d0236c45567b6320995b04477cd92cdef6e
2c6e5ad95acf782c4517813e31bf2fbf0bbf
887569575bd0689bc5ba83ba8a2a8a878aca2a74db5955b284b23209d3b081b077017701
cd016e02ef876e2c6e4810a4d4bf01bf814cbf0abf
873f79b835c5ba2a9a829aa8410141868de1d104c690d881d85583552e6d958b9538b0c0
77cd03cd6377afcd84cd4321c1d483d4e9654c814cbf0abf
88575b9b742ad1418de181e15081509603968450c8d759d881d8b283b2326d0981099585
9538bcb0381f871f95c3995ca931bf81bfe981e9bf0bbf
8779b8c58ad1c6e750855096d7b119b104b184d7b119d855845523b2b66d016d83952995
2987296de09211d431bf01bf01e90cbf
8979d0c52aa88de15096b181b119041901b18796c80fd74a59b2b602b6016d86326d328f
ac0b318331bf31bf01bf81e9bf0cbf
88575b9b742ad1c68de186e1c850c850c850865096c850e1e70487045e8ca7912e672e85
2e8cac33473101318158bf02bf82e9bfe981e9bf0abf
8b3f799835c5742a8bd1a8dbc683c68dc68d818dc601c68cdbd1ca40a15da66697274711
31863158bf31bf31bf82bf4ce985e9bfe9bfe9bf0abf
8bc76957dab8359bc5a1748a2a052a018a01748b029ba6665b279447ec311ebf83bf581e
bf82bf4cbf02bf82e9bfe981e9bf0abf
881e75693f57795bb8d082d068350135029b0135013088b8985b7608b40d751e811ebf83
bf1e75bf81bf4c814cbf05bf81e9bf0bbf
83e9e52fc782c7693f823f5779817976027681da760276827957b482b4c7750175822fe5
bf82bf4cbf01bf814cbf81bfe981e9bf01bf01e90dbf

%
% Compression made this file 26.36% of the uncompressed size.
%


showpage

% stop using temporary dictionary
end

% restore original state
origstate restore

%%Trailer

%%EndDocument
 @endspecial 298 w(Con\002gur)n(ation)f(V)-17 b(alue)66
b(Pro\002le)g Fb(\031)j Fa(20\045)56 b Fb(\000)f Fa(40\045)4983
3492 y @beginspecial 276 @llx 376 @lly 336 @urx 416 @ury
85 @rwi @setspecial
%%BeginDocument: green-bullet-on-white.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/fred/TeX/STYLES/Prosper/img/green-bullet-on-white.ps
%%Creator: XV Version 3.10a+FLmask  Rev: 12/29/94  -  by John Bradley
%%BoundingBox: 276 376 336 416
%%Pages: 1
%%DocumentFonts:
%%EndComments
%%EndProlog

%%Page: 1 1

% remember original state
/origstate save def

% build a temporary dictionary
20 dict begin

% define space for color conversions
/grays 60 string def  % space for gray scale line
/npixls 0 def
/rgbindx 0 def

% lower left corner
276 376 translate

% size of image (on paper, in 1/72inch coords)
59.97600 40.03200 scale

% define 'colorimage' if it isn't defined
%   ('colortogray' and 'mergeprocs' come from xwd2ps
%     via xgrab)
/colorimage where   % do we know about 'colorimage'?
  { pop }           % yes: pop off the 'dict' returned
  {                 % no:  define one
    /colortogray {  % define an RGB->I function
      /rgbdata exch store    % call input 'rgbdata'
      rgbdata length 3 idiv
      /npixls exch store
      /rgbindx 0 store
      0 1 npixls 1 sub {
        grays exch
        rgbdata rgbindx       get 20 mul    % Red
        rgbdata rgbindx 1 add get 32 mul    % Green
        rgbdata rgbindx 2 add get 12 mul    % Blue
        add add 64 idiv      % I = .5G + .31R + .18B
        put
        /rgbindx rgbindx 3 add store
      } for
      grays 0 npixls getinterval
    } bind def

    % Utility procedure for colorimage operator.
    % This procedure takes two procedures off the
    % stack and merges them into a single procedure.

    /mergeprocs { % def
      dup length
      3 -1 roll
      dup
      length
      dup
      5 1 roll
      3 -1 roll
      add
      array cvx
      dup
      3 -1 roll
      0 exch
      putinterval
      dup
      4 2 roll
      putinterval
    } bind def

    /colorimage { % def
      pop pop     % remove 'false 3' operands
      {colortogray} mergeprocs
      image
    } bind def
  } ifelse          % end of 'false' case



% define the colormap
/cmap 723 string def


% load up the colormap
currentfile cmap readhexstring
041808 049008 8c948c 045204 4c544c 04c804 84e284 449644 c4cbc4 0c380e 
04ac07 cce6cc 345e2c e4e7e4 046604 2c3a2c 347234 e4fee2 048208 64cc60 
34922c 24b224 04e404 044604 647264 242623 049f07 8cae8c 04bc06 24c61c 
f4f8f3 1c541c 04d804 1c621c 1c7220 0c280d 14910f 045e04 047c04 ccdcd0 
14ac18 1c481c 747473 04d105 0c6c0b 24852a 1c381c f4f1f3 acafac f4fef5 
0c310c acc6ac 049708 a4a4a3 3c4a44 148314 144812 9cea94 04b405 149e14 
1cbc1c 044004 e4fef4 dcdddd 748274 5c5959 4cba54 145b11 145413 147412 
c4fec4 e4f1e7 146411 088a0a 243028 09c207 fcf8f3 147c13 14c80e acceac 
3c3939 04f405 044e07 07a608 14d00f 0c1f10 0c900b d4d3d4 ecfee3 1c291d 
0c6e14 bcbfbd d4f6d4 909a94 4c5a50 0cac08 24ba24 547e54 0cbc0a 0c5c16 
0c7c0b fcf1fb acb8ac 1c311c aca7a9 e2e2e2 a4e2a4 0cc80a 6c9a6c 143715 
0c650a 0c840b 07de06 14970c 0c980a 0cb40a 848583 ecf0f0 c3c6c3 0c540d 
0c740c cccccc 74ce6c 30a02c 04ec05 54aa5c 6cb66c 9cfa9c 2c862c 5c926c 
6ca674 b4deac 9cda9c 34aa2c 6c7e6c acfeac 448244 34d22c 7d7d7c 6c6d6c 
445644 4c4d4c 1c7a19 1c3e1c 3c3f3c 2c422c 7c9a84 54c254 dceadc 144014 
343231 bccebc bcbabc 447244 6c6664 9c9d9c 7caa7c 349a38 6c7a74 84b69c 
1c4e18 898a89 ccfadc 1c6c2c b8e2c0 1c8a24 a1aaa1 3c4e3c 5f5e5c d8fed8 
24be24 78d670 688668 148a14 14a618 145624 0c480e 2c292b 142916 1c921c 
d4dad9 243828 143017 b4d2bc b4b7b5 1c961c 8c868c 247e24 144e13 04fa04 
246224 fcfefc 0c4e0c ace2b4 3caa3c 244e24 0c180c 949394 545454 ece9ec 
343634 2cb127 6c736c 0ca00c 0cda08 0c5c0b 0ccf06 146a0c b4b2b4 646464 
b4c2b4 0c3f0c ecfdf9 e4dedc ccfdcc 2c2f2b 142214 146b16 c4c2c2 545b54 
2cb62c 74ba74 346634 b4fcb0 244224 444242 246a24 e4feec 0ce204 f4f9fc 
f4eefc 444744 54b654 fcf9fc 0c9114 dcd6d4 ecfeec 0c7b14 0cc614 0c6314 
0c8414 
pop pop   % lose return values from readhexstring


% rlecmapimage expects to have 'w h bits matrix' on stack
/rlecmapimage {
  /buffer 1 string def
  /rgbval 3 string def
  /block  384 string def

  % proc to read a block from file, and return RGB data
  { currentfile buffer readhexstring pop
    /bcount exch 0 get store
    bcount 128 ge
    {  % it's a non-run block
      0 1 bcount 128 sub
      { currentfile buffer readhexstring pop pop

        % look up value in color map
        /rgbval cmap buffer 0 get 3 mul 3 getinterval store

        % and put it in position i*3 in block
        block exch 3 mul rgbval putinterval
      } for
      block  0  bcount 127 sub 3 mul  getinterval
    }

    { % else it's a run block
      currentfile buffer readhexstring pop pop

      % look up value in colormap
      /rgbval cmap buffer 0 get 3 mul 3 getinterval store

      0 1 bcount { block exch 3 mul rgbval putinterval } for

      block 0 bcount 1 add 3 mul getinterval
    } ifelse
  } % end of proc
  false 3 colorimage
} bind def


60 40 8			% dimensions of data
[60 0 0 -40 0 40]		% mapping matrix
rlecmapimage

10bf8131bf05bf03e98165e902e9046587bf3158ec31bfe9658265e9bf09bf
10bf8131bf04bf81e9bf01bf02e98265bfe982e965e901e981bf318131ec82ecbfe982e9
65bf0abf
12bf82751ebf83bf1ebf318231ec3102318111318131bf81bfe901e981bf318131bf01bf
01e90bbf
0fbf02e901bf023101ec021101a981d6a981a9118111318131bf14bf
0fbf8165e901e988e5bfd4ecd66add07808c80149dc2137f46a911d431bfe981e9bf0fbf

0fbf01e982bfe9318331a49ce28fe2454d37562456dc71567bab87a9d4bf81bfe981e9bf
81bf318131bf0abf
10bf8ac775bf311bde43224d37568656cb535f1a733c893cae8506a91131bfe9bf01bf81
58bf0abf
0fbf911ebf31b761a0442245ed56721a530a3a4e3a813a4e864e73c94246e3bf10bf
07bf81e9bf82bfe9bf92bf1ebf31ec4f0c38e2ef8e4d49561a530a3a6283624b052b8a2b
ce4e60c2dfe331bf4cbf0cbf
0abf81e9bf82bfe9ec8eec83de1f21778e786f01341a0a3a1c851c4b052b20168b162054
aa93df11312fe965bf0abf
0ebf8d3111883d77cdcf78646f0134530a810a1c911c4ece20167c517c16542893a9ec31
e965bf0abf
08bf01e999bfe91ebf316cc07743cd45786f49561a530a3a624b6b2b707c510151877c70
4edcaba9bfe981e9bf0abf
0bbf01e985bf27d34352cf90cf0e4d2656011a530a1c62ee2b20167c5102518816cc1db9
d611bfe9bf0abf
07bf81e9bf01bf90e9bf4c86d3445277d92c786f49721a0a3a853a4b0520167c827c51bd
88bd5116e44b157a11bf0cbf
0dbf8d3f0fc33d4403cfbb0e3756011a0a860a624b2b20167c817c5102510116854b897b
a911bf0bbf
08bf82e9e5bf97bf75dab209bcc021ef254d2649561a533a1c4b052b70167c037c811620
85203a853911bf0bbf
0bbf0131869eb6d3b0bc7748884845646f561acb0a7382734b2b812b1683167c16cc01cc
012b844b2813d4bf0bbf
0abf0231955e236db0c04463cf45646f5634cb533a73624b2b2016821670548854ce2b20
4b28e831bf0bbf
0abf023183b5b6d3b089b044436e45786f49341a871a0a733a626b2b200120896b4e6b05
2b1c5f9decbf0bbf
09bf8131bf97bf31d82e09d3b044cd485a786f1201cb1a530a73621c052b852b054e4b1c
0585053a282d58bf0bbf
0bbf9431bf556709b03844cd482c7864125634cb1a5f0a7382734b0501050162011c854b
0aae2d58bf0bbf
0bbf0131934a236dd3b0bc7743485a786f1201341acb535f3a813a1c011c0173023a8453
3b1458bf0bbf
0bbf8431bf0455098309d338778277ef2c852c266f1201348134cb83cb530a3a013a810a
5f815f0a850a1ab37d58bf0bbf
08bf81e9bf93bf31bf18d83209d338c044cd6e0e2c64126f0172837271cb5382530a5383
53ae531a851a01a57e58bf0bbf
0bbf01e5837600230901098138c082c0482c862c7864126f49568156728272341a811a72
0272864912bb841131bf0abf
03bf94e9bfe9bfe9bf1ebf1ebf275923b632099538c044ef81ef7881786481646f816fad
84adea01ea560156882449ad2da3115831bf0abf
04bf02e992654ce61e75bf0d185523b66d0995bcc043cd2c812c7881786483646f64f001
f08b6f496f49642d6382e3314cbf0abf
01bf85e9e5e9652fc784c7693fc7698a69c7d2b200232eb60929bc84bc6343ef2c862c78
45784d78ed82ed6f6489644d45a3afa2114c31bf0abf
01e58175c783c769d5eb8ceb797679dab87908db67c4b66d876d9538b0447743ef84ef6e
2c78458e455a457864788ecfbe9fd4315831bf0abf
88e5750d3f5779da98d083d0689b3501358d5d0236c45567b6320995b04477cd92cdef6e
2c6e5ad95acf782c4517813e31bf2fbf0bbf
887569575bd0689bc5ba83ba8a2a8a878aca2a74db5955b284b23209d3b081b077017701
cd016e02ef876e2c6e4810a4d4bf01bf814cbf0abf
873f79b835c5ba2a9a829aa8410141868de1d104c690d881d85583552e6d958b9538b0c0
77cd03cd6377afcd84cd4321c1d483d4e9654c814cbf0abf
88575b9b742ad1418de181e15081509603968450c8d759d881d8b283b2326d0981099585
9538bcb0381f871f95c3995ca931bf81bfe981e9bf0bbf
8779b8c58ad1c6e750855096d7b119b104b184d7b119d855845523b2b66d016d83952995
2987296de09211d431bf01bf01e90cbf
8979d0c52aa88de15096b181b119041901b18796c80fd74a59b2b602b6016d86326d328f
ac0b318331bf31bf01bf81e9bf0cbf
88575b9b742ad1c68de186e1c850c850c850865096c850e1e70487045e8ca7912e672e85
2e8cac33473101318158bf02bf82e9bfe981e9bf0abf
8b3f799835c5742a8bd1a8dbc683c68dc68d818dc601c68cdbd1ca40a15da66697274711
31863158bf31bf31bf82bf4ce985e9bfe9bfe9bf0abf
8bc76957dab8359bc5a1748a2a052a018a01748b029ba6665b279447ec311ebf83bf581e
bf82bf4cbf02bf82e9bfe981e9bf0abf
881e75693f57795bb8d082d068350135029b0135013088b8985b7608b40d751e811ebf83
bf1e75bf81bf4c814cbf05bf81e9bf0bbf
83e9e52fc782c7693f823f5779817976027681da760276827957b482b4c7750175822fe5
bf82bf4cbf01bf814cbf81bfe981e9bf01bf01e90dbf

%
% Compression made this file 26.36% of the uncompressed size.
%


showpage

% stop using temporary dictionary
end

% restore original state
origstate restore

%%Trailer

%%EndDocument
 @endspecial 248 w Fg(Con)-5 b(v)f(er)10 b(t)67 b(v)-6
b(ar)t(iab)h(les)65 b(to)i(constants)4983 3807 y @beginspecial
276 @llx 376 @lly 336 @urx 416 @ury 85 @rwi @setspecial
%%BeginDocument: green-bullet-on-white.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/fred/TeX/STYLES/Prosper/img/green-bullet-on-white.ps
%%Creator: XV Version 3.10a+FLmask  Rev: 12/29/94  -  by John Bradley
%%BoundingBox: 276 376 336 416
%%Pages: 1
%%DocumentFonts:
%%EndComments
%%EndProlog

%%Page: 1 1

% remember original state
/origstate save def

% build a temporary dictionary
20 dict begin

% define space for color conversions
/grays 60 string def  % space for gray scale line
/npixls 0 def
/rgbindx 0 def

% lower left corner
276 376 translate

% size of image (on paper, in 1/72inch coords)
59.97600 40.03200 scale

% define 'colorimage' if it isn't defined
%   ('colortogray' and 'mergeprocs' come from xwd2ps
%     via xgrab)
/colorimage where   % do we know about 'colorimage'?
  { pop }           % yes: pop off the 'dict' returned
  {                 % no:  define one
    /colortogray {  % define an RGB->I function
      /rgbdata exch store    % call input 'rgbdata'
      rgbdata length 3 idiv
      /npixls exch store
      /rgbindx 0 store
      0 1 npixls 1 sub {
        grays exch
        rgbdata rgbindx       get 20 mul    % Red
        rgbdata rgbindx 1 add get 32 mul    % Green
        rgbdata rgbindx 2 add get 12 mul    % Blue
        add add 64 idiv      % I = .5G + .31R + .18B
        put
        /rgbindx rgbindx 3 add store
      } for
      grays 0 npixls getinterval
    } bind def

    % Utility procedure for colorimage operator.
    % This procedure takes two procedures off the
    % stack and merges them into a single procedure.

    /mergeprocs { % def
      dup length
      3 -1 roll
      dup
      length
      dup
      5 1 roll
      3 -1 roll
      add
      array cvx
      dup
      3 -1 roll
      0 exch
      putinterval
      dup
      4 2 roll
      putinterval
    } bind def

    /colorimage { % def
      pop pop     % remove 'false 3' operands
      {colortogray} mergeprocs
      image
    } bind def
  } ifelse          % end of 'false' case



% define the colormap
/cmap 723 string def


% load up the colormap
currentfile cmap readhexstring
041808 049008 8c948c 045204 4c544c 04c804 84e284 449644 c4cbc4 0c380e 
04ac07 cce6cc 345e2c e4e7e4 046604 2c3a2c 347234 e4fee2 048208 64cc60 
34922c 24b224 04e404 044604 647264 242623 049f07 8cae8c 04bc06 24c61c 
f4f8f3 1c541c 04d804 1c621c 1c7220 0c280d 14910f 045e04 047c04 ccdcd0 
14ac18 1c481c 747473 04d105 0c6c0b 24852a 1c381c f4f1f3 acafac f4fef5 
0c310c acc6ac 049708 a4a4a3 3c4a44 148314 144812 9cea94 04b405 149e14 
1cbc1c 044004 e4fef4 dcdddd 748274 5c5959 4cba54 145b11 145413 147412 
c4fec4 e4f1e7 146411 088a0a 243028 09c207 fcf8f3 147c13 14c80e acceac 
3c3939 04f405 044e07 07a608 14d00f 0c1f10 0c900b d4d3d4 ecfee3 1c291d 
0c6e14 bcbfbd d4f6d4 909a94 4c5a50 0cac08 24ba24 547e54 0cbc0a 0c5c16 
0c7c0b fcf1fb acb8ac 1c311c aca7a9 e2e2e2 a4e2a4 0cc80a 6c9a6c 143715 
0c650a 0c840b 07de06 14970c 0c980a 0cb40a 848583 ecf0f0 c3c6c3 0c540d 
0c740c cccccc 74ce6c 30a02c 04ec05 54aa5c 6cb66c 9cfa9c 2c862c 5c926c 
6ca674 b4deac 9cda9c 34aa2c 6c7e6c acfeac 448244 34d22c 7d7d7c 6c6d6c 
445644 4c4d4c 1c7a19 1c3e1c 3c3f3c 2c422c 7c9a84 54c254 dceadc 144014 
343231 bccebc bcbabc 447244 6c6664 9c9d9c 7caa7c 349a38 6c7a74 84b69c 
1c4e18 898a89 ccfadc 1c6c2c b8e2c0 1c8a24 a1aaa1 3c4e3c 5f5e5c d8fed8 
24be24 78d670 688668 148a14 14a618 145624 0c480e 2c292b 142916 1c921c 
d4dad9 243828 143017 b4d2bc b4b7b5 1c961c 8c868c 247e24 144e13 04fa04 
246224 fcfefc 0c4e0c ace2b4 3caa3c 244e24 0c180c 949394 545454 ece9ec 
343634 2cb127 6c736c 0ca00c 0cda08 0c5c0b 0ccf06 146a0c b4b2b4 646464 
b4c2b4 0c3f0c ecfdf9 e4dedc ccfdcc 2c2f2b 142214 146b16 c4c2c2 545b54 
2cb62c 74ba74 346634 b4fcb0 244224 444242 246a24 e4feec 0ce204 f4f9fc 
f4eefc 444744 54b654 fcf9fc 0c9114 dcd6d4 ecfeec 0c7b14 0cc614 0c6314 
0c8414 
pop pop   % lose return values from readhexstring


% rlecmapimage expects to have 'w h bits matrix' on stack
/rlecmapimage {
  /buffer 1 string def
  /rgbval 3 string def
  /block  384 string def

  % proc to read a block from file, and return RGB data
  { currentfile buffer readhexstring pop
    /bcount exch 0 get store
    bcount 128 ge
    {  % it's a non-run block
      0 1 bcount 128 sub
      { currentfile buffer readhexstring pop pop

        % look up value in color map
        /rgbval cmap buffer 0 get 3 mul 3 getinterval store

        % and put it in position i*3 in block
        block exch 3 mul rgbval putinterval
      } for
      block  0  bcount 127 sub 3 mul  getinterval
    }

    { % else it's a run block
      currentfile buffer readhexstring pop pop

      % look up value in colormap
      /rgbval cmap buffer 0 get 3 mul 3 getinterval store

      0 1 bcount { block exch 3 mul rgbval putinterval } for

      block 0 bcount 1 add 3 mul getinterval
    } ifelse
  } % end of proc
  false 3 colorimage
} bind def


60 40 8			% dimensions of data
[60 0 0 -40 0 40]		% mapping matrix
rlecmapimage

10bf8131bf05bf03e98165e902e9046587bf3158ec31bfe9658265e9bf09bf
10bf8131bf04bf81e9bf01bf02e98265bfe982e965e901e981bf318131ec82ecbfe982e9
65bf0abf
12bf82751ebf83bf1ebf318231ec3102318111318131bf81bfe901e981bf318131bf01bf
01e90bbf
0fbf02e901bf023101ec021101a981d6a981a9118111318131bf14bf
0fbf8165e901e988e5bfd4ecd66add07808c80149dc2137f46a911d431bfe981e9bf0fbf

0fbf01e982bfe9318331a49ce28fe2454d37562456dc71567bab87a9d4bf81bfe981e9bf
81bf318131bf0abf
10bf8ac775bf311bde43224d37568656cb535f1a733c893cae8506a91131bfe9bf01bf81
58bf0abf
0fbf911ebf31b761a0442245ed56721a530a3a4e3a813a4e864e73c94246e3bf10bf
07bf81e9bf82bfe9bf92bf1ebf31ec4f0c38e2ef8e4d49561a530a3a6283624b052b8a2b
ce4e60c2dfe331bf4cbf0cbf
0abf81e9bf82bfe9ec8eec83de1f21778e786f01341a0a3a1c851c4b052b20168b162054
aa93df11312fe965bf0abf
0ebf8d3111883d77cdcf78646f0134530a810a1c911c4ece20167c517c16542893a9ec31
e965bf0abf
08bf01e999bfe91ebf316cc07743cd45786f49561a530a3a624b6b2b707c510151877c70
4edcaba9bfe981e9bf0abf
0bbf01e985bf27d34352cf90cf0e4d2656011a530a1c62ee2b20167c5102518816cc1db9
d611bfe9bf0abf
07bf81e9bf01bf90e9bf4c86d3445277d92c786f49721a0a3a853a4b0520167c827c51bd
88bd5116e44b157a11bf0cbf
0dbf8d3f0fc33d4403cfbb0e3756011a0a860a624b2b20167c817c5102510116854b897b
a911bf0bbf
08bf82e9e5bf97bf75dab209bcc021ef254d2649561a533a1c4b052b70167c037c811620
85203a853911bf0bbf
0bbf0131869eb6d3b0bc7748884845646f561acb0a7382734b2b812b1683167c16cc01cc
012b844b2813d4bf0bbf
0abf0231955e236db0c04463cf45646f5634cb533a73624b2b2016821670548854ce2b20
4b28e831bf0bbf
0abf023183b5b6d3b089b044436e45786f49341a871a0a733a626b2b200120896b4e6b05
2b1c5f9decbf0bbf
09bf8131bf97bf31d82e09d3b044cd485a786f1201cb1a530a73621c052b852b054e4b1c
0585053a282d58bf0bbf
0bbf9431bf556709b03844cd482c7864125634cb1a5f0a7382734b0501050162011c854b
0aae2d58bf0bbf
0bbf0131934a236dd3b0bc7743485a786f1201341acb535f3a813a1c011c0173023a8453
3b1458bf0bbf
0bbf8431bf0455098309d338778277ef2c852c266f1201348134cb83cb530a3a013a810a
5f815f0a850a1ab37d58bf0bbf
08bf81e9bf93bf31bf18d83209d338c044cd6e0e2c64126f0172837271cb5382530a5383
53ae531a851a01a57e58bf0bbf
0bbf01e5837600230901098138c082c0482c862c7864126f49568156728272341a811a72
0272864912bb841131bf0abf
03bf94e9bfe9bfe9bf1ebf1ebf275923b632099538c044ef81ef7881786481646f816fad
84adea01ea560156882449ad2da3115831bf0abf
04bf02e992654ce61e75bf0d185523b66d0995bcc043cd2c812c7881786483646f64f001
f08b6f496f49642d6382e3314cbf0abf
01bf85e9e5e9652fc784c7693fc7698a69c7d2b200232eb60929bc84bc6343ef2c862c78
45784d78ed82ed6f6489644d45a3afa2114c31bf0abf
01e58175c783c769d5eb8ceb797679dab87908db67c4b66d876d9538b0447743ef84ef6e
2c78458e455a457864788ecfbe9fd4315831bf0abf
88e5750d3f5779da98d083d0689b3501358d5d0236c45567b6320995b04477cd92cdef6e
2c6e5ad95acf782c4517813e31bf2fbf0bbf
887569575bd0689bc5ba83ba8a2a8a878aca2a74db5955b284b23209d3b081b077017701
cd016e02ef876e2c6e4810a4d4bf01bf814cbf0abf
873f79b835c5ba2a9a829aa8410141868de1d104c690d881d85583552e6d958b9538b0c0
77cd03cd6377afcd84cd4321c1d483d4e9654c814cbf0abf
88575b9b742ad1418de181e15081509603968450c8d759d881d8b283b2326d0981099585
9538bcb0381f871f95c3995ca931bf81bfe981e9bf0bbf
8779b8c58ad1c6e750855096d7b119b104b184d7b119d855845523b2b66d016d83952995
2987296de09211d431bf01bf01e90cbf
8979d0c52aa88de15096b181b119041901b18796c80fd74a59b2b602b6016d86326d328f
ac0b318331bf31bf01bf81e9bf0cbf
88575b9b742ad1c68de186e1c850c850c850865096c850e1e70487045e8ca7912e672e85
2e8cac33473101318158bf02bf82e9bfe981e9bf0abf
8b3f799835c5742a8bd1a8dbc683c68dc68d818dc601c68cdbd1ca40a15da66697274711
31863158bf31bf31bf82bf4ce985e9bfe9bfe9bf0abf
8bc76957dab8359bc5a1748a2a052a018a01748b029ba6665b279447ec311ebf83bf581e
bf82bf4cbf02bf82e9bfe981e9bf0abf
881e75693f57795bb8d082d068350135029b0135013088b8985b7608b40d751e811ebf83
bf1e75bf81bf4c814cbf05bf81e9bf0bbf
83e9e52fc782c7693f823f5779817976027681da760276827957b482b4c7750175822fe5
bf82bf4cbf01bf814cbf81bfe981e9bf01bf01e90dbf

%
% Compression made this file 26.36% of the uncompressed size.
%


showpage

% stop using temporary dictionary
end

% restore original state
origstate restore

%%Trailer

%%EndDocument
 @endspecial 248 w(The)h(compiler)d(simpli\002es)f(the)j(code)4983
4127 y @beginspecial 276 @llx 376 @lly 336 @urx 416 @ury
85 @rwi @setspecial
%%BeginDocument: green-bullet-on-white.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/fred/TeX/STYLES/Prosper/img/green-bullet-on-white.ps
%%Creator: XV Version 3.10a+FLmask  Rev: 12/29/94  -  by John Bradley
%%BoundingBox: 276 376 336 416
%%Pages: 1
%%DocumentFonts:
%%EndComments
%%EndProlog

%%Page: 1 1

% remember original state
/origstate save def

% build a temporary dictionary
20 dict begin

% define space for color conversions
/grays 60 string def  % space for gray scale line
/npixls 0 def
/rgbindx 0 def

% lower left corner
276 376 translate

% size of image (on paper, in 1/72inch coords)
59.97600 40.03200 scale

% define 'colorimage' if it isn't defined
%   ('colortogray' and 'mergeprocs' come from xwd2ps
%     via xgrab)
/colorimage where   % do we know about 'colorimage'?
  { pop }           % yes: pop off the 'dict' returned
  {                 % no:  define one
    /colortogray {  % define an RGB->I function
      /rgbdata exch store    % call input 'rgbdata'
      rgbdata length 3 idiv
      /npixls exch store
      /rgbindx 0 store
      0 1 npixls 1 sub {
        grays exch
        rgbdata rgbindx       get 20 mul    % Red
        rgbdata rgbindx 1 add get 32 mul    % Green
        rgbdata rgbindx 2 add get 12 mul    % Blue
        add add 64 idiv      % I = .5G + .31R + .18B
        put
        /rgbindx rgbindx 3 add store
      } for
      grays 0 npixls getinterval
    } bind def

    % Utility procedure for colorimage operator.
    % This procedure takes two procedures off the
    % stack and merges them into a single procedure.

    /mergeprocs { % def
      dup length
      3 -1 roll
      dup
      length
      dup
      5 1 roll
      3 -1 roll
      add
      array cvx
      dup
      3 -1 roll
      0 exch
      putinterval
      dup
      4 2 roll
      putinterval
    } bind def

    /colorimage { % def
      pop pop     % remove 'false 3' operands
      {colortogray} mergeprocs
      image
    } bind def
  } ifelse          % end of 'false' case



% define the colormap
/cmap 723 string def


% load up the colormap
currentfile cmap readhexstring
041808 049008 8c948c 045204 4c544c 04c804 84e284 449644 c4cbc4 0c380e 
04ac07 cce6cc 345e2c e4e7e4 046604 2c3a2c 347234 e4fee2 048208 64cc60 
34922c 24b224 04e404 044604 647264 242623 049f07 8cae8c 04bc06 24c61c 
f4f8f3 1c541c 04d804 1c621c 1c7220 0c280d 14910f 045e04 047c04 ccdcd0 
14ac18 1c481c 747473 04d105 0c6c0b 24852a 1c381c f4f1f3 acafac f4fef5 
0c310c acc6ac 049708 a4a4a3 3c4a44 148314 144812 9cea94 04b405 149e14 
1cbc1c 044004 e4fef4 dcdddd 748274 5c5959 4cba54 145b11 145413 147412 
c4fec4 e4f1e7 146411 088a0a 243028 09c207 fcf8f3 147c13 14c80e acceac 
3c3939 04f405 044e07 07a608 14d00f 0c1f10 0c900b d4d3d4 ecfee3 1c291d 
0c6e14 bcbfbd d4f6d4 909a94 4c5a50 0cac08 24ba24 547e54 0cbc0a 0c5c16 
0c7c0b fcf1fb acb8ac 1c311c aca7a9 e2e2e2 a4e2a4 0cc80a 6c9a6c 143715 
0c650a 0c840b 07de06 14970c 0c980a 0cb40a 848583 ecf0f0 c3c6c3 0c540d 
0c740c cccccc 74ce6c 30a02c 04ec05 54aa5c 6cb66c 9cfa9c 2c862c 5c926c 
6ca674 b4deac 9cda9c 34aa2c 6c7e6c acfeac 448244 34d22c 7d7d7c 6c6d6c 
445644 4c4d4c 1c7a19 1c3e1c 3c3f3c 2c422c 7c9a84 54c254 dceadc 144014 
343231 bccebc bcbabc 447244 6c6664 9c9d9c 7caa7c 349a38 6c7a74 84b69c 
1c4e18 898a89 ccfadc 1c6c2c b8e2c0 1c8a24 a1aaa1 3c4e3c 5f5e5c d8fed8 
24be24 78d670 688668 148a14 14a618 145624 0c480e 2c292b 142916 1c921c 
d4dad9 243828 143017 b4d2bc b4b7b5 1c961c 8c868c 247e24 144e13 04fa04 
246224 fcfefc 0c4e0c ace2b4 3caa3c 244e24 0c180c 949394 545454 ece9ec 
343634 2cb127 6c736c 0ca00c 0cda08 0c5c0b 0ccf06 146a0c b4b2b4 646464 
b4c2b4 0c3f0c ecfdf9 e4dedc ccfdcc 2c2f2b 142214 146b16 c4c2c2 545b54 
2cb62c 74ba74 346634 b4fcb0 244224 444242 246a24 e4feec 0ce204 f4f9fc 
f4eefc 444744 54b654 fcf9fc 0c9114 dcd6d4 ecfeec 0c7b14 0cc614 0c6314 
0c8414 
pop pop   % lose return values from readhexstring


% rlecmapimage expects to have 'w h bits matrix' on stack
/rlecmapimage {
  /buffer 1 string def
  /rgbval 3 string def
  /block  384 string def

  % proc to read a block from file, and return RGB data
  { currentfile buffer readhexstring pop
    /bcount exch 0 get store
    bcount 128 ge
    {  % it's a non-run block
      0 1 bcount 128 sub
      { currentfile buffer readhexstring pop pop

        % look up value in color map
        /rgbval cmap buffer 0 get 3 mul 3 getinterval store

        % and put it in position i*3 in block
        block exch 3 mul rgbval putinterval
      } for
      block  0  bcount 127 sub 3 mul  getinterval
    }

    { % else it's a run block
      currentfile buffer readhexstring pop pop

      % look up value in colormap
      /rgbval cmap buffer 0 get 3 mul 3 getinterval store

      0 1 bcount { block exch 3 mul rgbval putinterval } for

      block 0 bcount 1 add 3 mul getinterval
    } ifelse
  } % end of proc
  false 3 colorimage
} bind def


60 40 8			% dimensions of data
[60 0 0 -40 0 40]		% mapping matrix
rlecmapimage

10bf8131bf05bf03e98165e902e9046587bf3158ec31bfe9658265e9bf09bf
10bf8131bf04bf81e9bf01bf02e98265bfe982e965e901e981bf318131ec82ecbfe982e9
65bf0abf
12bf82751ebf83bf1ebf318231ec3102318111318131bf81bfe901e981bf318131bf01bf
01e90bbf
0fbf02e901bf023101ec021101a981d6a981a9118111318131bf14bf
0fbf8165e901e988e5bfd4ecd66add07808c80149dc2137f46a911d431bfe981e9bf0fbf

0fbf01e982bfe9318331a49ce28fe2454d37562456dc71567bab87a9d4bf81bfe981e9bf
81bf318131bf0abf
10bf8ac775bf311bde43224d37568656cb535f1a733c893cae8506a91131bfe9bf01bf81
58bf0abf
0fbf911ebf31b761a0442245ed56721a530a3a4e3a813a4e864e73c94246e3bf10bf
07bf81e9bf82bfe9bf92bf1ebf31ec4f0c38e2ef8e4d49561a530a3a6283624b052b8a2b
ce4e60c2dfe331bf4cbf0cbf
0abf81e9bf82bfe9ec8eec83de1f21778e786f01341a0a3a1c851c4b052b20168b162054
aa93df11312fe965bf0abf
0ebf8d3111883d77cdcf78646f0134530a810a1c911c4ece20167c517c16542893a9ec31
e965bf0abf
08bf01e999bfe91ebf316cc07743cd45786f49561a530a3a624b6b2b707c510151877c70
4edcaba9bfe981e9bf0abf
0bbf01e985bf27d34352cf90cf0e4d2656011a530a1c62ee2b20167c5102518816cc1db9
d611bfe9bf0abf
07bf81e9bf01bf90e9bf4c86d3445277d92c786f49721a0a3a853a4b0520167c827c51bd
88bd5116e44b157a11bf0cbf
0dbf8d3f0fc33d4403cfbb0e3756011a0a860a624b2b20167c817c5102510116854b897b
a911bf0bbf
08bf82e9e5bf97bf75dab209bcc021ef254d2649561a533a1c4b052b70167c037c811620
85203a853911bf0bbf
0bbf0131869eb6d3b0bc7748884845646f561acb0a7382734b2b812b1683167c16cc01cc
012b844b2813d4bf0bbf
0abf0231955e236db0c04463cf45646f5634cb533a73624b2b2016821670548854ce2b20
4b28e831bf0bbf
0abf023183b5b6d3b089b044436e45786f49341a871a0a733a626b2b200120896b4e6b05
2b1c5f9decbf0bbf
09bf8131bf97bf31d82e09d3b044cd485a786f1201cb1a530a73621c052b852b054e4b1c
0585053a282d58bf0bbf
0bbf9431bf556709b03844cd482c7864125634cb1a5f0a7382734b0501050162011c854b
0aae2d58bf0bbf
0bbf0131934a236dd3b0bc7743485a786f1201341acb535f3a813a1c011c0173023a8453
3b1458bf0bbf
0bbf8431bf0455098309d338778277ef2c852c266f1201348134cb83cb530a3a013a810a
5f815f0a850a1ab37d58bf0bbf
08bf81e9bf93bf31bf18d83209d338c044cd6e0e2c64126f0172837271cb5382530a5383
53ae531a851a01a57e58bf0bbf
0bbf01e5837600230901098138c082c0482c862c7864126f49568156728272341a811a72
0272864912bb841131bf0abf
03bf94e9bfe9bfe9bf1ebf1ebf275923b632099538c044ef81ef7881786481646f816fad
84adea01ea560156882449ad2da3115831bf0abf
04bf02e992654ce61e75bf0d185523b66d0995bcc043cd2c812c7881786483646f64f001
f08b6f496f49642d6382e3314cbf0abf
01bf85e9e5e9652fc784c7693fc7698a69c7d2b200232eb60929bc84bc6343ef2c862c78
45784d78ed82ed6f6489644d45a3afa2114c31bf0abf
01e58175c783c769d5eb8ceb797679dab87908db67c4b66d876d9538b0447743ef84ef6e
2c78458e455a457864788ecfbe9fd4315831bf0abf
88e5750d3f5779da98d083d0689b3501358d5d0236c45567b6320995b04477cd92cdef6e
2c6e5ad95acf782c4517813e31bf2fbf0bbf
887569575bd0689bc5ba83ba8a2a8a878aca2a74db5955b284b23209d3b081b077017701
cd016e02ef876e2c6e4810a4d4bf01bf814cbf0abf
873f79b835c5ba2a9a829aa8410141868de1d104c690d881d85583552e6d958b9538b0c0
77cd03cd6377afcd84cd4321c1d483d4e9654c814cbf0abf
88575b9b742ad1418de181e15081509603968450c8d759d881d8b283b2326d0981099585
9538bcb0381f871f95c3995ca931bf81bfe981e9bf0bbf
8779b8c58ad1c6e750855096d7b119b104b184d7b119d855845523b2b66d016d83952995
2987296de09211d431bf01bf01e90cbf
8979d0c52aa88de15096b181b119041901b18796c80fd74a59b2b602b6016d86326d328f
ac0b318331bf31bf01bf81e9bf0cbf
88575b9b742ad1c68de186e1c850c850c850865096c850e1e70487045e8ca7912e672e85
2e8cac33473101318158bf02bf82e9bfe981e9bf0abf
8b3f799835c5742a8bd1a8dbc683c68dc68d818dc601c68cdbd1ca40a15da66697274711
31863158bf31bf31bf82bf4ce985e9bfe9bfe9bf0abf
8bc76957dab8359bc5a1748a2a052a018a01748b029ba6665b279447ec311ebf83bf581e
bf82bf4cbf02bf82e9bfe981e9bf0abf
881e75693f57795bb8d082d068350135029b0135013088b8985b7608b40d751e811ebf83
bf1e75bf81bf4c814cbf05bf81e9bf0bbf
83e9e52fc782c7693f823f5779817976027681da760276827957b482b4c7750175822fe5
bf82bf4cbf01bf814cbf81bfe981e9bf01bf01e90dbf

%
% Compression made this file 26.36% of the uncompressed size.
%


showpage

% stop using temporary dictionary
end

% restore original state
origstate restore

%%Trailer

%%EndDocument
 @endspecial 248 w(Run-time)g(v)-6 b(er)t(i\002cation)4581
4357 y
 0. 0. 1. setrgbcolor
 4581 4357 a 5725 4618 a Fg(Close)66 b(to)h(3MIPS)f(in)h(our)g
(dual)g(athlon)9316 4618 y
 0 setgray
 9316 4618 a 10245 5222 a
 0 setgray
 10245
5222 a 4500 6000 a
 tx@Dict begin -90 Rot  end
 4500 6000 a eop
%%Page: 22 22
22 21 bop 4500 6000 a
 tx@Dict begin 90 Rot  end
 4500 6000 a 5981 1792 a @beginspecial
-168 @llx 371 @lly 782 @urx 421 @ury 2834 @rwi 283 @rhi
@setspecial
%%BeginDocument: barre-rico.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /ufs/goualard/TEMP/barre_hor.ps
%%Creator: XV Version 3.10a  Rev: 12/29/94 (PNG patch 1.2)  -  by John Bradley
%%BoundingBox: -168 371 782 421
%%Pages: 1
%%DocumentFonts:
%%EndComments
%%EndProlog

%%Page: 1 1

% remember original state
/origstate save def

% build a temporary dictionary
20 dict begin

% define space for color conversions
/grays 950 string def  % space for gray scale line
/npixls 0 def
/rgbindx 0 def

% lower left corner
-168 371 translate

% size of image (on paper, in 1/72inch coords)
949.96800 49.96800 scale

% define 'colorimage' if it isn't defined
%   ('colortogray' and 'mergeprocs' come from xwd2ps
%     via xgrab)
/colorimage where   % do we know about 'colorimage'?
  { pop }           % yes: pop off the 'dict' returned
  {                 % no:  define one
    /colortogray {  % define an RGB->I function
      /rgbdata exch store    % call input 'rgbdata'
      rgbdata length 3 idiv
      /npixls exch store
      /rgbindx 0 store
      0 1 npixls 1 sub {
        grays exch
        rgbdata rgbindx       get 20 mul    % Red
        rgbdata rgbindx 1 add get 32 mul    % Green
        rgbdata rgbindx 2 add get 12 mul    % Blue
        add add 64 idiv      % I = .5G + .31R + .18B
        put
        /rgbindx rgbindx 3 add store
      } for
      grays 0 npixls getinterval
    } bind def

    % Utility procedure for colorimage operator.
    % This procedure takes two procedures off the
    % stack and merges them into a single procedure.

    /mergeprocs { % def
      dup length
      3 -1 roll
      dup
      length
      dup
      5 1 roll
      3 -1 roll
      add
      array cvx
      dup
      3 -1 roll
      0 exch
      putinterval
      dup
      4 2 roll
      putinterval
    } bind def

    /colorimage { % def
      pop pop     % remove 'false 3' operands
      {colortogray} mergeprocs
      image
    } bind def
  } ifelse          % end of 'false' case



% define the colormap
/cmap 117 string def


% load up the colormap
currentfile cmap readhexstring
bcfe04 dcfe84 ccfe44 ecfec4 c4fe24 d4fe64 f4fee4 e4fea4 bcfe14 ccfe54 
f4fed4 c4fe34 d4fe74 fcfef4 ecfeb4 e4fe94 f4fecc fcfee4 ecfeac c4fe1c 
d4fe54 ccfe3c dcfe74 bcfe0c dcfe8c ccfe4c ecfecc c4fe2c d4fe6c e4feac 
bcfe1c f4fedc c4fe3c fcfefc ecfebc e4fe9c fcfeec d4fe5c dcfe7c 
pop pop   % lose return values from readhexstring


% rlecmapimage expects to have 'w h bits matrix' on stack
/rlecmapimage {
  /buffer 1 string def
  /rgbval 3 string def
  /block  384 string def

  % proc to read a block from file, and return RGB data
  { currentfile buffer readhexstring pop
    /bcount exch 0 get store
    bcount 128 ge
    {  % it's a non-run block
      0 1 bcount 128 sub
      { currentfile buffer readhexstring pop pop

        % look up value in color map
        /rgbval cmap buffer 0 get 3 mul 3 getinterval store

        % and put it in position i*3 in block
        block exch 3 mul rgbval putinterval
      } for
      block  0  bcount 127 sub 3 mul  getinterval
    }

    { % else it's a run block
      currentfile buffer readhexstring pop pop

      % look up value in colormap
      /rgbval cmap buffer 0 get 3 mul 3 getinterval store

      0 1 bcount { block exch 3 mul rgbval putinterval } for

      block 0 bcount 1 add 3 mul getinterval
    } ifelse
  } % end of proc
  false 3 colorimage
} bind def


950 50 8			% dimensions of data
[950 0 0 -50 0 50]		% mapping matrix
rlecmapimage

7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f210221870d1f220e220311212a21
7f217f217f217f217f217f2175218211030e820e220e820e220e860e220e23050b048404
090e24212a21
7f217f217f217f217f217f2171218e110312260b041e131e131e131e131e871e17001702
1d24212c21
7f217f217f217f217f217f216921830d1f220e870e221226200408000b00841702070d21
0521842403100d212321
7f217f217f217f217f217f2121218524220f231f213a218f0d0a220e220e23051b041e13
1e0817000c008408190706210421851103221f0d212521
7f217f217f217f217f217f211e2189240e1c1b17000825242136218a0d1026021b041e13
081700110085172001030d210421840316030d212821
7f217f217f217f217f21342186111a120f070a215721860d1110220e220e860e12182504
17000300821b1f212521851f0e2326230e080e841d010908001100820820090209840c1d
1a06210521841026230d212a21
7f217f217f217f21792186241f10220e220e820e220e820e220e820e220e820e220e820e
220e830e070f01010182070a2117218b0610231c1508001708090a2151218e0d1f101d01
14201b1e131e131e08000700820c0d211021840d100311210921881103220e07050b0800
8400171e081e821e081e851e081e0817001000851e2009181a210b21850d22261d24212c
21
7f217f217f217f21472184241f10220e820e220e820e220e820e220e820e220e820e220e
820e220e810e2283221f0d210e219a241f10070f1c09151e041e131e131e131e131e131e
131e131e131e821e080002008b17081410210d1110220e220e820e220e820e220e010e81
2301880126012616191b08000500820422212f2182240d211921890d0a0e072625150417
00100082201a210921890d1110220e23011620048304051f210421891103231c15131e08
1700190082171e090309820c1a210e21841f0e0a0d212e21
7f217f217f217f213f2190241f100e070f011c1920041e131e081e0882081e0882081e08
82081e0882081e0803088304250a2107218b241f030e12181619151e08001d00811e268c
2614201b041e131e131e131e088108178117000f0082091f211521840d0610220e0f0e88
120f012625020c11211321890d0a22121809040817001300831e050a2105218a0d1f101d
0114201b1e170004008408260e220e860e230c020417001800821e2009020982181a2114
21810d213321
7f211221842422121f217f217f217f211221850d0a220e220e820e220e820e220e820e22
0e010e881d0f1605090b041e178117001a008f1e22210d1110221d0f0116190b041e1781
1700220001171f00820b2221102189111022120f0125151b1e011e81081e821e081e821e
081e821e081e821e081e821e1700030082171c0e110e861d01251b1e170015008220181d
021d81220e020e86070119150417000b0086081e131e08170019008308091d210c21830d
1f24214121
7f210721830d0a220e040e83230504088308052421492185240a22230f01130182070a21
7f2106218c240a03220e220e220e220e1d0f840f01231f217f210a2199240a221d0f0116
191b1e131e131e131e131e131e131e131e17002300810b16871609200413081700490087
171e051d1f10220e0a0e8712232625201b1e178117001b000108011e81081e821e081e82
1e081e821e081e821e081e831e0817000c0085171e201e08000300831720090c840c090b
1b1e871e081e081e0817001f0083081e201e821e20090809820c03210b21860d0a222307
0d210521010d3a21
7f21042188112218141b13081e088108178117000300821b1f2140218b241f100e070f1c
25021b1317811700140083081410217f218c241f10070f05021b04131e131e011e810817
811700010093170207220e220e220e220e220e220e22120f18018301231f216e218c0d0a
22120f0116191b130817004c000117811e208120090509822008002c008308200c188518
0c09021b1e821e081e821e081e821e081e811e08810817811700400081171e871e09181a
061c08000300851e200b1e1700250083171e200983091806211721820d110a010a841d26
1918214421
6c219a1103220e220e220e220e220e220e220e220e220e22120f050b08000d0093091d22
0e220e220e220e220e220e220e2203112127218c241f100e070f0105021b1e08001e0082
0422216a2189241f10220e230f1826018201260182012601890126160509150408170011
0085131e131e131e821e131e831e131e0882081700020083082524215e2183240a220e82
0e220e8b0e22120f011605190b1308178117004d008817081e2009181d06210821810900
22000408071e0117510085080b09181a21022182060900040082081700120082171e000f
00011e83091806210d21821a031d8e1d221d221d0e22030a110d240d240d810d21012182
2406214521
68219711030f252004131e131e131e131e131e131e131e131e131e821e08001100011e83
131e131e821e131e821e131e821e131e811e1383131c1f211e218d0d1110221d0f260519
0b041e17002500821b0c0103018426161c05250b258405160f1d0e210e82070f26012681
0126822601268426010f1f2117218a241f100e070f1609150408820817003900821b1f21
56218a0a0f0c2514190215041e0801088217081701173400011781001781170016000117
011e85200c181d06210e218105000d0083171e08000c00011781081e041e020802171e00
82081e208120090d0982201e001b00850820090c1a210721821817000b008b081e200920
1920192009200986090c1d1a060900030083171e20090209010c83181a0621082187060a
0e1d071d0e1d821d0f1802180107841d220a24215221
1d21830d1f220e820e220e820e220e820e220e860e220e221024212321840d10230f010a
01852616091b08003b00820812210421830d1f102281220e820e220e820e220e820e220e
820e220e820e220e890e1d0f011609201b1317811700470081081e821e081e821e081e82
1e081e821e081e821e081e821e081e821e081e821e081e821e081e821e081e841e081e08
000a0083170b260182012601820126018201260182012601820126018a01260126160525
19151b088108004200820c0d21032196240a03220e220e220e220e220e220e220e220e22
0e1d0f810f01150182231f210921840d0610220e0e0e8418140417002100821720090409
822017002c008317081e208520090c1d1a211621821a201e811e20832009200982092009
86092009181a0c003400011e8520090c181a211221831a0c200982092009820920091109
830c1a06210a2182062000080087082009181a0621060206812106810621052183061d0c
0984090c181d1a011a02060e21820d062482240d216021
1c21970d0702041e131e131e131e131e131e131e0420050f100d211f21840d231b17004d
00a008182212230f011609151b131e131e131e131e131e131e131e131e131e130817001b
0083170017007f0041008c201a241f10070f1c021b04131e821e131e821e131e821e131e
821e131e011e810817811700160001178205112101218a111022120f181614151b1e821e
081e821e081e821e081e821e081e821e0817811700250082090621032182060900260088
17081e20090c1d1a212e2183062017001f008317081e208120090a09830c181a21442183
240917008300081e2001208409181a0621142183061a1d1a841a062106217721
1b21830d071b000f008517080b05230e8f0e220e220e220e220e220e220e220e22842210
110d210821830d231e004f00841e041e08178117007f0065008117000e000108011e8720
0c16090b1e08003000880401181614201b1e178117003a00822006210421820620001f00
81171e861e20090c1d1a213521820609001700011788081e20090c181a0621492184060a
101a1086101a10110d210d880d061a180c09181a0601067f211b21
1b21820a1900140081081e821e131e821e131e821e131e821e131e8d1e131e13040b1925
1812221f0d210321820a20007f007f0033000108160081081e031e820817003600811700
40008308091a2106218203091e031e8120091609830c1d1a213d21821f01091409840c18
1a06214e21010d0124010685240624060d210321850a26012206217f211f21
1b21831020170029008c1708040b021925051626051e007f002f000d1782081e20812009
1e0982201e00370081171e811e208120090c0982181d0683061808007900011781081e07
1e8120090e09820c1d217f216721820611217f212221
1b21830d0e0c090c0982201e004d00820817002a000217011e8120090c09811e00380082
17081e851e090c181a068306210621822106218221062182210621822106212521821a0c
09010982201e002700011781081e811e2085200c181d06211321821a200022000117011e
82091e0035008317081e20812009090982201e0002008608091a062106217f215521810d
217f215321
2d21851a0c201e17004300850820090c1a068206200022008317081e208620090c181d1a
210f21821d08002e000117021e0120840c181a06214221821d0c09250983181d06211c21
821a20001c008817081e2009181d062101218109002d0081171e871e20090c181a06210e
21851d09200c1a217f215a2182110d215321810d217d21
30218306180c090f0983201e08002500811e09820920090109830c1a062104218203201e
081e01201309810c1d821d1a21182182062000260081171e011e8620090c181a06217f21
1521830d1d0c091909840c181d06210721821a191e091e83200920098209200982092009
8209200982092009820920098209200982092009820920098209200985090c181a06217f
217621810d215121860d1026142510217c21
462185061d0c2017002000820906214e21820618098209200981092082201e178217081e
011e01201309840c181a06217f217f217f217f214421810d2401248306240d217d21
4a21841d201e0800150081081e041e820906217f217f217f217f217f217f214521
4e2185061a18201e000b0085171e091d06217f217f217f217f217f217f214e21
5221821a0c090909830c1d06217f217f217f217f217f217f215121
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521

%
% Compression made this file 2.88% of the uncompressed size.
%


showpage

% stop using temporary dictionary
end

% restore original state
origstate restore

%%Trailer

%%EndDocument
 @endspecial 5001 5222 a @beginspecial @setspecial
 tx@Dict begin STP newpath 1.0 SLW 0.5451 0.39608 0.03137 setrgbcolor
 /ArrowA { moveto } def /ArrowB { } def [ 341.43292 -28.45274 -22.76227
-28.45274  /Lineto /lineto load def false Line  gsave 1.0 SLW 0.5451
0.39608 0.03137 setrgbcolor 0 setlinecap stroke  grestore end
 
@endspecial
621 x Fi(SESC)20 b(\(IA)n(COMA)e(g)o(roup\))2960 b(Joe)20
b(Renau,)h(Basilio)e(F)m(r)o(aguela,)h(and)g(Liu)g(W)n(ei)39
b(\226)20 b(page)40 b(22/23)4266 1057 y
 gsave currentpoint currentpoint translate 270 neg rotate neg exch
neg exch translate
 4266 1057 a @beginspecial
276 @llx 366 @lly 336 @urx 426 @ury 141 @rwi 141 @rhi
@setspecial
%%BeginDocument: angleHG.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/rico/texte/texstyle/Prosper-beta/img/angleHG.ps
%%Creator: XV Version 3.10a  Rev: 12/29/94 (PNG patch 1.2)  -  by John Bradley
%%BoundingBox: 276 366 336 426
%%Pages: 1
%%DocumentFonts:
%%EndComments
%%EndProlog

%%Page: 1 1

% remember original state
/origstate save def

% build a temporary dictionary
20 dict begin

% define string to hold a scanline's worth of data
/pix 180 string def

% define space for color conversions
/grays 60 string def  % space for gray scale line
/npixls 0 def
/rgbindx 0 def

% print in landscape mode
90 rotate 0 -612 translate

% lower left corner
366 276 translate

% size of image (on paper, in 1/72inch coords)
59.97600 59.97600 scale

% define 'colorimage' if it isn't defined
%   ('colortogray' and 'mergeprocs' come from xwd2ps
%     via xgrab)
/colorimage where   % do we know about 'colorimage'?
  { pop }           % yes: pop off the 'dict' returned
  {                 % no:  define one
    /colortogray {  % define an RGB->I function
      /rgbdata exch store    % call input 'rgbdata'
      rgbdata length 3 idiv
      /npixls exch store
      /rgbindx 0 store
      0 1 npixls 1 sub {
        grays exch
        rgbdata rgbindx       get 20 mul    % Red
        rgbdata rgbindx 1 add get 32 mul    % Green
        rgbdata rgbindx 2 add get 12 mul    % Blue
        add add 64 idiv      % I = .5G + .31R + .18B
        put
        /rgbindx rgbindx 3 add store
      } for
      grays 0 npixls getinterval
    } bind def

    % Utility procedure for colorimage operator.
    % This procedure takes two procedures off the
    % stack and merges them into a single procedure.

    /mergeprocs { % def
      dup length
      3 -1 roll
      dup
      length
      dup
      5 1 roll
      3 -1 roll
      add
      array cvx
      dup
      3 -1 roll
      0 exch
      putinterval
      dup
      4 2 roll
      putinterval
    } bind def

    /colorimage { % def
      pop pop     % remove 'false 3' operands
      {colortogray} mergeprocs
      image
    } bind def
  } ifelse          % end of 'false' case



60 60 8			% dimensions of data
[60 0 0 -60 0 60]		% mapping matrix
{currentfile pix readhexstring pop}
false 3 colorimage

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffafee3effeaaffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffafee3e3fe64ffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffe3fe64fafee3ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffe9fe88f1feb3ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffe8fe86dffe55fefefeffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffebfe96dafe37fefefeffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffedfe9edefe48f7fed5ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffedfe9ee2fe60eefea5f5fecaecfe95ecfe97ecfe98
ecfe99ecfe9bf6feceffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffeffeaadffe4fe0fe55dcfe3f
dbfe3cdbfe3ddbfe3dddfe48defe4cdcfe43d9fe32d6fe20e2fe5fe3fe67defe4ddefe4d
defe4edefe4edbfe3bdbfe3cdcfe3ddcfe3fdcfe40dcfe42ddfe43ddfe45ddfe46ddfe48
ddfe46e2fe63e5fe72e5fe74e6fe76e6fe77e6fe79e7fe7ae9fe86e8fe85ebfe94ecfe97
ecfe99ecfe9cedfe9eeffeacf2febcf3febef3fec1f4fec4f9fedfffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffeffeaaf1feb3f5fec7e9fe87
e7fe7be7fe7be7fe7be2fe60e1fe5bd6fe1dd8fe2adafe33e1fe5bdffe54defe4edffe50
dffe51dffe53e0fe54ddfe49ddfe4bdefe4cdefe4edefe50dffe52dffe54e5fe73eafe93
e9fe89e6fe7ae4fe6ce4fe6ee8fe84e8fe85e9fe87e9fe8ae8fe84e7fe7ce8fe81e9fe8a
f0feb0f8fedbf9fedff1feb8f1febaeafe8bfbfeeafbfeebfdfef5ffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff5fecddffe52e1fe5df5fec9f5fec9f5fecaf5feca
f5fecbf5feccf5feccf5fecdf6fecef6fecef6fecef6fecff6fed0f6fed1eefea5e9fe8a
f6fed1f7fed7f7fed8f7fed9f6fecdfafee8fcfef1fcfef2fdfef7fcfef3fdfef7fefefc
fefefcfefefdf9fee0f6fecff5feccf4fec2ffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff5fecde3fe64e5fe74ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffdfef5fefefdfefefdfefefcfefefcfffffffefef9
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff5fecde5fe74dffe53ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff6fecee6fe79e5fe6ff8fed8ffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff6fecee6fe7aebfe95effeaaffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff6fecee6fe7aedfe9eeefea2ffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff6fecee6fe7bedfe9eeefea3ffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff6fecfe6fe78ecfe9eeefea5ffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffefefe
fefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff6fed0e2fe63e0fe59dffe55ffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffefefe
fefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffedfe9fe2fe5fd8fe2ad8fe2dffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffecfe9adffe53d6fe1cdefe4cf6fecfffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffedfe9cd8fe2cd6fe20defe4bf6fed0ffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffefefdffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffedfe9dd8fe27d7fe22defe4ef6fed0ffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffedfe9dd7fe26d6fe20e0fe5bf6fed2ffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff3febdd7fe22d7fe22e1fe5ef7fed3ffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff4fec6d6fe20d7fe21e0fe57f7fed4ffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff4fec6d6fe20d6fe1fe0fe59f7fed5ffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff4fec6d6fe1ed6fe1ee5fe73f7fed6ffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff4fec6d6fe1dd9fe32e0fe56ffffffffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff5fecce0fe55defe48e8fe81ffffffffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffbfeede7fe7fe0fe56e9fe85ffffffffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff7fed8e8fe84e7fe7ef1feb4ffffffffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff2feb8edfea0effea6f1feb6ffffffffffffffffff
fffffffefefefefefeffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffefefceffeabf0feafeffea7f2feb7ffffffffffffffffff
fffffffefefefefefefefefeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffefefcf5fecaecfe9de7fe7af8feddffffffffffffffffff
fffffffefefefefefefefefefefefeffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffefefcf5fecce8fe85e8fe80ffffffffffffffffffffffff
fffffffefefefefefefefefeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffff8fedefdfef8fdfefbf3fec0e9fe89ecfe96ffffffffffffffffffffffff
fefefefefefefefefefefefeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffdfef6fefefafefefaf4fec2e9fe89ecfe96ffffffffffffffffffffffff
fefefefefefefefefefefefeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffdfef6fefefefefefdf4fec2e8fe85edfe9dffffffffffffffffffffffff
fefefefefefefefefefefefeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffefef9fefefdfefefce7fe7be5fe76f2feb7ffffffffffffffffffffffff
fffffffffffffefefefefefeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffdfef6fdfefafefefbe2fe65e5fe75f6fed0ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffdfef9fefefce6fe79e6fe77fafee6ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffcfef6fefefbecfe9be7fe7efbfeecffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffdfef5fdfef7f7fed5e9fe8dfcfef2ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffcfeeffbfeebedfea1fdfef7ffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffefefeffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffefefdfbfee9effeabffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffefefefefefeffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffbfeeceffea6ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff9fee3f3fec1ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffeefea2f8fedaffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff1feb2fafee4ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffcfef0fefefaffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff


showpage

% stop using temporary dictionary
end

% restore original state
origstate restore

%%Trailer

%%EndDocument
 @endspecial 4511 1057 a
 currentpoint grestore moveto
 4511 1057 a 4130 5844 a
 currentpoint currentpoint translate 0.76611 0.76611 scale neg exch
neg exch translate
 4130
5844 a 4130 5844 a
 gsave currentpoint currentpoint translate 0 neg rotate neg exch neg
exch translate
 4130 5844 a @beginspecial 0 @llx 0
@lly 37 @urx 42 @ury 370 @rwi @setspecial
%%BeginDocument: figs/uiuc.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: uiuc.eps
%%Creator: fig2dev Version 3.2 Patchlevel 3d
%%CreationDate: Sun Feb 10 22:03:46 2002
%%For: renau@nether.cs.uiuc.edu (Jose Renau)
%%BoundingBox: 0 0 37 42
%%Magnification: 1.0000
%%EndComments
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def
/col32 {0.200 0.200 0.400 srgb} bind def
/col33 {0.800 0.400 0.000 srgb} bind def

end
save
newpath 0 42 moveto 0 0 lineto 37 0 lineto 37 42 lineto closepath clip newpath
-273.7 413.7 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
 0.06000 0.06000 sc
%
% Fig objects follow
%
%  polyline 
% Polyline
n 5070 6872 m 5070 6227 l 4584 6227 l 4584 6872 l
 5070 6872 l  cp gs col32 1.00 shd ef gr 
%  polyline 
% Polyline
15.000 slw
n 5070 6872 m 5070 6227 l 4584 6227 l 4584 6872 l
 5070 6872 l  cp gs col32 s gr 
%  polyline 
% Polyline
0.000 slw
n 5056 6858 m 5056 6243 l 4598 6243 l 4598 6858 l
 5056 6858 l  cp gs col32 1.00 shd ef gr 
%  polyline 
% Polyline
7.500 slw
n 5056 6858 m 5056 6243 l 4598 6243 l 4598 6858 l
 5056 6858 l  cp gs col33 s gr 
%  spline 
% Polyline
2 slj
0.000 slw
n 4944 6783 m 4944 6781 l 4944 6773 l 4944 6759 l 4944 6751 l 4944 6749 l
 4943 6749 l 4935 6748 l 4924 6746 l 4914 6744 l 4906 6742 l
 4900 6741 l 4896 6739 l 4892 6738 l 4887 6735 l 4884 6732 l
 4880 6728 l 4877 6722 l 4875 6716 l 4873 6709 l 4872 6702 l
 4871 6693 l 4870 6683 l 4869 6670 l 4869 6654 l 4868 6637 l
 4868 6621 l 4868 6609 l 4868 6604 l 4868 6603 l 4868 6602 l
 4868 6597 l 4868 6585 l 4868 6567 l 4868 6544 l 4868 6521 l
 4868 6503 l 4868 6491 l 4868 6486 l 4868 6485 l 4868 6483 l
 4868 6474 l 4868 6457 l 4869 6438 l 4869 6420 l 4870 6406 l
 4870 6395 l 4871 6387 l 4873 6381 l 4874 6375 l 4876 6371 l
 4879 6367 l 4882 6365 l 4885 6363 l 4889 6362 l 4892 6361 l
 4898 6359 l 4905 6358 l 4915 6356 l 4925 6354 l 4933 6352 l
 4934 6352 l 4934 6350 l 4934 6343 l 4934 6331 l 4934 6324 l
 4934 6322 l 4933 6322 l 4928 6322 l 4916 6322 l 4896 6322 l
 4869 6322 l 4837 6322 l 4806 6322 l 4779 6322 l 4759 6322 l
 4747 6322 l 4742 6322 l 4741 6322 l 4740 6322 l 4737 6322 l
 4732 6322 l 4729 6322 l 4726 6322 l 4724 6322 l 4721 6323 l
 4718 6324 l 4716 6325 l 4714 6326 l 4712 6327 l 4710 6329 l
 4707 6332 l 4705 6334 l 4703 6336 l 4701 6338 l 4700 6339 l
 4699 6341 l 4698 6342 l 4697 6344 l 4696 6346 l 4696 6347 l
 4695 6349 l 4695 6351 l 4695 6353 l 4694 6356 l 4694 6358 l
 4694 6359 l 4694 6360 l 4694 6362 l 4694 6365 l 4694 6367 l
 4695 6369 l 4695 6370 l 4696 6372 l 4697 6374 l 4697 6375 l
 4698 6377 l 4699 6378 l 4701 6379 l 4702 6381 l 4704 6383 l
 4706 6385 l 4708 6386 l 4709 6388 l 4710 6389 l 4712 6389 l
 4713 6390 l 4715 6391 l 4716 6391 l 4718 6391 l 4720 6391 l
 4721 6391 l 4724 6391 l 4726 6391 l 4727 6391 l 4729 6391 l
 4732 6390 l 4735 6390 l 4737 6389 l 4740 6388 l 4742 6387 l
 4744 6385 l 4747 6383 l 4748 6381 l 4749 6379 l 4750 6376 l
 4751 6372 l 4752 6369 l 4752 6368 l 4752 6366 l 4752 6364 l
 4752 6362 l 4752 6361 l 4752 6359 l 4752 6358 l 4751 6357 l
 4751 6356 l 4750 6355 l 4749 6354 l 4749 6353 l 4748 6352 l
 4747 6351 l 4746 6350 l 4745 6349 l 4744 6348 l 4743 6348 l
 4742 6347 l 4741 6346 l 4740 6346 l 4739 6346 l 4738 6346 l
 4736 6345 l 4735 6345 l 4733 6345 l 4732 6345 l 4730 6345 l
 4729 6345 l 4728 6346 l 4727 6346 l 4725 6346 l 4724 6347 l
 4724 6348 l 4723 6348 l 4722 6349 l 4721 6351 l 4720 6352 l
 4719 6353 l 4718 6354 l 4718 6355 l 4717 6356 l 4717 6357 l
 4717 6358 l 4716 6359 l 4717 6360 l 4717 6361 l 4717 6362 l
 4717 6363 l 4718 6364 l 4718 6365 l 4719 6366 l 4719 6367 l
 4720 6367 l 4720 6368 l 4721 6368 l 4722 6369 l 4723 6369 l
 4723 6368 l 4724 6368 l 4725 6368 l 4726 6367 l 4727 6367 l
 4727 6366 l 4728 6366 l 4728 6365 l 4729 6365 l 4729 6364 l
 4729 6363 l 4729 6362 l 4729 6361 l 4728 6360 l 4728 6359 l
 4729 6359 l 4729 6358 l 4730 6357 l 4731 6357 l 4731 6356 l
 4732 6356 l 4733 6356 l 4734 6356 l 4735 6356 l 4735 6357 l
 4736 6357 l 4737 6357 l 4738 6357 l 4738 6358 l 4739 6358 l
 4739 6359 l 4739 6360 l 4740 6360 l 4740 6361 l 4740 6362 l
 4741 6362 l 4741 6363 l 4741 6364 l 4740 6364 l 4740 6365 l
 4740 6366 l 4740 6368 l 4739 6371 l 4739 6373 l 4738 6374 l
 4737 6375 l 4736 6376 l 4735 6377 l 4733 6378 l 4732 6379 l
 4731 6379 l 4729 6379 l 4727 6380 l 4725 6380 l 4724 6380 l
 4722 6380 l 4721 6380 l 4720 6380 l 4719 6380 l 4718 6380 l
 4717 6379 l 4716 6379 l 4715 6379 l 4715 6378 l 4714 6377 l
 4713 6376 l 4712 6375 l 4711 6374 l 4710 6373 l 4710 6372 l
 4709 6372 l 4708 6371 l 4708 6370 l 4707 6369 l 4707 6368 l
 4707 6367 l 4706 6365 l 4706 6363 l 4706 6361 l 4706 6359 l
 4706 6357 l 4706 6355 l 4706 6353 l 4706 6352 l 4707 6351 l
 4707 6350 l 4707 6348 l 4708 6347 l 4709 6346 l 4709 6345 l
 4710 6344 l 4712 6343 l 4713 6342 l 4715 6340 l 4717 6339 l
 4718 6337 l 4720 6337 l 4721 6336 l 4723 6335 l 4725 6334 l
 4727 6334 l 4729 6334 l 4731 6333 l 4734 6333 l 4738 6333 l
 4740 6333 l 4741 6333 l 4742 6333 l 4744 6333 l 4747 6333 l
 4753 6333 l 4759 6333 l 4767 6333 l 4776 6333 l 4785 6333 l
 4794 6333 l 4802 6333 l 4809 6333 l 4815 6333 l 4822 6333 l
 4827 6333 l 4828 6333 l 4828 6334 l 4828 6337 l 4828 6341 l
 4828 6344 l 4828 6345 l 4826 6345 l 4816 6345 l 4797 6345 l
 4779 6345 l 4769 6345 l 4767 6345 l 4766 6345 l 4765 6345 l
 4764 6346 l 4763 6346 l 4762 6347 l 4762 6348 l 4761 6349 l
 4761 6350 l 4761 6351 l 4761 6352 l 4761 6353 l 4761 6354 l
 4761 6355 l 4762 6356 l 4762 6357 l 4763 6358 l 4764 6359 l
 4765 6359 l 4766 6359 l 4767 6359 l 4769 6359 l 4779 6359 l
 4798 6359 l 4816 6359 l 4826 6359 l 4828 6359 l 4828 6360 l
 4828 6362 l 4828 6367 l 4828 6369 l 4828 6370 l 4826 6370 l
 4817 6370 l 4799 6370 l 4782 6370 l 4773 6370 l 4771 6370 l
 4770 6370 l 4769 6370 l 4768 6370 l 4767 6371 l 4766 6371 l
 4766 6372 l 4765 6373 l 4765 6374 l 4765 6375 l 4765 6376 l
 4765 6377 l 4766 6378 l 4766 6379 l 4767 6380 l 4768 6381 l
 4769 6381 l 4770 6381 l 4771 6381 l 4773 6381 l 4782 6381 l
 4800 6381 l 4817 6381 l 4826 6381 l 4828 6381 l 4828 6384 l
 4828 6391 l 4828 6404 l 4828 6423 l 4828 6449 l 4828 6480 l
 4828 6516 l 4828 6554 l 4828 6592 l 4828 6628 l 4828 6659 l
 4828 6685 l 4828 6704 l 4828 6717 l 4828 6724 l 4828 6727 l
 4827 6727 l 4819 6727 l 4802 6727 l 4780 6727 l 4757 6727 l
 4740 6727 l 4732 6727 l 4731 6727 l 4730 6727 l 4729 6727 l
 4728 6727 l 4727 6728 l 4726 6728 l 4726 6729 l 4726 6730 l
 4725 6730 l 4725 6731 l 4725 6732 l 4725 6733 l 4725 6734 l
 4725 6735 l 4725 6736 l 4725 6737 l 4726 6738 l 4726 6739 l
 4727 6739 l 4727 6740 l 4728 6740 l 4729 6740 l 4730 6740 l
 4731 6740 l 4732 6740 l 4740 6740 l 4757 6740 l 4780 6740 l
 4802 6740 l 4819 6740 l 4827 6740 l 4828 6740 l 4828 6741 l
 4828 6745 l 4828 6750 l 4828 6754 l 4828 6755 l 4827 6755 l
 4822 6755 l 4811 6755 l 4792 6755 l 4770 6755 l 4748 6755 l
 4729 6755 l 4718 6755 l 4713 6755 l 4712 6755 l 4710 6755 l
 4707 6755 l 4706 6756 l 4704 6756 l 4703 6757 l 4702 6758 l
 4701 6759 l 4700 6760 l 4699 6761 l 4699 6763 l 4698 6764 l
 4698 6767 l 4698 6769 l 4698 6770 l 4698 6773 l 4698 6779 l
 4698 6782 l 4698 6783 l 4699 6783 l 4703 6783 l 4713 6783 l
 4730 6783 l 4755 6783 l 4786 6783 l 4821 6783 l 4856 6783 l
 4887 6783 l 4912 6783 l 4929 6783 l 4939 6783 l 4943 6783 l

 4944 6783 l  cp gs col7 1.00 shd ef gr 
%  spline 
% Polyline
n 4783 6706 m 4783 6705 l 4783 6702 l 4783 6693 l 4783 6678 l 4783 6656 l
 4783 6626 l 4783 6592 l 4783 6555 l 4783 6517 l 4783 6483 l
 4783 6453 l 4783 6431 l 4783 6416 l 4783 6407 l 4783 6404 l
 4783 6403 l 4783 6402 l 4783 6401 l 4783 6400 l 4782 6400 l
 4782 6399 l 4781 6399 l 4781 6398 l 4780 6398 l 4779 6398 l
 4778 6398 l 4777 6398 l 4776 6398 l 4775 6398 l 4774 6399 l
 4773 6399 l 4773 6400 l 4772 6401 l 4772 6402 l 4772 6403 l
 4772 6404 l 4772 6407 l 4772 6416 l 4772 6431 l 4772 6453 l
 4772 6483 l 4772 6517 l 4772 6555 l 4772 6592 l 4772 6626 l
 4772 6656 l 4772 6678 l 4772 6693 l 4772 6702 l 4772 6705 l
 4772 6706 l 4772 6707 l 4772 6708 l 4773 6709 l 4773 6710 l
 4774 6711 l 4775 6712 l 4776 6712 l 4777 6712 l 4778 6712 l
 4779 6712 l 4780 6712 l 4781 6712 l 4781 6711 l 4782 6711 l
 4782 6710 l 4783 6709 l 4783 6708 l 4783 6707 l
 4783 6706 l  cp gs col7 1.00 shd ef gr 
%  spline 
% Polyline
n 4813 6705 m 4813 6704 l 4813 6701 l 4813 6692 l 4813 6677 l 4813 6655 l
 4813 6626 l 4813 6592 l 4813 6555 l 4813 6518 l 4813 6484 l
 4813 6455 l 4813 6433 l 4813 6418 l 4813 6409 l 4813 6406 l
 4813 6405 l 4813 6404 l 4813 6402 l 4813 6401 l 4812 6400 l
 4811 6399 l 4811 6398 l 4810 6398 l 4809 6398 l 4808 6397 l
 4807 6397 l 4806 6397 l 4805 6397 l 4804 6397 l 4803 6397 l
 4802 6397 l 4801 6398 l 4800 6398 l 4799 6399 l 4799 6400 l
 4798 6401 l 4798 6402 l 4798 6404 l 4798 6405 l 4798 6406 l
 4798 6409 l 4798 6418 l 4798 6433 l 4798 6455 l 4798 6484 l
 4798 6518 l 4798 6555 l 4798 6592 l 4798 6626 l 4798 6655 l
 4798 6677 l 4798 6692 l 4798 6701 l 4798 6704 l 4798 6705 l
 4798 6706 l 4798 6707 l 4798 6708 l 4799 6709 l 4799 6710 l
 4799 6711 l 4800 6711 l 4801 6712 l 4802 6713 l 4803 6713 l
 4804 6713 l 4805 6713 l 4806 6713 l 4807 6713 l 4808 6713 l
 4809 6712 l 4810 6712 l 4811 6711 l 4812 6710 l 4812 6709 l
 4813 6708 l 4813 6707 l 4813 6706 l
 4813 6705 l  cp gs col7 1.00 shd ef gr 
%  polyline 
% Polyline
0 slj
n 5136 6864 m 5124 6864 l 5124 6894 l 5119 6894 l 5119 6864 l 5108 6864 l
 5108 6860 l 5136 6860 l
 5136 6864 l  cp gs col32 1.00 shd ef gr 
%  polyline 
% Polyline
n 5172 6894 m 5167 6894 l 5167 6867 l 5157 6880 l 5156 6880 l 5146 6867 l
 5145 6867 l 5145 6894 l 5141 6894 l 5141 6860 l 5145 6860 l
 5156 6874 l 5168 6860 l 5172 6860 l
 5172 6894 l  cp gs col32 1.00 shd ef gr 
$F2psEnd
rs

%%EndDocument
 @endspecial 4769 5844 a
 currentpoint grestore moveto
 4769 5844 a 4130 5844 a
 currentpoint currentpoint translate 1 0.76611 div 1 0.76611 div scale
neg exch neg exch translate
 4130
5844 a 5001 3450 a
SDict begin H.S end
 5001 3450 a 5001 3450 a
SDict begin H.R end
 5001 3450
a 5001 3450 a
SDict begin [ /View [/XYZ H.V] /Dest (page.1) cvn H.B /DEST pdfmark
end
 5001 3450 a 5001 3450 a
SDict begin [ {ThisPage} << /Trans << /S /Replace >> >> /PUT pdfmark
end
 5001 3450 a 5001
3450 a
SDict begin [ /Page 22/View [ /XYZ null null null ] /Title (Do you wanna run it?)
/OUT pdfmark end
 5001 3450 a 6477 1453 a Fm(D)18 b Fn(O)117 b(Y)n(O)18
b(U)116 b(W)q(A)18 b(N)g(N)g(A)116 b(R)12 b(U)18 b(N)118
b(I)18 b(T)g Fm(?)4649 2157 y @beginspecial 276 @llx
376 @lly 336 @urx 416 @ury 113 @rwi @setspecial
%%BeginDocument: green-bullet-on-white.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/fred/TeX/STYLES/Prosper/img/green-bullet-on-white.ps
%%Creator: XV Version 3.10a+FLmask  Rev: 12/29/94  -  by John Bradley
%%BoundingBox: 276 376 336 416
%%Pages: 1
%%DocumentFonts:
%%EndComments
%%EndProlog

%%Page: 1 1

% remember original state
/origstate save def

% build a temporary dictionary
20 dict begin

% define space for color conversions
/grays 60 string def  % space for gray scale line
/npixls 0 def
/rgbindx 0 def

% lower left corner
276 376 translate

% size of image (on paper, in 1/72inch coords)
59.97600 40.03200 scale

% define 'colorimage' if it isn't defined
%   ('colortogray' and 'mergeprocs' come from xwd2ps
%     via xgrab)
/colorimage where   % do we know about 'colorimage'?
  { pop }           % yes: pop off the 'dict' returned
  {                 % no:  define one
    /colortogray {  % define an RGB->I function
      /rgbdata exch store    % call input 'rgbdata'
      rgbdata length 3 idiv
      /npixls exch store
      /rgbindx 0 store
      0 1 npixls 1 sub {
        grays exch
        rgbdata rgbindx       get 20 mul    % Red
        rgbdata rgbindx 1 add get 32 mul    % Green
        rgbdata rgbindx 2 add get 12 mul    % Blue
        add add 64 idiv      % I = .5G + .31R + .18B
        put
        /rgbindx rgbindx 3 add store
      } for
      grays 0 npixls getinterval
    } bind def

    % Utility procedure for colorimage operator.
    % This procedure takes two procedures off the
    % stack and merges them into a single procedure.

    /mergeprocs { % def
      dup length
      3 -1 roll
      dup
      length
      dup
      5 1 roll
      3 -1 roll
      add
      array cvx
      dup
      3 -1 roll
      0 exch
      putinterval
      dup
      4 2 roll
      putinterval
    } bind def

    /colorimage { % def
      pop pop     % remove 'false 3' operands
      {colortogray} mergeprocs
      image
    } bind def
  } ifelse          % end of 'false' case



% define the colormap
/cmap 723 string def


% load up the colormap
currentfile cmap readhexstring
041808 049008 8c948c 045204 4c544c 04c804 84e284 449644 c4cbc4 0c380e 
04ac07 cce6cc 345e2c e4e7e4 046604 2c3a2c 347234 e4fee2 048208 64cc60 
34922c 24b224 04e404 044604 647264 242623 049f07 8cae8c 04bc06 24c61c 
f4f8f3 1c541c 04d804 1c621c 1c7220 0c280d 14910f 045e04 047c04 ccdcd0 
14ac18 1c481c 747473 04d105 0c6c0b 24852a 1c381c f4f1f3 acafac f4fef5 
0c310c acc6ac 049708 a4a4a3 3c4a44 148314 144812 9cea94 04b405 149e14 
1cbc1c 044004 e4fef4 dcdddd 748274 5c5959 4cba54 145b11 145413 147412 
c4fec4 e4f1e7 146411 088a0a 243028 09c207 fcf8f3 147c13 14c80e acceac 
3c3939 04f405 044e07 07a608 14d00f 0c1f10 0c900b d4d3d4 ecfee3 1c291d 
0c6e14 bcbfbd d4f6d4 909a94 4c5a50 0cac08 24ba24 547e54 0cbc0a 0c5c16 
0c7c0b fcf1fb acb8ac 1c311c aca7a9 e2e2e2 a4e2a4 0cc80a 6c9a6c 143715 
0c650a 0c840b 07de06 14970c 0c980a 0cb40a 848583 ecf0f0 c3c6c3 0c540d 
0c740c cccccc 74ce6c 30a02c 04ec05 54aa5c 6cb66c 9cfa9c 2c862c 5c926c 
6ca674 b4deac 9cda9c 34aa2c 6c7e6c acfeac 448244 34d22c 7d7d7c 6c6d6c 
445644 4c4d4c 1c7a19 1c3e1c 3c3f3c 2c422c 7c9a84 54c254 dceadc 144014 
343231 bccebc bcbabc 447244 6c6664 9c9d9c 7caa7c 349a38 6c7a74 84b69c 
1c4e18 898a89 ccfadc 1c6c2c b8e2c0 1c8a24 a1aaa1 3c4e3c 5f5e5c d8fed8 
24be24 78d670 688668 148a14 14a618 145624 0c480e 2c292b 142916 1c921c 
d4dad9 243828 143017 b4d2bc b4b7b5 1c961c 8c868c 247e24 144e13 04fa04 
246224 fcfefc 0c4e0c ace2b4 3caa3c 244e24 0c180c 949394 545454 ece9ec 
343634 2cb127 6c736c 0ca00c 0cda08 0c5c0b 0ccf06 146a0c b4b2b4 646464 
b4c2b4 0c3f0c ecfdf9 e4dedc ccfdcc 2c2f2b 142214 146b16 c4c2c2 545b54 
2cb62c 74ba74 346634 b4fcb0 244224 444242 246a24 e4feec 0ce204 f4f9fc 
f4eefc 444744 54b654 fcf9fc 0c9114 dcd6d4 ecfeec 0c7b14 0cc614 0c6314 
0c8414 
pop pop   % lose return values from readhexstring


% rlecmapimage expects to have 'w h bits matrix' on stack
/rlecmapimage {
  /buffer 1 string def
  /rgbval 3 string def
  /block  384 string def

  % proc to read a block from file, and return RGB data
  { currentfile buffer readhexstring pop
    /bcount exch 0 get store
    bcount 128 ge
    {  % it's a non-run block
      0 1 bcount 128 sub
      { currentfile buffer readhexstring pop pop

        % look up value in color map
        /rgbval cmap buffer 0 get 3 mul 3 getinterval store

        % and put it in position i*3 in block
        block exch 3 mul rgbval putinterval
      } for
      block  0  bcount 127 sub 3 mul  getinterval
    }

    { % else it's a run block
      currentfile buffer readhexstring pop pop

      % look up value in colormap
      /rgbval cmap buffer 0 get 3 mul 3 getinterval store

      0 1 bcount { block exch 3 mul rgbval putinterval } for

      block 0 bcount 1 add 3 mul getinterval
    } ifelse
  } % end of proc
  false 3 colorimage
} bind def


60 40 8			% dimensions of data
[60 0 0 -40 0 40]		% mapping matrix
rlecmapimage

10bf8131bf05bf03e98165e902e9046587bf3158ec31bfe9658265e9bf09bf
10bf8131bf04bf81e9bf01bf02e98265bfe982e965e901e981bf318131ec82ecbfe982e9
65bf0abf
12bf82751ebf83bf1ebf318231ec3102318111318131bf81bfe901e981bf318131bf01bf
01e90bbf
0fbf02e901bf023101ec021101a981d6a981a9118111318131bf14bf
0fbf8165e901e988e5bfd4ecd66add07808c80149dc2137f46a911d431bfe981e9bf0fbf

0fbf01e982bfe9318331a49ce28fe2454d37562456dc71567bab87a9d4bf81bfe981e9bf
81bf318131bf0abf
10bf8ac775bf311bde43224d37568656cb535f1a733c893cae8506a91131bfe9bf01bf81
58bf0abf
0fbf911ebf31b761a0442245ed56721a530a3a4e3a813a4e864e73c94246e3bf10bf
07bf81e9bf82bfe9bf92bf1ebf31ec4f0c38e2ef8e4d49561a530a3a6283624b052b8a2b
ce4e60c2dfe331bf4cbf0cbf
0abf81e9bf82bfe9ec8eec83de1f21778e786f01341a0a3a1c851c4b052b20168b162054
aa93df11312fe965bf0abf
0ebf8d3111883d77cdcf78646f0134530a810a1c911c4ece20167c517c16542893a9ec31
e965bf0abf
08bf01e999bfe91ebf316cc07743cd45786f49561a530a3a624b6b2b707c510151877c70
4edcaba9bfe981e9bf0abf
0bbf01e985bf27d34352cf90cf0e4d2656011a530a1c62ee2b20167c5102518816cc1db9
d611bfe9bf0abf
07bf81e9bf01bf90e9bf4c86d3445277d92c786f49721a0a3a853a4b0520167c827c51bd
88bd5116e44b157a11bf0cbf
0dbf8d3f0fc33d4403cfbb0e3756011a0a860a624b2b20167c817c5102510116854b897b
a911bf0bbf
08bf82e9e5bf97bf75dab209bcc021ef254d2649561a533a1c4b052b70167c037c811620
85203a853911bf0bbf
0bbf0131869eb6d3b0bc7748884845646f561acb0a7382734b2b812b1683167c16cc01cc
012b844b2813d4bf0bbf
0abf0231955e236db0c04463cf45646f5634cb533a73624b2b2016821670548854ce2b20
4b28e831bf0bbf
0abf023183b5b6d3b089b044436e45786f49341a871a0a733a626b2b200120896b4e6b05
2b1c5f9decbf0bbf
09bf8131bf97bf31d82e09d3b044cd485a786f1201cb1a530a73621c052b852b054e4b1c
0585053a282d58bf0bbf
0bbf9431bf556709b03844cd482c7864125634cb1a5f0a7382734b0501050162011c854b
0aae2d58bf0bbf
0bbf0131934a236dd3b0bc7743485a786f1201341acb535f3a813a1c011c0173023a8453
3b1458bf0bbf
0bbf8431bf0455098309d338778277ef2c852c266f1201348134cb83cb530a3a013a810a
5f815f0a850a1ab37d58bf0bbf
08bf81e9bf93bf31bf18d83209d338c044cd6e0e2c64126f0172837271cb5382530a5383
53ae531a851a01a57e58bf0bbf
0bbf01e5837600230901098138c082c0482c862c7864126f49568156728272341a811a72
0272864912bb841131bf0abf
03bf94e9bfe9bfe9bf1ebf1ebf275923b632099538c044ef81ef7881786481646f816fad
84adea01ea560156882449ad2da3115831bf0abf
04bf02e992654ce61e75bf0d185523b66d0995bcc043cd2c812c7881786483646f64f001
f08b6f496f49642d6382e3314cbf0abf
01bf85e9e5e9652fc784c7693fc7698a69c7d2b200232eb60929bc84bc6343ef2c862c78
45784d78ed82ed6f6489644d45a3afa2114c31bf0abf
01e58175c783c769d5eb8ceb797679dab87908db67c4b66d876d9538b0447743ef84ef6e
2c78458e455a457864788ecfbe9fd4315831bf0abf
88e5750d3f5779da98d083d0689b3501358d5d0236c45567b6320995b04477cd92cdef6e
2c6e5ad95acf782c4517813e31bf2fbf0bbf
887569575bd0689bc5ba83ba8a2a8a878aca2a74db5955b284b23209d3b081b077017701
cd016e02ef876e2c6e4810a4d4bf01bf814cbf0abf
873f79b835c5ba2a9a829aa8410141868de1d104c690d881d85583552e6d958b9538b0c0
77cd03cd6377afcd84cd4321c1d483d4e9654c814cbf0abf
88575b9b742ad1418de181e15081509603968450c8d759d881d8b283b2326d0981099585
9538bcb0381f871f95c3995ca931bf81bfe981e9bf0bbf
8779b8c58ad1c6e750855096d7b119b104b184d7b119d855845523b2b66d016d83952995
2987296de09211d431bf01bf01e90cbf
8979d0c52aa88de15096b181b119041901b18796c80fd74a59b2b602b6016d86326d328f
ac0b318331bf31bf01bf81e9bf0cbf
88575b9b742ad1c68de186e1c850c850c850865096c850e1e70487045e8ca7912e672e85
2e8cac33473101318158bf02bf82e9bfe981e9bf0abf
8b3f799835c5742a8bd1a8dbc683c68dc68d818dc601c68cdbd1ca40a15da66697274711
31863158bf31bf31bf82bf4ce985e9bfe9bfe9bf0abf
8bc76957dab8359bc5a1748a2a052a018a01748b029ba6665b279447ec311ebf83bf581e
bf82bf4cbf02bf82e9bfe981e9bf0abf
881e75693f57795bb8d082d068350135029b0135013088b8985b7608b40d751e811ebf83
bf1e75bf81bf4c814cbf05bf81e9bf0bbf
83e9e52fc782c7693f823f5779817976027681da760276827957b482b4c7750175822fe5
bf82bf4cbf01bf814cbf81bfe981e9bf01bf01e90dbf

%
% Compression made this file 26.36% of the uncompressed size.
%


showpage

% stop using temporary dictionary
end

% restore original state
origstate restore

%%Trailer

%%EndDocument
 @endspecial 298 w Fg(Add)5442 2157 y
 0. 0. 1. setrgbcolor
 5442 2157 a Fg
(http://sesc.sourcef)-7 b(orge)l(.net)8273 2157 y
 0 setgray
 8273
2157 a 66 w Fg(to)67 b(y)-5 b(our)67 b(bookmar)t(k)4649
2531 y @beginspecial 276 @llx 376 @lly 336 @urx 416 @ury
113 @rwi @setspecial
%%BeginDocument: green-bullet-on-white.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/fred/TeX/STYLES/Prosper/img/green-bullet-on-white.ps
%%Creator: XV Version 3.10a+FLmask  Rev: 12/29/94  -  by John Bradley
%%BoundingBox: 276 376 336 416
%%Pages: 1
%%DocumentFonts:
%%EndComments
%%EndProlog

%%Page: 1 1

% remember original state
/origstate save def

% build a temporary dictionary
20 dict begin

% define space for color conversions
/grays 60 string def  % space for gray scale line
/npixls 0 def
/rgbindx 0 def

% lower left corner
276 376 translate

% size of image (on paper, in 1/72inch coords)
59.97600 40.03200 scale

% define 'colorimage' if it isn't defined
%   ('colortogray' and 'mergeprocs' come from xwd2ps
%     via xgrab)
/colorimage where   % do we know about 'colorimage'?
  { pop }           % yes: pop off the 'dict' returned
  {                 % no:  define one
    /colortogray {  % define an RGB->I function
      /rgbdata exch store    % call input 'rgbdata'
      rgbdata length 3 idiv
      /npixls exch store
      /rgbindx 0 store
      0 1 npixls 1 sub {
        grays exch
        rgbdata rgbindx       get 20 mul    % Red
        rgbdata rgbindx 1 add get 32 mul    % Green
        rgbdata rgbindx 2 add get 12 mul    % Blue
        add add 64 idiv      % I = .5G + .31R + .18B
        put
        /rgbindx rgbindx 3 add store
      } for
      grays 0 npixls getinterval
    } bind def

    % Utility procedure for colorimage operator.
    % This procedure takes two procedures off the
    % stack and merges them into a single procedure.

    /mergeprocs { % def
      dup length
      3 -1 roll
      dup
      length
      dup
      5 1 roll
      3 -1 roll
      add
      array cvx
      dup
      3 -1 roll
      0 exch
      putinterval
      dup
      4 2 roll
      putinterval
    } bind def

    /colorimage { % def
      pop pop     % remove 'false 3' operands
      {colortogray} mergeprocs
      image
    } bind def
  } ifelse          % end of 'false' case



% define the colormap
/cmap 723 string def


% load up the colormap
currentfile cmap readhexstring
041808 049008 8c948c 045204 4c544c 04c804 84e284 449644 c4cbc4 0c380e 
04ac07 cce6cc 345e2c e4e7e4 046604 2c3a2c 347234 e4fee2 048208 64cc60 
34922c 24b224 04e404 044604 647264 242623 049f07 8cae8c 04bc06 24c61c 
f4f8f3 1c541c 04d804 1c621c 1c7220 0c280d 14910f 045e04 047c04 ccdcd0 
14ac18 1c481c 747473 04d105 0c6c0b 24852a 1c381c f4f1f3 acafac f4fef5 
0c310c acc6ac 049708 a4a4a3 3c4a44 148314 144812 9cea94 04b405 149e14 
1cbc1c 044004 e4fef4 dcdddd 748274 5c5959 4cba54 145b11 145413 147412 
c4fec4 e4f1e7 146411 088a0a 243028 09c207 fcf8f3 147c13 14c80e acceac 
3c3939 04f405 044e07 07a608 14d00f 0c1f10 0c900b d4d3d4 ecfee3 1c291d 
0c6e14 bcbfbd d4f6d4 909a94 4c5a50 0cac08 24ba24 547e54 0cbc0a 0c5c16 
0c7c0b fcf1fb acb8ac 1c311c aca7a9 e2e2e2 a4e2a4 0cc80a 6c9a6c 143715 
0c650a 0c840b 07de06 14970c 0c980a 0cb40a 848583 ecf0f0 c3c6c3 0c540d 
0c740c cccccc 74ce6c 30a02c 04ec05 54aa5c 6cb66c 9cfa9c 2c862c 5c926c 
6ca674 b4deac 9cda9c 34aa2c 6c7e6c acfeac 448244 34d22c 7d7d7c 6c6d6c 
445644 4c4d4c 1c7a19 1c3e1c 3c3f3c 2c422c 7c9a84 54c254 dceadc 144014 
343231 bccebc bcbabc 447244 6c6664 9c9d9c 7caa7c 349a38 6c7a74 84b69c 
1c4e18 898a89 ccfadc 1c6c2c b8e2c0 1c8a24 a1aaa1 3c4e3c 5f5e5c d8fed8 
24be24 78d670 688668 148a14 14a618 145624 0c480e 2c292b 142916 1c921c 
d4dad9 243828 143017 b4d2bc b4b7b5 1c961c 8c868c 247e24 144e13 04fa04 
246224 fcfefc 0c4e0c ace2b4 3caa3c 244e24 0c180c 949394 545454 ece9ec 
343634 2cb127 6c736c 0ca00c 0cda08 0c5c0b 0ccf06 146a0c b4b2b4 646464 
b4c2b4 0c3f0c ecfdf9 e4dedc ccfdcc 2c2f2b 142214 146b16 c4c2c2 545b54 
2cb62c 74ba74 346634 b4fcb0 244224 444242 246a24 e4feec 0ce204 f4f9fc 
f4eefc 444744 54b654 fcf9fc 0c9114 dcd6d4 ecfeec 0c7b14 0cc614 0c6314 
0c8414 
pop pop   % lose return values from readhexstring


% rlecmapimage expects to have 'w h bits matrix' on stack
/rlecmapimage {
  /buffer 1 string def
  /rgbval 3 string def
  /block  384 string def

  % proc to read a block from file, and return RGB data
  { currentfile buffer readhexstring pop
    /bcount exch 0 get store
    bcount 128 ge
    {  % it's a non-run block
      0 1 bcount 128 sub
      { currentfile buffer readhexstring pop pop

        % look up value in color map
        /rgbval cmap buffer 0 get 3 mul 3 getinterval store

        % and put it in position i*3 in block
        block exch 3 mul rgbval putinterval
      } for
      block  0  bcount 127 sub 3 mul  getinterval
    }

    { % else it's a run block
      currentfile buffer readhexstring pop pop

      % look up value in colormap
      /rgbval cmap buffer 0 get 3 mul 3 getinterval store

      0 1 bcount { block exch 3 mul rgbval putinterval } for

      block 0 bcount 1 add 3 mul getinterval
    } ifelse
  } % end of proc
  false 3 colorimage
} bind def


60 40 8			% dimensions of data
[60 0 0 -40 0 40]		% mapping matrix
rlecmapimage

10bf8131bf05bf03e98165e902e9046587bf3158ec31bfe9658265e9bf09bf
10bf8131bf04bf81e9bf01bf02e98265bfe982e965e901e981bf318131ec82ecbfe982e9
65bf0abf
12bf82751ebf83bf1ebf318231ec3102318111318131bf81bfe901e981bf318131bf01bf
01e90bbf
0fbf02e901bf023101ec021101a981d6a981a9118111318131bf14bf
0fbf8165e901e988e5bfd4ecd66add07808c80149dc2137f46a911d431bfe981e9bf0fbf

0fbf01e982bfe9318331a49ce28fe2454d37562456dc71567bab87a9d4bf81bfe981e9bf
81bf318131bf0abf
10bf8ac775bf311bde43224d37568656cb535f1a733c893cae8506a91131bfe9bf01bf81
58bf0abf
0fbf911ebf31b761a0442245ed56721a530a3a4e3a813a4e864e73c94246e3bf10bf
07bf81e9bf82bfe9bf92bf1ebf31ec4f0c38e2ef8e4d49561a530a3a6283624b052b8a2b
ce4e60c2dfe331bf4cbf0cbf
0abf81e9bf82bfe9ec8eec83de1f21778e786f01341a0a3a1c851c4b052b20168b162054
aa93df11312fe965bf0abf
0ebf8d3111883d77cdcf78646f0134530a810a1c911c4ece20167c517c16542893a9ec31
e965bf0abf
08bf01e999bfe91ebf316cc07743cd45786f49561a530a3a624b6b2b707c510151877c70
4edcaba9bfe981e9bf0abf
0bbf01e985bf27d34352cf90cf0e4d2656011a530a1c62ee2b20167c5102518816cc1db9
d611bfe9bf0abf
07bf81e9bf01bf90e9bf4c86d3445277d92c786f49721a0a3a853a4b0520167c827c51bd
88bd5116e44b157a11bf0cbf
0dbf8d3f0fc33d4403cfbb0e3756011a0a860a624b2b20167c817c5102510116854b897b
a911bf0bbf
08bf82e9e5bf97bf75dab209bcc021ef254d2649561a533a1c4b052b70167c037c811620
85203a853911bf0bbf
0bbf0131869eb6d3b0bc7748884845646f561acb0a7382734b2b812b1683167c16cc01cc
012b844b2813d4bf0bbf
0abf0231955e236db0c04463cf45646f5634cb533a73624b2b2016821670548854ce2b20
4b28e831bf0bbf
0abf023183b5b6d3b089b044436e45786f49341a871a0a733a626b2b200120896b4e6b05
2b1c5f9decbf0bbf
09bf8131bf97bf31d82e09d3b044cd485a786f1201cb1a530a73621c052b852b054e4b1c
0585053a282d58bf0bbf
0bbf9431bf556709b03844cd482c7864125634cb1a5f0a7382734b0501050162011c854b
0aae2d58bf0bbf
0bbf0131934a236dd3b0bc7743485a786f1201341acb535f3a813a1c011c0173023a8453
3b1458bf0bbf
0bbf8431bf0455098309d338778277ef2c852c266f1201348134cb83cb530a3a013a810a
5f815f0a850a1ab37d58bf0bbf
08bf81e9bf93bf31bf18d83209d338c044cd6e0e2c64126f0172837271cb5382530a5383
53ae531a851a01a57e58bf0bbf
0bbf01e5837600230901098138c082c0482c862c7864126f49568156728272341a811a72
0272864912bb841131bf0abf
03bf94e9bfe9bfe9bf1ebf1ebf275923b632099538c044ef81ef7881786481646f816fad
84adea01ea560156882449ad2da3115831bf0abf
04bf02e992654ce61e75bf0d185523b66d0995bcc043cd2c812c7881786483646f64f001
f08b6f496f49642d6382e3314cbf0abf
01bf85e9e5e9652fc784c7693fc7698a69c7d2b200232eb60929bc84bc6343ef2c862c78
45784d78ed82ed6f6489644d45a3afa2114c31bf0abf
01e58175c783c769d5eb8ceb797679dab87908db67c4b66d876d9538b0447743ef84ef6e
2c78458e455a457864788ecfbe9fd4315831bf0abf
88e5750d3f5779da98d083d0689b3501358d5d0236c45567b6320995b04477cd92cdef6e
2c6e5ad95acf782c4517813e31bf2fbf0bbf
887569575bd0689bc5ba83ba8a2a8a878aca2a74db5955b284b23209d3b081b077017701
cd016e02ef876e2c6e4810a4d4bf01bf814cbf0abf
873f79b835c5ba2a9a829aa8410141868de1d104c690d881d85583552e6d958b9538b0c0
77cd03cd6377afcd84cd4321c1d483d4e9654c814cbf0abf
88575b9b742ad1418de181e15081509603968450c8d759d881d8b283b2326d0981099585
9538bcb0381f871f95c3995ca931bf81bfe981e9bf0bbf
8779b8c58ad1c6e750855096d7b119b104b184d7b119d855845523b2b66d016d83952995
2987296de09211d431bf01bf01e90cbf
8979d0c52aa88de15096b181b119041901b18796c80fd74a59b2b602b6016d86326d328f
ac0b318331bf31bf01bf81e9bf0cbf
88575b9b742ad1c68de186e1c850c850c850865096c850e1e70487045e8ca7912e672e85
2e8cac33473101318158bf02bf82e9bfe981e9bf0abf
8b3f799835c5742a8bd1a8dbc683c68dc68d818dc601c68cdbd1ca40a15da66697274711
31863158bf31bf31bf82bf4ce985e9bfe9bfe9bf0abf
8bc76957dab8359bc5a1748a2a052a018a01748b029ba6665b279447ec311ebf83bf581e
bf82bf4cbf02bf82e9bfe981e9bf0abf
881e75693f57795bb8d082d068350135029b0135013088b8985b7608b40d751e811ebf83
bf1e75bf81bf4c814cbf05bf81e9bf0bbf
83e9e52fc782c7693f823f5779817976027681da760276827957b482b4c7750175822fe5
bf82bf4cbf01bf814cbf81bfe981e9bf01bf01e90dbf

%
% Compression made this file 26.36% of the uncompressed size.
%


showpage

% stop using temporary dictionary
end

% restore original state
origstate restore

%%Trailer

%%EndDocument
 @endspecial 298 w(Subscr)t(ibe)e(to)6357 2531 y
 0. 0. 1. setrgbcolor
 6357
2531 a Fg(sesc-ne)-5 b(ws@lists)l(.sourcef)e(orge)l(.net)9881
2531 y
 0 setgray
 9881 2531 a 4649 2905 a @beginspecial 276 @llx
376 @lly 336 @urx 416 @ury 113 @rwi @setspecial
%%BeginDocument: green-bullet-on-white.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/fred/TeX/STYLES/Prosper/img/green-bullet-on-white.ps
%%Creator: XV Version 3.10a+FLmask  Rev: 12/29/94  -  by John Bradley
%%BoundingBox: 276 376 336 416
%%Pages: 1
%%DocumentFonts:
%%EndComments
%%EndProlog

%%Page: 1 1

% remember original state
/origstate save def

% build a temporary dictionary
20 dict begin

% define space for color conversions
/grays 60 string def  % space for gray scale line
/npixls 0 def
/rgbindx 0 def

% lower left corner
276 376 translate

% size of image (on paper, in 1/72inch coords)
59.97600 40.03200 scale

% define 'colorimage' if it isn't defined
%   ('colortogray' and 'mergeprocs' come from xwd2ps
%     via xgrab)
/colorimage where   % do we know about 'colorimage'?
  { pop }           % yes: pop off the 'dict' returned
  {                 % no:  define one
    /colortogray {  % define an RGB->I function
      /rgbdata exch store    % call input 'rgbdata'
      rgbdata length 3 idiv
      /npixls exch store
      /rgbindx 0 store
      0 1 npixls 1 sub {
        grays exch
        rgbdata rgbindx       get 20 mul    % Red
        rgbdata rgbindx 1 add get 32 mul    % Green
        rgbdata rgbindx 2 add get 12 mul    % Blue
        add add 64 idiv      % I = .5G + .31R + .18B
        put
        /rgbindx rgbindx 3 add store
      } for
      grays 0 npixls getinterval
    } bind def

    % Utility procedure for colorimage operator.
    % This procedure takes two procedures off the
    % stack and merges them into a single procedure.

    /mergeprocs { % def
      dup length
      3 -1 roll
      dup
      length
      dup
      5 1 roll
      3 -1 roll
      add
      array cvx
      dup
      3 -1 roll
      0 exch
      putinterval
      dup
      4 2 roll
      putinterval
    } bind def

    /colorimage { % def
      pop pop     % remove 'false 3' operands
      {colortogray} mergeprocs
      image
    } bind def
  } ifelse          % end of 'false' case



% define the colormap
/cmap 723 string def


% load up the colormap
currentfile cmap readhexstring
041808 049008 8c948c 045204 4c544c 04c804 84e284 449644 c4cbc4 0c380e 
04ac07 cce6cc 345e2c e4e7e4 046604 2c3a2c 347234 e4fee2 048208 64cc60 
34922c 24b224 04e404 044604 647264 242623 049f07 8cae8c 04bc06 24c61c 
f4f8f3 1c541c 04d804 1c621c 1c7220 0c280d 14910f 045e04 047c04 ccdcd0 
14ac18 1c481c 747473 04d105 0c6c0b 24852a 1c381c f4f1f3 acafac f4fef5 
0c310c acc6ac 049708 a4a4a3 3c4a44 148314 144812 9cea94 04b405 149e14 
1cbc1c 044004 e4fef4 dcdddd 748274 5c5959 4cba54 145b11 145413 147412 
c4fec4 e4f1e7 146411 088a0a 243028 09c207 fcf8f3 147c13 14c80e acceac 
3c3939 04f405 044e07 07a608 14d00f 0c1f10 0c900b d4d3d4 ecfee3 1c291d 
0c6e14 bcbfbd d4f6d4 909a94 4c5a50 0cac08 24ba24 547e54 0cbc0a 0c5c16 
0c7c0b fcf1fb acb8ac 1c311c aca7a9 e2e2e2 a4e2a4 0cc80a 6c9a6c 143715 
0c650a 0c840b 07de06 14970c 0c980a 0cb40a 848583 ecf0f0 c3c6c3 0c540d 
0c740c cccccc 74ce6c 30a02c 04ec05 54aa5c 6cb66c 9cfa9c 2c862c 5c926c 
6ca674 b4deac 9cda9c 34aa2c 6c7e6c acfeac 448244 34d22c 7d7d7c 6c6d6c 
445644 4c4d4c 1c7a19 1c3e1c 3c3f3c 2c422c 7c9a84 54c254 dceadc 144014 
343231 bccebc bcbabc 447244 6c6664 9c9d9c 7caa7c 349a38 6c7a74 84b69c 
1c4e18 898a89 ccfadc 1c6c2c b8e2c0 1c8a24 a1aaa1 3c4e3c 5f5e5c d8fed8 
24be24 78d670 688668 148a14 14a618 145624 0c480e 2c292b 142916 1c921c 
d4dad9 243828 143017 b4d2bc b4b7b5 1c961c 8c868c 247e24 144e13 04fa04 
246224 fcfefc 0c4e0c ace2b4 3caa3c 244e24 0c180c 949394 545454 ece9ec 
343634 2cb127 6c736c 0ca00c 0cda08 0c5c0b 0ccf06 146a0c b4b2b4 646464 
b4c2b4 0c3f0c ecfdf9 e4dedc ccfdcc 2c2f2b 142214 146b16 c4c2c2 545b54 
2cb62c 74ba74 346634 b4fcb0 244224 444242 246a24 e4feec 0ce204 f4f9fc 
f4eefc 444744 54b654 fcf9fc 0c9114 dcd6d4 ecfeec 0c7b14 0cc614 0c6314 
0c8414 
pop pop   % lose return values from readhexstring


% rlecmapimage expects to have 'w h bits matrix' on stack
/rlecmapimage {
  /buffer 1 string def
  /rgbval 3 string def
  /block  384 string def

  % proc to read a block from file, and return RGB data
  { currentfile buffer readhexstring pop
    /bcount exch 0 get store
    bcount 128 ge
    {  % it's a non-run block
      0 1 bcount 128 sub
      { currentfile buffer readhexstring pop pop

        % look up value in color map
        /rgbval cmap buffer 0 get 3 mul 3 getinterval store

        % and put it in position i*3 in block
        block exch 3 mul rgbval putinterval
      } for
      block  0  bcount 127 sub 3 mul  getinterval
    }

    { % else it's a run block
      currentfile buffer readhexstring pop pop

      % look up value in colormap
      /rgbval cmap buffer 0 get 3 mul 3 getinterval store

      0 1 bcount { block exch 3 mul rgbval putinterval } for

      block 0 bcount 1 add 3 mul getinterval
    } ifelse
  } % end of proc
  false 3 colorimage
} bind def


60 40 8			% dimensions of data
[60 0 0 -40 0 40]		% mapping matrix
rlecmapimage

10bf8131bf05bf03e98165e902e9046587bf3158ec31bfe9658265e9bf09bf
10bf8131bf04bf81e9bf01bf02e98265bfe982e965e901e981bf318131ec82ecbfe982e9
65bf0abf
12bf82751ebf83bf1ebf318231ec3102318111318131bf81bfe901e981bf318131bf01bf
01e90bbf
0fbf02e901bf023101ec021101a981d6a981a9118111318131bf14bf
0fbf8165e901e988e5bfd4ecd66add07808c80149dc2137f46a911d431bfe981e9bf0fbf

0fbf01e982bfe9318331a49ce28fe2454d37562456dc71567bab87a9d4bf81bfe981e9bf
81bf318131bf0abf
10bf8ac775bf311bde43224d37568656cb535f1a733c893cae8506a91131bfe9bf01bf81
58bf0abf
0fbf911ebf31b761a0442245ed56721a530a3a4e3a813a4e864e73c94246e3bf10bf
07bf81e9bf82bfe9bf92bf1ebf31ec4f0c38e2ef8e4d49561a530a3a6283624b052b8a2b
ce4e60c2dfe331bf4cbf0cbf
0abf81e9bf82bfe9ec8eec83de1f21778e786f01341a0a3a1c851c4b052b20168b162054
aa93df11312fe965bf0abf
0ebf8d3111883d77cdcf78646f0134530a810a1c911c4ece20167c517c16542893a9ec31
e965bf0abf
08bf01e999bfe91ebf316cc07743cd45786f49561a530a3a624b6b2b707c510151877c70
4edcaba9bfe981e9bf0abf
0bbf01e985bf27d34352cf90cf0e4d2656011a530a1c62ee2b20167c5102518816cc1db9
d611bfe9bf0abf
07bf81e9bf01bf90e9bf4c86d3445277d92c786f49721a0a3a853a4b0520167c827c51bd
88bd5116e44b157a11bf0cbf
0dbf8d3f0fc33d4403cfbb0e3756011a0a860a624b2b20167c817c5102510116854b897b
a911bf0bbf
08bf82e9e5bf97bf75dab209bcc021ef254d2649561a533a1c4b052b70167c037c811620
85203a853911bf0bbf
0bbf0131869eb6d3b0bc7748884845646f561acb0a7382734b2b812b1683167c16cc01cc
012b844b2813d4bf0bbf
0abf0231955e236db0c04463cf45646f5634cb533a73624b2b2016821670548854ce2b20
4b28e831bf0bbf
0abf023183b5b6d3b089b044436e45786f49341a871a0a733a626b2b200120896b4e6b05
2b1c5f9decbf0bbf
09bf8131bf97bf31d82e09d3b044cd485a786f1201cb1a530a73621c052b852b054e4b1c
0585053a282d58bf0bbf
0bbf9431bf556709b03844cd482c7864125634cb1a5f0a7382734b0501050162011c854b
0aae2d58bf0bbf
0bbf0131934a236dd3b0bc7743485a786f1201341acb535f3a813a1c011c0173023a8453
3b1458bf0bbf
0bbf8431bf0455098309d338778277ef2c852c266f1201348134cb83cb530a3a013a810a
5f815f0a850a1ab37d58bf0bbf
08bf81e9bf93bf31bf18d83209d338c044cd6e0e2c64126f0172837271cb5382530a5383
53ae531a851a01a57e58bf0bbf
0bbf01e5837600230901098138c082c0482c862c7864126f49568156728272341a811a72
0272864912bb841131bf0abf
03bf94e9bfe9bfe9bf1ebf1ebf275923b632099538c044ef81ef7881786481646f816fad
84adea01ea560156882449ad2da3115831bf0abf
04bf02e992654ce61e75bf0d185523b66d0995bcc043cd2c812c7881786483646f64f001
f08b6f496f49642d6382e3314cbf0abf
01bf85e9e5e9652fc784c7693fc7698a69c7d2b200232eb60929bc84bc6343ef2c862c78
45784d78ed82ed6f6489644d45a3afa2114c31bf0abf
01e58175c783c769d5eb8ceb797679dab87908db67c4b66d876d9538b0447743ef84ef6e
2c78458e455a457864788ecfbe9fd4315831bf0abf
88e5750d3f5779da98d083d0689b3501358d5d0236c45567b6320995b04477cd92cdef6e
2c6e5ad95acf782c4517813e31bf2fbf0bbf
887569575bd0689bc5ba83ba8a2a8a878aca2a74db5955b284b23209d3b081b077017701
cd016e02ef876e2c6e4810a4d4bf01bf814cbf0abf
873f79b835c5ba2a9a829aa8410141868de1d104c690d881d85583552e6d958b9538b0c0
77cd03cd6377afcd84cd4321c1d483d4e9654c814cbf0abf
88575b9b742ad1418de181e15081509603968450c8d759d881d8b283b2326d0981099585
9538bcb0381f871f95c3995ca931bf81bfe981e9bf0bbf
8779b8c58ad1c6e750855096d7b119b104b184d7b119d855845523b2b66d016d83952995
2987296de09211d431bf01bf01e90cbf
8979d0c52aa88de15096b181b119041901b18796c80fd74a59b2b602b6016d86326d328f
ac0b318331bf31bf01bf81e9bf0cbf
88575b9b742ad1c68de186e1c850c850c850865096c850e1e70487045e8ca7912e672e85
2e8cac33473101318158bf02bf82e9bfe981e9bf0abf
8b3f799835c5742a8bd1a8dbc683c68dc68d818dc601c68cdbd1ca40a15da66697274711
31863158bf31bf31bf82bf4ce985e9bfe9bfe9bf0abf
8bc76957dab8359bc5a1748a2a052a018a01748b029ba6665b279447ec311ebf83bf581e
bf82bf4cbf02bf82e9bfe981e9bf0abf
881e75693f57795bb8d082d068350135029b0135013088b8985b7608b40d751e811ebf83
bf1e75bf81bf4c814cbf05bf81e9bf0bbf
83e9e52fc782c7693f823f5779817976027681da760276827957b482b4c7750175822fe5
bf82bf4cbf01bf814cbf81bfe981e9bf01bf01e90dbf

%
% Compression made this file 26.36% of the uncompressed size.
%


showpage

% stop using temporary dictionary
end

% restore original state
origstate restore

%%Trailer

%%EndDocument
 @endspecial 298 w Fg(Read)67 b(all)f(the)h(\002les)f(in)g(doc)h
(director)7 b(y)4649 3275 y @beginspecial 276 @llx 376
@lly 336 @urx 416 @ury 113 @rwi @setspecial
%%BeginDocument: green-bullet-on-white.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/fred/TeX/STYLES/Prosper/img/green-bullet-on-white.ps
%%Creator: XV Version 3.10a+FLmask  Rev: 12/29/94  -  by John Bradley
%%BoundingBox: 276 376 336 416
%%Pages: 1
%%DocumentFonts:
%%EndComments
%%EndProlog

%%Page: 1 1

% remember original state
/origstate save def

% build a temporary dictionary
20 dict begin

% define space for color conversions
/grays 60 string def  % space for gray scale line
/npixls 0 def
/rgbindx 0 def

% lower left corner
276 376 translate

% size of image (on paper, in 1/72inch coords)
59.97600 40.03200 scale

% define 'colorimage' if it isn't defined
%   ('colortogray' and 'mergeprocs' come from xwd2ps
%     via xgrab)
/colorimage where   % do we know about 'colorimage'?
  { pop }           % yes: pop off the 'dict' returned
  {                 % no:  define one
    /colortogray {  % define an RGB->I function
      /rgbdata exch store    % call input 'rgbdata'
      rgbdata length 3 idiv
      /npixls exch store
      /rgbindx 0 store
      0 1 npixls 1 sub {
        grays exch
        rgbdata rgbindx       get 20 mul    % Red
        rgbdata rgbindx 1 add get 32 mul    % Green
        rgbdata rgbindx 2 add get 12 mul    % Blue
        add add 64 idiv      % I = .5G + .31R + .18B
        put
        /rgbindx rgbindx 3 add store
      } for
      grays 0 npixls getinterval
    } bind def

    % Utility procedure for colorimage operator.
    % This procedure takes two procedures off the
    % stack and merges them into a single procedure.

    /mergeprocs { % def
      dup length
      3 -1 roll
      dup
      length
      dup
      5 1 roll
      3 -1 roll
      add
      array cvx
      dup
      3 -1 roll
      0 exch
      putinterval
      dup
      4 2 roll
      putinterval
    } bind def

    /colorimage { % def
      pop pop     % remove 'false 3' operands
      {colortogray} mergeprocs
      image
    } bind def
  } ifelse          % end of 'false' case



% define the colormap
/cmap 723 string def


% load up the colormap
currentfile cmap readhexstring
041808 049008 8c948c 045204 4c544c 04c804 84e284 449644 c4cbc4 0c380e 
04ac07 cce6cc 345e2c e4e7e4 046604 2c3a2c 347234 e4fee2 048208 64cc60 
34922c 24b224 04e404 044604 647264 242623 049f07 8cae8c 04bc06 24c61c 
f4f8f3 1c541c 04d804 1c621c 1c7220 0c280d 14910f 045e04 047c04 ccdcd0 
14ac18 1c481c 747473 04d105 0c6c0b 24852a 1c381c f4f1f3 acafac f4fef5 
0c310c acc6ac 049708 a4a4a3 3c4a44 148314 144812 9cea94 04b405 149e14 
1cbc1c 044004 e4fef4 dcdddd 748274 5c5959 4cba54 145b11 145413 147412 
c4fec4 e4f1e7 146411 088a0a 243028 09c207 fcf8f3 147c13 14c80e acceac 
3c3939 04f405 044e07 07a608 14d00f 0c1f10 0c900b d4d3d4 ecfee3 1c291d 
0c6e14 bcbfbd d4f6d4 909a94 4c5a50 0cac08 24ba24 547e54 0cbc0a 0c5c16 
0c7c0b fcf1fb acb8ac 1c311c aca7a9 e2e2e2 a4e2a4 0cc80a 6c9a6c 143715 
0c650a 0c840b 07de06 14970c 0c980a 0cb40a 848583 ecf0f0 c3c6c3 0c540d 
0c740c cccccc 74ce6c 30a02c 04ec05 54aa5c 6cb66c 9cfa9c 2c862c 5c926c 
6ca674 b4deac 9cda9c 34aa2c 6c7e6c acfeac 448244 34d22c 7d7d7c 6c6d6c 
445644 4c4d4c 1c7a19 1c3e1c 3c3f3c 2c422c 7c9a84 54c254 dceadc 144014 
343231 bccebc bcbabc 447244 6c6664 9c9d9c 7caa7c 349a38 6c7a74 84b69c 
1c4e18 898a89 ccfadc 1c6c2c b8e2c0 1c8a24 a1aaa1 3c4e3c 5f5e5c d8fed8 
24be24 78d670 688668 148a14 14a618 145624 0c480e 2c292b 142916 1c921c 
d4dad9 243828 143017 b4d2bc b4b7b5 1c961c 8c868c 247e24 144e13 04fa04 
246224 fcfefc 0c4e0c ace2b4 3caa3c 244e24 0c180c 949394 545454 ece9ec 
343634 2cb127 6c736c 0ca00c 0cda08 0c5c0b 0ccf06 146a0c b4b2b4 646464 
b4c2b4 0c3f0c ecfdf9 e4dedc ccfdcc 2c2f2b 142214 146b16 c4c2c2 545b54 
2cb62c 74ba74 346634 b4fcb0 244224 444242 246a24 e4feec 0ce204 f4f9fc 
f4eefc 444744 54b654 fcf9fc 0c9114 dcd6d4 ecfeec 0c7b14 0cc614 0c6314 
0c8414 
pop pop   % lose return values from readhexstring


% rlecmapimage expects to have 'w h bits matrix' on stack
/rlecmapimage {
  /buffer 1 string def
  /rgbval 3 string def
  /block  384 string def

  % proc to read a block from file, and return RGB data
  { currentfile buffer readhexstring pop
    /bcount exch 0 get store
    bcount 128 ge
    {  % it's a non-run block
      0 1 bcount 128 sub
      { currentfile buffer readhexstring pop pop

        % look up value in color map
        /rgbval cmap buffer 0 get 3 mul 3 getinterval store

        % and put it in position i*3 in block
        block exch 3 mul rgbval putinterval
      } for
      block  0  bcount 127 sub 3 mul  getinterval
    }

    { % else it's a run block
      currentfile buffer readhexstring pop pop

      % look up value in colormap
      /rgbval cmap buffer 0 get 3 mul 3 getinterval store

      0 1 bcount { block exch 3 mul rgbval putinterval } for

      block 0 bcount 1 add 3 mul getinterval
    } ifelse
  } % end of proc
  false 3 colorimage
} bind def


60 40 8			% dimensions of data
[60 0 0 -40 0 40]		% mapping matrix
rlecmapimage

10bf8131bf05bf03e98165e902e9046587bf3158ec31bfe9658265e9bf09bf
10bf8131bf04bf81e9bf01bf02e98265bfe982e965e901e981bf318131ec82ecbfe982e9
65bf0abf
12bf82751ebf83bf1ebf318231ec3102318111318131bf81bfe901e981bf318131bf01bf
01e90bbf
0fbf02e901bf023101ec021101a981d6a981a9118111318131bf14bf
0fbf8165e901e988e5bfd4ecd66add07808c80149dc2137f46a911d431bfe981e9bf0fbf

0fbf01e982bfe9318331a49ce28fe2454d37562456dc71567bab87a9d4bf81bfe981e9bf
81bf318131bf0abf
10bf8ac775bf311bde43224d37568656cb535f1a733c893cae8506a91131bfe9bf01bf81
58bf0abf
0fbf911ebf31b761a0442245ed56721a530a3a4e3a813a4e864e73c94246e3bf10bf
07bf81e9bf82bfe9bf92bf1ebf31ec4f0c38e2ef8e4d49561a530a3a6283624b052b8a2b
ce4e60c2dfe331bf4cbf0cbf
0abf81e9bf82bfe9ec8eec83de1f21778e786f01341a0a3a1c851c4b052b20168b162054
aa93df11312fe965bf0abf
0ebf8d3111883d77cdcf78646f0134530a810a1c911c4ece20167c517c16542893a9ec31
e965bf0abf
08bf01e999bfe91ebf316cc07743cd45786f49561a530a3a624b6b2b707c510151877c70
4edcaba9bfe981e9bf0abf
0bbf01e985bf27d34352cf90cf0e4d2656011a530a1c62ee2b20167c5102518816cc1db9
d611bfe9bf0abf
07bf81e9bf01bf90e9bf4c86d3445277d92c786f49721a0a3a853a4b0520167c827c51bd
88bd5116e44b157a11bf0cbf
0dbf8d3f0fc33d4403cfbb0e3756011a0a860a624b2b20167c817c5102510116854b897b
a911bf0bbf
08bf82e9e5bf97bf75dab209bcc021ef254d2649561a533a1c4b052b70167c037c811620
85203a853911bf0bbf
0bbf0131869eb6d3b0bc7748884845646f561acb0a7382734b2b812b1683167c16cc01cc
012b844b2813d4bf0bbf
0abf0231955e236db0c04463cf45646f5634cb533a73624b2b2016821670548854ce2b20
4b28e831bf0bbf
0abf023183b5b6d3b089b044436e45786f49341a871a0a733a626b2b200120896b4e6b05
2b1c5f9decbf0bbf
09bf8131bf97bf31d82e09d3b044cd485a786f1201cb1a530a73621c052b852b054e4b1c
0585053a282d58bf0bbf
0bbf9431bf556709b03844cd482c7864125634cb1a5f0a7382734b0501050162011c854b
0aae2d58bf0bbf
0bbf0131934a236dd3b0bc7743485a786f1201341acb535f3a813a1c011c0173023a8453
3b1458bf0bbf
0bbf8431bf0455098309d338778277ef2c852c266f1201348134cb83cb530a3a013a810a
5f815f0a850a1ab37d58bf0bbf
08bf81e9bf93bf31bf18d83209d338c044cd6e0e2c64126f0172837271cb5382530a5383
53ae531a851a01a57e58bf0bbf
0bbf01e5837600230901098138c082c0482c862c7864126f49568156728272341a811a72
0272864912bb841131bf0abf
03bf94e9bfe9bfe9bf1ebf1ebf275923b632099538c044ef81ef7881786481646f816fad
84adea01ea560156882449ad2da3115831bf0abf
04bf02e992654ce61e75bf0d185523b66d0995bcc043cd2c812c7881786483646f64f001
f08b6f496f49642d6382e3314cbf0abf
01bf85e9e5e9652fc784c7693fc7698a69c7d2b200232eb60929bc84bc6343ef2c862c78
45784d78ed82ed6f6489644d45a3afa2114c31bf0abf
01e58175c783c769d5eb8ceb797679dab87908db67c4b66d876d9538b0447743ef84ef6e
2c78458e455a457864788ecfbe9fd4315831bf0abf
88e5750d3f5779da98d083d0689b3501358d5d0236c45567b6320995b04477cd92cdef6e
2c6e5ad95acf782c4517813e31bf2fbf0bbf
887569575bd0689bc5ba83ba8a2a8a878aca2a74db5955b284b23209d3b081b077017701
cd016e02ef876e2c6e4810a4d4bf01bf814cbf0abf
873f79b835c5ba2a9a829aa8410141868de1d104c690d881d85583552e6d958b9538b0c0
77cd03cd6377afcd84cd4321c1d483d4e9654c814cbf0abf
88575b9b742ad1418de181e15081509603968450c8d759d881d8b283b2326d0981099585
9538bcb0381f871f95c3995ca931bf81bfe981e9bf0bbf
8779b8c58ad1c6e750855096d7b119b104b184d7b119d855845523b2b66d016d83952995
2987296de09211d431bf01bf01e90cbf
8979d0c52aa88de15096b181b119041901b18796c80fd74a59b2b602b6016d86326d328f
ac0b318331bf31bf01bf81e9bf0cbf
88575b9b742ad1c68de186e1c850c850c850865096c850e1e70487045e8ca7912e672e85
2e8cac33473101318158bf02bf82e9bfe981e9bf0abf
8b3f799835c5742a8bd1a8dbc683c68dc68d818dc601c68cdbd1ca40a15da66697274711
31863158bf31bf31bf82bf4ce985e9bfe9bfe9bf0abf
8bc76957dab8359bc5a1748a2a052a018a01748b029ba6665b279447ec311ebf83bf581e
bf82bf4cbf02bf82e9bfe981e9bf0abf
881e75693f57795bb8d082d068350135029b0135013088b8985b7608b40d751e811ebf83
bf1e75bf81bf4c814cbf05bf81e9bf0bbf
83e9e52fc782c7693f823f5779817976027681da760276827957b482b4c7750175822fe5
bf82bf4cbf01bf814cbf81bfe981e9bf01bf01e90dbf

%
% Compression made this file 26.36% of the uncompressed size.
%


showpage

% stop using temporary dictionary
end

% restore original state
origstate restore

%%Trailer

%%EndDocument
 @endspecial 298 w(See)66 b(the)i(./src/main.cpp)d(e)-7
b(xample)4649 3646 y @beginspecial 276 @llx 376 @lly
336 @urx 416 @ury 113 @rwi @setspecial
%%BeginDocument: green-bullet-on-white.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/fred/TeX/STYLES/Prosper/img/green-bullet-on-white.ps
%%Creator: XV Version 3.10a+FLmask  Rev: 12/29/94  -  by John Bradley
%%BoundingBox: 276 376 336 416
%%Pages: 1
%%DocumentFonts:
%%EndComments
%%EndProlog

%%Page: 1 1

% remember original state
/origstate save def

% build a temporary dictionary
20 dict begin

% define space for color conversions
/grays 60 string def  % space for gray scale line
/npixls 0 def
/rgbindx 0 def

% lower left corner
276 376 translate

% size of image (on paper, in 1/72inch coords)
59.97600 40.03200 scale

% define 'colorimage' if it isn't defined
%   ('colortogray' and 'mergeprocs' come from xwd2ps
%     via xgrab)
/colorimage where   % do we know about 'colorimage'?
  { pop }           % yes: pop off the 'dict' returned
  {                 % no:  define one
    /colortogray {  % define an RGB->I function
      /rgbdata exch store    % call input 'rgbdata'
      rgbdata length 3 idiv
      /npixls exch store
      /rgbindx 0 store
      0 1 npixls 1 sub {
        grays exch
        rgbdata rgbindx       get 20 mul    % Red
        rgbdata rgbindx 1 add get 32 mul    % Green
        rgbdata rgbindx 2 add get 12 mul    % Blue
        add add 64 idiv      % I = .5G + .31R + .18B
        put
        /rgbindx rgbindx 3 add store
      } for
      grays 0 npixls getinterval
    } bind def

    % Utility procedure for colorimage operator.
    % This procedure takes two procedures off the
    % stack and merges them into a single procedure.

    /mergeprocs { % def
      dup length
      3 -1 roll
      dup
      length
      dup
      5 1 roll
      3 -1 roll
      add
      array cvx
      dup
      3 -1 roll
      0 exch
      putinterval
      dup
      4 2 roll
      putinterval
    } bind def

    /colorimage { % def
      pop pop     % remove 'false 3' operands
      {colortogray} mergeprocs
      image
    } bind def
  } ifelse          % end of 'false' case



% define the colormap
/cmap 723 string def


% load up the colormap
currentfile cmap readhexstring
041808 049008 8c948c 045204 4c544c 04c804 84e284 449644 c4cbc4 0c380e 
04ac07 cce6cc 345e2c e4e7e4 046604 2c3a2c 347234 e4fee2 048208 64cc60 
34922c 24b224 04e404 044604 647264 242623 049f07 8cae8c 04bc06 24c61c 
f4f8f3 1c541c 04d804 1c621c 1c7220 0c280d 14910f 045e04 047c04 ccdcd0 
14ac18 1c481c 747473 04d105 0c6c0b 24852a 1c381c f4f1f3 acafac f4fef5 
0c310c acc6ac 049708 a4a4a3 3c4a44 148314 144812 9cea94 04b405 149e14 
1cbc1c 044004 e4fef4 dcdddd 748274 5c5959 4cba54 145b11 145413 147412 
c4fec4 e4f1e7 146411 088a0a 243028 09c207 fcf8f3 147c13 14c80e acceac 
3c3939 04f405 044e07 07a608 14d00f 0c1f10 0c900b d4d3d4 ecfee3 1c291d 
0c6e14 bcbfbd d4f6d4 909a94 4c5a50 0cac08 24ba24 547e54 0cbc0a 0c5c16 
0c7c0b fcf1fb acb8ac 1c311c aca7a9 e2e2e2 a4e2a4 0cc80a 6c9a6c 143715 
0c650a 0c840b 07de06 14970c 0c980a 0cb40a 848583 ecf0f0 c3c6c3 0c540d 
0c740c cccccc 74ce6c 30a02c 04ec05 54aa5c 6cb66c 9cfa9c 2c862c 5c926c 
6ca674 b4deac 9cda9c 34aa2c 6c7e6c acfeac 448244 34d22c 7d7d7c 6c6d6c 
445644 4c4d4c 1c7a19 1c3e1c 3c3f3c 2c422c 7c9a84 54c254 dceadc 144014 
343231 bccebc bcbabc 447244 6c6664 9c9d9c 7caa7c 349a38 6c7a74 84b69c 
1c4e18 898a89 ccfadc 1c6c2c b8e2c0 1c8a24 a1aaa1 3c4e3c 5f5e5c d8fed8 
24be24 78d670 688668 148a14 14a618 145624 0c480e 2c292b 142916 1c921c 
d4dad9 243828 143017 b4d2bc b4b7b5 1c961c 8c868c 247e24 144e13 04fa04 
246224 fcfefc 0c4e0c ace2b4 3caa3c 244e24 0c180c 949394 545454 ece9ec 
343634 2cb127 6c736c 0ca00c 0cda08 0c5c0b 0ccf06 146a0c b4b2b4 646464 
b4c2b4 0c3f0c ecfdf9 e4dedc ccfdcc 2c2f2b 142214 146b16 c4c2c2 545b54 
2cb62c 74ba74 346634 b4fcb0 244224 444242 246a24 e4feec 0ce204 f4f9fc 
f4eefc 444744 54b654 fcf9fc 0c9114 dcd6d4 ecfeec 0c7b14 0cc614 0c6314 
0c8414 
pop pop   % lose return values from readhexstring


% rlecmapimage expects to have 'w h bits matrix' on stack
/rlecmapimage {
  /buffer 1 string def
  /rgbval 3 string def
  /block  384 string def

  % proc to read a block from file, and return RGB data
  { currentfile buffer readhexstring pop
    /bcount exch 0 get store
    bcount 128 ge
    {  % it's a non-run block
      0 1 bcount 128 sub
      { currentfile buffer readhexstring pop pop

        % look up value in color map
        /rgbval cmap buffer 0 get 3 mul 3 getinterval store

        % and put it in position i*3 in block
        block exch 3 mul rgbval putinterval
      } for
      block  0  bcount 127 sub 3 mul  getinterval
    }

    { % else it's a run block
      currentfile buffer readhexstring pop pop

      % look up value in colormap
      /rgbval cmap buffer 0 get 3 mul 3 getinterval store

      0 1 bcount { block exch 3 mul rgbval putinterval } for

      block 0 bcount 1 add 3 mul getinterval
    } ifelse
  } % end of proc
  false 3 colorimage
} bind def


60 40 8			% dimensions of data
[60 0 0 -40 0 40]		% mapping matrix
rlecmapimage

10bf8131bf05bf03e98165e902e9046587bf3158ec31bfe9658265e9bf09bf
10bf8131bf04bf81e9bf01bf02e98265bfe982e965e901e981bf318131ec82ecbfe982e9
65bf0abf
12bf82751ebf83bf1ebf318231ec3102318111318131bf81bfe901e981bf318131bf01bf
01e90bbf
0fbf02e901bf023101ec021101a981d6a981a9118111318131bf14bf
0fbf8165e901e988e5bfd4ecd66add07808c80149dc2137f46a911d431bfe981e9bf0fbf

0fbf01e982bfe9318331a49ce28fe2454d37562456dc71567bab87a9d4bf81bfe981e9bf
81bf318131bf0abf
10bf8ac775bf311bde43224d37568656cb535f1a733c893cae8506a91131bfe9bf01bf81
58bf0abf
0fbf911ebf31b761a0442245ed56721a530a3a4e3a813a4e864e73c94246e3bf10bf
07bf81e9bf82bfe9bf92bf1ebf31ec4f0c38e2ef8e4d49561a530a3a6283624b052b8a2b
ce4e60c2dfe331bf4cbf0cbf
0abf81e9bf82bfe9ec8eec83de1f21778e786f01341a0a3a1c851c4b052b20168b162054
aa93df11312fe965bf0abf
0ebf8d3111883d77cdcf78646f0134530a810a1c911c4ece20167c517c16542893a9ec31
e965bf0abf
08bf01e999bfe91ebf316cc07743cd45786f49561a530a3a624b6b2b707c510151877c70
4edcaba9bfe981e9bf0abf
0bbf01e985bf27d34352cf90cf0e4d2656011a530a1c62ee2b20167c5102518816cc1db9
d611bfe9bf0abf
07bf81e9bf01bf90e9bf4c86d3445277d92c786f49721a0a3a853a4b0520167c827c51bd
88bd5116e44b157a11bf0cbf
0dbf8d3f0fc33d4403cfbb0e3756011a0a860a624b2b20167c817c5102510116854b897b
a911bf0bbf
08bf82e9e5bf97bf75dab209bcc021ef254d2649561a533a1c4b052b70167c037c811620
85203a853911bf0bbf
0bbf0131869eb6d3b0bc7748884845646f561acb0a7382734b2b812b1683167c16cc01cc
012b844b2813d4bf0bbf
0abf0231955e236db0c04463cf45646f5634cb533a73624b2b2016821670548854ce2b20
4b28e831bf0bbf
0abf023183b5b6d3b089b044436e45786f49341a871a0a733a626b2b200120896b4e6b05
2b1c5f9decbf0bbf
09bf8131bf97bf31d82e09d3b044cd485a786f1201cb1a530a73621c052b852b054e4b1c
0585053a282d58bf0bbf
0bbf9431bf556709b03844cd482c7864125634cb1a5f0a7382734b0501050162011c854b
0aae2d58bf0bbf
0bbf0131934a236dd3b0bc7743485a786f1201341acb535f3a813a1c011c0173023a8453
3b1458bf0bbf
0bbf8431bf0455098309d338778277ef2c852c266f1201348134cb83cb530a3a013a810a
5f815f0a850a1ab37d58bf0bbf
08bf81e9bf93bf31bf18d83209d338c044cd6e0e2c64126f0172837271cb5382530a5383
53ae531a851a01a57e58bf0bbf
0bbf01e5837600230901098138c082c0482c862c7864126f49568156728272341a811a72
0272864912bb841131bf0abf
03bf94e9bfe9bfe9bf1ebf1ebf275923b632099538c044ef81ef7881786481646f816fad
84adea01ea560156882449ad2da3115831bf0abf
04bf02e992654ce61e75bf0d185523b66d0995bcc043cd2c812c7881786483646f64f001
f08b6f496f49642d6382e3314cbf0abf
01bf85e9e5e9652fc784c7693fc7698a69c7d2b200232eb60929bc84bc6343ef2c862c78
45784d78ed82ed6f6489644d45a3afa2114c31bf0abf
01e58175c783c769d5eb8ceb797679dab87908db67c4b66d876d9538b0447743ef84ef6e
2c78458e455a457864788ecfbe9fd4315831bf0abf
88e5750d3f5779da98d083d0689b3501358d5d0236c45567b6320995b04477cd92cdef6e
2c6e5ad95acf782c4517813e31bf2fbf0bbf
887569575bd0689bc5ba83ba8a2a8a878aca2a74db5955b284b23209d3b081b077017701
cd016e02ef876e2c6e4810a4d4bf01bf814cbf0abf
873f79b835c5ba2a9a829aa8410141868de1d104c690d881d85583552e6d958b9538b0c0
77cd03cd6377afcd84cd4321c1d483d4e9654c814cbf0abf
88575b9b742ad1418de181e15081509603968450c8d759d881d8b283b2326d0981099585
9538bcb0381f871f95c3995ca931bf81bfe981e9bf0bbf
8779b8c58ad1c6e750855096d7b119b104b184d7b119d855845523b2b66d016d83952995
2987296de09211d431bf01bf01e90cbf
8979d0c52aa88de15096b181b119041901b18796c80fd74a59b2b602b6016d86326d328f
ac0b318331bf31bf01bf81e9bf0cbf
88575b9b742ad1c68de186e1c850c850c850865096c850e1e70487045e8ca7912e672e85
2e8cac33473101318158bf02bf82e9bfe981e9bf0abf
8b3f799835c5742a8bd1a8dbc683c68dc68d818dc601c68cdbd1ca40a15da66697274711
31863158bf31bf31bf82bf4ce985e9bfe9bfe9bf0abf
8bc76957dab8359bc5a1748a2a052a018a01748b029ba6665b279447ec311ebf83bf581e
bf82bf4cbf02bf82e9bfe981e9bf0abf
881e75693f57795bb8d082d068350135029b0135013088b8985b7608b40d751e811ebf83
bf1e75bf81bf4c814cbf05bf81e9bf0bbf
83e9e52fc782c7693f823f5779817976027681da760276827957b482b4c7750175822fe5
bf82bf4cbf01bf814cbf81bfe981e9bf01bf01e90dbf

%
% Compression made this file 26.36% of the uncompressed size.
%


showpage

% stop using temporary dictionary
end

% restore original state
origstate restore

%%Trailer

%%EndDocument
 @endspecial 298 w(Understand)67 b(the)g(callbac)-5 b(ks)64
b(\(DInst.h)j(is)f(easy\))4649 4017 y @beginspecial 276
@llx 376 @lly 336 @urx 416 @ury 113 @rwi @setspecial
%%BeginDocument: green-bullet-on-white.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/fred/TeX/STYLES/Prosper/img/green-bullet-on-white.ps
%%Creator: XV Version 3.10a+FLmask  Rev: 12/29/94  -  by John Bradley
%%BoundingBox: 276 376 336 416
%%Pages: 1
%%DocumentFonts:
%%EndComments
%%EndProlog

%%Page: 1 1

% remember original state
/origstate save def

% build a temporary dictionary
20 dict begin

% define space for color conversions
/grays 60 string def  % space for gray scale line
/npixls 0 def
/rgbindx 0 def

% lower left corner
276 376 translate

% size of image (on paper, in 1/72inch coords)
59.97600 40.03200 scale

% define 'colorimage' if it isn't defined
%   ('colortogray' and 'mergeprocs' come from xwd2ps
%     via xgrab)
/colorimage where   % do we know about 'colorimage'?
  { pop }           % yes: pop off the 'dict' returned
  {                 % no:  define one
    /colortogray {  % define an RGB->I function
      /rgbdata exch store    % call input 'rgbdata'
      rgbdata length 3 idiv
      /npixls exch store
      /rgbindx 0 store
      0 1 npixls 1 sub {
        grays exch
        rgbdata rgbindx       get 20 mul    % Red
        rgbdata rgbindx 1 add get 32 mul    % Green
        rgbdata rgbindx 2 add get 12 mul    % Blue
        add add 64 idiv      % I = .5G + .31R + .18B
        put
        /rgbindx rgbindx 3 add store
      } for
      grays 0 npixls getinterval
    } bind def

    % Utility procedure for colorimage operator.
    % This procedure takes two procedures off the
    % stack and merges them into a single procedure.

    /mergeprocs { % def
      dup length
      3 -1 roll
      dup
      length
      dup
      5 1 roll
      3 -1 roll
      add
      array cvx
      dup
      3 -1 roll
      0 exch
      putinterval
      dup
      4 2 roll
      putinterval
    } bind def

    /colorimage { % def
      pop pop     % remove 'false 3' operands
      {colortogray} mergeprocs
      image
    } bind def
  } ifelse          % end of 'false' case



% define the colormap
/cmap 723 string def


% load up the colormap
currentfile cmap readhexstring
041808 049008 8c948c 045204 4c544c 04c804 84e284 449644 c4cbc4 0c380e 
04ac07 cce6cc 345e2c e4e7e4 046604 2c3a2c 347234 e4fee2 048208 64cc60 
34922c 24b224 04e404 044604 647264 242623 049f07 8cae8c 04bc06 24c61c 
f4f8f3 1c541c 04d804 1c621c 1c7220 0c280d 14910f 045e04 047c04 ccdcd0 
14ac18 1c481c 747473 04d105 0c6c0b 24852a 1c381c f4f1f3 acafac f4fef5 
0c310c acc6ac 049708 a4a4a3 3c4a44 148314 144812 9cea94 04b405 149e14 
1cbc1c 044004 e4fef4 dcdddd 748274 5c5959 4cba54 145b11 145413 147412 
c4fec4 e4f1e7 146411 088a0a 243028 09c207 fcf8f3 147c13 14c80e acceac 
3c3939 04f405 044e07 07a608 14d00f 0c1f10 0c900b d4d3d4 ecfee3 1c291d 
0c6e14 bcbfbd d4f6d4 909a94 4c5a50 0cac08 24ba24 547e54 0cbc0a 0c5c16 
0c7c0b fcf1fb acb8ac 1c311c aca7a9 e2e2e2 a4e2a4 0cc80a 6c9a6c 143715 
0c650a 0c840b 07de06 14970c 0c980a 0cb40a 848583 ecf0f0 c3c6c3 0c540d 
0c740c cccccc 74ce6c 30a02c 04ec05 54aa5c 6cb66c 9cfa9c 2c862c 5c926c 
6ca674 b4deac 9cda9c 34aa2c 6c7e6c acfeac 448244 34d22c 7d7d7c 6c6d6c 
445644 4c4d4c 1c7a19 1c3e1c 3c3f3c 2c422c 7c9a84 54c254 dceadc 144014 
343231 bccebc bcbabc 447244 6c6664 9c9d9c 7caa7c 349a38 6c7a74 84b69c 
1c4e18 898a89 ccfadc 1c6c2c b8e2c0 1c8a24 a1aaa1 3c4e3c 5f5e5c d8fed8 
24be24 78d670 688668 148a14 14a618 145624 0c480e 2c292b 142916 1c921c 
d4dad9 243828 143017 b4d2bc b4b7b5 1c961c 8c868c 247e24 144e13 04fa04 
246224 fcfefc 0c4e0c ace2b4 3caa3c 244e24 0c180c 949394 545454 ece9ec 
343634 2cb127 6c736c 0ca00c 0cda08 0c5c0b 0ccf06 146a0c b4b2b4 646464 
b4c2b4 0c3f0c ecfdf9 e4dedc ccfdcc 2c2f2b 142214 146b16 c4c2c2 545b54 
2cb62c 74ba74 346634 b4fcb0 244224 444242 246a24 e4feec 0ce204 f4f9fc 
f4eefc 444744 54b654 fcf9fc 0c9114 dcd6d4 ecfeec 0c7b14 0cc614 0c6314 
0c8414 
pop pop   % lose return values from readhexstring


% rlecmapimage expects to have 'w h bits matrix' on stack
/rlecmapimage {
  /buffer 1 string def
  /rgbval 3 string def
  /block  384 string def

  % proc to read a block from file, and return RGB data
  { currentfile buffer readhexstring pop
    /bcount exch 0 get store
    bcount 128 ge
    {  % it's a non-run block
      0 1 bcount 128 sub
      { currentfile buffer readhexstring pop pop

        % look up value in color map
        /rgbval cmap buffer 0 get 3 mul 3 getinterval store

        % and put it in position i*3 in block
        block exch 3 mul rgbval putinterval
      } for
      block  0  bcount 127 sub 3 mul  getinterval
    }

    { % else it's a run block
      currentfile buffer readhexstring pop pop

      % look up value in colormap
      /rgbval cmap buffer 0 get 3 mul 3 getinterval store

      0 1 bcount { block exch 3 mul rgbval putinterval } for

      block 0 bcount 1 add 3 mul getinterval
    } ifelse
  } % end of proc
  false 3 colorimage
} bind def


60 40 8			% dimensions of data
[60 0 0 -40 0 40]		% mapping matrix
rlecmapimage

10bf8131bf05bf03e98165e902e9046587bf3158ec31bfe9658265e9bf09bf
10bf8131bf04bf81e9bf01bf02e98265bfe982e965e901e981bf318131ec82ecbfe982e9
65bf0abf
12bf82751ebf83bf1ebf318231ec3102318111318131bf81bfe901e981bf318131bf01bf
01e90bbf
0fbf02e901bf023101ec021101a981d6a981a9118111318131bf14bf
0fbf8165e901e988e5bfd4ecd66add07808c80149dc2137f46a911d431bfe981e9bf0fbf

0fbf01e982bfe9318331a49ce28fe2454d37562456dc71567bab87a9d4bf81bfe981e9bf
81bf318131bf0abf
10bf8ac775bf311bde43224d37568656cb535f1a733c893cae8506a91131bfe9bf01bf81
58bf0abf
0fbf911ebf31b761a0442245ed56721a530a3a4e3a813a4e864e73c94246e3bf10bf
07bf81e9bf82bfe9bf92bf1ebf31ec4f0c38e2ef8e4d49561a530a3a6283624b052b8a2b
ce4e60c2dfe331bf4cbf0cbf
0abf81e9bf82bfe9ec8eec83de1f21778e786f01341a0a3a1c851c4b052b20168b162054
aa93df11312fe965bf0abf
0ebf8d3111883d77cdcf78646f0134530a810a1c911c4ece20167c517c16542893a9ec31
e965bf0abf
08bf01e999bfe91ebf316cc07743cd45786f49561a530a3a624b6b2b707c510151877c70
4edcaba9bfe981e9bf0abf
0bbf01e985bf27d34352cf90cf0e4d2656011a530a1c62ee2b20167c5102518816cc1db9
d611bfe9bf0abf
07bf81e9bf01bf90e9bf4c86d3445277d92c786f49721a0a3a853a4b0520167c827c51bd
88bd5116e44b157a11bf0cbf
0dbf8d3f0fc33d4403cfbb0e3756011a0a860a624b2b20167c817c5102510116854b897b
a911bf0bbf
08bf82e9e5bf97bf75dab209bcc021ef254d2649561a533a1c4b052b70167c037c811620
85203a853911bf0bbf
0bbf0131869eb6d3b0bc7748884845646f561acb0a7382734b2b812b1683167c16cc01cc
012b844b2813d4bf0bbf
0abf0231955e236db0c04463cf45646f5634cb533a73624b2b2016821670548854ce2b20
4b28e831bf0bbf
0abf023183b5b6d3b089b044436e45786f49341a871a0a733a626b2b200120896b4e6b05
2b1c5f9decbf0bbf
09bf8131bf97bf31d82e09d3b044cd485a786f1201cb1a530a73621c052b852b054e4b1c
0585053a282d58bf0bbf
0bbf9431bf556709b03844cd482c7864125634cb1a5f0a7382734b0501050162011c854b
0aae2d58bf0bbf
0bbf0131934a236dd3b0bc7743485a786f1201341acb535f3a813a1c011c0173023a8453
3b1458bf0bbf
0bbf8431bf0455098309d338778277ef2c852c266f1201348134cb83cb530a3a013a810a
5f815f0a850a1ab37d58bf0bbf
08bf81e9bf93bf31bf18d83209d338c044cd6e0e2c64126f0172837271cb5382530a5383
53ae531a851a01a57e58bf0bbf
0bbf01e5837600230901098138c082c0482c862c7864126f49568156728272341a811a72
0272864912bb841131bf0abf
03bf94e9bfe9bfe9bf1ebf1ebf275923b632099538c044ef81ef7881786481646f816fad
84adea01ea560156882449ad2da3115831bf0abf
04bf02e992654ce61e75bf0d185523b66d0995bcc043cd2c812c7881786483646f64f001
f08b6f496f49642d6382e3314cbf0abf
01bf85e9e5e9652fc784c7693fc7698a69c7d2b200232eb60929bc84bc6343ef2c862c78
45784d78ed82ed6f6489644d45a3afa2114c31bf0abf
01e58175c783c769d5eb8ceb797679dab87908db67c4b66d876d9538b0447743ef84ef6e
2c78458e455a457864788ecfbe9fd4315831bf0abf
88e5750d3f5779da98d083d0689b3501358d5d0236c45567b6320995b04477cd92cdef6e
2c6e5ad95acf782c4517813e31bf2fbf0bbf
887569575bd0689bc5ba83ba8a2a8a878aca2a74db5955b284b23209d3b081b077017701
cd016e02ef876e2c6e4810a4d4bf01bf814cbf0abf
873f79b835c5ba2a9a829aa8410141868de1d104c690d881d85583552e6d958b9538b0c0
77cd03cd6377afcd84cd4321c1d483d4e9654c814cbf0abf
88575b9b742ad1418de181e15081509603968450c8d759d881d8b283b2326d0981099585
9538bcb0381f871f95c3995ca931bf81bfe981e9bf0bbf
8779b8c58ad1c6e750855096d7b119b104b184d7b119d855845523b2b66d016d83952995
2987296de09211d431bf01bf01e90cbf
8979d0c52aa88de15096b181b119041901b18796c80fd74a59b2b602b6016d86326d328f
ac0b318331bf31bf01bf81e9bf0cbf
88575b9b742ad1c68de186e1c850c850c850865096c850e1e70487045e8ca7912e672e85
2e8cac33473101318158bf02bf82e9bfe981e9bf0abf
8b3f799835c5742a8bd1a8dbc683c68dc68d818dc601c68cdbd1ca40a15da66697274711
31863158bf31bf31bf82bf4ce985e9bfe9bfe9bf0abf
8bc76957dab8359bc5a1748a2a052a018a01748b029ba6665b279447ec311ebf83bf581e
bf82bf4cbf02bf82e9bfe981e9bf0abf
881e75693f57795bb8d082d068350135029b0135013088b8985b7608b40d751e811ebf83
bf1e75bf81bf4c814cbf05bf81e9bf0bbf
83e9e52fc782c7693f823f5779817976027681da760276827957b482b4c7750175822fe5
bf82bf4cbf01bf814cbf81bfe981e9bf01bf01e90dbf

%
% Compression made this file 26.36% of the uncompressed size.
%


showpage

% stop using temporary dictionary
end

% restore original state
origstate restore

%%Trailer

%%EndDocument
 @endspecial 298 w(Understand)h(the)g(con\002gur)n(ation)e(\002les)h
(\(*.conf\))10245 5222 y
 0 setgray
 10245 5222 a 4500 6000 a
 tx@Dict begin -90 Rot  end
 4500
6000 a eop
%%Page: 23 23
23 22 bop 4500 6000 a
 tx@Dict begin 90 Rot  end
 4500 6000 a 5981 1792 a @beginspecial
-168 @llx 371 @lly 782 @urx 421 @ury 2834 @rwi 283 @rhi
@setspecial
%%BeginDocument: barre-rico.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /ufs/goualard/TEMP/barre_hor.ps
%%Creator: XV Version 3.10a  Rev: 12/29/94 (PNG patch 1.2)  -  by John Bradley
%%BoundingBox: -168 371 782 421
%%Pages: 1
%%DocumentFonts:
%%EndComments
%%EndProlog

%%Page: 1 1

% remember original state
/origstate save def

% build a temporary dictionary
20 dict begin

% define space for color conversions
/grays 950 string def  % space for gray scale line
/npixls 0 def
/rgbindx 0 def

% lower left corner
-168 371 translate

% size of image (on paper, in 1/72inch coords)
949.96800 49.96800 scale

% define 'colorimage' if it isn't defined
%   ('colortogray' and 'mergeprocs' come from xwd2ps
%     via xgrab)
/colorimage where   % do we know about 'colorimage'?
  { pop }           % yes: pop off the 'dict' returned
  {                 % no:  define one
    /colortogray {  % define an RGB->I function
      /rgbdata exch store    % call input 'rgbdata'
      rgbdata length 3 idiv
      /npixls exch store
      /rgbindx 0 store
      0 1 npixls 1 sub {
        grays exch
        rgbdata rgbindx       get 20 mul    % Red
        rgbdata rgbindx 1 add get 32 mul    % Green
        rgbdata rgbindx 2 add get 12 mul    % Blue
        add add 64 idiv      % I = .5G + .31R + .18B
        put
        /rgbindx rgbindx 3 add store
      } for
      grays 0 npixls getinterval
    } bind def

    % Utility procedure for colorimage operator.
    % This procedure takes two procedures off the
    % stack and merges them into a single procedure.

    /mergeprocs { % def
      dup length
      3 -1 roll
      dup
      length
      dup
      5 1 roll
      3 -1 roll
      add
      array cvx
      dup
      3 -1 roll
      0 exch
      putinterval
      dup
      4 2 roll
      putinterval
    } bind def

    /colorimage { % def
      pop pop     % remove 'false 3' operands
      {colortogray} mergeprocs
      image
    } bind def
  } ifelse          % end of 'false' case



% define the colormap
/cmap 117 string def


% load up the colormap
currentfile cmap readhexstring
bcfe04 dcfe84 ccfe44 ecfec4 c4fe24 d4fe64 f4fee4 e4fea4 bcfe14 ccfe54 
f4fed4 c4fe34 d4fe74 fcfef4 ecfeb4 e4fe94 f4fecc fcfee4 ecfeac c4fe1c 
d4fe54 ccfe3c dcfe74 bcfe0c dcfe8c ccfe4c ecfecc c4fe2c d4fe6c e4feac 
bcfe1c f4fedc c4fe3c fcfefc ecfebc e4fe9c fcfeec d4fe5c dcfe7c 
pop pop   % lose return values from readhexstring


% rlecmapimage expects to have 'w h bits matrix' on stack
/rlecmapimage {
  /buffer 1 string def
  /rgbval 3 string def
  /block  384 string def

  % proc to read a block from file, and return RGB data
  { currentfile buffer readhexstring pop
    /bcount exch 0 get store
    bcount 128 ge
    {  % it's a non-run block
      0 1 bcount 128 sub
      { currentfile buffer readhexstring pop pop

        % look up value in color map
        /rgbval cmap buffer 0 get 3 mul 3 getinterval store

        % and put it in position i*3 in block
        block exch 3 mul rgbval putinterval
      } for
      block  0  bcount 127 sub 3 mul  getinterval
    }

    { % else it's a run block
      currentfile buffer readhexstring pop pop

      % look up value in colormap
      /rgbval cmap buffer 0 get 3 mul 3 getinterval store

      0 1 bcount { block exch 3 mul rgbval putinterval } for

      block 0 bcount 1 add 3 mul getinterval
    } ifelse
  } % end of proc
  false 3 colorimage
} bind def


950 50 8			% dimensions of data
[950 0 0 -50 0 50]		% mapping matrix
rlecmapimage

7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f210221870d1f220e220311212a21
7f217f217f217f217f217f2175218211030e820e220e820e220e860e220e23050b048404
090e24212a21
7f217f217f217f217f217f2171218e110312260b041e131e131e131e131e871e17001702
1d24212c21
7f217f217f217f217f217f216921830d1f220e870e221226200408000b00841702070d21
0521842403100d212321
7f217f217f217f217f217f2121218524220f231f213a218f0d0a220e220e23051b041e13
1e0817000c008408190706210421851103221f0d212521
7f217f217f217f217f217f211e2189240e1c1b17000825242136218a0d1026021b041e13
081700110085172001030d210421840316030d212821
7f217f217f217f217f21342186111a120f070a215721860d1110220e220e860e12182504
17000300821b1f212521851f0e2326230e080e841d010908001100820820090209840c1d
1a06210521841026230d212a21
7f217f217f217f21792186241f10220e220e820e220e820e220e820e220e820e220e820e
220e830e070f01010182070a2117218b0610231c1508001708090a2151218e0d1f101d01
14201b1e131e131e08000700820c0d211021840d100311210921881103220e07050b0800
8400171e081e821e081e851e081e0817001000851e2009181a210b21850d22261d24212c
21
7f217f217f217f21472184241f10220e820e220e820e220e820e220e820e220e820e220e
820e220e810e2283221f0d210e219a241f10070f1c09151e041e131e131e131e131e131e
131e131e131e821e080002008b17081410210d1110220e220e820e220e820e220e010e81
2301880126012616191b08000500820422212f2182240d211921890d0a0e072625150417
00100082201a210921890d1110220e23011620048304051f210421891103231c15131e08
1700190082171e090309820c1a210e21841f0e0a0d212e21
7f217f217f217f213f2190241f100e070f011c1920041e131e081e0882081e0882081e08
82081e0882081e0803088304250a2107218b241f030e12181619151e08001d00811e268c
2614201b041e131e131e131e088108178117000f0082091f211521840d0610220e0f0e88
120f012625020c11211321890d0a22121809040817001300831e050a2105218a0d1f101d
0114201b1e170004008408260e220e860e230c020417001800821e2009020982181a2114
21810d213321
7f211221842422121f217f217f217f211221850d0a220e220e820e220e820e220e820e22
0e010e881d0f1605090b041e178117001a008f1e22210d1110221d0f0116190b041e1781
1700220001171f00820b2221102189111022120f0125151b1e011e81081e821e081e821e
081e821e081e821e081e821e1700030082171c0e110e861d01251b1e170015008220181d
021d81220e020e86070119150417000b0086081e131e08170019008308091d210c21830d
1f24214121
7f210721830d0a220e040e83230504088308052421492185240a22230f01130182070a21
7f2106218c240a03220e220e220e220e1d0f840f01231f217f210a2199240a221d0f0116
191b1e131e131e131e131e131e131e131e17002300810b16871609200413081700490087
171e051d1f10220e0a0e8712232625201b1e178117001b000108011e81081e821e081e82
1e081e821e081e821e081e831e0817000c0085171e201e08000300831720090c840c090b
1b1e871e081e081e0817001f0083081e201e821e20090809820c03210b21860d0a222307
0d210521010d3a21
7f21042188112218141b13081e088108178117000300821b1f2140218b241f100e070f1c
25021b1317811700140083081410217f218c241f10070f05021b04131e131e011e810817
811700010093170207220e220e220e220e220e220e22120f18018301231f216e218c0d0a
22120f0116191b130817004c000117811e208120090509822008002c008308200c188518
0c09021b1e821e081e821e081e821e081e811e08810817811700400081171e871e09181a
061c08000300851e200b1e1700250083171e200983091806211721820d110a010a841d26
1918214421
6c219a1103220e220e220e220e220e220e220e220e220e22120f050b08000d0093091d22
0e220e220e220e220e220e220e2203112127218c241f100e070f0105021b1e08001e0082
0422216a2189241f10220e230f1826018201260182012601890126160509150408170011
0085131e131e131e821e131e831e131e0882081700020083082524215e2183240a220e82
0e220e8b0e22120f011605190b1308178117004d008817081e2009181d06210821810900
22000408071e0117510085080b09181a21022182060900040082081700120082171e000f
00011e83091806210d21821a031d8e1d221d221d0e22030a110d240d240d810d21012182
2406214521
68219711030f252004131e131e131e131e131e131e131e131e131e821e08001100011e83
131e131e821e131e821e131e821e131e811e1383131c1f211e218d0d1110221d0f260519
0b041e17002500821b0c0103018426161c05250b258405160f1d0e210e82070f26012681
0126822601268426010f1f2117218a241f100e070f1609150408820817003900821b1f21
56218a0a0f0c2514190215041e0801088217081701173400011781001781170016000117
011e85200c181d06210e218105000d0083171e08000c00011781081e041e020802171e00
82081e208120090d0982201e001b00850820090c1a210721821817000b008b081e200920
1920192009200986090c1d1a060900030083171e20090209010c83181a0621082187060a
0e1d071d0e1d821d0f1802180107841d220a24215221
1d21830d1f220e820e220e820e220e820e220e860e220e221024212321840d10230f010a
01852616091b08003b00820812210421830d1f102281220e820e220e820e220e820e220e
820e220e820e220e890e1d0f011609201b1317811700470081081e821e081e821e081e82
1e081e821e081e821e081e821e081e821e081e821e081e821e081e821e081e841e081e08
000a0083170b260182012601820126018201260182012601820126018a01260126160525
19151b088108004200820c0d21032196240a03220e220e220e220e220e220e220e220e22
0e1d0f810f01150182231f210921840d0610220e0e0e8418140417002100821720090409
822017002c008317081e208520090c1d1a211621821a201e811e20832009200982092009
86092009181a0c003400011e8520090c181a211221831a0c200982092009820920091109
830c1a06210a2182062000080087082009181a0621060206812106810621052183061d0c
0984090c181d1a011a02060e21820d062482240d216021
1c21970d0702041e131e131e131e131e131e131e0420050f100d211f21840d231b17004d
00a008182212230f011609151b131e131e131e131e131e131e131e131e131e130817001b
0083170017007f0041008c201a241f10070f1c021b04131e821e131e821e131e821e131e
821e131e011e810817811700160001178205112101218a111022120f181614151b1e821e
081e821e081e821e081e821e081e821e0817811700250082090621032182060900260088
17081e20090c1d1a212e2183062017001f008317081e208120090a09830c181a21442183
240917008300081e2001208409181a0621142183061a1d1a841a062106217721
1b21830d071b000f008517080b05230e8f0e220e220e220e220e220e220e220e22842210
110d210821830d231e004f00841e041e08178117007f0065008117000e000108011e8720
0c16090b1e08003000880401181614201b1e178117003a00822006210421820620001f00
81171e861e20090c1d1a213521820609001700011788081e20090c181a0621492184060a
101a1086101a10110d210d880d061a180c09181a0601067f211b21
1b21820a1900140081081e821e131e821e131e821e131e821e131e8d1e131e13040b1925
1812221f0d210321820a20007f007f0033000108160081081e031e820817003600811700
40008308091a2106218203091e031e8120091609830c1d1a213d21821f01091409840c18
1a06214e21010d0124010685240624060d210321850a26012206217f211f21
1b21831020170029008c1708040b021925051626051e007f002f000d1782081e20812009
1e0982201e00370081171e811e208120090c0982181d0683061808007900011781081e07
1e8120090e09820c1d217f216721820611217f212221
1b21830d0e0c090c0982201e004d00820817002a000217011e8120090c09811e00380082
17081e851e090c181a068306210621822106218221062182210621822106212521821a0c
09010982201e002700011781081e811e2085200c181d06211321821a200022000117011e
82091e0035008317081e20812009090982201e0002008608091a062106217f215521810d
217f215321
2d21851a0c201e17004300850820090c1a068206200022008317081e208620090c181d1a
210f21821d08002e000117021e0120840c181a06214221821d0c09250983181d06211c21
821a20001c008817081e2009181d062101218109002d0081171e871e20090c181a06210e
21851d09200c1a217f215a2182110d215321810d217d21
30218306180c090f0983201e08002500811e09820920090109830c1a062104218203201e
081e01201309810c1d821d1a21182182062000260081171e011e8620090c181a06217f21
1521830d1d0c091909840c181d06210721821a191e091e83200920098209200982092009
8209200982092009820920098209200982092009820920098209200985090c181a06217f
217621810d215121860d1026142510217c21
462185061d0c2017002000820906214e21820618098209200981092082201e178217081e
011e01201309840c181a06217f217f217f217f214421810d2401248306240d217d21
4a21841d201e0800150081081e041e820906217f217f217f217f217f217f214521
4e2185061a18201e000b0085171e091d06217f217f217f217f217f217f214e21
5221821a0c090909830c1d06217f217f217f217f217f217f215121
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521
7f217f217f217f217f217f217f213521

%
% Compression made this file 2.88% of the uncompressed size.
%


showpage

% stop using temporary dictionary
end

% restore original state
origstate restore

%%Trailer

%%EndDocument
 @endspecial 5001 5222 a @beginspecial @setspecial
 tx@Dict begin STP newpath 1.0 SLW 0.5451 0.39608 0.03137 setrgbcolor
 /ArrowA { moveto } def /ArrowB { } def [ 341.43292 -28.45274 -22.76227
-28.45274  /Lineto /lineto load def false Line  gsave 1.0 SLW 0.5451
0.39608 0.03137 setrgbcolor 0 setlinecap stroke  grestore end
 
@endspecial
621 x Fi(SESC)20 b(\(IA)n(COMA)e(g)o(roup\))2960 b(Joe)20
b(Renau,)h(Basilio)e(F)m(r)o(aguela,)h(and)g(Liu)g(W)n(ei)39
b(\226)20 b(page)40 b(23/23)4266 1057 y
 gsave currentpoint currentpoint translate 270 neg rotate neg exch
neg exch translate
 4266 1057 a @beginspecial
276 @llx 366 @lly 336 @urx 426 @ury 141 @rwi 141 @rhi
@setspecial
%%BeginDocument: angleHG.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/rico/texte/texstyle/Prosper-beta/img/angleHG.ps
%%Creator: XV Version 3.10a  Rev: 12/29/94 (PNG patch 1.2)  -  by John Bradley
%%BoundingBox: 276 366 336 426
%%Pages: 1
%%DocumentFonts:
%%EndComments
%%EndProlog

%%Page: 1 1

% remember original state
/origstate save def

% build a temporary dictionary
20 dict begin

% define string to hold a scanline's worth of data
/pix 180 string def

% define space for color conversions
/grays 60 string def  % space for gray scale line
/npixls 0 def
/rgbindx 0 def

% print in landscape mode
90 rotate 0 -612 translate

% lower left corner
366 276 translate

% size of image (on paper, in 1/72inch coords)
59.97600 59.97600 scale

% define 'colorimage' if it isn't defined
%   ('colortogray' and 'mergeprocs' come from xwd2ps
%     via xgrab)
/colorimage where   % do we know about 'colorimage'?
  { pop }           % yes: pop off the 'dict' returned
  {                 % no:  define one
    /colortogray {  % define an RGB->I function
      /rgbdata exch store    % call input 'rgbdata'
      rgbdata length 3 idiv
      /npixls exch store
      /rgbindx 0 store
      0 1 npixls 1 sub {
        grays exch
        rgbdata rgbindx       get 20 mul    % Red
        rgbdata rgbindx 1 add get 32 mul    % Green
        rgbdata rgbindx 2 add get 12 mul    % Blue
        add add 64 idiv      % I = .5G + .31R + .18B
        put
        /rgbindx rgbindx 3 add store
      } for
      grays 0 npixls getinterval
    } bind def

    % Utility procedure for colorimage operator.
    % This procedure takes two procedures off the
    % stack and merges them into a single procedure.

    /mergeprocs { % def
      dup length
      3 -1 roll
      dup
      length
      dup
      5 1 roll
      3 -1 roll
      add
      array cvx
      dup
      3 -1 roll
      0 exch
      putinterval
      dup
      4 2 roll
      putinterval
    } bind def

    /colorimage { % def
      pop pop     % remove 'false 3' operands
      {colortogray} mergeprocs
      image
    } bind def
  } ifelse          % end of 'false' case



60 60 8			% dimensions of data
[60 0 0 -60 0 60]		% mapping matrix
{currentfile pix readhexstring pop}
false 3 colorimage

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffafee3effeaaffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffafee3e3fe64ffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffe3fe64fafee3ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffe9fe88f1feb3ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffe8fe86dffe55fefefeffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffebfe96dafe37fefefeffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffedfe9edefe48f7fed5ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffedfe9ee2fe60eefea5f5fecaecfe95ecfe97ecfe98
ecfe99ecfe9bf6feceffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffeffeaadffe4fe0fe55dcfe3f
dbfe3cdbfe3ddbfe3dddfe48defe4cdcfe43d9fe32d6fe20e2fe5fe3fe67defe4ddefe4d
defe4edefe4edbfe3bdbfe3cdcfe3ddcfe3fdcfe40dcfe42ddfe43ddfe45ddfe46ddfe48
ddfe46e2fe63e5fe72e5fe74e6fe76e6fe77e6fe79e7fe7ae9fe86e8fe85ebfe94ecfe97
ecfe99ecfe9cedfe9eeffeacf2febcf3febef3fec1f4fec4f9fedfffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffeffeaaf1feb3f5fec7e9fe87
e7fe7be7fe7be7fe7be2fe60e1fe5bd6fe1dd8fe2adafe33e1fe5bdffe54defe4edffe50
dffe51dffe53e0fe54ddfe49ddfe4bdefe4cdefe4edefe50dffe52dffe54e5fe73eafe93
e9fe89e6fe7ae4fe6ce4fe6ee8fe84e8fe85e9fe87e9fe8ae8fe84e7fe7ce8fe81e9fe8a
f0feb0f8fedbf9fedff1feb8f1febaeafe8bfbfeeafbfeebfdfef5ffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff5fecddffe52e1fe5df5fec9f5fec9f5fecaf5feca
f5fecbf5feccf5feccf5fecdf6fecef6fecef6fecef6fecff6fed0f6fed1eefea5e9fe8a
f6fed1f7fed7f7fed8f7fed9f6fecdfafee8fcfef1fcfef2fdfef7fcfef3fdfef7fefefc
fefefcfefefdf9fee0f6fecff5feccf4fec2ffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff5fecde3fe64e5fe74ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffdfef5fefefdfefefdfefefcfefefcfffffffefef9
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff5fecde5fe74dffe53ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff6fecee6fe79e5fe6ff8fed8ffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff6fecee6fe7aebfe95effeaaffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff6fecee6fe7aedfe9eeefea2ffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff6fecee6fe7bedfe9eeefea3ffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff6fecfe6fe78ecfe9eeefea5ffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffefefe
fefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff6fed0e2fe63e0fe59dffe55ffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffefefe
fefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffedfe9fe2fe5fd8fe2ad8fe2dffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffecfe9adffe53d6fe1cdefe4cf6fecfffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffedfe9cd8fe2cd6fe20defe4bf6fed0ffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffefefdffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffedfe9dd8fe27d7fe22defe4ef6fed0ffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffedfe9dd7fe26d6fe20e0fe5bf6fed2ffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff3febdd7fe22d7fe22e1fe5ef7fed3ffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff4fec6d6fe20d7fe21e0fe57f7fed4ffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff4fec6d6fe20d6fe1fe0fe59f7fed5ffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff4fec6d6fe1ed6fe1ee5fe73f7fed6ffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff4fec6d6fe1dd9fe32e0fe56ffffffffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff5fecce0fe55defe48e8fe81ffffffffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffbfeede7fe7fe0fe56e9fe85ffffffffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff7fed8e8fe84e7fe7ef1feb4ffffffffffffffffff
fffffffefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff2feb8edfea0effea6f1feb6ffffffffffffffffff
fffffffefefefefefeffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffefefceffeabf0feafeffea7f2feb7ffffffffffffffffff
fffffffefefefefefefefefeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffefefcf5fecaecfe9de7fe7af8feddffffffffffffffffff
fffffffefefefefefefefefefefefeffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffefefcf5fecce8fe85e8fe80ffffffffffffffffffffffff
fffffffefefefefefefefefeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffff8fedefdfef8fdfefbf3fec0e9fe89ecfe96ffffffffffffffffffffffff
fefefefefefefefefefefefeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffdfef6fefefafefefaf4fec2e9fe89ecfe96ffffffffffffffffffffffff
fefefefefefefefefefefefeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffdfef6fefefefefefdf4fec2e8fe85edfe9dffffffffffffffffffffffff
fefefefefefefefefefefefeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffefef9fefefdfefefce7fe7be5fe76f2feb7ffffffffffffffffffffffff
fffffffffffffefefefefefeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffdfef6fdfefafefefbe2fe65e5fe75f6fed0ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffdfef9fefefce6fe79e6fe77fafee6ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffcfef6fefefbecfe9be7fe7efbfeecffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffdfef5fdfef7f7fed5e9fe8dfcfef2ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffcfeeffbfeebedfea1fdfef7ffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffefefeffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffefefdfbfee9effeabffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffefefefefefeffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffbfeeceffea6ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff9fee3f3fec1ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffeefea2f8fedaffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff1feb2fafee4ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffcfef0fefefaffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff


showpage

% stop using temporary dictionary
end

% restore original state
origstate restore

%%Trailer

%%EndDocument
 @endspecial 4511 1057 a
 currentpoint grestore moveto
 4511 1057 a 4130 5844 a
 currentpoint currentpoint translate 0.76611 0.76611 scale neg exch
neg exch translate
 4130
5844 a 4130 5844 a
 gsave currentpoint currentpoint translate 0 neg rotate neg exch neg
exch translate
 4130 5844 a @beginspecial 0 @llx 0
@lly 37 @urx 42 @ury 370 @rwi @setspecial
%%BeginDocument: figs/uiuc.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: uiuc.eps
%%Creator: fig2dev Version 3.2 Patchlevel 3d
%%CreationDate: Sun Feb 10 22:03:46 2002
%%For: renau@nether.cs.uiuc.edu (Jose Renau)
%%BoundingBox: 0 0 37 42
%%Magnification: 1.0000
%%EndComments
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def
/col32 {0.200 0.200 0.400 srgb} bind def
/col33 {0.800 0.400 0.000 srgb} bind def

end
save
newpath 0 42 moveto 0 0 lineto 37 0 lineto 37 42 lineto closepath clip newpath
-273.7 413.7 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
 0.06000 0.06000 sc
%
% Fig objects follow
%
%  polyline 
% Polyline
n 5070 6872 m 5070 6227 l 4584 6227 l 4584 6872 l
 5070 6872 l  cp gs col32 1.00 shd ef gr 
%  polyline 
% Polyline
15.000 slw
n 5070 6872 m 5070 6227 l 4584 6227 l 4584 6872 l
 5070 6872 l  cp gs col32 s gr 
%  polyline 
% Polyline
0.000 slw
n 5056 6858 m 5056 6243 l 4598 6243 l 4598 6858 l
 5056 6858 l  cp gs col32 1.00 shd ef gr 
%  polyline 
% Polyline
7.500 slw
n 5056 6858 m 5056 6243 l 4598 6243 l 4598 6858 l
 5056 6858 l  cp gs col33 s gr 
%  spline 
% Polyline
2 slj
0.000 slw
n 4944 6783 m 4944 6781 l 4944 6773 l 4944 6759 l 4944 6751 l 4944 6749 l
 4943 6749 l 4935 6748 l 4924 6746 l 4914 6744 l 4906 6742 l
 4900 6741 l 4896 6739 l 4892 6738 l 4887 6735 l 4884 6732 l
 4880 6728 l 4877 6722 l 4875 6716 l 4873 6709 l 4872 6702 l
 4871 6693 l 4870 6683 l 4869 6670 l 4869 6654 l 4868 6637 l
 4868 6621 l 4868 6609 l 4868 6604 l 4868 6603 l 4868 6602 l
 4868 6597 l 4868 6585 l 4868 6567 l 4868 6544 l 4868 6521 l
 4868 6503 l 4868 6491 l 4868 6486 l 4868 6485 l 4868 6483 l
 4868 6474 l 4868 6457 l 4869 6438 l 4869 6420 l 4870 6406 l
 4870 6395 l 4871 6387 l 4873 6381 l 4874 6375 l 4876 6371 l
 4879 6367 l 4882 6365 l 4885 6363 l 4889 6362 l 4892 6361 l
 4898 6359 l 4905 6358 l 4915 6356 l 4925 6354 l 4933 6352 l
 4934 6352 l 4934 6350 l 4934 6343 l 4934 6331 l 4934 6324 l
 4934 6322 l 4933 6322 l 4928 6322 l 4916 6322 l 4896 6322 l
 4869 6322 l 4837 6322 l 4806 6322 l 4779 6322 l 4759 6322 l
 4747 6322 l 4742 6322 l 4741 6322 l 4740 6322 l 4737 6322 l
 4732 6322 l 4729 6322 l 4726 6322 l 4724 6322 l 4721 6323 l
 4718 6324 l 4716 6325 l 4714 6326 l 4712 6327 l 4710 6329 l
 4707 6332 l 4705 6334 l 4703 6336 l 4701 6338 l 4700 6339 l
 4699 6341 l 4698 6342 l 4697 6344 l 4696 6346 l 4696 6347 l
 4695 6349 l 4695 6351 l 4695 6353 l 4694 6356 l 4694 6358 l
 4694 6359 l 4694 6360 l 4694 6362 l 4694 6365 l 4694 6367 l
 4695 6369 l 4695 6370 l 4696 6372 l 4697 6374 l 4697 6375 l
 4698 6377 l 4699 6378 l 4701 6379 l 4702 6381 l 4704 6383 l
 4706 6385 l 4708 6386 l 4709 6388 l 4710 6389 l 4712 6389 l
 4713 6390 l 4715 6391 l 4716 6391 l 4718 6391 l 4720 6391 l
 4721 6391 l 4724 6391 l 4726 6391 l 4727 6391 l 4729 6391 l
 4732 6390 l 4735 6390 l 4737 6389 l 4740 6388 l 4742 6387 l
 4744 6385 l 4747 6383 l 4748 6381 l 4749 6379 l 4750 6376 l
 4751 6372 l 4752 6369 l 4752 6368 l 4752 6366 l 4752 6364 l
 4752 6362 l 4752 6361 l 4752 6359 l 4752 6358 l 4751 6357 l
 4751 6356 l 4750 6355 l 4749 6354 l 4749 6353 l 4748 6352 l
 4747 6351 l 4746 6350 l 4745 6349 l 4744 6348 l 4743 6348 l
 4742 6347 l 4741 6346 l 4740 6346 l 4739 6346 l 4738 6346 l
 4736 6345 l 4735 6345 l 4733 6345 l 4732 6345 l 4730 6345 l
 4729 6345 l 4728 6346 l 4727 6346 l 4725 6346 l 4724 6347 l
 4724 6348 l 4723 6348 l 4722 6349 l 4721 6351 l 4720 6352 l
 4719 6353 l 4718 6354 l 4718 6355 l 4717 6356 l 4717 6357 l
 4717 6358 l 4716 6359 l 4717 6360 l 4717 6361 l 4717 6362 l
 4717 6363 l 4718 6364 l 4718 6365 l 4719 6366 l 4719 6367 l
 4720 6367 l 4720 6368 l 4721 6368 l 4722 6369 l 4723 6369 l
 4723 6368 l 4724 6368 l 4725 6368 l 4726 6367 l 4727 6367 l
 4727 6366 l 4728 6366 l 4728 6365 l 4729 6365 l 4729 6364 l
 4729 6363 l 4729 6362 l 4729 6361 l 4728 6360 l 4728 6359 l
 4729 6359 l 4729 6358 l 4730 6357 l 4731 6357 l 4731 6356 l
 4732 6356 l 4733 6356 l 4734 6356 l 4735 6356 l 4735 6357 l
 4736 6357 l 4737 6357 l 4738 6357 l 4738 6358 l 4739 6358 l
 4739 6359 l 4739 6360 l 4740 6360 l 4740 6361 l 4740 6362 l
 4741 6362 l 4741 6363 l 4741 6364 l 4740 6364 l 4740 6365 l
 4740 6366 l 4740 6368 l 4739 6371 l 4739 6373 l 4738 6374 l
 4737 6375 l 4736 6376 l 4735 6377 l 4733 6378 l 4732 6379 l
 4731 6379 l 4729 6379 l 4727 6380 l 4725 6380 l 4724 6380 l
 4722 6380 l 4721 6380 l 4720 6380 l 4719 6380 l 4718 6380 l
 4717 6379 l 4716 6379 l 4715 6379 l 4715 6378 l 4714 6377 l
 4713 6376 l 4712 6375 l 4711 6374 l 4710 6373 l 4710 6372 l
 4709 6372 l 4708 6371 l 4708 6370 l 4707 6369 l 4707 6368 l
 4707 6367 l 4706 6365 l 4706 6363 l 4706 6361 l 4706 6359 l
 4706 6357 l 4706 6355 l 4706 6353 l 4706 6352 l 4707 6351 l
 4707 6350 l 4707 6348 l 4708 6347 l 4709 6346 l 4709 6345 l
 4710 6344 l 4712 6343 l 4713 6342 l 4715 6340 l 4717 6339 l
 4718 6337 l 4720 6337 l 4721 6336 l 4723 6335 l 4725 6334 l
 4727 6334 l 4729 6334 l 4731 6333 l 4734 6333 l 4738 6333 l
 4740 6333 l 4741 6333 l 4742 6333 l 4744 6333 l 4747 6333 l
 4753 6333 l 4759 6333 l 4767 6333 l 4776 6333 l 4785 6333 l
 4794 6333 l 4802 6333 l 4809 6333 l 4815 6333 l 4822 6333 l
 4827 6333 l 4828 6333 l 4828 6334 l 4828 6337 l 4828 6341 l
 4828 6344 l 4828 6345 l 4826 6345 l 4816 6345 l 4797 6345 l
 4779 6345 l 4769 6345 l 4767 6345 l 4766 6345 l 4765 6345 l
 4764 6346 l 4763 6346 l 4762 6347 l 4762 6348 l 4761 6349 l
 4761 6350 l 4761 6351 l 4761 6352 l 4761 6353 l 4761 6354 l
 4761 6355 l 4762 6356 l 4762 6357 l 4763 6358 l 4764 6359 l
 4765 6359 l 4766 6359 l 4767 6359 l 4769 6359 l 4779 6359 l
 4798 6359 l 4816 6359 l 4826 6359 l 4828 6359 l 4828 6360 l
 4828 6362 l 4828 6367 l 4828 6369 l 4828 6370 l 4826 6370 l
 4817 6370 l 4799 6370 l 4782 6370 l 4773 6370 l 4771 6370 l
 4770 6370 l 4769 6370 l 4768 6370 l 4767 6371 l 4766 6371 l
 4766 6372 l 4765 6373 l 4765 6374 l 4765 6375 l 4765 6376 l
 4765 6377 l 4766 6378 l 4766 6379 l 4767 6380 l 4768 6381 l
 4769 6381 l 4770 6381 l 4771 6381 l 4773 6381 l 4782 6381 l
 4800 6381 l 4817 6381 l 4826 6381 l 4828 6381 l 4828 6384 l
 4828 6391 l 4828 6404 l 4828 6423 l 4828 6449 l 4828 6480 l
 4828 6516 l 4828 6554 l 4828 6592 l 4828 6628 l 4828 6659 l
 4828 6685 l 4828 6704 l 4828 6717 l 4828 6724 l 4828 6727 l
 4827 6727 l 4819 6727 l 4802 6727 l 4780 6727 l 4757 6727 l
 4740 6727 l 4732 6727 l 4731 6727 l 4730 6727 l 4729 6727 l
 4728 6727 l 4727 6728 l 4726 6728 l 4726 6729 l 4726 6730 l
 4725 6730 l 4725 6731 l 4725 6732 l 4725 6733 l 4725 6734 l
 4725 6735 l 4725 6736 l 4725 6737 l 4726 6738 l 4726 6739 l
 4727 6739 l 4727 6740 l 4728 6740 l 4729 6740 l 4730 6740 l
 4731 6740 l 4732 6740 l 4740 6740 l 4757 6740 l 4780 6740 l
 4802 6740 l 4819 6740 l 4827 6740 l 4828 6740 l 4828 6741 l
 4828 6745 l 4828 6750 l 4828 6754 l 4828 6755 l 4827 6755 l
 4822 6755 l 4811 6755 l 4792 6755 l 4770 6755 l 4748 6755 l
 4729 6755 l 4718 6755 l 4713 6755 l 4712 6755 l 4710 6755 l
 4707 6755 l 4706 6756 l 4704 6756 l 4703 6757 l 4702 6758 l
 4701 6759 l 4700 6760 l 4699 6761 l 4699 6763 l 4698 6764 l
 4698 6767 l 4698 6769 l 4698 6770 l 4698 6773 l 4698 6779 l
 4698 6782 l 4698 6783 l 4699 6783 l 4703 6783 l 4713 6783 l
 4730 6783 l 4755 6783 l 4786 6783 l 4821 6783 l 4856 6783 l
 4887 6783 l 4912 6783 l 4929 6783 l 4939 6783 l 4943 6783 l

 4944 6783 l  cp gs col7 1.00 shd ef gr 
%  spline 
% Polyline
n 4783 6706 m 4783 6705 l 4783 6702 l 4783 6693 l 4783 6678 l 4783 6656 l
 4783 6626 l 4783 6592 l 4783 6555 l 4783 6517 l 4783 6483 l
 4783 6453 l 4783 6431 l 4783 6416 l 4783 6407 l 4783 6404 l
 4783 6403 l 4783 6402 l 4783 6401 l 4783 6400 l 4782 6400 l
 4782 6399 l 4781 6399 l 4781 6398 l 4780 6398 l 4779 6398 l
 4778 6398 l 4777 6398 l 4776 6398 l 4775 6398 l 4774 6399 l
 4773 6399 l 4773 6400 l 4772 6401 l 4772 6402 l 4772 6403 l
 4772 6404 l 4772 6407 l 4772 6416 l 4772 6431 l 4772 6453 l
 4772 6483 l 4772 6517 l 4772 6555 l 4772 6592 l 4772 6626 l
 4772 6656 l 4772 6678 l 4772 6693 l 4772 6702 l 4772 6705 l
 4772 6706 l 4772 6707 l 4772 6708 l 4773 6709 l 4773 6710 l
 4774 6711 l 4775 6712 l 4776 6712 l 4777 6712 l 4778 6712 l
 4779 6712 l 4780 6712 l 4781 6712 l 4781 6711 l 4782 6711 l
 4782 6710 l 4783 6709 l 4783 6708 l 4783 6707 l
 4783 6706 l  cp gs col7 1.00 shd ef gr 
%  spline 
% Polyline
n 4813 6705 m 4813 6704 l 4813 6701 l 4813 6692 l 4813 6677 l 4813 6655 l
 4813 6626 l 4813 6592 l 4813 6555 l 4813 6518 l 4813 6484 l
 4813 6455 l 4813 6433 l 4813 6418 l 4813 6409 l 4813 6406 l
 4813 6405 l 4813 6404 l 4813 6402 l 4813 6401 l 4812 6400 l
 4811 6399 l 4811 6398 l 4810 6398 l 4809 6398 l 4808 6397 l
 4807 6397 l 4806 6397 l 4805 6397 l 4804 6397 l 4803 6397 l
 4802 6397 l 4801 6398 l 4800 6398 l 4799 6399 l 4799 6400 l
 4798 6401 l 4798 6402 l 4798 6404 l 4798 6405 l 4798 6406 l
 4798 6409 l 4798 6418 l 4798 6433 l 4798 6455 l 4798 6484 l
 4798 6518 l 4798 6555 l 4798 6592 l 4798 6626 l 4798 6655 l
 4798 6677 l 4798 6692 l 4798 6701 l 4798 6704 l 4798 6705 l
 4798 6706 l 4798 6707 l 4798 6708 l 4799 6709 l 4799 6710 l
 4799 6711 l 4800 6711 l 4801 6712 l 4802 6713 l 4803 6713 l
 4804 6713 l 4805 6713 l 4806 6713 l 4807 6713 l 4808 6713 l
 4809 6712 l 4810 6712 l 4811 6711 l 4812 6710 l 4812 6709 l
 4813 6708 l 4813 6707 l 4813 6706 l
 4813 6705 l  cp gs col7 1.00 shd ef gr 
%  polyline 
% Polyline
0 slj
n 5136 6864 m 5124 6864 l 5124 6894 l 5119 6894 l 5119 6864 l 5108 6864 l
 5108 6860 l 5136 6860 l
 5136 6864 l  cp gs col32 1.00 shd ef gr 
%  polyline 
% Polyline
n 5172 6894 m 5167 6894 l 5167 6867 l 5157 6880 l 5156 6880 l 5146 6867 l
 5145 6867 l 5145 6894 l 5141 6894 l 5141 6860 l 5145 6860 l
 5156 6874 l 5168 6860 l 5172 6860 l
 5172 6894 l  cp gs col32 1.00 shd ef gr 
$F2psEnd
rs

%%EndDocument
 @endspecial 4769 5844 a
 currentpoint grestore moveto
 4769 5844 a 4130 5844 a
 currentpoint currentpoint translate 1 0.76611 div 1 0.76611 div scale
neg exch neg exch translate
 4130
5844 a 5001 3450 a
SDict begin H.S end
 5001 3450 a 5001 3450 a
SDict begin H.R end
 5001 3450
a 5001 3450 a
SDict begin [ /View [/XYZ H.V] /Dest (page.1) cvn H.B /DEST pdfmark
end
 5001 3450 a 5001 3450 a
SDict begin [ {ThisPage} << /Trans << /S /Replace >> >> /PUT pdfmark
end
 5001 3450 a 5001
3450 a
SDict begin [ /Page 23/View [ /XYZ null null null ] /Title (Todo) /OUT
pdfmark end
 5001 3450 a 9472 1453 a Fm(T)5 b Fn(O)18 b(D)g(O)4649
2152 y @beginspecial 276 @llx 376 @lly 336 @urx 416 @ury
113 @rwi @setspecial
%%BeginDocument: green-bullet-on-white.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/fred/TeX/STYLES/Prosper/img/green-bullet-on-white.ps
%%Creator: XV Version 3.10a+FLmask  Rev: 12/29/94  -  by John Bradley
%%BoundingBox: 276 376 336 416
%%Pages: 1
%%DocumentFonts:
%%EndComments
%%EndProlog

%%Page: 1 1

% remember original state
/origstate save def

% build a temporary dictionary
20 dict begin

% define space for color conversions
/grays 60 string def  % space for gray scale line
/npixls 0 def
/rgbindx 0 def

% lower left corner
276 376 translate

% size of image (on paper, in 1/72inch coords)
59.97600 40.03200 scale

% define 'colorimage' if it isn't defined
%   ('colortogray' and 'mergeprocs' come from xwd2ps
%     via xgrab)
/colorimage where   % do we know about 'colorimage'?
  { pop }           % yes: pop off the 'dict' returned
  {                 % no:  define one
    /colortogray {  % define an RGB->I function
      /rgbdata exch store    % call input 'rgbdata'
      rgbdata length 3 idiv
      /npixls exch store
      /rgbindx 0 store
      0 1 npixls 1 sub {
        grays exch
        rgbdata rgbindx       get 20 mul    % Red
        rgbdata rgbindx 1 add get 32 mul    % Green
        rgbdata rgbindx 2 add get 12 mul    % Blue
        add add 64 idiv      % I = .5G + .31R + .18B
        put
        /rgbindx rgbindx 3 add store
      } for
      grays 0 npixls getinterval
    } bind def

    % Utility procedure for colorimage operator.
    % This procedure takes two procedures off the
    % stack and merges them into a single procedure.

    /mergeprocs { % def
      dup length
      3 -1 roll
      dup
      length
      dup
      5 1 roll
      3 -1 roll
      add
      array cvx
      dup
      3 -1 roll
      0 exch
      putinterval
      dup
      4 2 roll
      putinterval
    } bind def

    /colorimage { % def
      pop pop     % remove 'false 3' operands
      {colortogray} mergeprocs
      image
    } bind def
  } ifelse          % end of 'false' case



% define the colormap
/cmap 723 string def


% load up the colormap
currentfile cmap readhexstring
041808 049008 8c948c 045204 4c544c 04c804 84e284 449644 c4cbc4 0c380e 
04ac07 cce6cc 345e2c e4e7e4 046604 2c3a2c 347234 e4fee2 048208 64cc60 
34922c 24b224 04e404 044604 647264 242623 049f07 8cae8c 04bc06 24c61c 
f4f8f3 1c541c 04d804 1c621c 1c7220 0c280d 14910f 045e04 047c04 ccdcd0 
14ac18 1c481c 747473 04d105 0c6c0b 24852a 1c381c f4f1f3 acafac f4fef5 
0c310c acc6ac 049708 a4a4a3 3c4a44 148314 144812 9cea94 04b405 149e14 
1cbc1c 044004 e4fef4 dcdddd 748274 5c5959 4cba54 145b11 145413 147412 
c4fec4 e4f1e7 146411 088a0a 243028 09c207 fcf8f3 147c13 14c80e acceac 
3c3939 04f405 044e07 07a608 14d00f 0c1f10 0c900b d4d3d4 ecfee3 1c291d 
0c6e14 bcbfbd d4f6d4 909a94 4c5a50 0cac08 24ba24 547e54 0cbc0a 0c5c16 
0c7c0b fcf1fb acb8ac 1c311c aca7a9 e2e2e2 a4e2a4 0cc80a 6c9a6c 143715 
0c650a 0c840b 07de06 14970c 0c980a 0cb40a 848583 ecf0f0 c3c6c3 0c540d 
0c740c cccccc 74ce6c 30a02c 04ec05 54aa5c 6cb66c 9cfa9c 2c862c 5c926c 
6ca674 b4deac 9cda9c 34aa2c 6c7e6c acfeac 448244 34d22c 7d7d7c 6c6d6c 
445644 4c4d4c 1c7a19 1c3e1c 3c3f3c 2c422c 7c9a84 54c254 dceadc 144014 
343231 bccebc bcbabc 447244 6c6664 9c9d9c 7caa7c 349a38 6c7a74 84b69c 
1c4e18 898a89 ccfadc 1c6c2c b8e2c0 1c8a24 a1aaa1 3c4e3c 5f5e5c d8fed8 
24be24 78d670 688668 148a14 14a618 145624 0c480e 2c292b 142916 1c921c 
d4dad9 243828 143017 b4d2bc b4b7b5 1c961c 8c868c 247e24 144e13 04fa04 
246224 fcfefc 0c4e0c ace2b4 3caa3c 244e24 0c180c 949394 545454 ece9ec 
343634 2cb127 6c736c 0ca00c 0cda08 0c5c0b 0ccf06 146a0c b4b2b4 646464 
b4c2b4 0c3f0c ecfdf9 e4dedc ccfdcc 2c2f2b 142214 146b16 c4c2c2 545b54 
2cb62c 74ba74 346634 b4fcb0 244224 444242 246a24 e4feec 0ce204 f4f9fc 
f4eefc 444744 54b654 fcf9fc 0c9114 dcd6d4 ecfeec 0c7b14 0cc614 0c6314 
0c8414 
pop pop   % lose return values from readhexstring


% rlecmapimage expects to have 'w h bits matrix' on stack
/rlecmapimage {
  /buffer 1 string def
  /rgbval 3 string def
  /block  384 string def

  % proc to read a block from file, and return RGB data
  { currentfile buffer readhexstring pop
    /bcount exch 0 get store
    bcount 128 ge
    {  % it's a non-run block
      0 1 bcount 128 sub
      { currentfile buffer readhexstring pop pop

        % look up value in color map
        /rgbval cmap buffer 0 get 3 mul 3 getinterval store

        % and put it in position i*3 in block
        block exch 3 mul rgbval putinterval
      } for
      block  0  bcount 127 sub 3 mul  getinterval
    }

    { % else it's a run block
      currentfile buffer readhexstring pop pop

      % look up value in colormap
      /rgbval cmap buffer 0 get 3 mul 3 getinterval store

      0 1 bcount { block exch 3 mul rgbval putinterval } for

      block 0 bcount 1 add 3 mul getinterval
    } ifelse
  } % end of proc
  false 3 colorimage
} bind def


60 40 8			% dimensions of data
[60 0 0 -40 0 40]		% mapping matrix
rlecmapimage

10bf8131bf05bf03e98165e902e9046587bf3158ec31bfe9658265e9bf09bf
10bf8131bf04bf81e9bf01bf02e98265bfe982e965e901e981bf318131ec82ecbfe982e9
65bf0abf
12bf82751ebf83bf1ebf318231ec3102318111318131bf81bfe901e981bf318131bf01bf
01e90bbf
0fbf02e901bf023101ec021101a981d6a981a9118111318131bf14bf
0fbf8165e901e988e5bfd4ecd66add07808c80149dc2137f46a911d431bfe981e9bf0fbf

0fbf01e982bfe9318331a49ce28fe2454d37562456dc71567bab87a9d4bf81bfe981e9bf
81bf318131bf0abf
10bf8ac775bf311bde43224d37568656cb535f1a733c893cae8506a91131bfe9bf01bf81
58bf0abf
0fbf911ebf31b761a0442245ed56721a530a3a4e3a813a4e864e73c94246e3bf10bf
07bf81e9bf82bfe9bf92bf1ebf31ec4f0c38e2ef8e4d49561a530a3a6283624b052b8a2b
ce4e60c2dfe331bf4cbf0cbf
0abf81e9bf82bfe9ec8eec83de1f21778e786f01341a0a3a1c851c4b052b20168b162054
aa93df11312fe965bf0abf
0ebf8d3111883d77cdcf78646f0134530a810a1c911c4ece20167c517c16542893a9ec31
e965bf0abf
08bf01e999bfe91ebf316cc07743cd45786f49561a530a3a624b6b2b707c510151877c70
4edcaba9bfe981e9bf0abf
0bbf01e985bf27d34352cf90cf0e4d2656011a530a1c62ee2b20167c5102518816cc1db9
d611bfe9bf0abf
07bf81e9bf01bf90e9bf4c86d3445277d92c786f49721a0a3a853a4b0520167c827c51bd
88bd5116e44b157a11bf0cbf
0dbf8d3f0fc33d4403cfbb0e3756011a0a860a624b2b20167c817c5102510116854b897b
a911bf0bbf
08bf82e9e5bf97bf75dab209bcc021ef254d2649561a533a1c4b052b70167c037c811620
85203a853911bf0bbf
0bbf0131869eb6d3b0bc7748884845646f561acb0a7382734b2b812b1683167c16cc01cc
012b844b2813d4bf0bbf
0abf0231955e236db0c04463cf45646f5634cb533a73624b2b2016821670548854ce2b20
4b28e831bf0bbf
0abf023183b5b6d3b089b044436e45786f49341a871a0a733a626b2b200120896b4e6b05
2b1c5f9decbf0bbf
09bf8131bf97bf31d82e09d3b044cd485a786f1201cb1a530a73621c052b852b054e4b1c
0585053a282d58bf0bbf
0bbf9431bf556709b03844cd482c7864125634cb1a5f0a7382734b0501050162011c854b
0aae2d58bf0bbf
0bbf0131934a236dd3b0bc7743485a786f1201341acb535f3a813a1c011c0173023a8453
3b1458bf0bbf
0bbf8431bf0455098309d338778277ef2c852c266f1201348134cb83cb530a3a013a810a
5f815f0a850a1ab37d58bf0bbf
08bf81e9bf93bf31bf18d83209d338c044cd6e0e2c64126f0172837271cb5382530a5383
53ae531a851a01a57e58bf0bbf
0bbf01e5837600230901098138c082c0482c862c7864126f49568156728272341a811a72
0272864912bb841131bf0abf
03bf94e9bfe9bfe9bf1ebf1ebf275923b632099538c044ef81ef7881786481646f816fad
84adea01ea560156882449ad2da3115831bf0abf
04bf02e992654ce61e75bf0d185523b66d0995bcc043cd2c812c7881786483646f64f001
f08b6f496f49642d6382e3314cbf0abf
01bf85e9e5e9652fc784c7693fc7698a69c7d2b200232eb60929bc84bc6343ef2c862c78
45784d78ed82ed6f6489644d45a3afa2114c31bf0abf
01e58175c783c769d5eb8ceb797679dab87908db67c4b66d876d9538b0447743ef84ef6e
2c78458e455a457864788ecfbe9fd4315831bf0abf
88e5750d3f5779da98d083d0689b3501358d5d0236c45567b6320995b04477cd92cdef6e
2c6e5ad95acf782c4517813e31bf2fbf0bbf
887569575bd0689bc5ba83ba8a2a8a878aca2a74db5955b284b23209d3b081b077017701
cd016e02ef876e2c6e4810a4d4bf01bf814cbf0abf
873f79b835c5ba2a9a829aa8410141868de1d104c690d881d85583552e6d958b9538b0c0
77cd03cd6377afcd84cd4321c1d483d4e9654c814cbf0abf
88575b9b742ad1418de181e15081509603968450c8d759d881d8b283b2326d0981099585
9538bcb0381f871f95c3995ca931bf81bfe981e9bf0bbf
8779b8c58ad1c6e750855096d7b119b104b184d7b119d855845523b2b66d016d83952995
2987296de09211d431bf01bf01e90cbf
8979d0c52aa88de15096b181b119041901b18796c80fd74a59b2b602b6016d86326d328f
ac0b318331bf31bf01bf81e9bf0cbf
88575b9b742ad1c68de186e1c850c850c850865096c850e1e70487045e8ca7912e672e85
2e8cac33473101318158bf02bf82e9bfe981e9bf0abf
8b3f799835c5742a8bd1a8dbc683c68dc68d818dc601c68cdbd1ca40a15da66697274711
31863158bf31bf31bf82bf4ce985e9bfe9bfe9bf0abf
8bc76957dab8359bc5a1748a2a052a018a01748b029ba6665b279447ec311ebf83bf581e
bf82bf4cbf02bf82e9bfe981e9bf0abf
881e75693f57795bb8d082d068350135029b0135013088b8985b7608b40d751e811ebf83
bf1e75bf81bf4c814cbf05bf81e9bf0bbf
83e9e52fc782c7693f823f5779817976027681da760276827957b482b4c7750175822fe5
bf82bf4cbf01bf814cbf81bfe981e9bf01bf01e90dbf

%
% Compression made this file 26.36% of the uncompressed size.
%


showpage

% stop using temporary dictionary
end

% restore original state
origstate restore

%%Trailer

%%EndDocument
 @endspecial 298 w Fg(More)67 b(adv)-6 b(ance)66 b(br)n(anch)g
(predictor)7 b(:)83 b(Multi-le)-7 b(v)h(el,)4947 2416
y(m)n(ulti-cycle)4649 2787 y @beginspecial 276 @llx 376
@lly 336 @urx 416 @ury 113 @rwi @setspecial
%%BeginDocument: green-bullet-on-white.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/fred/TeX/STYLES/Prosper/img/green-bullet-on-white.ps
%%Creator: XV Version 3.10a+FLmask  Rev: 12/29/94  -  by John Bradley
%%BoundingBox: 276 376 336 416
%%Pages: 1
%%DocumentFonts:
%%EndComments
%%EndProlog

%%Page: 1 1

% remember original state
/origstate save def

% build a temporary dictionary
20 dict begin

% define space for color conversions
/grays 60 string def  % space for gray scale line
/npixls 0 def
/rgbindx 0 def

% lower left corner
276 376 translate

% size of image (on paper, in 1/72inch coords)
59.97600 40.03200 scale

% define 'colorimage' if it isn't defined
%   ('colortogray' and 'mergeprocs' come from xwd2ps
%     via xgrab)
/colorimage where   % do we know about 'colorimage'?
  { pop }           % yes: pop off the 'dict' returned
  {                 % no:  define one
    /colortogray {  % define an RGB->I function
      /rgbdata exch store    % call input 'rgbdata'
      rgbdata length 3 idiv
      /npixls exch store
      /rgbindx 0 store
      0 1 npixls 1 sub {
        grays exch
        rgbdata rgbindx       get 20 mul    % Red
        rgbdata rgbindx 1 add get 32 mul    % Green
        rgbdata rgbindx 2 add get 12 mul    % Blue
        add add 64 idiv      % I = .5G + .31R + .18B
        put
        /rgbindx rgbindx 3 add store
      } for
      grays 0 npixls getinterval
    } bind def

    % Utility procedure for colorimage operator.
    % This procedure takes two procedures off the
    % stack and merges them into a single procedure.

    /mergeprocs { % def
      dup length
      3 -1 roll
      dup
      length
      dup
      5 1 roll
      3 -1 roll
      add
      array cvx
      dup
      3 -1 roll
      0 exch
      putinterval
      dup
      4 2 roll
      putinterval
    } bind def

    /colorimage { % def
      pop pop     % remove 'false 3' operands
      {colortogray} mergeprocs
      image
    } bind def
  } ifelse          % end of 'false' case



% define the colormap
/cmap 723 string def


% load up the colormap
currentfile cmap readhexstring
041808 049008 8c948c 045204 4c544c 04c804 84e284 449644 c4cbc4 0c380e 
04ac07 cce6cc 345e2c e4e7e4 046604 2c3a2c 347234 e4fee2 048208 64cc60 
34922c 24b224 04e404 044604 647264 242623 049f07 8cae8c 04bc06 24c61c 
f4f8f3 1c541c 04d804 1c621c 1c7220 0c280d 14910f 045e04 047c04 ccdcd0 
14ac18 1c481c 747473 04d105 0c6c0b 24852a 1c381c f4f1f3 acafac f4fef5 
0c310c acc6ac 049708 a4a4a3 3c4a44 148314 144812 9cea94 04b405 149e14 
1cbc1c 044004 e4fef4 dcdddd 748274 5c5959 4cba54 145b11 145413 147412 
c4fec4 e4f1e7 146411 088a0a 243028 09c207 fcf8f3 147c13 14c80e acceac 
3c3939 04f405 044e07 07a608 14d00f 0c1f10 0c900b d4d3d4 ecfee3 1c291d 
0c6e14 bcbfbd d4f6d4 909a94 4c5a50 0cac08 24ba24 547e54 0cbc0a 0c5c16 
0c7c0b fcf1fb acb8ac 1c311c aca7a9 e2e2e2 a4e2a4 0cc80a 6c9a6c 143715 
0c650a 0c840b 07de06 14970c 0c980a 0cb40a 848583 ecf0f0 c3c6c3 0c540d 
0c740c cccccc 74ce6c 30a02c 04ec05 54aa5c 6cb66c 9cfa9c 2c862c 5c926c 
6ca674 b4deac 9cda9c 34aa2c 6c7e6c acfeac 448244 34d22c 7d7d7c 6c6d6c 
445644 4c4d4c 1c7a19 1c3e1c 3c3f3c 2c422c 7c9a84 54c254 dceadc 144014 
343231 bccebc bcbabc 447244 6c6664 9c9d9c 7caa7c 349a38 6c7a74 84b69c 
1c4e18 898a89 ccfadc 1c6c2c b8e2c0 1c8a24 a1aaa1 3c4e3c 5f5e5c d8fed8 
24be24 78d670 688668 148a14 14a618 145624 0c480e 2c292b 142916 1c921c 
d4dad9 243828 143017 b4d2bc b4b7b5 1c961c 8c868c 247e24 144e13 04fa04 
246224 fcfefc 0c4e0c ace2b4 3caa3c 244e24 0c180c 949394 545454 ece9ec 
343634 2cb127 6c736c 0ca00c 0cda08 0c5c0b 0ccf06 146a0c b4b2b4 646464 
b4c2b4 0c3f0c ecfdf9 e4dedc ccfdcc 2c2f2b 142214 146b16 c4c2c2 545b54 
2cb62c 74ba74 346634 b4fcb0 244224 444242 246a24 e4feec 0ce204 f4f9fc 
f4eefc 444744 54b654 fcf9fc 0c9114 dcd6d4 ecfeec 0c7b14 0cc614 0c6314 
0c8414 
pop pop   % lose return values from readhexstring


% rlecmapimage expects to have 'w h bits matrix' on stack
/rlecmapimage {
  /buffer 1 string def
  /rgbval 3 string def
  /block  384 string def

  % proc to read a block from file, and return RGB data
  { currentfile buffer readhexstring pop
    /bcount exch 0 get store
    bcount 128 ge
    {  % it's a non-run block
      0 1 bcount 128 sub
      { currentfile buffer readhexstring pop pop

        % look up value in color map
        /rgbval cmap buffer 0 get 3 mul 3 getinterval store

        % and put it in position i*3 in block
        block exch 3 mul rgbval putinterval
      } for
      block  0  bcount 127 sub 3 mul  getinterval
    }

    { % else it's a run block
      currentfile buffer readhexstring pop pop

      % look up value in colormap
      /rgbval cmap buffer 0 get 3 mul 3 getinterval store

      0 1 bcount { block exch 3 mul rgbval putinterval } for

      block 0 bcount 1 add 3 mul getinterval
    } ifelse
  } % end of proc
  false 3 colorimage
} bind def


60 40 8			% dimensions of data
[60 0 0 -40 0 40]		% mapping matrix
rlecmapimage

10bf8131bf05bf03e98165e902e9046587bf3158ec31bfe9658265e9bf09bf
10bf8131bf04bf81e9bf01bf02e98265bfe982e965e901e981bf318131ec82ecbfe982e9
65bf0abf
12bf82751ebf83bf1ebf318231ec3102318111318131bf81bfe901e981bf318131bf01bf
01e90bbf
0fbf02e901bf023101ec021101a981d6a981a9118111318131bf14bf
0fbf8165e901e988e5bfd4ecd66add07808c80149dc2137f46a911d431bfe981e9bf0fbf

0fbf01e982bfe9318331a49ce28fe2454d37562456dc71567bab87a9d4bf81bfe981e9bf
81bf318131bf0abf
10bf8ac775bf311bde43224d37568656cb535f1a733c893cae8506a91131bfe9bf01bf81
58bf0abf
0fbf911ebf31b761a0442245ed56721a530a3a4e3a813a4e864e73c94246e3bf10bf
07bf81e9bf82bfe9bf92bf1ebf31ec4f0c38e2ef8e4d49561a530a3a6283624b052b8a2b
ce4e60c2dfe331bf4cbf0cbf
0abf81e9bf82bfe9ec8eec83de1f21778e786f01341a0a3a1c851c4b052b20168b162054
aa93df11312fe965bf0abf
0ebf8d3111883d77cdcf78646f0134530a810a1c911c4ece20167c517c16542893a9ec31
e965bf0abf
08bf01e999bfe91ebf316cc07743cd45786f49561a530a3a624b6b2b707c510151877c70
4edcaba9bfe981e9bf0abf
0bbf01e985bf27d34352cf90cf0e4d2656011a530a1c62ee2b20167c5102518816cc1db9
d611bfe9bf0abf
07bf81e9bf01bf90e9bf4c86d3445277d92c786f49721a0a3a853a4b0520167c827c51bd
88bd5116e44b157a11bf0cbf
0dbf8d3f0fc33d4403cfbb0e3756011a0a860a624b2b20167c817c5102510116854b897b
a911bf0bbf
08bf82e9e5bf97bf75dab209bcc021ef254d2649561a533a1c4b052b70167c037c811620
85203a853911bf0bbf
0bbf0131869eb6d3b0bc7748884845646f561acb0a7382734b2b812b1683167c16cc01cc
012b844b2813d4bf0bbf
0abf0231955e236db0c04463cf45646f5634cb533a73624b2b2016821670548854ce2b20
4b28e831bf0bbf
0abf023183b5b6d3b089b044436e45786f49341a871a0a733a626b2b200120896b4e6b05
2b1c5f9decbf0bbf
09bf8131bf97bf31d82e09d3b044cd485a786f1201cb1a530a73621c052b852b054e4b1c
0585053a282d58bf0bbf
0bbf9431bf556709b03844cd482c7864125634cb1a5f0a7382734b0501050162011c854b
0aae2d58bf0bbf
0bbf0131934a236dd3b0bc7743485a786f1201341acb535f3a813a1c011c0173023a8453
3b1458bf0bbf
0bbf8431bf0455098309d338778277ef2c852c266f1201348134cb83cb530a3a013a810a
5f815f0a850a1ab37d58bf0bbf
08bf81e9bf93bf31bf18d83209d338c044cd6e0e2c64126f0172837271cb5382530a5383
53ae531a851a01a57e58bf0bbf
0bbf01e5837600230901098138c082c0482c862c7864126f49568156728272341a811a72
0272864912bb841131bf0abf
03bf94e9bfe9bfe9bf1ebf1ebf275923b632099538c044ef81ef7881786481646f816fad
84adea01ea560156882449ad2da3115831bf0abf
04bf02e992654ce61e75bf0d185523b66d0995bcc043cd2c812c7881786483646f64f001
f08b6f496f49642d6382e3314cbf0abf
01bf85e9e5e9652fc784c7693fc7698a69c7d2b200232eb60929bc84bc6343ef2c862c78
45784d78ed82ed6f6489644d45a3afa2114c31bf0abf
01e58175c783c769d5eb8ceb797679dab87908db67c4b66d876d9538b0447743ef84ef6e
2c78458e455a457864788ecfbe9fd4315831bf0abf
88e5750d3f5779da98d083d0689b3501358d5d0236c45567b6320995b04477cd92cdef6e
2c6e5ad95acf782c4517813e31bf2fbf0bbf
887569575bd0689bc5ba83ba8a2a8a878aca2a74db5955b284b23209d3b081b077017701
cd016e02ef876e2c6e4810a4d4bf01bf814cbf0abf
873f79b835c5ba2a9a829aa8410141868de1d104c690d881d85583552e6d958b9538b0c0
77cd03cd6377afcd84cd4321c1d483d4e9654c814cbf0abf
88575b9b742ad1418de181e15081509603968450c8d759d881d8b283b2326d0981099585
9538bcb0381f871f95c3995ca931bf81bfe981e9bf0bbf
8779b8c58ad1c6e750855096d7b119b104b184d7b119d855845523b2b66d016d83952995
2987296de09211d431bf01bf01e90cbf
8979d0c52aa88de15096b181b119041901b18796c80fd74a59b2b602b6016d86326d328f
ac0b318331bf31bf01bf81e9bf0cbf
88575b9b742ad1c68de186e1c850c850c850865096c850e1e70487045e8ca7912e672e85
2e8cac33473101318158bf02bf82e9bfe981e9bf0abf
8b3f799835c5742a8bd1a8dbc683c68dc68d818dc601c68cdbd1ca40a15da66697274711
31863158bf31bf31bf82bf4ce985e9bfe9bfe9bf0abf
8bc76957dab8359bc5a1748a2a052a018a01748b029ba6665b279447ec311ebf83bf581e
bf82bf4cbf02bf82e9bfe981e9bf0abf
881e75693f57795bb8d082d068350135029b0135013088b8985b7608b40d751e811ebf83
bf1e75bf81bf4c814cbf05bf81e9bf0bbf
83e9e52fc782c7693f823f5779817976027681da760276827957b482b4c7750175822fe5
bf82bf4cbf01bf814cbf81bfe981e9bf01bf01e90dbf

%
% Compression made this file 26.36% of the uncompressed size.
%


showpage

% stop using temporary dictionary
end

% restore original state
origstate restore

%%Trailer

%%EndDocument
 @endspecial 298 w(Add)66 b(I-Cache)h(\(soon\))4649 3158
y @beginspecial 276 @llx 376 @lly 336 @urx 416 @ury 113
@rwi @setspecial
%%BeginDocument: green-bullet-on-white.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/fred/TeX/STYLES/Prosper/img/green-bullet-on-white.ps
%%Creator: XV Version 3.10a+FLmask  Rev: 12/29/94  -  by John Bradley
%%BoundingBox: 276 376 336 416
%%Pages: 1
%%DocumentFonts:
%%EndComments
%%EndProlog

%%Page: 1 1

% remember original state
/origstate save def

% build a temporary dictionary
20 dict begin

% define space for color conversions
/grays 60 string def  % space for gray scale line
/npixls 0 def
/rgbindx 0 def

% lower left corner
276 376 translate

% size of image (on paper, in 1/72inch coords)
59.97600 40.03200 scale

% define 'colorimage' if it isn't defined
%   ('colortogray' and 'mergeprocs' come from xwd2ps
%     via xgrab)
/colorimage where   % do we know about 'colorimage'?
  { pop }           % yes: pop off the 'dict' returned
  {                 % no:  define one
    /colortogray {  % define an RGB->I function
      /rgbdata exch store    % call input 'rgbdata'
      rgbdata length 3 idiv
      /npixls exch store
      /rgbindx 0 store
      0 1 npixls 1 sub {
        grays exch
        rgbdata rgbindx       get 20 mul    % Red
        rgbdata rgbindx 1 add get 32 mul    % Green
        rgbdata rgbindx 2 add get 12 mul    % Blue
        add add 64 idiv      % I = .5G + .31R + .18B
        put
        /rgbindx rgbindx 3 add store
      } for
      grays 0 npixls getinterval
    } bind def

    % Utility procedure for colorimage operator.
    % This procedure takes two procedures off the
    % stack and merges them into a single procedure.

    /mergeprocs { % def
      dup length
      3 -1 roll
      dup
      length
      dup
      5 1 roll
      3 -1 roll
      add
      array cvx
      dup
      3 -1 roll
      0 exch
      putinterval
      dup
      4 2 roll
      putinterval
    } bind def

    /colorimage { % def
      pop pop     % remove 'false 3' operands
      {colortogray} mergeprocs
      image
    } bind def
  } ifelse          % end of 'false' case



% define the colormap
/cmap 723 string def


% load up the colormap
currentfile cmap readhexstring
041808 049008 8c948c 045204 4c544c 04c804 84e284 449644 c4cbc4 0c380e 
04ac07 cce6cc 345e2c e4e7e4 046604 2c3a2c 347234 e4fee2 048208 64cc60 
34922c 24b224 04e404 044604 647264 242623 049f07 8cae8c 04bc06 24c61c 
f4f8f3 1c541c 04d804 1c621c 1c7220 0c280d 14910f 045e04 047c04 ccdcd0 
14ac18 1c481c 747473 04d105 0c6c0b 24852a 1c381c f4f1f3 acafac f4fef5 
0c310c acc6ac 049708 a4a4a3 3c4a44 148314 144812 9cea94 04b405 149e14 
1cbc1c 044004 e4fef4 dcdddd 748274 5c5959 4cba54 145b11 145413 147412 
c4fec4 e4f1e7 146411 088a0a 243028 09c207 fcf8f3 147c13 14c80e acceac 
3c3939 04f405 044e07 07a608 14d00f 0c1f10 0c900b d4d3d4 ecfee3 1c291d 
0c6e14 bcbfbd d4f6d4 909a94 4c5a50 0cac08 24ba24 547e54 0cbc0a 0c5c16 
0c7c0b fcf1fb acb8ac 1c311c aca7a9 e2e2e2 a4e2a4 0cc80a 6c9a6c 143715 
0c650a 0c840b 07de06 14970c 0c980a 0cb40a 848583 ecf0f0 c3c6c3 0c540d 
0c740c cccccc 74ce6c 30a02c 04ec05 54aa5c 6cb66c 9cfa9c 2c862c 5c926c 
6ca674 b4deac 9cda9c 34aa2c 6c7e6c acfeac 448244 34d22c 7d7d7c 6c6d6c 
445644 4c4d4c 1c7a19 1c3e1c 3c3f3c 2c422c 7c9a84 54c254 dceadc 144014 
343231 bccebc bcbabc 447244 6c6664 9c9d9c 7caa7c 349a38 6c7a74 84b69c 
1c4e18 898a89 ccfadc 1c6c2c b8e2c0 1c8a24 a1aaa1 3c4e3c 5f5e5c d8fed8 
24be24 78d670 688668 148a14 14a618 145624 0c480e 2c292b 142916 1c921c 
d4dad9 243828 143017 b4d2bc b4b7b5 1c961c 8c868c 247e24 144e13 04fa04 
246224 fcfefc 0c4e0c ace2b4 3caa3c 244e24 0c180c 949394 545454 ece9ec 
343634 2cb127 6c736c 0ca00c 0cda08 0c5c0b 0ccf06 146a0c b4b2b4 646464 
b4c2b4 0c3f0c ecfdf9 e4dedc ccfdcc 2c2f2b 142214 146b16 c4c2c2 545b54 
2cb62c 74ba74 346634 b4fcb0 244224 444242 246a24 e4feec 0ce204 f4f9fc 
f4eefc 444744 54b654 fcf9fc 0c9114 dcd6d4 ecfeec 0c7b14 0cc614 0c6314 
0c8414 
pop pop   % lose return values from readhexstring


% rlecmapimage expects to have 'w h bits matrix' on stack
/rlecmapimage {
  /buffer 1 string def
  /rgbval 3 string def
  /block  384 string def

  % proc to read a block from file, and return RGB data
  { currentfile buffer readhexstring pop
    /bcount exch 0 get store
    bcount 128 ge
    {  % it's a non-run block
      0 1 bcount 128 sub
      { currentfile buffer readhexstring pop pop

        % look up value in color map
        /rgbval cmap buffer 0 get 3 mul 3 getinterval store

        % and put it in position i*3 in block
        block exch 3 mul rgbval putinterval
      } for
      block  0  bcount 127 sub 3 mul  getinterval
    }

    { % else it's a run block
      currentfile buffer readhexstring pop pop

      % look up value in colormap
      /rgbval cmap buffer 0 get 3 mul 3 getinterval store

      0 1 bcount { block exch 3 mul rgbval putinterval } for

      block 0 bcount 1 add 3 mul getinterval
    } ifelse
  } % end of proc
  false 3 colorimage
} bind def


60 40 8			% dimensions of data
[60 0 0 -40 0 40]		% mapping matrix
rlecmapimage

10bf8131bf05bf03e98165e902e9046587bf3158ec31bfe9658265e9bf09bf
10bf8131bf04bf81e9bf01bf02e98265bfe982e965e901e981bf318131ec82ecbfe982e9
65bf0abf
12bf82751ebf83bf1ebf318231ec3102318111318131bf81bfe901e981bf318131bf01bf
01e90bbf
0fbf02e901bf023101ec021101a981d6a981a9118111318131bf14bf
0fbf8165e901e988e5bfd4ecd66add07808c80149dc2137f46a911d431bfe981e9bf0fbf

0fbf01e982bfe9318331a49ce28fe2454d37562456dc71567bab87a9d4bf81bfe981e9bf
81bf318131bf0abf
10bf8ac775bf311bde43224d37568656cb535f1a733c893cae8506a91131bfe9bf01bf81
58bf0abf
0fbf911ebf31b761a0442245ed56721a530a3a4e3a813a4e864e73c94246e3bf10bf
07bf81e9bf82bfe9bf92bf1ebf31ec4f0c38e2ef8e4d49561a530a3a6283624b052b8a2b
ce4e60c2dfe331bf4cbf0cbf
0abf81e9bf82bfe9ec8eec83de1f21778e786f01341a0a3a1c851c4b052b20168b162054
aa93df11312fe965bf0abf
0ebf8d3111883d77cdcf78646f0134530a810a1c911c4ece20167c517c16542893a9ec31
e965bf0abf
08bf01e999bfe91ebf316cc07743cd45786f49561a530a3a624b6b2b707c510151877c70
4edcaba9bfe981e9bf0abf
0bbf01e985bf27d34352cf90cf0e4d2656011a530a1c62ee2b20167c5102518816cc1db9
d611bfe9bf0abf
07bf81e9bf01bf90e9bf4c86d3445277d92c786f49721a0a3a853a4b0520167c827c51bd
88bd5116e44b157a11bf0cbf
0dbf8d3f0fc33d4403cfbb0e3756011a0a860a624b2b20167c817c5102510116854b897b
a911bf0bbf
08bf82e9e5bf97bf75dab209bcc021ef254d2649561a533a1c4b052b70167c037c811620
85203a853911bf0bbf
0bbf0131869eb6d3b0bc7748884845646f561acb0a7382734b2b812b1683167c16cc01cc
012b844b2813d4bf0bbf
0abf0231955e236db0c04463cf45646f5634cb533a73624b2b2016821670548854ce2b20
4b28e831bf0bbf
0abf023183b5b6d3b089b044436e45786f49341a871a0a733a626b2b200120896b4e6b05
2b1c5f9decbf0bbf
09bf8131bf97bf31d82e09d3b044cd485a786f1201cb1a530a73621c052b852b054e4b1c
0585053a282d58bf0bbf
0bbf9431bf556709b03844cd482c7864125634cb1a5f0a7382734b0501050162011c854b
0aae2d58bf0bbf
0bbf0131934a236dd3b0bc7743485a786f1201341acb535f3a813a1c011c0173023a8453
3b1458bf0bbf
0bbf8431bf0455098309d338778277ef2c852c266f1201348134cb83cb530a3a013a810a
5f815f0a850a1ab37d58bf0bbf
08bf81e9bf93bf31bf18d83209d338c044cd6e0e2c64126f0172837271cb5382530a5383
53ae531a851a01a57e58bf0bbf
0bbf01e5837600230901098138c082c0482c862c7864126f49568156728272341a811a72
0272864912bb841131bf0abf
03bf94e9bfe9bfe9bf1ebf1ebf275923b632099538c044ef81ef7881786481646f816fad
84adea01ea560156882449ad2da3115831bf0abf
04bf02e992654ce61e75bf0d185523b66d0995bcc043cd2c812c7881786483646f64f001
f08b6f496f49642d6382e3314cbf0abf
01bf85e9e5e9652fc784c7693fc7698a69c7d2b200232eb60929bc84bc6343ef2c862c78
45784d78ed82ed6f6489644d45a3afa2114c31bf0abf
01e58175c783c769d5eb8ceb797679dab87908db67c4b66d876d9538b0447743ef84ef6e
2c78458e455a457864788ecfbe9fd4315831bf0abf
88e5750d3f5779da98d083d0689b3501358d5d0236c45567b6320995b04477cd92cdef6e
2c6e5ad95acf782c4517813e31bf2fbf0bbf
887569575bd0689bc5ba83ba8a2a8a878aca2a74db5955b284b23209d3b081b077017701
cd016e02ef876e2c6e4810a4d4bf01bf814cbf0abf
873f79b835c5ba2a9a829aa8410141868de1d104c690d881d85583552e6d958b9538b0c0
77cd03cd6377afcd84cd4321c1d483d4e9654c814cbf0abf
88575b9b742ad1418de181e15081509603968450c8d759d881d8b283b2326d0981099585
9538bcb0381f871f95c3995ca931bf81bfe981e9bf0bbf
8779b8c58ad1c6e750855096d7b119b104b184d7b119d855845523b2b66d016d83952995
2987296de09211d431bf01bf01e90cbf
8979d0c52aa88de15096b181b119041901b18796c80fd74a59b2b602b6016d86326d328f
ac0b318331bf31bf01bf81e9bf0cbf
88575b9b742ad1c68de186e1c850c850c850865096c850e1e70487045e8ca7912e672e85
2e8cac33473101318158bf02bf82e9bfe981e9bf0abf
8b3f799835c5742a8bd1a8dbc683c68dc68d818dc601c68cdbd1ca40a15da66697274711
31863158bf31bf31bf82bf4ce985e9bfe9bfe9bf0abf
8bc76957dab8359bc5a1748a2a052a018a01748b029ba6665b279447ec311ebf83bf581e
bf82bf4cbf02bf82e9bfe981e9bf0abf
881e75693f57795bb8d082d068350135029b0135013088b8985b7608b40d751e811ebf83
bf1e75bf81bf4c814cbf05bf81e9bf0bbf
83e9e52fc782c7693f823f5779817976027681da760276827957b482b4c7750175822fe5
bf82bf4cbf01bf814cbf81bfe981e9bf01bf01e90dbf

%
% Compression made this file 26.36% of the uncompressed size.
%


showpage

% stop using temporary dictionary
end

% restore original state
origstate restore

%%Trailer

%%EndDocument
 @endspecial 298 w(Document)f(the)h(code)g(with)f(do)-7
b(xygen)66 b(\(star)10 b(ting\))4649 3531 y @beginspecial
276 @llx 376 @lly 336 @urx 416 @ury 113 @rwi @setspecial
%%BeginDocument: green-bullet-on-white.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/fred/TeX/STYLES/Prosper/img/green-bullet-on-white.ps
%%Creator: XV Version 3.10a+FLmask  Rev: 12/29/94  -  by John Bradley
%%BoundingBox: 276 376 336 416
%%Pages: 1
%%DocumentFonts:
%%EndComments
%%EndProlog

%%Page: 1 1

% remember original state
/origstate save def

% build a temporary dictionary
20 dict begin

% define space for color conversions
/grays 60 string def  % space for gray scale line
/npixls 0 def
/rgbindx 0 def

% lower left corner
276 376 translate

% size of image (on paper, in 1/72inch coords)
59.97600 40.03200 scale

% define 'colorimage' if it isn't defined
%   ('colortogray' and 'mergeprocs' come from xwd2ps
%     via xgrab)
/colorimage where   % do we know about 'colorimage'?
  { pop }           % yes: pop off the 'dict' returned
  {                 % no:  define one
    /colortogray {  % define an RGB->I function
      /rgbdata exch store    % call input 'rgbdata'
      rgbdata length 3 idiv
      /npixls exch store
      /rgbindx 0 store
      0 1 npixls 1 sub {
        grays exch
        rgbdata rgbindx       get 20 mul    % Red
        rgbdata rgbindx 1 add get 32 mul    % Green
        rgbdata rgbindx 2 add get 12 mul    % Blue
        add add 64 idiv      % I = .5G + .31R + .18B
        put
        /rgbindx rgbindx 3 add store
      } for
      grays 0 npixls getinterval
    } bind def

    % Utility procedure for colorimage operator.
    % This procedure takes two procedures off the
    % stack and merges them into a single procedure.

    /mergeprocs { % def
      dup length
      3 -1 roll
      dup
      length
      dup
      5 1 roll
      3 -1 roll
      add
      array cvx
      dup
      3 -1 roll
      0 exch
      putinterval
      dup
      4 2 roll
      putinterval
    } bind def

    /colorimage { % def
      pop pop     % remove 'false 3' operands
      {colortogray} mergeprocs
      image
    } bind def
  } ifelse          % end of 'false' case



% define the colormap
/cmap 723 string def


% load up the colormap
currentfile cmap readhexstring
041808 049008 8c948c 045204 4c544c 04c804 84e284 449644 c4cbc4 0c380e 
04ac07 cce6cc 345e2c e4e7e4 046604 2c3a2c 347234 e4fee2 048208 64cc60 
34922c 24b224 04e404 044604 647264 242623 049f07 8cae8c 04bc06 24c61c 
f4f8f3 1c541c 04d804 1c621c 1c7220 0c280d 14910f 045e04 047c04 ccdcd0 
14ac18 1c481c 747473 04d105 0c6c0b 24852a 1c381c f4f1f3 acafac f4fef5 
0c310c acc6ac 049708 a4a4a3 3c4a44 148314 144812 9cea94 04b405 149e14 
1cbc1c 044004 e4fef4 dcdddd 748274 5c5959 4cba54 145b11 145413 147412 
c4fec4 e4f1e7 146411 088a0a 243028 09c207 fcf8f3 147c13 14c80e acceac 
3c3939 04f405 044e07 07a608 14d00f 0c1f10 0c900b d4d3d4 ecfee3 1c291d 
0c6e14 bcbfbd d4f6d4 909a94 4c5a50 0cac08 24ba24 547e54 0cbc0a 0c5c16 
0c7c0b fcf1fb acb8ac 1c311c aca7a9 e2e2e2 a4e2a4 0cc80a 6c9a6c 143715 
0c650a 0c840b 07de06 14970c 0c980a 0cb40a 848583 ecf0f0 c3c6c3 0c540d 
0c740c cccccc 74ce6c 30a02c 04ec05 54aa5c 6cb66c 9cfa9c 2c862c 5c926c 
6ca674 b4deac 9cda9c 34aa2c 6c7e6c acfeac 448244 34d22c 7d7d7c 6c6d6c 
445644 4c4d4c 1c7a19 1c3e1c 3c3f3c 2c422c 7c9a84 54c254 dceadc 144014 
343231 bccebc bcbabc 447244 6c6664 9c9d9c 7caa7c 349a38 6c7a74 84b69c 
1c4e18 898a89 ccfadc 1c6c2c b8e2c0 1c8a24 a1aaa1 3c4e3c 5f5e5c d8fed8 
24be24 78d670 688668 148a14 14a618 145624 0c480e 2c292b 142916 1c921c 
d4dad9 243828 143017 b4d2bc b4b7b5 1c961c 8c868c 247e24 144e13 04fa04 
246224 fcfefc 0c4e0c ace2b4 3caa3c 244e24 0c180c 949394 545454 ece9ec 
343634 2cb127 6c736c 0ca00c 0cda08 0c5c0b 0ccf06 146a0c b4b2b4 646464 
b4c2b4 0c3f0c ecfdf9 e4dedc ccfdcc 2c2f2b 142214 146b16 c4c2c2 545b54 
2cb62c 74ba74 346634 b4fcb0 244224 444242 246a24 e4feec 0ce204 f4f9fc 
f4eefc 444744 54b654 fcf9fc 0c9114 dcd6d4 ecfeec 0c7b14 0cc614 0c6314 
0c8414 
pop pop   % lose return values from readhexstring


% rlecmapimage expects to have 'w h bits matrix' on stack
/rlecmapimage {
  /buffer 1 string def
  /rgbval 3 string def
  /block  384 string def

  % proc to read a block from file, and return RGB data
  { currentfile buffer readhexstring pop
    /bcount exch 0 get store
    bcount 128 ge
    {  % it's a non-run block
      0 1 bcount 128 sub
      { currentfile buffer readhexstring pop pop

        % look up value in color map
        /rgbval cmap buffer 0 get 3 mul 3 getinterval store

        % and put it in position i*3 in block
        block exch 3 mul rgbval putinterval
      } for
      block  0  bcount 127 sub 3 mul  getinterval
    }

    { % else it's a run block
      currentfile buffer readhexstring pop pop

      % look up value in colormap
      /rgbval cmap buffer 0 get 3 mul 3 getinterval store

      0 1 bcount { block exch 3 mul rgbval putinterval } for

      block 0 bcount 1 add 3 mul getinterval
    } ifelse
  } % end of proc
  false 3 colorimage
} bind def


60 40 8			% dimensions of data
[60 0 0 -40 0 40]		% mapping matrix
rlecmapimage

10bf8131bf05bf03e98165e902e9046587bf3158ec31bfe9658265e9bf09bf
10bf8131bf04bf81e9bf01bf02e98265bfe982e965e901e981bf318131ec82ecbfe982e9
65bf0abf
12bf82751ebf83bf1ebf318231ec3102318111318131bf81bfe901e981bf318131bf01bf
01e90bbf
0fbf02e901bf023101ec021101a981d6a981a9118111318131bf14bf
0fbf8165e901e988e5bfd4ecd66add07808c80149dc2137f46a911d431bfe981e9bf0fbf

0fbf01e982bfe9318331a49ce28fe2454d37562456dc71567bab87a9d4bf81bfe981e9bf
81bf318131bf0abf
10bf8ac775bf311bde43224d37568656cb535f1a733c893cae8506a91131bfe9bf01bf81
58bf0abf
0fbf911ebf31b761a0442245ed56721a530a3a4e3a813a4e864e73c94246e3bf10bf
07bf81e9bf82bfe9bf92bf1ebf31ec4f0c38e2ef8e4d49561a530a3a6283624b052b8a2b
ce4e60c2dfe331bf4cbf0cbf
0abf81e9bf82bfe9ec8eec83de1f21778e786f01341a0a3a1c851c4b052b20168b162054
aa93df11312fe965bf0abf
0ebf8d3111883d77cdcf78646f0134530a810a1c911c4ece20167c517c16542893a9ec31
e965bf0abf
08bf01e999bfe91ebf316cc07743cd45786f49561a530a3a624b6b2b707c510151877c70
4edcaba9bfe981e9bf0abf
0bbf01e985bf27d34352cf90cf0e4d2656011a530a1c62ee2b20167c5102518816cc1db9
d611bfe9bf0abf
07bf81e9bf01bf90e9bf4c86d3445277d92c786f49721a0a3a853a4b0520167c827c51bd
88bd5116e44b157a11bf0cbf
0dbf8d3f0fc33d4403cfbb0e3756011a0a860a624b2b20167c817c5102510116854b897b
a911bf0bbf
08bf82e9e5bf97bf75dab209bcc021ef254d2649561a533a1c4b052b70167c037c811620
85203a853911bf0bbf
0bbf0131869eb6d3b0bc7748884845646f561acb0a7382734b2b812b1683167c16cc01cc
012b844b2813d4bf0bbf
0abf0231955e236db0c04463cf45646f5634cb533a73624b2b2016821670548854ce2b20
4b28e831bf0bbf
0abf023183b5b6d3b089b044436e45786f49341a871a0a733a626b2b200120896b4e6b05
2b1c5f9decbf0bbf
09bf8131bf97bf31d82e09d3b044cd485a786f1201cb1a530a73621c052b852b054e4b1c
0585053a282d58bf0bbf
0bbf9431bf556709b03844cd482c7864125634cb1a5f0a7382734b0501050162011c854b
0aae2d58bf0bbf
0bbf0131934a236dd3b0bc7743485a786f1201341acb535f3a813a1c011c0173023a8453
3b1458bf0bbf
0bbf8431bf0455098309d338778277ef2c852c266f1201348134cb83cb530a3a013a810a
5f815f0a850a1ab37d58bf0bbf
08bf81e9bf93bf31bf18d83209d338c044cd6e0e2c64126f0172837271cb5382530a5383
53ae531a851a01a57e58bf0bbf
0bbf01e5837600230901098138c082c0482c862c7864126f49568156728272341a811a72
0272864912bb841131bf0abf
03bf94e9bfe9bfe9bf1ebf1ebf275923b632099538c044ef81ef7881786481646f816fad
84adea01ea560156882449ad2da3115831bf0abf
04bf02e992654ce61e75bf0d185523b66d0995bcc043cd2c812c7881786483646f64f001
f08b6f496f49642d6382e3314cbf0abf
01bf85e9e5e9652fc784c7693fc7698a69c7d2b200232eb60929bc84bc6343ef2c862c78
45784d78ed82ed6f6489644d45a3afa2114c31bf0abf
01e58175c783c769d5eb8ceb797679dab87908db67c4b66d876d9538b0447743ef84ef6e
2c78458e455a457864788ecfbe9fd4315831bf0abf
88e5750d3f5779da98d083d0689b3501358d5d0236c45567b6320995b04477cd92cdef6e
2c6e5ad95acf782c4517813e31bf2fbf0bbf
887569575bd0689bc5ba83ba8a2a8a878aca2a74db5955b284b23209d3b081b077017701
cd016e02ef876e2c6e4810a4d4bf01bf814cbf0abf
873f79b835c5ba2a9a829aa8410141868de1d104c690d881d85583552e6d958b9538b0c0
77cd03cd6377afcd84cd4321c1d483d4e9654c814cbf0abf
88575b9b742ad1418de181e15081509603968450c8d759d881d8b283b2326d0981099585
9538bcb0381f871f95c3995ca931bf81bfe981e9bf0bbf
8779b8c58ad1c6e750855096d7b119b104b184d7b119d855845523b2b66d016d83952995
2987296de09211d431bf01bf01e90cbf
8979d0c52aa88de15096b181b119041901b18796c80fd74a59b2b602b6016d86326d328f
ac0b318331bf31bf01bf81e9bf0cbf
88575b9b742ad1c68de186e1c850c850c850865096c850e1e70487045e8ca7912e672e85
2e8cac33473101318158bf02bf82e9bfe981e9bf0abf
8b3f799835c5742a8bd1a8dbc683c68dc68d818dc601c68cdbd1ca40a15da66697274711
31863158bf31bf31bf82bf4ce985e9bfe9bfe9bf0abf
8bc76957dab8359bc5a1748a2a052a018a01748b029ba6665b279447ec311ebf83bf581e
bf82bf4cbf02bf82e9bfe981e9bf0abf
881e75693f57795bb8d082d068350135029b0135013088b8985b7608b40d751e811ebf83
bf1e75bf81bf4c814cbf05bf81e9bf0bbf
83e9e52fc782c7693f823f5779817976027681da760276827957b482b4c7750175822fe5
bf82bf4cbf01bf814cbf81bfe981e9bf01bf01e90dbf

%
% Compression made this file 26.36% of the uncompressed size.
%


showpage

% stop using temporary dictionary
end

% restore original state
origstate restore

%%Trailer

%%EndDocument
 @endspecial 298 w(Create)67 b(sample)f(codes)g(and)h(document)g(them)
4649 3902 y @beginspecial 276 @llx 376 @lly 336 @urx
416 @ury 113 @rwi @setspecial
%%BeginDocument: green-bullet-on-white.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/fred/TeX/STYLES/Prosper/img/green-bullet-on-white.ps
%%Creator: XV Version 3.10a+FLmask  Rev: 12/29/94  -  by John Bradley
%%BoundingBox: 276 376 336 416
%%Pages: 1
%%DocumentFonts:
%%EndComments
%%EndProlog

%%Page: 1 1

% remember original state
/origstate save def

% build a temporary dictionary
20 dict begin

% define space for color conversions
/grays 60 string def  % space for gray scale line
/npixls 0 def
/rgbindx 0 def

% lower left corner
276 376 translate

% size of image (on paper, in 1/72inch coords)
59.97600 40.03200 scale

% define 'colorimage' if it isn't defined
%   ('colortogray' and 'mergeprocs' come from xwd2ps
%     via xgrab)
/colorimage where   % do we know about 'colorimage'?
  { pop }           % yes: pop off the 'dict' returned
  {                 % no:  define one
    /colortogray {  % define an RGB->I function
      /rgbdata exch store    % call input 'rgbdata'
      rgbdata length 3 idiv
      /npixls exch store
      /rgbindx 0 store
      0 1 npixls 1 sub {
        grays exch
        rgbdata rgbindx       get 20 mul    % Red
        rgbdata rgbindx 1 add get 32 mul    % Green
        rgbdata rgbindx 2 add get 12 mul    % Blue
        add add 64 idiv      % I = .5G + .31R + .18B
        put
        /rgbindx rgbindx 3 add store
      } for
      grays 0 npixls getinterval
    } bind def

    % Utility procedure for colorimage operator.
    % This procedure takes two procedures off the
    % stack and merges them into a single procedure.

    /mergeprocs { % def
      dup length
      3 -1 roll
      dup
      length
      dup
      5 1 roll
      3 -1 roll
      add
      array cvx
      dup
      3 -1 roll
      0 exch
      putinterval
      dup
      4 2 roll
      putinterval
    } bind def

    /colorimage { % def
      pop pop     % remove 'false 3' operands
      {colortogray} mergeprocs
      image
    } bind def
  } ifelse          % end of 'false' case



% define the colormap
/cmap 723 string def


% load up the colormap
currentfile cmap readhexstring
041808 049008 8c948c 045204 4c544c 04c804 84e284 449644 c4cbc4 0c380e 
04ac07 cce6cc 345e2c e4e7e4 046604 2c3a2c 347234 e4fee2 048208 64cc60 
34922c 24b224 04e404 044604 647264 242623 049f07 8cae8c 04bc06 24c61c 
f4f8f3 1c541c 04d804 1c621c 1c7220 0c280d 14910f 045e04 047c04 ccdcd0 
14ac18 1c481c 747473 04d105 0c6c0b 24852a 1c381c f4f1f3 acafac f4fef5 
0c310c acc6ac 049708 a4a4a3 3c4a44 148314 144812 9cea94 04b405 149e14 
1cbc1c 044004 e4fef4 dcdddd 748274 5c5959 4cba54 145b11 145413 147412 
c4fec4 e4f1e7 146411 088a0a 243028 09c207 fcf8f3 147c13 14c80e acceac 
3c3939 04f405 044e07 07a608 14d00f 0c1f10 0c900b d4d3d4 ecfee3 1c291d 
0c6e14 bcbfbd d4f6d4 909a94 4c5a50 0cac08 24ba24 547e54 0cbc0a 0c5c16 
0c7c0b fcf1fb acb8ac 1c311c aca7a9 e2e2e2 a4e2a4 0cc80a 6c9a6c 143715 
0c650a 0c840b 07de06 14970c 0c980a 0cb40a 848583 ecf0f0 c3c6c3 0c540d 
0c740c cccccc 74ce6c 30a02c 04ec05 54aa5c 6cb66c 9cfa9c 2c862c 5c926c 
6ca674 b4deac 9cda9c 34aa2c 6c7e6c acfeac 448244 34d22c 7d7d7c 6c6d6c 
445644 4c4d4c 1c7a19 1c3e1c 3c3f3c 2c422c 7c9a84 54c254 dceadc 144014 
343231 bccebc bcbabc 447244 6c6664 9c9d9c 7caa7c 349a38 6c7a74 84b69c 
1c4e18 898a89 ccfadc 1c6c2c b8e2c0 1c8a24 a1aaa1 3c4e3c 5f5e5c d8fed8 
24be24 78d670 688668 148a14 14a618 145624 0c480e 2c292b 142916 1c921c 
d4dad9 243828 143017 b4d2bc b4b7b5 1c961c 8c868c 247e24 144e13 04fa04 
246224 fcfefc 0c4e0c ace2b4 3caa3c 244e24 0c180c 949394 545454 ece9ec 
343634 2cb127 6c736c 0ca00c 0cda08 0c5c0b 0ccf06 146a0c b4b2b4 646464 
b4c2b4 0c3f0c ecfdf9 e4dedc ccfdcc 2c2f2b 142214 146b16 c4c2c2 545b54 
2cb62c 74ba74 346634 b4fcb0 244224 444242 246a24 e4feec 0ce204 f4f9fc 
f4eefc 444744 54b654 fcf9fc 0c9114 dcd6d4 ecfeec 0c7b14 0cc614 0c6314 
0c8414 
pop pop   % lose return values from readhexstring


% rlecmapimage expects to have 'w h bits matrix' on stack
/rlecmapimage {
  /buffer 1 string def
  /rgbval 3 string def
  /block  384 string def

  % proc to read a block from file, and return RGB data
  { currentfile buffer readhexstring pop
    /bcount exch 0 get store
    bcount 128 ge
    {  % it's a non-run block
      0 1 bcount 128 sub
      { currentfile buffer readhexstring pop pop

        % look up value in color map
        /rgbval cmap buffer 0 get 3 mul 3 getinterval store

        % and put it in position i*3 in block
        block exch 3 mul rgbval putinterval
      } for
      block  0  bcount 127 sub 3 mul  getinterval
    }

    { % else it's a run block
      currentfile buffer readhexstring pop pop

      % look up value in colormap
      /rgbval cmap buffer 0 get 3 mul 3 getinterval store

      0 1 bcount { block exch 3 mul rgbval putinterval } for

      block 0 bcount 1 add 3 mul getinterval
    } ifelse
  } % end of proc
  false 3 colorimage
} bind def


60 40 8			% dimensions of data
[60 0 0 -40 0 40]		% mapping matrix
rlecmapimage

10bf8131bf05bf03e98165e902e9046587bf3158ec31bfe9658265e9bf09bf
10bf8131bf04bf81e9bf01bf02e98265bfe982e965e901e981bf318131ec82ecbfe982e9
65bf0abf
12bf82751ebf83bf1ebf318231ec3102318111318131bf81bfe901e981bf318131bf01bf
01e90bbf
0fbf02e901bf023101ec021101a981d6a981a9118111318131bf14bf
0fbf8165e901e988e5bfd4ecd66add07808c80149dc2137f46a911d431bfe981e9bf0fbf

0fbf01e982bfe9318331a49ce28fe2454d37562456dc71567bab87a9d4bf81bfe981e9bf
81bf318131bf0abf
10bf8ac775bf311bde43224d37568656cb535f1a733c893cae8506a91131bfe9bf01bf81
58bf0abf
0fbf911ebf31b761a0442245ed56721a530a3a4e3a813a4e864e73c94246e3bf10bf
07bf81e9bf82bfe9bf92bf1ebf31ec4f0c38e2ef8e4d49561a530a3a6283624b052b8a2b
ce4e60c2dfe331bf4cbf0cbf
0abf81e9bf82bfe9ec8eec83de1f21778e786f01341a0a3a1c851c4b052b20168b162054
aa93df11312fe965bf0abf
0ebf8d3111883d77cdcf78646f0134530a810a1c911c4ece20167c517c16542893a9ec31
e965bf0abf
08bf01e999bfe91ebf316cc07743cd45786f49561a530a3a624b6b2b707c510151877c70
4edcaba9bfe981e9bf0abf
0bbf01e985bf27d34352cf90cf0e4d2656011a530a1c62ee2b20167c5102518816cc1db9
d611bfe9bf0abf
07bf81e9bf01bf90e9bf4c86d3445277d92c786f49721a0a3a853a4b0520167c827c51bd
88bd5116e44b157a11bf0cbf
0dbf8d3f0fc33d4403cfbb0e3756011a0a860a624b2b20167c817c5102510116854b897b
a911bf0bbf
08bf82e9e5bf97bf75dab209bcc021ef254d2649561a533a1c4b052b70167c037c811620
85203a853911bf0bbf
0bbf0131869eb6d3b0bc7748884845646f561acb0a7382734b2b812b1683167c16cc01cc
012b844b2813d4bf0bbf
0abf0231955e236db0c04463cf45646f5634cb533a73624b2b2016821670548854ce2b20
4b28e831bf0bbf
0abf023183b5b6d3b089b044436e45786f49341a871a0a733a626b2b200120896b4e6b05
2b1c5f9decbf0bbf
09bf8131bf97bf31d82e09d3b044cd485a786f1201cb1a530a73621c052b852b054e4b1c
0585053a282d58bf0bbf
0bbf9431bf556709b03844cd482c7864125634cb1a5f0a7382734b0501050162011c854b
0aae2d58bf0bbf
0bbf0131934a236dd3b0bc7743485a786f1201341acb535f3a813a1c011c0173023a8453
3b1458bf0bbf
0bbf8431bf0455098309d338778277ef2c852c266f1201348134cb83cb530a3a013a810a
5f815f0a850a1ab37d58bf0bbf
08bf81e9bf93bf31bf18d83209d338c044cd6e0e2c64126f0172837271cb5382530a5383
53ae531a851a01a57e58bf0bbf
0bbf01e5837600230901098138c082c0482c862c7864126f49568156728272341a811a72
0272864912bb841131bf0abf
03bf94e9bfe9bfe9bf1ebf1ebf275923b632099538c044ef81ef7881786481646f816fad
84adea01ea560156882449ad2da3115831bf0abf
04bf02e992654ce61e75bf0d185523b66d0995bcc043cd2c812c7881786483646f64f001
f08b6f496f49642d6382e3314cbf0abf
01bf85e9e5e9652fc784c7693fc7698a69c7d2b200232eb60929bc84bc6343ef2c862c78
45784d78ed82ed6f6489644d45a3afa2114c31bf0abf
01e58175c783c769d5eb8ceb797679dab87908db67c4b66d876d9538b0447743ef84ef6e
2c78458e455a457864788ecfbe9fd4315831bf0abf
88e5750d3f5779da98d083d0689b3501358d5d0236c45567b6320995b04477cd92cdef6e
2c6e5ad95acf782c4517813e31bf2fbf0bbf
887569575bd0689bc5ba83ba8a2a8a878aca2a74db5955b284b23209d3b081b077017701
cd016e02ef876e2c6e4810a4d4bf01bf814cbf0abf
873f79b835c5ba2a9a829aa8410141868de1d104c690d881d85583552e6d958b9538b0c0
77cd03cd6377afcd84cd4321c1d483d4e9654c814cbf0abf
88575b9b742ad1418de181e15081509603968450c8d759d881d8b283b2326d0981099585
9538bcb0381f871f95c3995ca931bf81bfe981e9bf0bbf
8779b8c58ad1c6e750855096d7b119b104b184d7b119d855845523b2b66d016d83952995
2987296de09211d431bf01bf01e90cbf
8979d0c52aa88de15096b181b119041901b18796c80fd74a59b2b602b6016d86326d328f
ac0b318331bf31bf01bf81e9bf0cbf
88575b9b742ad1c68de186e1c850c850c850865096c850e1e70487045e8ca7912e672e85
2e8cac33473101318158bf02bf82e9bfe981e9bf0abf
8b3f799835c5742a8bd1a8dbc683c68dc68d818dc601c68cdbd1ca40a15da66697274711
31863158bf31bf31bf82bf4ce985e9bfe9bfe9bf0abf
8bc76957dab8359bc5a1748a2a052a018a01748b029ba6665b279447ec311ebf83bf581e
bf82bf4cbf02bf82e9bfe981e9bf0abf
881e75693f57795bb8d082d068350135029b0135013088b8985b7608b40d751e811ebf83
bf1e75bf81bf4c814cbf05bf81e9bf0bbf
83e9e52fc782c7693f823f5779817976027681da760276827957b482b4c7750175822fe5
bf82bf4cbf01bf814cbf81bfe981e9bf01bf01e90dbf

%
% Compression made this file 26.36% of the uncompressed size.
%


showpage

% stop using temporary dictionary
end

% restore original state
origstate restore

%%Trailer

%%EndDocument
 @endspecial 298 w(T)-29 b(ype)67 b(a)g(hac)-5 b(k)g(ers)66
b(guide)h(\(star)10 b(ted\))4649 4276 y @beginspecial
276 @llx 376 @lly 336 @urx 416 @ury 113 @rwi @setspecial
%%BeginDocument: green-bullet-on-white.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/fred/TeX/STYLES/Prosper/img/green-bullet-on-white.ps
%%Creator: XV Version 3.10a+FLmask  Rev: 12/29/94  -  by John Bradley
%%BoundingBox: 276 376 336 416
%%Pages: 1
%%DocumentFonts:
%%EndComments
%%EndProlog

%%Page: 1 1

% remember original state
/origstate save def

% build a temporary dictionary
20 dict begin

% define space for color conversions
/grays 60 string def  % space for gray scale line
/npixls 0 def
/rgbindx 0 def

% lower left corner
276 376 translate

% size of image (on paper, in 1/72inch coords)
59.97600 40.03200 scale

% define 'colorimage' if it isn't defined
%   ('colortogray' and 'mergeprocs' come from xwd2ps
%     via xgrab)
/colorimage where   % do we know about 'colorimage'?
  { pop }           % yes: pop off the 'dict' returned
  {                 % no:  define one
    /colortogray {  % define an RGB->I function
      /rgbdata exch store    % call input 'rgbdata'
      rgbdata length 3 idiv
      /npixls exch store
      /rgbindx 0 store
      0 1 npixls 1 sub {
        grays exch
        rgbdata rgbindx       get 20 mul    % Red
        rgbdata rgbindx 1 add get 32 mul    % Green
        rgbdata rgbindx 2 add get 12 mul    % Blue
        add add 64 idiv      % I = .5G + .31R + .18B
        put
        /rgbindx rgbindx 3 add store
      } for
      grays 0 npixls getinterval
    } bind def

    % Utility procedure for colorimage operator.
    % This procedure takes two procedures off the
    % stack and merges them into a single procedure.

    /mergeprocs { % def
      dup length
      3 -1 roll
      dup
      length
      dup
      5 1 roll
      3 -1 roll
      add
      array cvx
      dup
      3 -1 roll
      0 exch
      putinterval
      dup
      4 2 roll
      putinterval
    } bind def

    /colorimage { % def
      pop pop     % remove 'false 3' operands
      {colortogray} mergeprocs
      image
    } bind def
  } ifelse          % end of 'false' case



% define the colormap
/cmap 723 string def


% load up the colormap
currentfile cmap readhexstring
041808 049008 8c948c 045204 4c544c 04c804 84e284 449644 c4cbc4 0c380e 
04ac07 cce6cc 345e2c e4e7e4 046604 2c3a2c 347234 e4fee2 048208 64cc60 
34922c 24b224 04e404 044604 647264 242623 049f07 8cae8c 04bc06 24c61c 
f4f8f3 1c541c 04d804 1c621c 1c7220 0c280d 14910f 045e04 047c04 ccdcd0 
14ac18 1c481c 747473 04d105 0c6c0b 24852a 1c381c f4f1f3 acafac f4fef5 
0c310c acc6ac 049708 a4a4a3 3c4a44 148314 144812 9cea94 04b405 149e14 
1cbc1c 044004 e4fef4 dcdddd 748274 5c5959 4cba54 145b11 145413 147412 
c4fec4 e4f1e7 146411 088a0a 243028 09c207 fcf8f3 147c13 14c80e acceac 
3c3939 04f405 044e07 07a608 14d00f 0c1f10 0c900b d4d3d4 ecfee3 1c291d 
0c6e14 bcbfbd d4f6d4 909a94 4c5a50 0cac08 24ba24 547e54 0cbc0a 0c5c16 
0c7c0b fcf1fb acb8ac 1c311c aca7a9 e2e2e2 a4e2a4 0cc80a 6c9a6c 143715 
0c650a 0c840b 07de06 14970c 0c980a 0cb40a 848583 ecf0f0 c3c6c3 0c540d 
0c740c cccccc 74ce6c 30a02c 04ec05 54aa5c 6cb66c 9cfa9c 2c862c 5c926c 
6ca674 b4deac 9cda9c 34aa2c 6c7e6c acfeac 448244 34d22c 7d7d7c 6c6d6c 
445644 4c4d4c 1c7a19 1c3e1c 3c3f3c 2c422c 7c9a84 54c254 dceadc 144014 
343231 bccebc bcbabc 447244 6c6664 9c9d9c 7caa7c 349a38 6c7a74 84b69c 
1c4e18 898a89 ccfadc 1c6c2c b8e2c0 1c8a24 a1aaa1 3c4e3c 5f5e5c d8fed8 
24be24 78d670 688668 148a14 14a618 145624 0c480e 2c292b 142916 1c921c 
d4dad9 243828 143017 b4d2bc b4b7b5 1c961c 8c868c 247e24 144e13 04fa04 
246224 fcfefc 0c4e0c ace2b4 3caa3c 244e24 0c180c 949394 545454 ece9ec 
343634 2cb127 6c736c 0ca00c 0cda08 0c5c0b 0ccf06 146a0c b4b2b4 646464 
b4c2b4 0c3f0c ecfdf9 e4dedc ccfdcc 2c2f2b 142214 146b16 c4c2c2 545b54 
2cb62c 74ba74 346634 b4fcb0 244224 444242 246a24 e4feec 0ce204 f4f9fc 
f4eefc 444744 54b654 fcf9fc 0c9114 dcd6d4 ecfeec 0c7b14 0cc614 0c6314 
0c8414 
pop pop   % lose return values from readhexstring


% rlecmapimage expects to have 'w h bits matrix' on stack
/rlecmapimage {
  /buffer 1 string def
  /rgbval 3 string def
  /block  384 string def

  % proc to read a block from file, and return RGB data
  { currentfile buffer readhexstring pop
    /bcount exch 0 get store
    bcount 128 ge
    {  % it's a non-run block
      0 1 bcount 128 sub
      { currentfile buffer readhexstring pop pop

        % look up value in color map
        /rgbval cmap buffer 0 get 3 mul 3 getinterval store

        % and put it in position i*3 in block
        block exch 3 mul rgbval putinterval
      } for
      block  0  bcount 127 sub 3 mul  getinterval
    }

    { % else it's a run block
      currentfile buffer readhexstring pop pop

      % look up value in colormap
      /rgbval cmap buffer 0 get 3 mul 3 getinterval store

      0 1 bcount { block exch 3 mul rgbval putinterval } for

      block 0 bcount 1 add 3 mul getinterval
    } ifelse
  } % end of proc
  false 3 colorimage
} bind def


60 40 8			% dimensions of data
[60 0 0 -40 0 40]		% mapping matrix
rlecmapimage

10bf8131bf05bf03e98165e902e9046587bf3158ec31bfe9658265e9bf09bf
10bf8131bf04bf81e9bf01bf02e98265bfe982e965e901e981bf318131ec82ecbfe982e9
65bf0abf
12bf82751ebf83bf1ebf318231ec3102318111318131bf81bfe901e981bf318131bf01bf
01e90bbf
0fbf02e901bf023101ec021101a981d6a981a9118111318131bf14bf
0fbf8165e901e988e5bfd4ecd66add07808c80149dc2137f46a911d431bfe981e9bf0fbf

0fbf01e982bfe9318331a49ce28fe2454d37562456dc71567bab87a9d4bf81bfe981e9bf
81bf318131bf0abf
10bf8ac775bf311bde43224d37568656cb535f1a733c893cae8506a91131bfe9bf01bf81
58bf0abf
0fbf911ebf31b761a0442245ed56721a530a3a4e3a813a4e864e73c94246e3bf10bf
07bf81e9bf82bfe9bf92bf1ebf31ec4f0c38e2ef8e4d49561a530a3a6283624b052b8a2b
ce4e60c2dfe331bf4cbf0cbf
0abf81e9bf82bfe9ec8eec83de1f21778e786f01341a0a3a1c851c4b052b20168b162054
aa93df11312fe965bf0abf
0ebf8d3111883d77cdcf78646f0134530a810a1c911c4ece20167c517c16542893a9ec31
e965bf0abf
08bf01e999bfe91ebf316cc07743cd45786f49561a530a3a624b6b2b707c510151877c70
4edcaba9bfe981e9bf0abf
0bbf01e985bf27d34352cf90cf0e4d2656011a530a1c62ee2b20167c5102518816cc1db9
d611bfe9bf0abf
07bf81e9bf01bf90e9bf4c86d3445277d92c786f49721a0a3a853a4b0520167c827c51bd
88bd5116e44b157a11bf0cbf
0dbf8d3f0fc33d4403cfbb0e3756011a0a860a624b2b20167c817c5102510116854b897b
a911bf0bbf
08bf82e9e5bf97bf75dab209bcc021ef254d2649561a533a1c4b052b70167c037c811620
85203a853911bf0bbf
0bbf0131869eb6d3b0bc7748884845646f561acb0a7382734b2b812b1683167c16cc01cc
012b844b2813d4bf0bbf
0abf0231955e236db0c04463cf45646f5634cb533a73624b2b2016821670548854ce2b20
4b28e831bf0bbf
0abf023183b5b6d3b089b044436e45786f49341a871a0a733a626b2b200120896b4e6b05
2b1c5f9decbf0bbf
09bf8131bf97bf31d82e09d3b044cd485a786f1201cb1a530a73621c052b852b054e4b1c
0585053a282d58bf0bbf
0bbf9431bf556709b03844cd482c7864125634cb1a5f0a7382734b0501050162011c854b
0aae2d58bf0bbf
0bbf0131934a236dd3b0bc7743485a786f1201341acb535f3a813a1c011c0173023a8453
3b1458bf0bbf
0bbf8431bf0455098309d338778277ef2c852c266f1201348134cb83cb530a3a013a810a
5f815f0a850a1ab37d58bf0bbf
08bf81e9bf93bf31bf18d83209d338c044cd6e0e2c64126f0172837271cb5382530a5383
53ae531a851a01a57e58bf0bbf
0bbf01e5837600230901098138c082c0482c862c7864126f49568156728272341a811a72
0272864912bb841131bf0abf
03bf94e9bfe9bfe9bf1ebf1ebf275923b632099538c044ef81ef7881786481646f816fad
84adea01ea560156882449ad2da3115831bf0abf
04bf02e992654ce61e75bf0d185523b66d0995bcc043cd2c812c7881786483646f64f001
f08b6f496f49642d6382e3314cbf0abf
01bf85e9e5e9652fc784c7693fc7698a69c7d2b200232eb60929bc84bc6343ef2c862c78
45784d78ed82ed6f6489644d45a3afa2114c31bf0abf
01e58175c783c769d5eb8ceb797679dab87908db67c4b66d876d9538b0447743ef84ef6e
2c78458e455a457864788ecfbe9fd4315831bf0abf
88e5750d3f5779da98d083d0689b3501358d5d0236c45567b6320995b04477cd92cdef6e
2c6e5ad95acf782c4517813e31bf2fbf0bbf
887569575bd0689bc5ba83ba8a2a8a878aca2a74db5955b284b23209d3b081b077017701
cd016e02ef876e2c6e4810a4d4bf01bf814cbf0abf
873f79b835c5ba2a9a829aa8410141868de1d104c690d881d85583552e6d958b9538b0c0
77cd03cd6377afcd84cd4321c1d483d4e9654c814cbf0abf
88575b9b742ad1418de181e15081509603968450c8d759d881d8b283b2326d0981099585
9538bcb0381f871f95c3995ca931bf81bfe981e9bf0bbf
8779b8c58ad1c6e750855096d7b119b104b184d7b119d855845523b2b66d016d83952995
2987296de09211d431bf01bf01e90cbf
8979d0c52aa88de15096b181b119041901b18796c80fd74a59b2b602b6016d86326d328f
ac0b318331bf31bf01bf81e9bf0cbf
88575b9b742ad1c68de186e1c850c850c850865096c850e1e70487045e8ca7912e672e85
2e8cac33473101318158bf02bf82e9bfe981e9bf0abf
8b3f799835c5742a8bd1a8dbc683c68dc68d818dc601c68cdbd1ca40a15da66697274711
31863158bf31bf31bf82bf4ce985e9bfe9bfe9bf0abf
8bc76957dab8359bc5a1748a2a052a018a01748b029ba6665b279447ec311ebf83bf581e
bf82bf4cbf02bf82e9bfe981e9bf0abf
881e75693f57795bb8d082d068350135029b0135013088b8985b7608b40d751e811ebf83
bf1e75bf81bf4c814cbf05bf81e9bf0bbf
83e9e52fc782c7693f823f5779817976027681da760276827957b482b4c7750175822fe5
bf82bf4cbf01bf814cbf81bfe981e9bf01bf01e90dbf

%
% Compression made this file 26.36% of the uncompressed size.
%


showpage

% stop using temporary dictionary
end

% restore original state
origstate restore

%%Trailer

%%EndDocument
 @endspecial 298 w(Energy)66 b(model?)4649 4649 y @beginspecial
276 @llx 376 @lly 336 @urx 416 @ury 113 @rwi @setspecial
%%BeginDocument: green-bullet-on-white.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/fred/TeX/STYLES/Prosper/img/green-bullet-on-white.ps
%%Creator: XV Version 3.10a+FLmask  Rev: 12/29/94  -  by John Bradley
%%BoundingBox: 276 376 336 416
%%Pages: 1
%%DocumentFonts:
%%EndComments
%%EndProlog

%%Page: 1 1

% remember original state
/origstate save def

% build a temporary dictionary
20 dict begin

% define space for color conversions
/grays 60 string def  % space for gray scale line
/npixls 0 def
/rgbindx 0 def

% lower left corner
276 376 translate

% size of image (on paper, in 1/72inch coords)
59.97600 40.03200 scale

% define 'colorimage' if it isn't defined
%   ('colortogray' and 'mergeprocs' come from xwd2ps
%     via xgrab)
/colorimage where   % do we know about 'colorimage'?
  { pop }           % yes: pop off the 'dict' returned
  {                 % no:  define one
    /colortogray {  % define an RGB->I function
      /rgbdata exch store    % call input 'rgbdata'
      rgbdata length 3 idiv
      /npixls exch store
      /rgbindx 0 store
      0 1 npixls 1 sub {
        grays exch
        rgbdata rgbindx       get 20 mul    % Red
        rgbdata rgbindx 1 add get 32 mul    % Green
        rgbdata rgbindx 2 add get 12 mul    % Blue
        add add 64 idiv      % I = .5G + .31R + .18B
        put
        /rgbindx rgbindx 3 add store
      } for
      grays 0 npixls getinterval
    } bind def

    % Utility procedure for colorimage operator.
    % This procedure takes two procedures off the
    % stack and merges them into a single procedure.

    /mergeprocs { % def
      dup length
      3 -1 roll
      dup
      length
      dup
      5 1 roll
      3 -1 roll
      add
      array cvx
      dup
      3 -1 roll
      0 exch
      putinterval
      dup
      4 2 roll
      putinterval
    } bind def

    /colorimage { % def
      pop pop     % remove 'false 3' operands
      {colortogray} mergeprocs
      image
    } bind def
  } ifelse          % end of 'false' case



% define the colormap
/cmap 723 string def


% load up the colormap
currentfile cmap readhexstring
041808 049008 8c948c 045204 4c544c 04c804 84e284 449644 c4cbc4 0c380e 
04ac07 cce6cc 345e2c e4e7e4 046604 2c3a2c 347234 e4fee2 048208 64cc60 
34922c 24b224 04e404 044604 647264 242623 049f07 8cae8c 04bc06 24c61c 
f4f8f3 1c541c 04d804 1c621c 1c7220 0c280d 14910f 045e04 047c04 ccdcd0 
14ac18 1c481c 747473 04d105 0c6c0b 24852a 1c381c f4f1f3 acafac f4fef5 
0c310c acc6ac 049708 a4a4a3 3c4a44 148314 144812 9cea94 04b405 149e14 
1cbc1c 044004 e4fef4 dcdddd 748274 5c5959 4cba54 145b11 145413 147412 
c4fec4 e4f1e7 146411 088a0a 243028 09c207 fcf8f3 147c13 14c80e acceac 
3c3939 04f405 044e07 07a608 14d00f 0c1f10 0c900b d4d3d4 ecfee3 1c291d 
0c6e14 bcbfbd d4f6d4 909a94 4c5a50 0cac08 24ba24 547e54 0cbc0a 0c5c16 
0c7c0b fcf1fb acb8ac 1c311c aca7a9 e2e2e2 a4e2a4 0cc80a 6c9a6c 143715 
0c650a 0c840b 07de06 14970c 0c980a 0cb40a 848583 ecf0f0 c3c6c3 0c540d 
0c740c cccccc 74ce6c 30a02c 04ec05 54aa5c 6cb66c 9cfa9c 2c862c 5c926c 
6ca674 b4deac 9cda9c 34aa2c 6c7e6c acfeac 448244 34d22c 7d7d7c 6c6d6c 
445644 4c4d4c 1c7a19 1c3e1c 3c3f3c 2c422c 7c9a84 54c254 dceadc 144014 
343231 bccebc bcbabc 447244 6c6664 9c9d9c 7caa7c 349a38 6c7a74 84b69c 
1c4e18 898a89 ccfadc 1c6c2c b8e2c0 1c8a24 a1aaa1 3c4e3c 5f5e5c d8fed8 
24be24 78d670 688668 148a14 14a618 145624 0c480e 2c292b 142916 1c921c 
d4dad9 243828 143017 b4d2bc b4b7b5 1c961c 8c868c 247e24 144e13 04fa04 
246224 fcfefc 0c4e0c ace2b4 3caa3c 244e24 0c180c 949394 545454 ece9ec 
343634 2cb127 6c736c 0ca00c 0cda08 0c5c0b 0ccf06 146a0c b4b2b4 646464 
b4c2b4 0c3f0c ecfdf9 e4dedc ccfdcc 2c2f2b 142214 146b16 c4c2c2 545b54 
2cb62c 74ba74 346634 b4fcb0 244224 444242 246a24 e4feec 0ce204 f4f9fc 
f4eefc 444744 54b654 fcf9fc 0c9114 dcd6d4 ecfeec 0c7b14 0cc614 0c6314 
0c8414 
pop pop   % lose return values from readhexstring


% rlecmapimage expects to have 'w h bits matrix' on stack
/rlecmapimage {
  /buffer 1 string def
  /rgbval 3 string def
  /block  384 string def

  % proc to read a block from file, and return RGB data
  { currentfile buffer readhexstring pop
    /bcount exch 0 get store
    bcount 128 ge
    {  % it's a non-run block
      0 1 bcount 128 sub
      { currentfile buffer readhexstring pop pop

        % look up value in color map
        /rgbval cmap buffer 0 get 3 mul 3 getinterval store

        % and put it in position i*3 in block
        block exch 3 mul rgbval putinterval
      } for
      block  0  bcount 127 sub 3 mul  getinterval
    }

    { % else it's a run block
      currentfile buffer readhexstring pop pop

      % look up value in colormap
      /rgbval cmap buffer 0 get 3 mul 3 getinterval store

      0 1 bcount { block exch 3 mul rgbval putinterval } for

      block 0 bcount 1 add 3 mul getinterval
    } ifelse
  } % end of proc
  false 3 colorimage
} bind def


60 40 8			% dimensions of data
[60 0 0 -40 0 40]		% mapping matrix
rlecmapimage

10bf8131bf05bf03e98165e902e9046587bf3158ec31bfe9658265e9bf09bf
10bf8131bf04bf81e9bf01bf02e98265bfe982e965e901e981bf318131ec82ecbfe982e9
65bf0abf
12bf82751ebf83bf1ebf318231ec3102318111318131bf81bfe901e981bf318131bf01bf
01e90bbf
0fbf02e901bf023101ec021101a981d6a981a9118111318131bf14bf
0fbf8165e901e988e5bfd4ecd66add07808c80149dc2137f46a911d431bfe981e9bf0fbf

0fbf01e982bfe9318331a49ce28fe2454d37562456dc71567bab87a9d4bf81bfe981e9bf
81bf318131bf0abf
10bf8ac775bf311bde43224d37568656cb535f1a733c893cae8506a91131bfe9bf01bf81
58bf0abf
0fbf911ebf31b761a0442245ed56721a530a3a4e3a813a4e864e73c94246e3bf10bf
07bf81e9bf82bfe9bf92bf1ebf31ec4f0c38e2ef8e4d49561a530a3a6283624b052b8a2b
ce4e60c2dfe331bf4cbf0cbf
0abf81e9bf82bfe9ec8eec83de1f21778e786f01341a0a3a1c851c4b052b20168b162054
aa93df11312fe965bf0abf
0ebf8d3111883d77cdcf78646f0134530a810a1c911c4ece20167c517c16542893a9ec31
e965bf0abf
08bf01e999bfe91ebf316cc07743cd45786f49561a530a3a624b6b2b707c510151877c70
4edcaba9bfe981e9bf0abf
0bbf01e985bf27d34352cf90cf0e4d2656011a530a1c62ee2b20167c5102518816cc1db9
d611bfe9bf0abf
07bf81e9bf01bf90e9bf4c86d3445277d92c786f49721a0a3a853a4b0520167c827c51bd
88bd5116e44b157a11bf0cbf
0dbf8d3f0fc33d4403cfbb0e3756011a0a860a624b2b20167c817c5102510116854b897b
a911bf0bbf
08bf82e9e5bf97bf75dab209bcc021ef254d2649561a533a1c4b052b70167c037c811620
85203a853911bf0bbf
0bbf0131869eb6d3b0bc7748884845646f561acb0a7382734b2b812b1683167c16cc01cc
012b844b2813d4bf0bbf
0abf0231955e236db0c04463cf45646f5634cb533a73624b2b2016821670548854ce2b20
4b28e831bf0bbf
0abf023183b5b6d3b089b044436e45786f49341a871a0a733a626b2b200120896b4e6b05
2b1c5f9decbf0bbf
09bf8131bf97bf31d82e09d3b044cd485a786f1201cb1a530a73621c052b852b054e4b1c
0585053a282d58bf0bbf
0bbf9431bf556709b03844cd482c7864125634cb1a5f0a7382734b0501050162011c854b
0aae2d58bf0bbf
0bbf0131934a236dd3b0bc7743485a786f1201341acb535f3a813a1c011c0173023a8453
3b1458bf0bbf
0bbf8431bf0455098309d338778277ef2c852c266f1201348134cb83cb530a3a013a810a
5f815f0a850a1ab37d58bf0bbf
08bf81e9bf93bf31bf18d83209d338c044cd6e0e2c64126f0172837271cb5382530a5383
53ae531a851a01a57e58bf0bbf
0bbf01e5837600230901098138c082c0482c862c7864126f49568156728272341a811a72
0272864912bb841131bf0abf
03bf94e9bfe9bfe9bf1ebf1ebf275923b632099538c044ef81ef7881786481646f816fad
84adea01ea560156882449ad2da3115831bf0abf
04bf02e992654ce61e75bf0d185523b66d0995bcc043cd2c812c7881786483646f64f001
f08b6f496f49642d6382e3314cbf0abf
01bf85e9e5e9652fc784c7693fc7698a69c7d2b200232eb60929bc84bc6343ef2c862c78
45784d78ed82ed6f6489644d45a3afa2114c31bf0abf
01e58175c783c769d5eb8ceb797679dab87908db67c4b66d876d9538b0447743ef84ef6e
2c78458e455a457864788ecfbe9fd4315831bf0abf
88e5750d3f5779da98d083d0689b3501358d5d0236c45567b6320995b04477cd92cdef6e
2c6e5ad95acf782c4517813e31bf2fbf0bbf
887569575bd0689bc5ba83ba8a2a8a878aca2a74db5955b284b23209d3b081b077017701
cd016e02ef876e2c6e4810a4d4bf01bf814cbf0abf
873f79b835c5ba2a9a829aa8410141868de1d104c690d881d85583552e6d958b9538b0c0
77cd03cd6377afcd84cd4321c1d483d4e9654c814cbf0abf
88575b9b742ad1418de181e15081509603968450c8d759d881d8b283b2326d0981099585
9538bcb0381f871f95c3995ca931bf81bfe981e9bf0bbf
8779b8c58ad1c6e750855096d7b119b104b184d7b119d855845523b2b66d016d83952995
2987296de09211d431bf01bf01e90cbf
8979d0c52aa88de15096b181b119041901b18796c80fd74a59b2b602b6016d86326d328f
ac0b318331bf31bf01bf81e9bf0cbf
88575b9b742ad1c68de186e1c850c850c850865096c850e1e70487045e8ca7912e672e85
2e8cac33473101318158bf02bf82e9bfe981e9bf0abf
8b3f799835c5742a8bd1a8dbc683c68dc68d818dc601c68cdbd1ca40a15da66697274711
31863158bf31bf31bf82bf4ce985e9bfe9bfe9bf0abf
8bc76957dab8359bc5a1748a2a052a018a01748b029ba6665b279447ec311ebf83bf581e
bf82bf4cbf02bf82e9bfe981e9bf0abf
881e75693f57795bb8d082d068350135029b0135013088b8985b7608b40d751e811ebf83
bf1e75bf81bf4c814cbf05bf81e9bf0bbf
83e9e52fc782c7693f823f5779817976027681da760276827957b482b4c7750175822fe5
bf82bf4cbf01bf814cbf81bfe981e9bf01bf01e90dbf

%
% Compression made this file 26.36% of the uncompressed size.
%


showpage

% stop using temporary dictionary
end

% restore original state
origstate restore

%%Trailer

%%EndDocument
 @endspecial 298 w(Giv)-6 b(e)65 b(more)i(\003e)-7 b(xibility)64
b(to)j(pro\002ling)4649 5017 y @beginspecial 276 @llx
376 @lly 336 @urx 416 @ury 113 @rwi @setspecial
%%BeginDocument: green-bullet-on-white.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/fred/TeX/STYLES/Prosper/img/green-bullet-on-white.ps
%%Creator: XV Version 3.10a+FLmask  Rev: 12/29/94  -  by John Bradley
%%BoundingBox: 276 376 336 416
%%Pages: 1
%%DocumentFonts:
%%EndComments
%%EndProlog

%%Page: 1 1

% remember original state
/origstate save def

% build a temporary dictionary
20 dict begin

% define space for color conversions
/grays 60 string def  % space for gray scale line
/npixls 0 def
/rgbindx 0 def

% lower left corner
276 376 translate

% size of image (on paper, in 1/72inch coords)
59.97600 40.03200 scale

% define 'colorimage' if it isn't defined
%   ('colortogray' and 'mergeprocs' come from xwd2ps
%     via xgrab)
/colorimage where   % do we know about 'colorimage'?
  { pop }           % yes: pop off the 'dict' returned
  {                 % no:  define one
    /colortogray {  % define an RGB->I function
      /rgbdata exch store    % call input 'rgbdata'
      rgbdata length 3 idiv
      /npixls exch store
      /rgbindx 0 store
      0 1 npixls 1 sub {
        grays exch
        rgbdata rgbindx       get 20 mul    % Red
        rgbdata rgbindx 1 add get 32 mul    % Green
        rgbdata rgbindx 2 add get 12 mul    % Blue
        add add 64 idiv      % I = .5G + .31R + .18B
        put
        /rgbindx rgbindx 3 add store
      } for
      grays 0 npixls getinterval
    } bind def

    % Utility procedure for colorimage operator.
    % This procedure takes two procedures off the
    % stack and merges them into a single procedure.

    /mergeprocs { % def
      dup length
      3 -1 roll
      dup
      length
      dup
      5 1 roll
      3 -1 roll
      add
      array cvx
      dup
      3 -1 roll
      0 exch
      putinterval
      dup
      4 2 roll
      putinterval
    } bind def

    /colorimage { % def
      pop pop     % remove 'false 3' operands
      {colortogray} mergeprocs
      image
    } bind def
  } ifelse          % end of 'false' case



% define the colormap
/cmap 723 string def


% load up the colormap
currentfile cmap readhexstring
041808 049008 8c948c 045204 4c544c 04c804 84e284 449644 c4cbc4 0c380e 
04ac07 cce6cc 345e2c e4e7e4 046604 2c3a2c 347234 e4fee2 048208 64cc60 
34922c 24b224 04e404 044604 647264 242623 049f07 8cae8c 04bc06 24c61c 
f4f8f3 1c541c 04d804 1c621c 1c7220 0c280d 14910f 045e04 047c04 ccdcd0 
14ac18 1c481c 747473 04d105 0c6c0b 24852a 1c381c f4f1f3 acafac f4fef5 
0c310c acc6ac 049708 a4a4a3 3c4a44 148314 144812 9cea94 04b405 149e14 
1cbc1c 044004 e4fef4 dcdddd 748274 5c5959 4cba54 145b11 145413 147412 
c4fec4 e4f1e7 146411 088a0a 243028 09c207 fcf8f3 147c13 14c80e acceac 
3c3939 04f405 044e07 07a608 14d00f 0c1f10 0c900b d4d3d4 ecfee3 1c291d 
0c6e14 bcbfbd d4f6d4 909a94 4c5a50 0cac08 24ba24 547e54 0cbc0a 0c5c16 
0c7c0b fcf1fb acb8ac 1c311c aca7a9 e2e2e2 a4e2a4 0cc80a 6c9a6c 143715 
0c650a 0c840b 07de06 14970c 0c980a 0cb40a 848583 ecf0f0 c3c6c3 0c540d 
0c740c cccccc 74ce6c 30a02c 04ec05 54aa5c 6cb66c 9cfa9c 2c862c 5c926c 
6ca674 b4deac 9cda9c 34aa2c 6c7e6c acfeac 448244 34d22c 7d7d7c 6c6d6c 
445644 4c4d4c 1c7a19 1c3e1c 3c3f3c 2c422c 7c9a84 54c254 dceadc 144014 
343231 bccebc bcbabc 447244 6c6664 9c9d9c 7caa7c 349a38 6c7a74 84b69c 
1c4e18 898a89 ccfadc 1c6c2c b8e2c0 1c8a24 a1aaa1 3c4e3c 5f5e5c d8fed8 
24be24 78d670 688668 148a14 14a618 145624 0c480e 2c292b 142916 1c921c 
d4dad9 243828 143017 b4d2bc b4b7b5 1c961c 8c868c 247e24 144e13 04fa04 
246224 fcfefc 0c4e0c ace2b4 3caa3c 244e24 0c180c 949394 545454 ece9ec 
343634 2cb127 6c736c 0ca00c 0cda08 0c5c0b 0ccf06 146a0c b4b2b4 646464 
b4c2b4 0c3f0c ecfdf9 e4dedc ccfdcc 2c2f2b 142214 146b16 c4c2c2 545b54 
2cb62c 74ba74 346634 b4fcb0 244224 444242 246a24 e4feec 0ce204 f4f9fc 
f4eefc 444744 54b654 fcf9fc 0c9114 dcd6d4 ecfeec 0c7b14 0cc614 0c6314 
0c8414 
pop pop   % lose return values from readhexstring


% rlecmapimage expects to have 'w h bits matrix' on stack
/rlecmapimage {
  /buffer 1 string def
  /rgbval 3 string def
  /block  384 string def

  % proc to read a block from file, and return RGB data
  { currentfile buffer readhexstring pop
    /bcount exch 0 get store
    bcount 128 ge
    {  % it's a non-run block
      0 1 bcount 128 sub
      { currentfile buffer readhexstring pop pop

        % look up value in color map
        /rgbval cmap buffer 0 get 3 mul 3 getinterval store

        % and put it in position i*3 in block
        block exch 3 mul rgbval putinterval
      } for
      block  0  bcount 127 sub 3 mul  getinterval
    }

    { % else it's a run block
      currentfile buffer readhexstring pop pop

      % look up value in colormap
      /rgbval cmap buffer 0 get 3 mul 3 getinterval store

      0 1 bcount { block exch 3 mul rgbval putinterval } for

      block 0 bcount 1 add 3 mul getinterval
    } ifelse
  } % end of proc
  false 3 colorimage
} bind def


60 40 8			% dimensions of data
[60 0 0 -40 0 40]		% mapping matrix
rlecmapimage

10bf8131bf05bf03e98165e902e9046587bf3158ec31bfe9658265e9bf09bf
10bf8131bf04bf81e9bf01bf02e98265bfe982e965e901e981bf318131ec82ecbfe982e9
65bf0abf
12bf82751ebf83bf1ebf318231ec3102318111318131bf81bfe901e981bf318131bf01bf
01e90bbf
0fbf02e901bf023101ec021101a981d6a981a9118111318131bf14bf
0fbf8165e901e988e5bfd4ecd66add07808c80149dc2137f46a911d431bfe981e9bf0fbf

0fbf01e982bfe9318331a49ce28fe2454d37562456dc71567bab87a9d4bf81bfe981e9bf
81bf318131bf0abf
10bf8ac775bf311bde43224d37568656cb535f1a733c893cae8506a91131bfe9bf01bf81
58bf0abf
0fbf911ebf31b761a0442245ed56721a530a3a4e3a813a4e864e73c94246e3bf10bf
07bf81e9bf82bfe9bf92bf1ebf31ec4f0c38e2ef8e4d49561a530a3a6283624b052b8a2b
ce4e60c2dfe331bf4cbf0cbf
0abf81e9bf82bfe9ec8eec83de1f21778e786f01341a0a3a1c851c4b052b20168b162054
aa93df11312fe965bf0abf
0ebf8d3111883d77cdcf78646f0134530a810a1c911c4ece20167c517c16542893a9ec31
e965bf0abf
08bf01e999bfe91ebf316cc07743cd45786f49561a530a3a624b6b2b707c510151877c70
4edcaba9bfe981e9bf0abf
0bbf01e985bf27d34352cf90cf0e4d2656011a530a1c62ee2b20167c5102518816cc1db9
d611bfe9bf0abf
07bf81e9bf01bf90e9bf4c86d3445277d92c786f49721a0a3a853a4b0520167c827c51bd
88bd5116e44b157a11bf0cbf
0dbf8d3f0fc33d4403cfbb0e3756011a0a860a624b2b20167c817c5102510116854b897b
a911bf0bbf
08bf82e9e5bf97bf75dab209bcc021ef254d2649561a533a1c4b052b70167c037c811620
85203a853911bf0bbf
0bbf0131869eb6d3b0bc7748884845646f561acb0a7382734b2b812b1683167c16cc01cc
012b844b2813d4bf0bbf
0abf0231955e236db0c04463cf45646f5634cb533a73624b2b2016821670548854ce2b20
4b28e831bf0bbf
0abf023183b5b6d3b089b044436e45786f49341a871a0a733a626b2b200120896b4e6b05
2b1c5f9decbf0bbf
09bf8131bf97bf31d82e09d3b044cd485a786f1201cb1a530a73621c052b852b054e4b1c
0585053a282d58bf0bbf
0bbf9431bf556709b03844cd482c7864125634cb1a5f0a7382734b0501050162011c854b
0aae2d58bf0bbf
0bbf0131934a236dd3b0bc7743485a786f1201341acb535f3a813a1c011c0173023a8453
3b1458bf0bbf
0bbf8431bf0455098309d338778277ef2c852c266f1201348134cb83cb530a3a013a810a
5f815f0a850a1ab37d58bf0bbf
08bf81e9bf93bf31bf18d83209d338c044cd6e0e2c64126f0172837271cb5382530a5383
53ae531a851a01a57e58bf0bbf
0bbf01e5837600230901098138c082c0482c862c7864126f49568156728272341a811a72
0272864912bb841131bf0abf
03bf94e9bfe9bfe9bf1ebf1ebf275923b632099538c044ef81ef7881786481646f816fad
84adea01ea560156882449ad2da3115831bf0abf
04bf02e992654ce61e75bf0d185523b66d0995bcc043cd2c812c7881786483646f64f001
f08b6f496f49642d6382e3314cbf0abf
01bf85e9e5e9652fc784c7693fc7698a69c7d2b200232eb60929bc84bc6343ef2c862c78
45784d78ed82ed6f6489644d45a3afa2114c31bf0abf
01e58175c783c769d5eb8ceb797679dab87908db67c4b66d876d9538b0447743ef84ef6e
2c78458e455a457864788ecfbe9fd4315831bf0abf
88e5750d3f5779da98d083d0689b3501358d5d0236c45567b6320995b04477cd92cdef6e
2c6e5ad95acf782c4517813e31bf2fbf0bbf
887569575bd0689bc5ba83ba8a2a8a878aca2a74db5955b284b23209d3b081b077017701
cd016e02ef876e2c6e4810a4d4bf01bf814cbf0abf
873f79b835c5ba2a9a829aa8410141868de1d104c690d881d85583552e6d958b9538b0c0
77cd03cd6377afcd84cd4321c1d483d4e9654c814cbf0abf
88575b9b742ad1418de181e15081509603968450c8d759d881d8b283b2326d0981099585
9538bcb0381f871f95c3995ca931bf81bfe981e9bf0bbf
8779b8c58ad1c6e750855096d7b119b104b184d7b119d855845523b2b66d016d83952995
2987296de09211d431bf01bf01e90cbf
8979d0c52aa88de15096b181b119041901b18796c80fd74a59b2b602b6016d86326d328f
ac0b318331bf31bf01bf81e9bf0cbf
88575b9b742ad1c68de186e1c850c850c850865096c850e1e70487045e8ca7912e672e85
2e8cac33473101318158bf02bf82e9bfe981e9bf0abf
8b3f799835c5742a8bd1a8dbc683c68dc68d818dc601c68cdbd1ca40a15da66697274711
31863158bf31bf31bf82bf4ce985e9bfe9bfe9bf0abf
8bc76957dab8359bc5a1748a2a052a018a01748b029ba6665b279447ec311ebf83bf581e
bf82bf4cbf02bf82e9bfe981e9bf0abf
881e75693f57795bb8d082d068350135029b0135013088b8985b7608b40d751e811ebf83
bf1e75bf81bf4c814cbf05bf81e9bf0bbf
83e9e52fc782c7693f823f5779817976027681da760276827957b482b4c7750175822fe5
bf82bf4cbf01bf814cbf81bfe981e9bf01bf01e90dbf

%
% Compression made this file 26.36% of the uncompressed size.
%


showpage

% stop using temporary dictionary
end

% restore original state
origstate restore

%%Trailer

%%EndDocument
 @endspecial 298 w(Repor)10 b(t)67 b(sync)e(time)i(in)f(m)n
(ultiprocessor)10245 5222 y
 0 setgray
 10245 5222 a 4500 6000 a
 tx@Dict begin -90 Rot  end

4500 6000 a eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
